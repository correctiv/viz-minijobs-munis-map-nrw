{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 5dc74d6ef4cfb17d8132","webpack:///./~/riot/riot.js","webpack:///./src/scripts/lib/d3.js","webpack:///./src/components/districts-map/get_color.js","webpack:///./src/components/districts-map/unhilight_path.js","webpack:///./src/components/map-infobox/history-chart/date.js","webpack:///./src/data/entry.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./~/d3-color/build/d3-color.js","webpack:///./~/d3-time-format/build/d3-time-format.js","webpack:///./~/d3-time/build/d3-time.js","webpack:///./src/components/app.tag","webpack:///./src/components/districts-map/districts-map-legend.tag","webpack:///./src/components/districts-map/districts-map.tag","webpack:///./src/components/map-infobox/history-chart/history-chart.tag","webpack:///./src/components/map-infobox/map-infobox.tag","webpack:///./src/components/map-searchbox/map-searchbox.tag","webpack:///./src/components/districts-map/hilight_path.js","webpack:///./src/components/districts-map/render_map.js","webpack:///./src/components/map-infobox/history-chart/draw_line.js","webpack:///./src/components/map-infobox/history-chart/init_history_chart.js","webpack:///./src/components/map-infobox/history-chart/transform_data.js","webpack:///./src/components/map-infobox/history-chart/update_line.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/mixins/class_name.js","webpack:///./src/scripts/riot_event_bus.js","webpack:///./~/d3-axis/build/d3-axis.js","webpack:///./~/d3-collection/build/d3-collection.js","webpack:///./~/d3-dsv/build/d3-dsv.js","webpack:///./~/d3-format/build/d3-format.js","webpack:///./~/d3-geo/build/d3-geo.js","webpack:///./~/d3-interpolate/build/d3-interpolate.js","webpack:///./~/d3-path/build/d3-path.js","webpack:///./~/d3-scale/build/d3-scale.js","webpack:///./~/d3-selection/build/d3-selection.js","webpack:///./~/d3-shape/build/d3-shape.js","webpack:///./src/config.json","webpack:///./src/data/nrw.topo.json","webpack:///./src/data/munis_nrw.csv","webpack:///./~/topojson/dist/topojson.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","riot","global","factory","this","isBoolAttr","value","RE_BOOL_ATTRS","test","isFunction","T_FUNCTION","isObject","T_OBJECT","isUndefined","T_UNDEF","isString","T_STRING","isBlank","isArray","Array","isWritable","obj","key","descriptor","Object","getOwnPropertyDescriptor","writable","isReservedName","RE_RESERVED_NAMES","$$","selector","ctx","prototype","slice","document","querySelectorAll","$","querySelector","createFrag","createDocumentFragment","createDOMPlaceholder","createTextNode","mkEl","name","createElement","setInnerHTML","container","html","innerHTML","doc","DOMParser","parseFromString","node","ownerDocument","importNode","documentElement","appendChild","toggleVisibility","dom","show","style","display","remAttr","removeAttribute","styleObjectToString","keys","reduce","acc","prop","getAttr","getAttribute","setAttr","val","xlink","XLINK_REGEX","exec","setAttributeNS","XLINK_NS","setAttribute","safeInsert","root","curr","next","insertBefore","parentNode","walkAttrs","fn","RE_HTML_ATTRS","toLowerCase","walkNodes","context","res","firstChild","nextSibling","each","list","len","length","i","contains","array","item","indexOf","toCamel","str","replace","_","toUpperCase","startsWith","defineProperty","el","options","extend","enumerable","configurable","src","args","arguments","handleEvent","handler","e","ptag","__","parent","currentTarget","target","srcElement","which","charCode","keyCode","preventUpdate","getImmediateCustomParentTag","isMounted","update","setEventHandler","tag","eventName","cb","bind","RE_EVENTS_PREFIX","listeners","push","RIOT_EVENTS_KEY","removeEventListener","addEventListener","updateDataIs","expr","tagName","conf","isVirtual","head","ref","unmount","impl","__TAG_IMPL","hasImpl","initChildTag","attrs","a","mount","makeReplaceVirtual","onUnmount","delName","opts","dataIs","tags","_tags","arrayishRemove","normalizeAttrName","attrName","ATTRS_PREFIX","CASE_SENSITIVE_ATTRIBUTES","updateExpression","hasValue","isObj","attr","isToggle","SHOW_DIRECTIVE","HIDE_DIRECTIVE","isStyleAttr","isClassAttr","_riot_id","tmpl","create","JSON","stringify","isAttrRemoved","bool","isRtag","wasParsedOnce","hidden","IE_VERSION","nodeValue","updateAllExpressions","expressions","mkitem","base","pos","unmountRedundant","items","j","remove","apply","splice","moveNestedTags","this$1","moveChildTag","move","nextTag","moveVirtual","insert","makeVirtual","append","_each","LOOP_DIRECTIVE","hasKeys","mustReorder","LOOP_NO_REORDER_DIRECTIVE","getTagName","placeholder","child","getTag","ifExpr","CONDITIONAL_DIRECTIVE","oldItems","isLoop","isAnonymous","loopKeys","removeChild","frag","isObject$$1","map","filter","doReorder","oldPos","isNew","mustAppend","mustCreate","Tag$1","cloneNode","index","arrayishAdd","t","parseExpressions","mustIncludeRoot","tree","children","tagImpl","type","nodeType","hasExpr","IfExpr","init","IS_DIRECTIVE","attributes","parentElement","outerHTML","parseAttributes","REF_DIRECTIVES","RefExpr","specialTags","select","trim","selectedIndex","tname","rootEls","childElementCount","replaceYield","reHasYield","reYieldSrc","text","reYieldDest","def","reYieldAll","mkdom","match","GENERIC","tblTags","Tag$2","css","onCreate","tag$1","class","constructor","mountTo","styleManager","inject","add","tag2$1","mount$1","pushTagsTo","riotTag","elem","allTags","selectTags","split","nodeList","_el","mixin$1","mix","g","mixins_id","store","globals","mixins","Error","update$1","__TAGS_CACHE","unregister$1","updateOpts","instAttrs","skipAnonymous","settings$1","skipAnonymousTags","cleanUpData","implAttrs","propsInSyncWithParent","observable$1","_tag","virts","tail","__uid","data","nextOpts","canTrigger","shouldUpdate","inheritFrom","trigger","instance","props","propsBlacklist","proto","getPrototypeOf","concat","getOwnPropertyNames","hasGetterSetter","get","set","hasOwnProperty","isPrototypeOf","k","v","globalMixin","GLOBAL_MIXIN","mixin","one","mustKeepRoot","tagIndex","forEach","unmountAll","off","mustSync","newPos","skipDataIs","namedTag","o","ensureArray","dest","isArr","hasIndex","oldIndex","implClass","_innerHTML","replaceChild","sib","styleNode","cssTextProp","WIN","window","undefined","RE_SPECIAL_TAGS","RE_SPECIAL_TAGS_NO_OPTION","viewbox","documentMode","check","freeze","byName","remainder","needsInject","newNode","userNode","getElementsByTagName","styleSheet","join","cssText","brackets","UNDEF","_loopback","re","_rewrite","bp","_cache","RegExp","source","REGLOB","_create","pair","DEFAULT","_pairs","arr","UNSUPPORTED","NEED_ESCAPE","S_QBLOCKS","_brackets","reOrIdx","_regex","_reset","cachedBrackets","_setSettings","b","_settings","R_MLCOMMS","R_STRINGS","FINDBRACES","(","[","{","_bp","unescapeStr","s","isexpr","parts","skipBraces","ch","ix","recch","lastIndex","start","settings","_tmpl","_logErr","err","riotData","errorHandler","console","error","_getTmpl","Function","qstr","RE_DQUOTE","_parseExpr","RE_QBMARK","asText","mm","lv","ir","RE_BREND","RE_QBLOCK","div","CH_IDEXPR","cnt","RE_CSNAME","jsb","rightContext","_wrapExpr","tb","JS_VARNAME","mvar","JS_CONTEXT","JS_NOPROPS","clearCache","String","fromCharCode","version","callbacks","defineProperties","on","event","fns","arguments$1","arglen","misc","stub","pristine","current","attrValue","rawValue","hasExp","old","customParent","tagOrDom","refs","tr","th","td","col","version$1","core","Tag","tag2","unregister","util","vdom","Tag$$1","tag$$1","tag2$$1","mount$$1","mixin$$1","update$$1","unregister$$1","version$$1","observable","riot$1","_d3Axis","axisLeft","axisBottom","_d3Shape","line","_d3Scale","scaleLinear","scaleTime","scaleQuantile","_d3Selection","_d3TimeFormat","timeParse","timeFormat","_d3Dsv","csvParse","_d3Geo","geoPath","geoMercator","_interopRequireWildcard","__esModule","newObj","default","_d","d3","colors","domain","range","hilighted","classed","formatDate","parseDate","toDate","fromDate","date","convertDate","years","y","_topojson","topojson","_data","search","d","plz","ags","geoSrc","geoData","feature","objects","nrw","features","f","properties","AGS","GEN","ascendingComparator","x","ascending","tickIncrement","stop","count","step","Math","max","power","floor","log","LN10","pow","e10","e5","e2","tickStep","step0","abs","step1","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pairs","n","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","sqrt","extent","min","constant","identity","ceil","ticks","reverse","isFinite","sturges","LN2","histogram","xz","x0","x1","tz","threshold","shift","pop","bin","bins","thresholds","quantile","value1","freedmanDiaconis","sort","scott","median","numbers","merge","arrays","merged","permute","indexes","permutes","scan","xi","xj","shuffle","random","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","definition","Color","color","format","reHex3","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","rgbConvert","rgb","opacity","h","l","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","round","PI","Kn","A","B","cosh","sinh","d3Time","localDate","Date","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale","locale","newFormat","specifier","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day","getUTCDay","getDay","W","U","Z","parse","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","time","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","fill","width","sign","requote","requoteRe","names","numberRe","percentRe","getDate","timeDay","timeYear","getMilliseconds","getMinutes","getSeconds","timeSunday","timeMonday","getFullYear","getTimezoneOffset","getUTCDate","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale","locale$1","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","newInterval","floori","offseti","field","interval","d0","d1","offset","setTime","end","every","weekday","setDate","setHours","durationMinute","durationWeek","utcWeekday","setUTCDate","setUTCHours","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","year","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYears","utcWeek","utcWeeks","_interopRequireDefault","_get_color","_get_color2","quantiles","q","_render_map","_render_map2","_hilight_path","_hilight_path2","_unhilight_path","_unhilight_path2","_this","selection","element","getClass","control","EVT","hilight","unhilight","_init_history_chart","_init_history_chart2","_draw_line","_draw_line2","_update_line","_update_line2","_transform_data","_transform_data2","drawed","chart","config","_chart","visible","updateInfobox","fRatio","hideInfobox","close","_entry","results","doSearch","clearResults","_jumpTo","handleClick","path","_ref","projection","fitSize","selectAll","enter","pwa","_date","_ref2","height","margin","xExtent","yExtent","yTickValues","rangeRound","defined","top","bottom","tickValues","_class_name","_class_name2","cssNamespace","part","translateX","translateY","center","scale","bandwidth","entering","__axis","axis","orient","tickArguments","tickFormat","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","tick","order","tickExit","exit","tickEnter","transition","epsilon","transform","tickSizeOuter","tickSize","axisTop","axisRight","Map","object","createObject","setObject","createMap","setMap","map$$1","Set","prefix","has","property","clear","entries","size","empty","nest","depth","createResult","setResult","rollup","sortValues","keyValue","valuesByKey","result","sortKey","sortKeys","objectConverter","columns","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","convert","parseRows","token","N","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","dsvFormat","formatSpecifier","FormatSpecifier","align","symbol","zero","comma","precision","formatTypes","formatPrefix","prefixExponent","formatDecimal","toExponential","coefficient","exponent","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","group","Infinity","padding","currency","percent","precisionFixed","precisionPrefix","precisionRound","formatDefaultLocale","d3Array","Adder","reset","adder","bv","av","acos","pi","asin","halfPi","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","point","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","rangeCompare","rangeContains","range$$1","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","y0","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","radius","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link","clipExtent","y1","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","b0","b1","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","dy","graticuleY","dx","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","clip","translate","geoStream","boundsStream$1","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","rotate","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","temp","valueOf","epsilon2","exp","streamObjectType","Feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","deltaMax","centroid","circle","ax","ay","bx","by","pointEqual","subject","p1","isSubject","point0","sinPhi1","point1","absDelta","arc","intersection","phiArc","containsObjectType","cy1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","v0","v00","point2","smallRadius","code","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$1","sx","sy","reflectX","reflectY","orthographic","stereographic","transverseMercator","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","d3Color","basis","v1","v2","v3","linear","exponential","hue","gamma","nogamma","rgbSpline","spline","color$$1","parseCss","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","createElementNS","baseVal","consolidate","interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","skewX","scaleX","scaleY","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","basis$1","basisClosed","rgb$1","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","nb","na","reA","reB","am","bm","bs","bi","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","zoom","ux0","uy0","w0","ux1","uy1","w1","r1","coshr0","duration","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","interpolator","samples","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","Path","_x0","_y0","_x1","_y1","tauEpsilon","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","cw","da","rect","d3Collection","d3Interpolate","d3Format","d3TimeFormat","ordinal","unknown","implicit","band","rescale","paddingInner","paddingOuter","ordinalRange","pointish","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","polymap","clamp","continuous","piecewise","output","input","interpolate$$1","unit","map$1","linearish","nice","pow10","powp","logp","log10","log2","reflect","logs","pows","raise","quantile$1","invertExtent","number$1","calendar","week","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationMonth","ramp","sequential","utcTime","category10","category20b","category20c","category20","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","scaleBand","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","creatorInherit","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames","typenames","onRemove","typename","__on","capture","onAdd","wrap","filterEvents","customEvent","that","sourceEvent","none","EnterNode","datum","_next","_parent","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","attrRemove","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","lower","previousSibling","constantNull","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","namespaces","svg","xml","xmlns","namespace","creator","matcher","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","selection_select","subgroups","subnode","subgroup","selectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","selection_data","enterGroup","updateGroup","exitGroup","previous","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","callback","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","getAttributeNS","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","before","selection_remove","selection_datum","selection_dispatch","dispatch","touch","touches","identifier","d3Path","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","x3","y3","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","dx0","dy0","dx1","dy1","Linear","Radial","curve","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","buffer","argv","x$$1","y$$1","curveHorizontal","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","series","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","basisOpen","_x","_y","bundle","custom","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","stack","oz","kz","sz","sij","ki","si","expand","diverging","yp","yn","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","sums","descending$1","insideOut","tops","bottoms","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","breakpoints","small","medium","large","historyChart","crs","feature$1","topology","bbox","transformPoint","meshArcs","object$$1","extractArcs","stitch","extract0","geomsByArc","geom","extract1","extract2","extract3","geoms","planarRingArea","mergeArcs","extract","polygonsByArc","polygons","neighbors","rotateArray","reverse$1","geomifyObject","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","filterTrue","filterIdentity","filterNotNull","planarTriangleArea","planarRingArea$1","halfArea","sphericalRingArea","interior","sphericalTriangleArea","bboxPoint","bboxGeometry","ends","dp","flush","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","unshift","gf","mesh","indexesByArc","geometryType","ij","ik","untransform","quantizePoint","quantizeGeometry","quantizeArc","box","inputs","outputs","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","hashset","hash","equal","mask","collisions","hashmap","keyType","keyEmpty","valueType","matchKey","keystore","valstore","maybeSet","missingValue","equalPoint","pointA","pointB","ArrayBuffer","floats","Float64Array","uints","Uint32Array","hashPoint","sequence","previousIndex","currentIndex","nextIndex","visitedByIndex","leftIndex","leftByIndex","rightIndex","rightByIndex","junctionCount","junctionByIndex","indexByPoint","hashIndex","equalIndex","Int32Array","rings","Int8Array","junctionByPoint","cut","junctions","lineMid","1","ringMid","ringFixed","dedup","dedupLine","startPoint","endPoint","startArcs","startArc","endArcs","endArc","arcsByEnd","equalLine","reverseEqualLine","dedupRing","equalRing","reverseEqualRing","findMinimumOffset","kb","minimum","minimumPoint","arcCount","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","prequantize","quantizePoints","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","quantization","indexGeometry","geometry$$1","indexGeometryType","indexArcs","indexByArc","indexMultiArcs","prune","pruneGeometry","pruneArcs","pruneMultiArcs","pruneArc","newIndex","oldReverse","newIndexByOldIndex","newArcIndex","newArcs","oldArcs","oldObjects","newObjects","filterGeometry","filterRings","filterExteriorRing","filterInteriorRing","filterAttached","testGeometry","testArcs","ringIndex","uniqueRing","uniqueRingByArc","filterWeight","minWeight","weight","Number","MIN_VALUE","filterAttachedWeight","newHeap","up","down","heap","removed","presimplify","triangles","maxWeight","simplify"],"mappings":"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AEAC,SACA,EACA,IAEAC,aACA,EACA,EACA,GACA,OrCu0bM,SAAUrsC,EAAQD,GsC12bxBC,EAAAD,SACA+P,KAAA,WACAwmnC,WACAtB,OACA,qBACA,sBAEAwZ,WACA,kBACA,oBAGA9jC,SACAC,KACA/S,KAAA,qBACAy8C,aAEA+pB,OAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,IACA,IACA,IACA,IACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,QAEA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,qBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,IACA,IACA,KACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,wBAIAozD,OAEA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,uBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,KACA,EACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,qBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,wBAIAozD,OAEA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,KACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,IACA,IACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,qBAIAozD,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,GACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,GACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,MACA,IACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,yBAIAozD,QAEA,GACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,GACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,QAEA,KACA,MACA,EACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,MACA,GACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,MACA,KACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,MACA,IACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,4BAIAozD,OAEA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,IACA,MACA,IACA,MACA,GACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,MACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,EACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,IACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,MACA,GACA,MACA,IACA,MACA,IACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,MACA,IACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,GACA,MACA,GACA,MACA,GACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,OAEA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,GACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,GACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,QAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,uBAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,MACA,IACA,KACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,OAEA,MACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,MACA,IACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,IACA,MACA,IACA,MACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,IACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,MACA,GACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,MACA,IACA,MACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,KACA,MACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,IACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,MACA,GACA,MACA,IACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,MACA,IACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,QAEA,KACA,MACA,IACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,GACA,MACA,GACA,MACA,GACA,KACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,IACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,MACA,IACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,MACA,IACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,MACA,GACA,KACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,GACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,yBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,2BAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,QAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,KACA;AAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,yBAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,GACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,wBAIAozD,OAEA,KACA,KACA,MACA,KACA,MACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,QAEA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,SAGA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,SAKA,QAIAxmE,KAAA,eACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,MACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,0BAIAozD,QAEA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,KACA,MACA,IACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,sBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,IACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,IACA,KACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,MACA,KACA,GACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,IACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,GACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,QAEA,KACA,MACA,IACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,yBAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,QAEA,IACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,OAEA,MACA,GACA,MACA,GACA,KACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,KACA,MACA,IACA,MACA,KACA,GACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,GACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,KACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,8BAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,IACA,KACA,MACA,IACA,KACA,MACA,IACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,IACA,MACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,OAEA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,IACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,uBAIAozD,QAEA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,OAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,oBAIAozD,QAEA,KACA,MACA,IACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,GACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,MACA,KACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,uBAIAozD,QAEA,IACA,MACA,IACA,KACA,KACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,IACA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,KACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,qBAIAozD,OAEA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,WAIAozD,QAEA,KACA,MACA,IACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,KACA,KACA,MACA,GACA,KACA,MACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,IACA,MACA,IACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,MACA,EACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,kBAIAozD,OAEA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,IACA,MACA,MACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,yBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,UAIAozD,QAEA,KACA,MACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,QAEA,IACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,IACA,MACA,IACA,KACA,MACA,IACA,MACA,IACA,MACA,GACA,MACA,GACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,2BAIAozD,QAEA,MACA,KACA,MACA,KACA,MACA,IACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,OAEA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,KACA,MACA,GACA,MACA,GACA,KACA,MACA,MACA,MAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,iBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,MACA,KACA,MACA,IACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,QAEA,KACA,MACA,KACA,IACA,MACA,IACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,IACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,IACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,MACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,IACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,cAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,GACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,MACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,YAIAozD,OAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,MACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,mBAIAozD,QAEA,IACA,MACA,IACA,MACA,KACA,MACA,KACA,KACA,KACA,IACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,gBAIAozD,QAEA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,aAIAozD,QAEA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGAxmE,KAAA,UACAkT,YACAC,IAAA,WACAC,IAAA,eAIAozD,OAEA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,OAGAxmE,KAAA,UA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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(23);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {/* Riot v3.4.4, @license MIT */\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.riot = global.riot || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar __TAGS_CACHE = [];\n\tvar __TAG_IMPL = {};\n\tvar GLOBAL_MIXIN = '__global_mixin';\n\tvar ATTRS_PREFIX = 'riot-';\n\tvar REF_DIRECTIVES = ['ref', 'data-ref'];\n\tvar IS_DIRECTIVE = 'data-is';\n\tvar CONDITIONAL_DIRECTIVE = 'if';\n\tvar LOOP_DIRECTIVE = 'each';\n\tvar LOOP_NO_REORDER_DIRECTIVE = 'no-reorder';\n\tvar SHOW_DIRECTIVE = 'show';\n\tvar HIDE_DIRECTIVE = 'hide';\n\tvar RIOT_EVENTS_KEY = '__riot-events__';\n\tvar T_STRING = 'string';\n\tvar T_OBJECT = 'object';\n\tvar T_UNDEF  = 'undefined';\n\tvar T_FUNCTION = 'function';\n\tvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\tvar XLINK_REGEX = /^xlink:(\\w+)/;\n\tvar WIN = typeof window === T_UNDEF ? undefined : window;\n\tvar RE_SPECIAL_TAGS = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/;\n\tvar RE_SPECIAL_TAGS_NO_OPTION = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;\n\tvar RE_EVENTS_PREFIX = /^on/;\n\tvar RE_RESERVED_NAMES = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/;\n\tvar RE_HTML_ATTRS = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\n\tvar CASE_SENSITIVE_ATTRIBUTES = { 'viewbox': 'viewBox' };\n\tvar RE_BOOL_ATTRS = /^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/;\n\tvar IE_VERSION = (WIN && WIN.document || {}).documentMode | 0;\n\t\n\t/**\n\t * Check Check if the passed argument is undefined\n\t * @param   { String } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isBoolAttr(value) {\n\t  return RE_BOOL_ATTRS.test(value)\n\t}\n\t\n\t/**\n\t * Check if passed argument is a function\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isFunction(value) {\n\t  return typeof value === T_FUNCTION\n\t}\n\t\n\t/**\n\t * Check if passed argument is an object, exclude null\n\t * NOTE: use isObject(x) && !isArray(x) to excludes arrays.\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isObject(value) {\n\t  return value && typeof value === T_OBJECT // typeof null is 'object'\n\t}\n\t\n\t/**\n\t * Check if passed argument is undefined\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isUndefined(value) {\n\t  return typeof value === T_UNDEF\n\t}\n\t\n\t/**\n\t * Check if passed argument is a string\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isString(value) {\n\t  return typeof value === T_STRING\n\t}\n\t\n\t/**\n\t * Check if passed argument is empty. Different from falsy, because we dont consider 0 or false to be blank\n\t * @param { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isBlank(value) {\n\t  return isUndefined(value) || value === null || value === ''\n\t}\n\t\n\t/**\n\t * Check if passed argument is a kind of array\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isArray(value) {\n\t  return Array.isArray(value) || value instanceof Array\n\t}\n\t\n\t/**\n\t * Check whether object's property could be overridden\n\t * @param   { Object }  obj - source object\n\t * @param   { String }  key - object property\n\t * @returns { Boolean } -\n\t */\n\tfunction isWritable(obj, key) {\n\t  var descriptor = Object.getOwnPropertyDescriptor(obj, key);\n\t  return isUndefined(obj[key]) || descriptor && descriptor.writable\n\t}\n\t\n\t/**\n\t * Check if passed argument is a reserved name\n\t * @param   { String } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isReservedName(value) {\n\t  return RE_RESERVED_NAMES.test(value)\n\t}\n\t\n\tvar check = Object.freeze({\n\t\tisBoolAttr: isBoolAttr,\n\t\tisFunction: isFunction,\n\t\tisObject: isObject,\n\t\tisUndefined: isUndefined,\n\t\tisString: isString,\n\t\tisBlank: isBlank,\n\t\tisArray: isArray,\n\t\tisWritable: isWritable,\n\t\tisReservedName: isReservedName\n\t});\n\t\n\t/**\n\t * Shorter and fast way to select multiple nodes in the DOM\n\t * @param   { String } selector - DOM selector\n\t * @param   { Object } ctx - DOM node where the targets of our search will is located\n\t * @returns { Object } dom nodes found\n\t */\n\tfunction $$(selector, ctx) {\n\t  return Array.prototype.slice.call((ctx || document).querySelectorAll(selector))\n\t}\n\t\n\t/**\n\t * Shorter and fast way to select a single node in the DOM\n\t * @param   { String } selector - unique dom selector\n\t * @param   { Object } ctx - DOM node where the target of our search will is located\n\t * @returns { Object } dom node found\n\t */\n\tfunction $(selector, ctx) {\n\t  return (ctx || document).querySelector(selector)\n\t}\n\t\n\t/**\n\t * Create a document fragment\n\t * @returns { Object } document fragment\n\t */\n\tfunction createFrag() {\n\t  return document.createDocumentFragment()\n\t}\n\t\n\t/**\n\t * Create a document text node\n\t * @returns { Object } create a text node to use as placeholder\n\t */\n\tfunction createDOMPlaceholder() {\n\t  return document.createTextNode('')\n\t}\n\t\n\t/**\n\t * Create a generic DOM node\n\t * @param   { String } name - name of the DOM node we want to create\n\t * @returns { Object } DOM node just created\n\t */\n\tfunction mkEl(name) {\n\t  return document.createElement(name)\n\t}\n\t\n\t/**\n\t * Set the inner html of any DOM node SVGs included\n\t * @param { Object } container - DOM node where we'll inject new html\n\t * @param { String } html - html to inject\n\t */\n\t/* istanbul ignore next */\n\tfunction setInnerHTML(container, html) {\n\t  if (!isUndefined(container.innerHTML))\n\t    { container.innerHTML = html; }\n\t    // some browsers do not support innerHTML on the SVGs tags\n\t  else {\n\t    var doc = new DOMParser().parseFromString(html, 'application/xml');\n\t    var node = container.ownerDocument.importNode(doc.documentElement, true);\n\t    container.appendChild(node);\n\t  }\n\t}\n\t\n\t/**\n\t * Toggle the visibility of any DOM node\n\t * @param   { Object }  dom - DOM node we want to hide\n\t * @param   { Boolean } show - do we want to show it?\n\t */\n\t\n\tfunction toggleVisibility(dom, show) {\n\t  dom.style.display = show ? '' : 'none';\n\t  dom['hidden'] = show ? false : true;\n\t}\n\t\n\t/**\n\t * Remove any DOM attribute from a node\n\t * @param   { Object } dom - DOM node we want to update\n\t * @param   { String } name - name of the property we want to remove\n\t */\n\tfunction remAttr(dom, name) {\n\t  dom.removeAttribute(name);\n\t}\n\t\n\t/**\n\t * Convert a style object to a string\n\t * @param   { Object } style - style object we need to parse\n\t * @returns { String } resulting css string\n\t * @example\n\t * styleObjectToString({ color: 'red', height: '10px'}) // => 'color: red; height: 10px'\n\t */\n\tfunction styleObjectToString(style) {\n\t  return Object.keys(style).reduce(function (acc, prop) {\n\t    return (acc + \" \" + prop + \": \" + (style[prop]) + \";\")\n\t  }, '')\n\t}\n\t\n\t/**\n\t * Get the value of any DOM attribute on a node\n\t * @param   { Object } dom - DOM node we want to parse\n\t * @param   { String } name - name of the attribute we want to get\n\t * @returns { String | undefined } name of the node attribute whether it exists\n\t */\n\tfunction getAttr(dom, name) {\n\t  return dom.getAttribute(name)\n\t}\n\t\n\t/**\n\t * Set any DOM attribute\n\t * @param { Object } dom - DOM node we want to update\n\t * @param { String } name - name of the property we want to set\n\t * @param { String } val - value of the property we want to set\n\t */\n\tfunction setAttr(dom, name, val) {\n\t  var xlink = XLINK_REGEX.exec(name);\n\t  if (xlink && xlink[1])\n\t    { dom.setAttributeNS(XLINK_NS, xlink[1], val); }\n\t  else\n\t    { dom.setAttribute(name, val); }\n\t}\n\t\n\t/**\n\t * Insert safely a tag to fix #1962 #1649\n\t * @param   { HTMLElement } root - children container\n\t * @param   { HTMLElement } curr - node to insert\n\t * @param   { HTMLElement } next - node that should preceed the current node inserted\n\t */\n\tfunction safeInsert(root, curr, next) {\n\t  root.insertBefore(curr, next.parentNode && next);\n\t}\n\t\n\t/**\n\t * Minimize risk: only zero or one _space_ between attr & value\n\t * @param   { String }   html - html string we want to parse\n\t * @param   { Function } fn - callback function to apply on any attribute found\n\t */\n\tfunction walkAttrs(html, fn) {\n\t  if (!html)\n\t    { return }\n\t  var m;\n\t  while (m = RE_HTML_ATTRS.exec(html))\n\t    { fn(m[1].toLowerCase(), m[2] || m[3] || m[4]); }\n\t}\n\t\n\t/**\n\t * Walk down recursively all the children tags starting dom node\n\t * @param   { Object }   dom - starting node where we will start the recursion\n\t * @param   { Function } fn - callback to transform the child node just found\n\t * @param   { Object }   context - fn can optionally return an object, which is passed to children\n\t */\n\tfunction walkNodes(dom, fn, context) {\n\t  if (dom) {\n\t    var res = fn(dom, context);\n\t    var next;\n\t    // stop the recursion\n\t    if (res === false) { return }\n\t\n\t    dom = dom.firstChild;\n\t\n\t    while (dom) {\n\t      next = dom.nextSibling;\n\t      walkNodes(dom, fn, res);\n\t      dom = next;\n\t    }\n\t  }\n\t}\n\t\n\tvar dom = Object.freeze({\n\t\t$$: $$,\n\t\t$: $,\n\t\tcreateFrag: createFrag,\n\t\tcreateDOMPlaceholder: createDOMPlaceholder,\n\t\tmkEl: mkEl,\n\t\tsetInnerHTML: setInnerHTML,\n\t\ttoggleVisibility: toggleVisibility,\n\t\tremAttr: remAttr,\n\t\tstyleObjectToString: styleObjectToString,\n\t\tgetAttr: getAttr,\n\t\tsetAttr: setAttr,\n\t\tsafeInsert: safeInsert,\n\t\twalkAttrs: walkAttrs,\n\t\twalkNodes: walkNodes\n\t});\n\t\n\tvar styleNode;\n\tvar cssTextProp;\n\tvar byName = {};\n\tvar remainder = [];\n\tvar needsInject = false;\n\t\n\t// skip the following code on the server\n\tif (WIN) {\n\t  styleNode = (function () {\n\t    // create a new style element with the correct type\n\t    var newNode = mkEl('style');\n\t    setAttr(newNode, 'type', 'text/css');\n\t\n\t    // replace any user node or insert the new one into the head\n\t    var userNode = $('style[type=riot]');\n\t    /* istanbul ignore next */\n\t    if (userNode) {\n\t      if (userNode.id) { newNode.id = userNode.id; }\n\t      userNode.parentNode.replaceChild(newNode, userNode);\n\t    }\n\t    else { document.getElementsByTagName('head')[0].appendChild(newNode); }\n\t\n\t    return newNode\n\t  })();\n\t  cssTextProp = styleNode.styleSheet;\n\t}\n\t\n\t/**\n\t * Object that will be used to inject and manage the css of every tag instance\n\t */\n\tvar styleManager = {\n\t  styleNode: styleNode,\n\t  /**\n\t   * Save a tag style to be later injected into DOM\n\t   * @param { String } css - css string\n\t   * @param { String } name - if it's passed we will map the css to a tagname\n\t   */\n\t  add: function add(css, name) {\n\t    if (name) { byName[name] = css; }\n\t    else { remainder.push(css); }\n\t    needsInject = true;\n\t  },\n\t  /**\n\t   * Inject all previously saved tag styles into DOM\n\t   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n\t   */\n\t  inject: function inject() {\n\t    if (!WIN || !needsInject) { return }\n\t    needsInject = false;\n\t    var style = Object.keys(byName)\n\t      .map(function(k) { return byName[k] })\n\t      .concat(remainder).join('\\n');\n\t    /* istanbul ignore next */\n\t    if (cssTextProp) { cssTextProp.cssText = style; }\n\t    else { styleNode.innerHTML = style; }\n\t  }\n\t};\n\t\n\t/**\n\t * The riot template engine\n\t * @version v3.0.3\n\t */\n\t/**\n\t * riot.util.brackets\n\t *\n\t * - `brackets    ` - Returns a string or regex based on its parameter\n\t * - `brackets.set` - Change the current riot brackets\n\t *\n\t * @module\n\t */\n\t\n\t/* global riot */\n\t\n\t/* istanbul ignore next */\n\tvar brackets = (function (UNDEF) {\n\t\n\t  var\n\t    REGLOB = 'g',\n\t\n\t    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\t\n\t    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`/g,\n\t\n\t    S_QBLOCKS = R_STRINGS.source + '|' +\n\t      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n\t      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?(\\/)[gim]*/.source,\n\t\n\t    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\t\n\t    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\t\n\t    FINDBRACES = {\n\t      '(': RegExp('([()])|'   + S_QBLOCKS, REGLOB),\n\t      '[': RegExp('([[\\\\]])|' + S_QBLOCKS, REGLOB),\n\t      '{': RegExp('([{}])|'   + S_QBLOCKS, REGLOB)\n\t    },\n\t\n\t    DEFAULT = '{ }';\n\t\n\t  var _pairs = [\n\t    '{', '}',\n\t    '{', '}',\n\t    /{[^}]*}/,\n\t    /\\\\([{}])/g,\n\t    /\\\\({)|{/g,\n\t    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCKS, REGLOB),\n\t    DEFAULT,\n\t    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n\t    /(^|[^\\\\]){=[\\S\\s]*?}/\n\t  ];\n\t\n\t  var\n\t    cachedBrackets = UNDEF,\n\t    _regex,\n\t    _cache = [],\n\t    _settings;\n\t\n\t  function _loopback (re) { return re }\n\t\n\t  function _rewrite (re, bp) {\n\t    if (!bp) { bp = _cache; }\n\t    return new RegExp(\n\t      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n\t    )\n\t  }\n\t\n\t  function _create (pair) {\n\t    if (pair === DEFAULT) { return _pairs }\n\t\n\t    var arr = pair.split(' ');\n\t\n\t    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n\t      throw new Error('Unsupported brackets \"' + pair + '\"')\n\t    }\n\t    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '));\n\t\n\t    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr);\n\t    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr);\n\t    arr[6] = _rewrite(_pairs[6], arr);\n\t    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCKS, REGLOB);\n\t    arr[8] = pair;\n\t    return arr\n\t  }\n\t\n\t  function _brackets (reOrIdx) {\n\t    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n\t  }\n\t\n\t  _brackets.split = function split (str, tmpl, _bp) {\n\t    // istanbul ignore next: _bp is for the compiler\n\t    if (!_bp) { _bp = _cache; }\n\t\n\t    var\n\t      parts = [],\n\t      match,\n\t      isexpr,\n\t      start,\n\t      pos,\n\t      re = _bp[6];\n\t\n\t    isexpr = start = re.lastIndex = 0;\n\t\n\t    while ((match = re.exec(str))) {\n\t\n\t      pos = match.index;\n\t\n\t      if (isexpr) {\n\t\n\t        if (match[2]) {\n\t          re.lastIndex = skipBraces(str, match[2], re.lastIndex);\n\t          continue\n\t        }\n\t        if (!match[3]) {\n\t          continue\n\t        }\n\t      }\n\t\n\t      if (!match[1]) {\n\t        unescapeStr(str.slice(start, pos));\n\t        start = re.lastIndex;\n\t        re = _bp[6 + (isexpr ^= 1)];\n\t        re.lastIndex = start;\n\t      }\n\t    }\n\t\n\t    if (str && start < str.length) {\n\t      unescapeStr(str.slice(start));\n\t    }\n\t\n\t    return parts\n\t\n\t    function unescapeStr (s) {\n\t      if (tmpl || isexpr) {\n\t        parts.push(s && s.replace(_bp[5], '$1'));\n\t      } else {\n\t        parts.push(s);\n\t      }\n\t    }\n\t\n\t    function skipBraces (s, ch, ix) {\n\t      var\n\t        match,\n\t        recch = FINDBRACES[ch];\n\t\n\t      recch.lastIndex = ix;\n\t      ix = 1;\n\t      while ((match = recch.exec(s))) {\n\t        if (match[1] &&\n\t          !(match[1] === ch ? ++ix : --ix)) { break }\n\t      }\n\t      return ix ? s.length : recch.lastIndex\n\t    }\n\t  };\n\t\n\t  _brackets.hasExpr = function hasExpr (str) {\n\t    return _cache[4].test(str)\n\t  };\n\t\n\t  _brackets.loopKeys = function loopKeys (expr) {\n\t    var m = expr.match(_cache[9]);\n\t\n\t    return m\n\t      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n\t      : { val: expr.trim() }\n\t  };\n\t\n\t  _brackets.array = function array (pair) {\n\t    return pair ? _create(pair) : _cache\n\t  };\n\t\n\t  function _reset (pair) {\n\t    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n\t      _cache = _create(pair);\n\t      _regex = pair === DEFAULT ? _loopback : _rewrite;\n\t      _cache[9] = _regex(_pairs[9]);\n\t    }\n\t    cachedBrackets = pair;\n\t  }\n\t\n\t  function _setSettings (o) {\n\t    var b;\n\t\n\t    o = o || {};\n\t    b = o.brackets;\n\t    Object.defineProperty(o, 'brackets', {\n\t      set: _reset,\n\t      get: function () { return cachedBrackets },\n\t      enumerable: true\n\t    });\n\t    _settings = o;\n\t    _reset(b);\n\t  }\n\t\n\t  Object.defineProperty(_brackets, 'settings', {\n\t    set: _setSettings,\n\t    get: function () { return _settings }\n\t  });\n\t\n\t  /* istanbul ignore next: in the browser riot is always in the scope */\n\t  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};\n\t  _brackets.set = _reset;\n\t\n\t  _brackets.R_STRINGS = R_STRINGS;\n\t  _brackets.R_MLCOMMS = R_MLCOMMS;\n\t  _brackets.S_QBLOCKS = S_QBLOCKS;\n\t\n\t  return _brackets\n\t\n\t})();\n\t\n\t/**\n\t * @module tmpl\n\t *\n\t * tmpl          - Root function, returns the template value, render with data\n\t * tmpl.hasExpr  - Test the existence of a expression inside a string\n\t * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n\t */\n\t\n\t/* istanbul ignore next */\n\tvar tmpl = (function () {\n\t\n\t  var _cache = {};\n\t\n\t  function _tmpl (str, data) {\n\t    if (!str) { return str }\n\t\n\t    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr)\n\t  }\n\t\n\t  _tmpl.hasExpr = brackets.hasExpr;\n\t\n\t  _tmpl.loopKeys = brackets.loopKeys;\n\t\n\t  // istanbul ignore next\n\t  _tmpl.clearCache = function () { _cache = {}; };\n\t\n\t  _tmpl.errorHandler = null;\n\t\n\t  function _logErr (err, ctx) {\n\t\n\t    err.riotData = {\n\t      tagName: ctx && ctx.__ && ctx.__.tagName,\n\t      _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n\t    };\n\t\n\t    if (_tmpl.errorHandler) { _tmpl.errorHandler(err); }\n\t    else if (\n\t      typeof console !== 'undefined' &&\n\t      typeof console.error === 'function'\n\t    ) {\n\t      if (err.riotData.tagName) {\n\t        console.error('Riot template error thrown in the <%s> tag', err.riotData.tagName);\n\t      }\n\t      console.error(err);\n\t    }\n\t  }\n\t\n\t  function _create (str) {\n\t    var expr = _getTmpl(str);\n\t\n\t    if (expr.slice(0, 11) !== 'try{return ') { expr = 'return ' + expr; }\n\t\n\t    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n\t  }\n\t\n\t  var\n\t    CH_IDEXPR = String.fromCharCode(0x2057),\n\t    RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/,\n\t    RE_QBLOCK = RegExp(brackets.S_QBLOCKS, 'g'),\n\t    RE_DQUOTE = /\\u2057/g,\n\t    RE_QBMARK = /\\u2057(\\d+)~/g;\n\t\n\t  function _getTmpl (str) {\n\t    var\n\t      qstr = [],\n\t      expr,\n\t      parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1);\n\t\n\t    if (parts.length > 2 || parts[0]) {\n\t      var i, j, list = [];\n\t\n\t      for (i = j = 0; i < parts.length; ++i) {\n\t\n\t        expr = parts[i];\n\t\n\t        if (expr && (expr = i & 1\n\t\n\t            ? _parseExpr(expr, 1, qstr)\n\t\n\t            : '\"' + expr\n\t                .replace(/\\\\/g, '\\\\\\\\')\n\t                .replace(/\\r\\n?|\\n/g, '\\\\n')\n\t                .replace(/\"/g, '\\\\\"') +\n\t              '\"'\n\t\n\t          )) { list[j++] = expr; }\n\t\n\t      }\n\t\n\t      expr = j < 2 ? list[0]\n\t           : '[' + list.join(',') + '].join(\"\")';\n\t\n\t    } else {\n\t\n\t      expr = _parseExpr(parts[1], 0, qstr);\n\t    }\n\t\n\t    if (qstr[0]) {\n\t      expr = expr.replace(RE_QBMARK, function (_, pos) {\n\t        return qstr[pos]\n\t          .replace(/\\r/g, '\\\\r')\n\t          .replace(/\\n/g, '\\\\n')\n\t      });\n\t    }\n\t    return expr\n\t  }\n\t\n\t  var\n\t    RE_BREND = {\n\t      '(': /[()]/g,\n\t      '[': /[[\\]]/g,\n\t      '{': /[{}]/g\n\t    };\n\t\n\t  function _parseExpr (expr, asText, qstr) {\n\t\n\t    expr = expr\n\t          .replace(RE_QBLOCK, function (s, div) {\n\t            return s.length > 2 && !div ? CH_IDEXPR + (qstr.push(s) - 1) + '~' : s\n\t          })\n\t          .replace(/\\s+/g, ' ').trim()\n\t          .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n\t\n\t    if (expr) {\n\t      var\n\t        list = [],\n\t        cnt = 0,\n\t        match;\n\t\n\t      while (expr &&\n\t            (match = expr.match(RE_CSNAME)) &&\n\t            !match.index\n\t        ) {\n\t        var\n\t          key,\n\t          jsb,\n\t          re = /,|([[{(])|$/g;\n\t\n\t        expr = RegExp.rightContext;\n\t        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n\t\n\t        while (jsb = (match = re.exec(expr))[1]) { skipBraces(jsb, re); }\n\t\n\t        jsb  = expr.slice(0, match.index);\n\t        expr = RegExp.rightContext;\n\t\n\t        list[cnt++] = _wrapExpr(jsb, 1, key);\n\t      }\n\t\n\t      expr = !cnt ? _wrapExpr(expr, asText)\n\t           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n\t    }\n\t    return expr\n\t\n\t    function skipBraces (ch, re) {\n\t      var\n\t        mm,\n\t        lv = 1,\n\t        ir = RE_BREND[ch];\n\t\n\t      ir.lastIndex = re.lastIndex;\n\t      while (mm = ir.exec(expr)) {\n\t        if (mm[0] === ch) { ++lv; }\n\t        else if (!--lv) { break }\n\t      }\n\t      re.lastIndex = lv ? expr.length : ir.lastIndex;\n\t    }\n\t  }\n\t\n\t  // istanbul ignore next: not both\n\t  var // eslint-disable-next-line max-len\n\t    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n\t    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n\t    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/;\n\t\n\t  function _wrapExpr (expr, asText, key) {\n\t    var tb;\n\t\n\t    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n\t      if (mvar) {\n\t        pos = tb ? 0 : pos + match.length;\n\t\n\t        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n\t          match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n\t          if (pos) { tb = (s = s[pos]) === '.' || s === '(' || s === '['; }\n\t        } else if (pos) {\n\t          tb = !JS_NOPROPS.test(s.slice(pos));\n\t        }\n\t      }\n\t      return match\n\t    });\n\t\n\t    if (tb) {\n\t      expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n\t    }\n\t\n\t    if (key) {\n\t\n\t      expr = (tb\n\t          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n\t        ) + '?\"' + key + '\":\"\"';\n\t\n\t    } else if (asText) {\n\t\n\t      expr = 'function(v){' + (tb\n\t          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n\t        ) + ';return v||v===0?v:\"\"}.call(this)';\n\t    }\n\t\n\t    return expr\n\t  }\n\t\n\t  _tmpl.version = brackets.version = 'v3.0.3';\n\t\n\t  return _tmpl\n\t\n\t})();\n\t\n\t/* istanbul ignore next */\n\tvar observable$1 = function(el) {\n\t\n\t  /**\n\t   * Extend the original object or create a new empty one\n\t   * @type { Object }\n\t   */\n\t\n\t  el = el || {};\n\t\n\t  /**\n\t   * Private variables\n\t   */\n\t  var callbacks = {},\n\t    slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Public Api\n\t   */\n\t\n\t  // extend the el object adding the observable methods\n\t  Object.defineProperties(el, {\n\t    /**\n\t     * Listen to the given `event` ands\n\t     * execute the `callback` each time an event is triggered.\n\t     * @param  { String } event - event id\n\t     * @param  { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    on: {\n\t      value: function(event, fn) {\n\t        if (typeof fn == 'function')\n\t          { (callbacks[event] = callbacks[event] || []).push(fn); }\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Removes the given `event` listeners\n\t     * @param   { String } event - event id\n\t     * @param   { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    off: {\n\t      value: function(event, fn) {\n\t        if (event == '*' && !fn) { callbacks = {}; }\n\t        else {\n\t          if (fn) {\n\t            var arr = callbacks[event];\n\t            for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n\t              if (cb == fn) { arr.splice(i--, 1); }\n\t            }\n\t          } else { delete callbacks[event]; }\n\t        }\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Listen to the given `event` and\n\t     * execute the `callback` at most once\n\t     * @param   { String } event - event id\n\t     * @param   { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    one: {\n\t      value: function(event, fn) {\n\t        function on() {\n\t          el.off(event, on);\n\t          fn.apply(el, arguments);\n\t        }\n\t        return el.on(event, on)\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Execute all callback functions that listen to\n\t     * the given `event`\n\t     * @param   { String } event - event id\n\t     * @returns { Object } el\n\t     */\n\t    trigger: {\n\t      value: function(event) {\n\t        var arguments$1 = arguments;\n\t\n\t\n\t        // getting the arguments\n\t        var arglen = arguments.length - 1,\n\t          args = new Array(arglen),\n\t          fns,\n\t          fn,\n\t          i;\n\t\n\t        for (i = 0; i < arglen; i++) {\n\t          args[i] = arguments$1[i + 1]; // skip first argument\n\t        }\n\t\n\t        fns = slice.call(callbacks[event] || [], 0);\n\t\n\t        for (i = 0; fn = fns[i]; ++i) {\n\t          fn.apply(el, args);\n\t        }\n\t\n\t        if (callbacks['*'] && event != '*')\n\t          { el.trigger.apply(el, ['*', event].concat(args)); }\n\t\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    }\n\t  });\n\t\n\t  return el\n\t\n\t};\n\t\n\t/**\n\t * Specialized function for looping an array-like collection with `each={}`\n\t * @param   { Array } list - collection of items\n\t * @param   {Function} fn - callback function\n\t * @returns { Array } the array looped\n\t */\n\tfunction each(list, fn) {\n\t  var len = list ? list.length : 0;\n\t  var i = 0;\n\t  for (; i < len; ++i) {\n\t    fn(list[i], i);\n\t  }\n\t  return list\n\t}\n\t\n\t/**\n\t * Check whether an array contains an item\n\t * @param   { Array } array - target array\n\t * @param   { * } item - item to test\n\t * @returns { Boolean } -\n\t */\n\tfunction contains(array, item) {\n\t  return array.indexOf(item) !== -1\n\t}\n\t\n\t/**\n\t * Convert a string containing dashes to camel case\n\t * @param   { String } str - input string\n\t * @returns { String } my-string -> myString\n\t */\n\tfunction toCamel(str) {\n\t  return str.replace(/-(\\w)/g, function (_, c) { return c.toUpperCase(); })\n\t}\n\t\n\t/**\n\t * Faster String startsWith alternative\n\t * @param   { String } str - source string\n\t * @param   { String } value - test string\n\t * @returns { Boolean } -\n\t */\n\tfunction startsWith(str, value) {\n\t  return str.slice(0, value.length) === value\n\t}\n\t\n\t/**\n\t * Helper function to set an immutable property\n\t * @param   { Object } el - object where the new property will be set\n\t * @param   { String } key - object key where the new property will be stored\n\t * @param   { * } value - value of the new property\n\t * @param   { Object } options - set the propery overriding the default options\n\t * @returns { Object } - the initial object\n\t */\n\tfunction defineProperty(el, key, value, options) {\n\t  Object.defineProperty(el, key, extend({\n\t    value: value,\n\t    enumerable: false,\n\t    writable: false,\n\t    configurable: true\n\t  }, options));\n\t  return el\n\t}\n\t\n\t/**\n\t * Extend any object with other properties\n\t * @param   { Object } src - source object\n\t * @returns { Object } the resulting extended object\n\t *\n\t * var obj = { foo: 'baz' }\n\t * extend(obj, {bar: 'bar', foo: 'bar'})\n\t * console.log(obj) => {bar: 'bar', foo: 'bar'}\n\t *\n\t */\n\tfunction extend(src) {\n\t  var obj, args = arguments;\n\t  for (var i = 1; i < args.length; ++i) {\n\t    if (obj = args[i]) {\n\t      for (var key in obj) {\n\t        // check if this property of the source object could be overridden\n\t        if (isWritable(src, key))\n\t          { src[key] = obj[key]; }\n\t      }\n\t    }\n\t  }\n\t  return src\n\t}\n\t\n\tvar misc = Object.freeze({\n\t\teach: each,\n\t\tcontains: contains,\n\t\ttoCamel: toCamel,\n\t\tstartsWith: startsWith,\n\t\tdefineProperty: defineProperty,\n\t\textend: extend\n\t});\n\t\n\tvar settings$1 = extend(Object.create(brackets.settings), {\n\t  skipAnonymousTags: true\n\t});\n\t\n\t/**\n\t * Trigger DOM events\n\t * @param   { HTMLElement } dom - dom element target of the event\n\t * @param   { Function } handler - user function\n\t * @param   { Object } e - event object\n\t */\n\tfunction handleEvent(dom, handler, e) {\n\t  var ptag = this.__.parent,\n\t    item = this.__.item;\n\t\n\t  if (!item)\n\t    { while (ptag && !item) {\n\t      item = ptag.__.item;\n\t      ptag = ptag.__.parent;\n\t    } }\n\t\n\t  // override the event properties\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'currentTarget')) { e.currentTarget = dom; }\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'target')) { e.target = e.srcElement; }\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'which')) { e.which = e.charCode || e.keyCode; }\n\t\n\t  e.item = item;\n\t\n\t  handler.call(this, e);\n\t\n\t  if (!e.preventUpdate) {\n\t    var p = getImmediateCustomParentTag(this);\n\t    // fixes #2083\n\t    if (p.isMounted) { p.update(); }\n\t  }\n\t}\n\t\n\t/**\n\t * Attach an event to a DOM node\n\t * @param { String } name - event name\n\t * @param { Function } handler - event callback\n\t * @param { Object } dom - dom node\n\t * @param { Tag } tag - tag instance\n\t */\n\tfunction setEventHandler(name, handler, dom, tag) {\n\t  var eventName,\n\t    cb = handleEvent.bind(tag, dom, handler);\n\t\n\t  // avoid to bind twice the same event\n\t  // possible fix for #2332\n\t  dom[name] = null;\n\t\n\t  // normalize event name\n\t  eventName = name.replace(RE_EVENTS_PREFIX, '');\n\t\n\t  // cache the listener into the listeners array\n\t  if (!contains(tag.__.listeners, dom)) { tag.__.listeners.push(dom); }\n\t  if (!dom[RIOT_EVENTS_KEY]) { dom[RIOT_EVENTS_KEY] = {}; }\n\t  if (dom[RIOT_EVENTS_KEY][name]) { dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][name]); }\n\t\n\t  dom[RIOT_EVENTS_KEY][name] = cb;\n\t  dom.addEventListener(eventName, cb, false);\n\t}\n\t\n\t/**\n\t * Update dynamically created data-is tags with changing expressions\n\t * @param { Object } expr - expression tag and expression info\n\t * @param { Tag }    parent - parent for tag creation\n\t * @param { String } tagName - tag implementation we want to use\n\t */\n\tfunction updateDataIs(expr, parent, tagName) {\n\t  var conf, isVirtual, head, ref;\n\t\n\t  if (expr.tag && expr.tagName === tagName) {\n\t    expr.tag.update();\n\t    return\n\t  }\n\t\n\t  isVirtual = expr.dom.tagName === 'VIRTUAL';\n\t  // sync _parent to accommodate changing tagnames\n\t  if (expr.tag) {\n\t    // need placeholder before unmount\n\t    if(isVirtual) {\n\t      head = expr.tag.__.head;\n\t      ref = createDOMPlaceholder();\n\t      head.parentNode.insertBefore(ref, head);\n\t    }\n\t\n\t    expr.tag.unmount(true);\n\t  }\n\t\n\t  if (!isString(tagName)) { return }\n\t\n\t  expr.impl = __TAG_IMPL[tagName];\n\t  conf = {root: expr.dom, parent: parent, hasImpl: true, tagName: tagName};\n\t  expr.tag = initChildTag(expr.impl, conf, expr.dom.innerHTML, parent);\n\t  each(expr.attrs, function (a) { return setAttr(expr.tag.root, a.name, a.value); });\n\t  expr.tagName = tagName;\n\t  expr.tag.mount();\n\t  if (isVirtual)\n\t    { makeReplaceVirtual(expr.tag, ref || expr.tag.root); } // root exist first time, after use placeholder\n\t\n\t  // parent is the placeholder tag, not the dynamic tag so clean up\n\t  parent.__.onUnmount = function() {\n\t    var delName = expr.tag.opts.dataIs,\n\t      tags = expr.tag.parent.tags,\n\t      _tags = expr.tag.__.parent.tags;\n\t    arrayishRemove(tags, delName, expr.tag);\n\t    arrayishRemove(_tags, delName, expr.tag);\n\t    expr.tag.unmount();\n\t  };\n\t}\n\t\n\t/**\n\t * Nomalize any attribute removing the \"riot-\" prefix\n\t * @param   { String } attrName - original attribute name\n\t * @returns { String } valid html attribute name\n\t */\n\tfunction normalizeAttrName(attrName) {\n\t  if (!attrName) { return null }\n\t  attrName = attrName.replace(ATTRS_PREFIX, '');\n\t  if (CASE_SENSITIVE_ATTRIBUTES[attrName]) { attrName = CASE_SENSITIVE_ATTRIBUTES[attrName]; }\n\t  return attrName\n\t}\n\t\n\t/**\n\t * Update on single tag expression\n\t * @this Tag\n\t * @param { Object } expr - expression logic\n\t * @returns { undefined }\n\t */\n\tfunction updateExpression(expr) {\n\t  if (this.root && getAttr(this.root,'virtualized')) { return }\n\t\n\t  var dom = expr.dom,\n\t    // remove the riot- prefix\n\t    attrName = normalizeAttrName(expr.attr),\n\t    isToggle = contains([SHOW_DIRECTIVE, HIDE_DIRECTIVE], attrName),\n\t    isVirtual = expr.root && expr.root.tagName === 'VIRTUAL',\n\t    parent = dom && (expr.parent || dom.parentNode),\n\t    // detect the style attributes\n\t    isStyleAttr = attrName === 'style',\n\t    isClassAttr = attrName === 'class',\n\t    hasValue,\n\t    isObj,\n\t    value;\n\t\n\t  // if it's a tag we could totally skip the rest\n\t  if (expr._riot_id) {\n\t    if (expr.isMounted) {\n\t      expr.update();\n\t    // if it hasn't been mounted yet, do that now.\n\t    } else {\n\t      expr.mount();\n\t      if (isVirtual) {\n\t        makeReplaceVirtual(expr, expr.root);\n\t      }\n\t    }\n\t    return\n\t  }\n\t  // if this expression has the update method it means it can handle the DOM changes by itself\n\t  if (expr.update) { return expr.update() }\n\t\n\t  // ...it seems to be a simple expression so we try to calculat its value\n\t  value = tmpl(expr.expr, isToggle ? extend(Object.create(this.parent), this) : this);\n\t  hasValue = !isBlank(value);\n\t  isObj = isObject(value);\n\t\n\t  // convert the style/class objects to strings\n\t  if (isObj) {\n\t    isObj = !isClassAttr && !isStyleAttr;\n\t    if (isClassAttr) {\n\t      value = tmpl(JSON.stringify(value), this);\n\t    } else if (isStyleAttr) {\n\t      value = styleObjectToString(value);\n\t    }\n\t  }\n\t\n\t  // remove original attribute\n\t  if (expr.attr && (!expr.isAttrRemoved || !hasValue)) {\n\t    remAttr(dom, expr.attr);\n\t    expr.isAttrRemoved = true;\n\t  }\n\t\n\t  // for the boolean attributes we don't need the value\n\t  // we can convert it to checked=true to checked=checked\n\t  if (expr.bool) { value = value ? attrName : false; }\n\t  if (expr.isRtag) { return updateDataIs(expr, this, value) }\n\t  if (expr.wasParsedOnce && expr.value === value) { return }\n\t\n\t  // update the expression value\n\t  expr.value = value;\n\t  expr.wasParsedOnce = true;\n\t\n\t  // if the value is an object we can not do much more with it\n\t  if (isObj && !isToggle) { return }\n\t  // avoid to render undefined/null values\n\t  if (isBlank(value)) { value = ''; }\n\t\n\t  // textarea and text nodes have no attribute name\n\t  if (!attrName) {\n\t    // about #815 w/o replace: the browser converts the value to a string,\n\t    // the comparison by \"==\" does too, but not in the server\n\t    value += '';\n\t    // test for parent avoids error with invalid assignment to nodeValue\n\t    if (parent) {\n\t      // cache the parent node because somehow it will become null on IE\n\t      // on the next iteration\n\t      expr.parent = parent;\n\t      if (parent.tagName === 'TEXTAREA') {\n\t        parent.value = value;                    // #1113\n\t        if (!IE_VERSION) { dom.nodeValue = value; }  // #1625 IE throws here, nodeValue\n\t      }                                         // will be available on 'updated'\n\t      else { dom.nodeValue = value; }\n\t    }\n\t    return\n\t  }\n\t\n\t\n\t  // event handler\n\t  if (isFunction(value)) {\n\t    setEventHandler(attrName, value, dom, this);\n\t  // show / hide\n\t  } else if (isToggle) {\n\t    toggleVisibility(dom, attrName === HIDE_DIRECTIVE ? !value : value);\n\t  // handle attributes\n\t  } else {\n\t    if (expr.bool) {\n\t      dom[attrName] = value;\n\t    }\n\t\n\t    if (attrName === 'value' && dom.value !== value) {\n\t      dom.value = value;\n\t    }\n\t\n\t    if (hasValue && value !== false) {\n\t      setAttr(dom, attrName, value);\n\t    }\n\t\n\t    // make sure that in case of style changes\n\t    // the element stays hidden\n\t    if (isStyleAttr && dom.hidden) { toggleVisibility(dom, false); }\n\t  }\n\t}\n\t\n\t/**\n\t * Update all the expressions in a Tag instance\n\t * @this Tag\n\t * @param { Array } expressions - expression that must be re evaluated\n\t */\n\tfunction updateAllExpressions(expressions) {\n\t  each(expressions, updateExpression.bind(this));\n\t}\n\t\n\tvar IfExpr = {\n\t  init: function init(dom, tag, expr) {\n\t    remAttr(dom, CONDITIONAL_DIRECTIVE);\n\t    this.tag = tag;\n\t    this.expr = expr;\n\t    this.stub = document.createTextNode('');\n\t    this.pristine = dom;\n\t\n\t    var p = dom.parentNode;\n\t    p.insertBefore(this.stub, dom);\n\t    p.removeChild(dom);\n\t\n\t    return this\n\t  },\n\t  update: function update() {\n\t    this.value = tmpl(this.expr, this.tag);\n\t\n\t    if (this.value && !this.current) { // insert\n\t      this.current = this.pristine.cloneNode(true);\n\t      this.stub.parentNode.insertBefore(this.current, this.stub);\n\t      this.expressions = [];\n\t      parseExpressions.apply(this.tag, [this.current, this.expressions, true]);\n\t    } else if (!this.value && this.current) { // remove\n\t      unmountAll(this.expressions);\n\t      if (this.current._tag) {\n\t        this.current._tag.unmount();\n\t      } else if (this.current.parentNode) {\n\t        this.current.parentNode.removeChild(this.current);\n\t      }\n\t      this.current = null;\n\t      this.expressions = [];\n\t    }\n\t\n\t    if (this.value) { updateAllExpressions.call(this.tag, this.expressions); }\n\t  },\n\t  unmount: function unmount() {\n\t    unmountAll(this.expressions || []);\n\t    delete this.pristine;\n\t    delete this.parentNode;\n\t    delete this.stub;\n\t  }\n\t};\n\t\n\tvar RefExpr = {\n\t  init: function init(dom, parent, attrName, attrValue) {\n\t    this.dom = dom;\n\t    this.attr = attrName;\n\t    this.rawValue = attrValue;\n\t    this.parent = parent;\n\t    this.hasExp = tmpl.hasExpr(attrValue);\n\t    return this\n\t  },\n\t  update: function update() {\n\t    var old = this.value;\n\t    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n\t    // if the referenced element is a custom tag, then we set the tag itself, rather than DOM\n\t    var tagOrDom = this.tag || this.dom;\n\t\n\t    this.value = this.hasExp ? tmpl(this.rawValue, this.parent) : this.rawValue;\n\t\n\t    // the name changed, so we need to remove it from the old key (if present)\n\t    if (!isBlank(old) && customParent) { arrayishRemove(customParent.refs, old, tagOrDom); }\n\t    if (!isBlank(this.value)) {\n\t      // add it to the refs of parent tag (this behavior was changed >=3.0)\n\t      if (customParent) { arrayishAdd(\n\t        customParent.refs,\n\t        this.value,\n\t        tagOrDom,\n\t        // use an array if it's a looped node and the ref is not an expression\n\t        null,\n\t        this.parent.__.index\n\t      ); }\n\t    }\n\t\n\t    // if it's the first time we pass here let's remove the ref attribute\n\t    // #2329\n\t    if (!old) { remAttr(this.dom, this.attr); }\n\t  },\n\t  unmount: function unmount() {\n\t    var tagOrDom = this.tag || this.dom;\n\t    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n\t    if (!isBlank(this.value) && customParent)\n\t      { arrayishRemove(customParent.refs, this.value, tagOrDom); }\n\t    delete this.dom;\n\t    delete this.parent;\n\t  }\n\t};\n\t\n\t/**\n\t * Convert the item looped into an object used to extend the child tag properties\n\t * @param   { Object } expr - object containing the keys used to extend the children tags\n\t * @param   { * } key - value to assign to the new object returned\n\t * @param   { * } val - value containing the position of the item in the array\n\t * @param   { Object } base - prototype object for the new item\n\t * @returns { Object } - new object containing the values of the original item\n\t *\n\t * The variables 'key' and 'val' are arbitrary.\n\t * They depend on the collection type looped (Array, Object)\n\t * and on the expression used on the each tag\n\t *\n\t */\n\tfunction mkitem(expr, key, val, base) {\n\t  var item = base ? Object.create(base) : {};\n\t  item[expr.key] = key;\n\t  if (expr.pos) { item[expr.pos] = val; }\n\t  return item\n\t}\n\t\n\t/**\n\t * Unmount the redundant tags\n\t * @param   { Array } items - array containing the current items to loop\n\t * @param   { Array } tags - array containing all the children tags\n\t */\n\tfunction unmountRedundant(items, tags) {\n\t  var i = tags.length,\n\t    j = items.length;\n\t\n\t  while (i > j) {\n\t    i--;\n\t    remove.apply(tags[i], [tags, i]);\n\t  }\n\t}\n\t\n\t\n\t/**\n\t * Remove a child tag\n\t * @this Tag\n\t * @param   { Array } tags - tags collection\n\t * @param   { Number } i - index of the tag to remove\n\t */\n\tfunction remove(tags, i) {\n\t  tags.splice(i, 1);\n\t  this.unmount();\n\t  arrayishRemove(this.parent, this, this.__.tagName, true);\n\t}\n\t\n\t/**\n\t * Move the nested custom tags in non custom loop tags\n\t * @this Tag\n\t * @param   { Number } i - current position of the loop tag\n\t */\n\tfunction moveNestedTags(i) {\n\t  var this$1 = this;\n\t\n\t  each(Object.keys(this.tags), function (tagName) {\n\t    moveChildTag.apply(this$1.tags[tagName], [tagName, i]);\n\t  });\n\t}\n\t\n\t/**\n\t * Move a child tag\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Tag } nextTag - instance of the next tag preceding the one we want to move\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction move(root, nextTag, isVirtual) {\n\t  if (isVirtual)\n\t    { moveVirtual.apply(this, [root, nextTag]); }\n\t  else\n\t    { safeInsert(root, this.root, nextTag.root); }\n\t}\n\t\n\t/**\n\t * Insert and mount a child tag\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Tag } nextTag - instance of the next tag preceding the one we want to insert\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction insert(root, nextTag, isVirtual) {\n\t  if (isVirtual)\n\t    { makeVirtual.apply(this, [root, nextTag]); }\n\t  else\n\t    { safeInsert(root, this.root, nextTag.root); }\n\t}\n\t\n\t/**\n\t * Append a new tag into the DOM\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction append(root, isVirtual) {\n\t  if (isVirtual)\n\t    { makeVirtual.call(this, root); }\n\t  else\n\t    { root.appendChild(this.root); }\n\t}\n\t\n\t/**\n\t * Manage tags having the 'each'\n\t * @param   { HTMLElement } dom - DOM node we need to loop\n\t * @param   { Tag } parent - parent tag instance where the dom node is contained\n\t * @param   { String } expr - string contained in the 'each' attribute\n\t * @returns { Object } expression object for this each loop\n\t */\n\tfunction _each(dom, parent, expr) {\n\t\n\t  // remove the each property from the original tag\n\t  remAttr(dom, LOOP_DIRECTIVE);\n\t\n\t  var mustReorder = typeof getAttr(dom, LOOP_NO_REORDER_DIRECTIVE) !== T_STRING || remAttr(dom, LOOP_NO_REORDER_DIRECTIVE),\n\t    tagName = getTagName(dom),\n\t    impl = __TAG_IMPL[tagName],\n\t    parentNode = dom.parentNode,\n\t    placeholder = createDOMPlaceholder(),\n\t    child = getTag(dom),\n\t    ifExpr = getAttr(dom, CONDITIONAL_DIRECTIVE),\n\t    tags = [],\n\t    oldItems = [],\n\t    hasKeys,\n\t    isLoop = true,\n\t    isAnonymous = !__TAG_IMPL[tagName],\n\t    isVirtual = dom.tagName === 'VIRTUAL';\n\t\n\t  // parse the each expression\n\t  expr = tmpl.loopKeys(expr);\n\t  expr.isLoop = true;\n\t\n\t  if (ifExpr) { remAttr(dom, CONDITIONAL_DIRECTIVE); }\n\t\n\t  // insert a marked where the loop tags will be injected\n\t  parentNode.insertBefore(placeholder, dom);\n\t  parentNode.removeChild(dom);\n\t\n\t  expr.update = function updateEach() {\n\t    // get the new items collection\n\t    expr.value = tmpl(expr.val, parent);\n\t\n\t    var frag = createFrag(),\n\t      items = expr.value,\n\t      isObject$$1 = !isArray(items) && !isString(items),\n\t      root = placeholder.parentNode;\n\t\n\t    // if this DOM was removed the update here is useless\n\t    // this condition fixes also a weird async issue on IE in our unit test\n\t    if (!root) { return }\n\t\n\t    // object loop. any changes cause full redraw\n\t    if (isObject$$1) {\n\t      hasKeys = items || false;\n\t      items = hasKeys ?\n\t        Object.keys(items).map(function (key) {\n\t          return mkitem(expr, items[key], key)\n\t        }) : [];\n\t    } else {\n\t      hasKeys = false;\n\t    }\n\t\n\t    if (ifExpr) {\n\t      items = items.filter(function(item, i) {\n\t        if (expr.key && !isObject$$1)\n\t          { return !!tmpl(ifExpr, mkitem(expr, item, i, parent)) }\n\t\n\t        return !!tmpl(ifExpr, extend(Object.create(parent), item))\n\t      });\n\t    }\n\t\n\t    // loop all the new items\n\t    each(items, function(item, i) {\n\t      // reorder only if the items are objects\n\t      var\n\t        doReorder = mustReorder && typeof item === T_OBJECT && !hasKeys,\n\t        oldPos = oldItems.indexOf(item),\n\t        isNew = oldPos === -1,\n\t        pos = !isNew && doReorder ? oldPos : i,\n\t        // does a tag exist in this position?\n\t        tag = tags[pos],\n\t        mustAppend = i >= oldItems.length,\n\t        mustCreate =  doReorder && isNew || !doReorder && !tag;\n\t\n\t      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n\t\n\t      // new tag\n\t      if (mustCreate) {\n\t        tag = new Tag$1(impl, {\n\t          parent: parent,\n\t          isLoop: isLoop,\n\t          isAnonymous: isAnonymous,\n\t          tagName: tagName,\n\t          root: dom.cloneNode(isAnonymous),\n\t          item: item,\n\t          index: i,\n\t        }, dom.innerHTML);\n\t\n\t        // mount the tag\n\t        tag.mount();\n\t\n\t        if (mustAppend)\n\t          { append.apply(tag, [frag || root, isVirtual]); }\n\t        else\n\t          { insert.apply(tag, [root, tags[i], isVirtual]); }\n\t\n\t        if (!mustAppend) { oldItems.splice(i, 0, item); }\n\t        tags.splice(i, 0, tag);\n\t        if (child) { arrayishAdd(parent.tags, tagName, tag, true); }\n\t      } else if (pos !== i && doReorder) {\n\t        // move\n\t        if (contains(items, oldItems[pos])) {\n\t          move.apply(tag, [root, tags[i], isVirtual]);\n\t          // move the old tag instance\n\t          tags.splice(i, 0, tags.splice(pos, 1)[0]);\n\t          // move the old item\n\t          oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n\t        }\n\t\n\t        // update the position attribute if it exists\n\t        if (expr.pos) { tag[expr.pos] = i; }\n\t\n\t        // if the loop tags are not custom\n\t        // we need to move all their custom tags into the right position\n\t        if (!child && tag.tags) { moveNestedTags.call(tag, i); }\n\t      }\n\t\n\t      // cache the original item to use it in the events bound to this node\n\t      // and its children\n\t      tag.__.item = item;\n\t      tag.__.index = i;\n\t      tag.__.parent = parent;\n\t\n\t      if (!mustCreate) { tag.update(item); }\n\t    });\n\t\n\t    // remove the redundant tags\n\t    unmountRedundant(items, tags);\n\t\n\t    // clone the items array\n\t    oldItems = items.slice();\n\t\n\t    // this condition is weird u\n\t    root.insertBefore(frag, placeholder);\n\t  };\n\t\n\t  expr.unmount = function() {\n\t    each(tags, function(t) { t.unmount(); });\n\t  };\n\t\n\t  return expr\n\t}\n\t\n\t/**\n\t * Walk the tag DOM to detect the expressions to evaluate\n\t * @this Tag\n\t * @param   { HTMLElement } root - root tag where we will start digging the expressions\n\t * @param   { Array } expressions - empty array where the expressions will be added\n\t * @param   { Boolean } mustIncludeRoot - flag to decide whether the root must be parsed as well\n\t * @returns { Object } an object containing the root noode and the dom tree\n\t */\n\tfunction parseExpressions(root, expressions, mustIncludeRoot) {\n\t  var this$1 = this;\n\t\n\t  var tree = {parent: {children: expressions}};\n\t\n\t  walkNodes(root, function (dom, ctx) {\n\t    var type = dom.nodeType, parent = ctx.parent, attr, expr, tagImpl;\n\t    if (!mustIncludeRoot && dom === root) { return {parent: parent} }\n\t\n\t    // text node\n\t    if (type === 3 && dom.parentNode.tagName !== 'STYLE' && tmpl.hasExpr(dom.nodeValue))\n\t      { parent.children.push({dom: dom, expr: dom.nodeValue}); }\n\t\n\t    if (type !== 1) { return ctx } // not an element\n\t\n\t    var isVirtual = dom.tagName === 'VIRTUAL';\n\t\n\t    // loop. each does it's own thing (for now)\n\t    if (attr = getAttr(dom, LOOP_DIRECTIVE)) {\n\t      if(isVirtual) { setAttr(dom, 'loopVirtual', true); } // ignore here, handled in _each\n\t      parent.children.push(_each(dom, this$1, attr));\n\t      return false\n\t    }\n\t\n\t    // if-attrs become the new parent. Any following expressions (either on the current\n\t    // element, or below it) become children of this expression.\n\t    if (attr = getAttr(dom, CONDITIONAL_DIRECTIVE)) {\n\t      parent.children.push(Object.create(IfExpr).init(dom, this$1, attr));\n\t      return false\n\t    }\n\t\n\t    if (expr = getAttr(dom, IS_DIRECTIVE)) {\n\t      if (tmpl.hasExpr(expr)) {\n\t        parent.children.push({isRtag: true, expr: expr, dom: dom, attrs: [].slice.call(dom.attributes)});\n\t        return false\n\t      }\n\t    }\n\t\n\t    // if this is a tag, stop traversing here.\n\t    // we ignore the root, since parseExpressions is called while we're mounting that root\n\t    tagImpl = getTag(dom);\n\t    if(isVirtual) {\n\t      if(getAttr(dom, 'virtualized')) {dom.parentElement.removeChild(dom); } // tag created, remove from dom\n\t      if(!tagImpl && !getAttr(dom, 'virtualized') && !getAttr(dom, 'loopVirtual'))  // ok to create virtual tag\n\t        { tagImpl = { tmpl: dom.outerHTML }; }\n\t    }\n\t\n\t    if (tagImpl && (dom !== root || mustIncludeRoot)) {\n\t      if(isVirtual && !getAttr(dom, IS_DIRECTIVE)) { // handled in update\n\t        // can not remove attribute like directives\n\t        // so flag for removal after creation to prevent maximum stack error\n\t        setAttr(dom, 'virtualized', true);\n\t\n\t        var tag = new Tag$1({ tmpl: dom.outerHTML },\n\t          {root: dom, parent: this$1},\n\t          dom.innerHTML);\n\t        parent.children.push(tag); // no return, anonymous tag, keep parsing\n\t      } else {\n\t        var conf = {root: dom, parent: this$1, hasImpl: true};\n\t        parent.children.push(initChildTag(tagImpl, conf, dom.innerHTML, this$1));\n\t        return false\n\t      }\n\t    }\n\t\n\t    // attribute expressions\n\t    parseAttributes.apply(this$1, [dom, dom.attributes, function(attr, expr) {\n\t      if (!expr) { return }\n\t      parent.children.push(expr);\n\t    }]);\n\t\n\t    // whatever the parent is, all child elements get the same parent.\n\t    // If this element had an if-attr, that's the parent for all child elements\n\t    return {parent: parent}\n\t  }, tree);\n\t}\n\t\n\t/**\n\t * Calls `fn` for every attribute on an element. If that attr has an expression,\n\t * it is also passed to fn.\n\t * @this Tag\n\t * @param   { HTMLElement } dom - dom node to parse\n\t * @param   { Array } attrs - array of attributes\n\t * @param   { Function } fn - callback to exec on any iteration\n\t */\n\tfunction parseAttributes(dom, attrs, fn) {\n\t  var this$1 = this;\n\t\n\t  each(attrs, function (attr) {\n\t    var name = attr.name, bool = isBoolAttr(name), expr;\n\t\n\t    if (contains(REF_DIRECTIVES, name)) {\n\t      expr =  Object.create(RefExpr).init(dom, this$1, name, attr.value);\n\t    } else if (tmpl.hasExpr(attr.value)) {\n\t      expr = {dom: dom, expr: attr.value, attr: name, bool: bool};\n\t    }\n\t\n\t    fn(attr, expr);\n\t  });\n\t}\n\t\n\t/*\n\t  Includes hacks needed for the Internet Explorer version 9 and below\n\t  See: http://kangax.github.io/compat-table/es5/#ie8\n\t       http://codeplanet.io/dropping-ie8/\n\t*/\n\t\n\tvar reHasYield  = /<yield\\b/i;\n\tvar reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig;\n\tvar reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig;\n\tvar reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig;\n\tvar rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' };\n\tvar tblTags = IE_VERSION && IE_VERSION < 10 ? RE_SPECIAL_TAGS : RE_SPECIAL_TAGS_NO_OPTION;\n\tvar GENERIC = 'div';\n\t\n\t\n\t/*\n\t  Creates the root element for table or select child elements:\n\t  tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n\t*/\n\tfunction specialTags(el, tmpl, tagName) {\n\t\n\t  var\n\t    select = tagName[0] === 'o',\n\t    parent = select ? 'select>' : 'table>';\n\t\n\t  // trim() is important here, this ensures we don't have artifacts,\n\t  // so we can check if we have only one element inside the parent\n\t  el.innerHTML = '<' + parent + tmpl.trim() + '</' + parent;\n\t  parent = el.firstChild;\n\t\n\t  // returns the immediate parent if tr/th/td/col is the only element, if not\n\t  // returns the whole tree, as this can include additional elements\n\t  /* istanbul ignore next */\n\t  if (select) {\n\t    parent.selectedIndex = -1;  // for IE9, compatible w/current riot behavior\n\t  } else {\n\t    // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n\t    var tname = rootEls[tagName];\n\t    if (tname && parent.childElementCount === 1) { parent = $(tname, parent); }\n\t  }\n\t  return parent\n\t}\n\t\n\t/*\n\t  Replace the yield tag from any tag template with the innerHTML of the\n\t  original tag in the page\n\t*/\n\tfunction replaceYield(tmpl, html) {\n\t  // do nothing if no yield\n\t  if (!reHasYield.test(tmpl)) { return tmpl }\n\t\n\t  // be careful with #1343 - string on the source having `$1`\n\t  var src = {};\n\t\n\t  html = html && html.replace(reYieldSrc, function (_, ref, text) {\n\t    src[ref] = src[ref] || text;   // preserve first definition\n\t    return ''\n\t  }).trim();\n\t\n\t  return tmpl\n\t    .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n\t      return src[ref] || def || ''\n\t    })\n\t    .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n\t      return html || def || ''\n\t    })\n\t}\n\t\n\t/**\n\t * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n\t * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n\t *\n\t * @param   { String } tmpl  - The template coming from the custom tag definition\n\t * @param   { String } html - HTML content that comes from the DOM element where you\n\t *           will mount the tag, mostly the original tag in the page\n\t * @returns { HTMLElement } DOM element with _tmpl_ merged through `YIELD` with the _html_.\n\t */\n\tfunction mkdom(tmpl, html) {\n\t  var match   = tmpl && tmpl.match(/^\\s*<([-\\w]+)/),\n\t    tagName = match && match[1].toLowerCase(),\n\t    el = mkEl(GENERIC);\n\t\n\t  // replace all the yield tags with the tag inner html\n\t  tmpl = replaceYield(tmpl, html);\n\t\n\t  /* istanbul ignore next */\n\t  if (tblTags.test(tagName))\n\t    { el = specialTags(el, tmpl, tagName); }\n\t  else\n\t    { setInnerHTML(el, tmpl); }\n\t\n\t  return el\n\t}\n\t\n\t/**\n\t * Another way to create a riot tag a bit more es6 friendly\n\t * @param { HTMLElement } el - tag DOM selector or DOM node/s\n\t * @param { Object } opts - tag logic\n\t * @returns { Tag } new riot tag instance\n\t */\n\tfunction Tag$2(el, opts) {\n\t  // get the tag properties from the class constructor\n\t  var ref = this;\n\t  var name = ref.name;\n\t  var tmpl = ref.tmpl;\n\t  var css = ref.css;\n\t  var attrs = ref.attrs;\n\t  var onCreate = ref.onCreate;\n\t  // register a new tag and cache the class prototype\n\t  if (!__TAG_IMPL[name]) {\n\t    tag$1(name, tmpl, css, attrs, onCreate);\n\t    // cache the class constructor\n\t    __TAG_IMPL[name].class = this.constructor;\n\t  }\n\t\n\t  // mount the tag using the class instance\n\t  mountTo(el, name, opts, this);\n\t  // inject the component css\n\t  if (css) { styleManager.inject(); }\n\t\n\t  return this\n\t}\n\t\n\t/**\n\t * Create a new riot tag implementation\n\t * @param   { String }   name - name/id of the new riot tag\n\t * @param   { String }   tmpl - tag template\n\t * @param   { String }   css - custom tag css\n\t * @param   { String }   attrs - root tag attributes\n\t * @param   { Function } fn - user function\n\t * @returns { String } name/id of the tag just created\n\t */\n\tfunction tag$1(name, tmpl, css, attrs, fn) {\n\t  if (isFunction(attrs)) {\n\t    fn = attrs;\n\t\n\t    if (/^[\\w\\-]+\\s?=/.test(css)) {\n\t      attrs = css;\n\t      css = '';\n\t    } else\n\t      { attrs = ''; }\n\t  }\n\t\n\t  if (css) {\n\t    if (isFunction(css))\n\t      { fn = css; }\n\t    else\n\t      { styleManager.add(css); }\n\t  }\n\t\n\t  name = name.toLowerCase();\n\t  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\t\n\t  return name\n\t}\n\t\n\t/**\n\t * Create a new riot tag implementation (for use by the compiler)\n\t * @param   { String }   name - name/id of the new riot tag\n\t * @param   { String }   tmpl - tag template\n\t * @param   { String }   css - custom tag css\n\t * @param   { String }   attrs - root tag attributes\n\t * @param   { Function } fn - user function\n\t * @returns { String } name/id of the tag just created\n\t */\n\tfunction tag2$1(name, tmpl, css, attrs, fn) {\n\t  if (css) { styleManager.add(css, name); }\n\t\n\t  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\t\n\t  return name\n\t}\n\t\n\t/**\n\t * Mount a tag using a specific tag implementation\n\t * @param   { * } selector - tag DOM selector or DOM node/s\n\t * @param   { String } tagName - tag implementation name\n\t * @param   { Object } opts - tag logic\n\t * @returns { Array } new tags instances\n\t */\n\tfunction mount$1(selector, tagName, opts) {\n\t  var tags = [];\n\t\n\t  function pushTagsTo(root) {\n\t    if (root.tagName) {\n\t      var riotTag = getAttr(root, IS_DIRECTIVE);\n\t\n\t      // have tagName? force riot-tag to be the same\n\t      if (tagName && riotTag !== tagName) {\n\t        riotTag = tagName;\n\t        setAttr(root, IS_DIRECTIVE, tagName);\n\t      }\n\t\n\t      var tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);\n\t\n\t      if (tag)\n\t        { tags.push(tag); }\n\t    } else if (root.length)\n\t      { each(root, pushTagsTo); } // assume nodeList\n\t  }\n\t\n\t  // inject styles into DOM\n\t  styleManager.inject();\n\t\n\t  if (isObject(tagName)) {\n\t    opts = tagName;\n\t    tagName = 0;\n\t  }\n\t\n\t  var elem;\n\t  var allTags;\n\t\n\t  // crawl the DOM to find the tag\n\t  if (isString(selector)) {\n\t    selector = selector === '*' ?\n\t      // select all registered tags\n\t      // & tags found with the riot-tag attribute set\n\t      allTags = selectTags() :\n\t      // or just the ones named like the selector\n\t      selector + selectTags(selector.split(/, */));\n\t\n\t    // make sure to pass always a selector\n\t    // to the querySelectorAll function\n\t    elem = selector ? $$(selector) : [];\n\t  }\n\t  else\n\t    // probably you have passed already a tag or a NodeList\n\t    { elem = selector; }\n\t\n\t  // select all the registered and mount them inside their root elements\n\t  if (tagName === '*') {\n\t    // get all custom tags\n\t    tagName = allTags || selectTags();\n\t    // if the root els it's just a single tag\n\t    if (elem.tagName)\n\t      { elem = $$(tagName, elem); }\n\t    else {\n\t      // select all the children for all the different root elements\n\t      var nodeList = [];\n\t\n\t      each(elem, function (_el) { return nodeList.push($$(tagName, _el)); });\n\t\n\t      elem = nodeList;\n\t    }\n\t    // get rid of the tagName\n\t    tagName = 0;\n\t  }\n\t\n\t  pushTagsTo(elem);\n\t\n\t  return tags\n\t}\n\t\n\t// Create a mixin that could be globally shared across all the tags\n\tvar mixins = {};\n\tvar globals = mixins[GLOBAL_MIXIN] = {};\n\tvar mixins_id = 0;\n\t\n\t/**\n\t * Create/Return a mixin by its name\n\t * @param   { String }  name - mixin name (global mixin if object)\n\t * @param   { Object }  mix - mixin logic\n\t * @param   { Boolean } g - is global?\n\t * @returns { Object }  the mixin logic\n\t */\n\tfunction mixin$1(name, mix, g) {\n\t  // Unnamed global\n\t  if (isObject(name)) {\n\t    mixin$1((\"__unnamed_\" + (mixins_id++)), name, true);\n\t    return\n\t  }\n\t\n\t  var store = g ? globals : mixins;\n\t\n\t  // Getter\n\t  if (!mix) {\n\t    if (isUndefined(store[name]))\n\t      { throw new Error('Unregistered mixin: ' + name) }\n\t\n\t    return store[name]\n\t  }\n\t\n\t  // Setter\n\t  store[name] = isFunction(mix) ?\n\t    extend(mix.prototype, store[name] || {}) && mix :\n\t    extend(store[name] || {}, mix);\n\t}\n\t\n\t/**\n\t * Update all the tags instances created\n\t * @returns { Array } all the tags instances\n\t */\n\tfunction update$1() {\n\t  return each(__TAGS_CACHE, function (tag) { return tag.update(); })\n\t}\n\t\n\tfunction unregister$1(name) {\n\t  delete __TAG_IMPL[name];\n\t}\n\t\n\tvar version$1 = 'v3.4.4';\n\t\n\t\n\tvar core = Object.freeze({\n\t\tTag: Tag$2,\n\t\ttag: tag$1,\n\t\ttag2: tag2$1,\n\t\tmount: mount$1,\n\t\tmixin: mixin$1,\n\t\tupdate: update$1,\n\t\tunregister: unregister$1,\n\t\tversion: version$1\n\t});\n\t\n\t// counter to give a unique id to all the Tag instances\n\tvar __uid = 0;\n\t\n\t/**\n\t * We need to update opts for this tag. That requires updating the expressions\n\t * in any attributes on the tag, and then copying the result onto opts.\n\t * @this Tag\n\t * @param   {Boolean} isLoop - is it a loop tag?\n\t * @param   { Tag }  parent - parent tag node\n\t * @param   { Boolean }  isAnonymous - is it a tag without any impl? (a tag not registered)\n\t * @param   { Object }  opts - tag options\n\t * @param   { Array }  instAttrs - tag attributes array\n\t */\n\tfunction updateOpts(isLoop, parent, isAnonymous, opts, instAttrs) {\n\t  // isAnonymous `each` tags treat `dom` and `root` differently. In this case\n\t  // (and only this case) we don't need to do updateOpts, because the regular parse\n\t  // will update those attrs. Plus, isAnonymous tags don't need opts anyway\n\t  if (isLoop && isAnonymous) { return }\n\t\n\t  var ctx = !isAnonymous && isLoop ? this : parent || this;\n\t  each(instAttrs, function (attr) {\n\t    if (attr.expr) { updateAllExpressions.call(ctx, [attr.expr]); }\n\t    // normalize the attribute names\n\t    opts[toCamel(attr.name).replace(ATTRS_PREFIX, '')] = attr.expr ? attr.expr.value : attr.value;\n\t  });\n\t}\n\t\n\t\n\t/**\n\t * Tag class\n\t * @constructor\n\t * @param { Object } impl - it contains the tag template, and logic\n\t * @param { Object } conf - tag options\n\t * @param { String } innerHTML - html that eventually we need to inject in the tag\n\t */\n\tfunction Tag$1(impl, conf, innerHTML) {\n\t  if ( impl === void 0 ) impl = {};\n\t  if ( conf === void 0 ) conf = {};\n\t\n\t  var opts = extend({}, conf.opts),\n\t    parent = conf.parent,\n\t    isLoop = conf.isLoop,\n\t    isAnonymous = !!conf.isAnonymous,\n\t    skipAnonymous = settings$1.skipAnonymousTags && isAnonymous,\n\t    item = cleanUpData(conf.item),\n\t    index = conf.index, // available only for the looped nodes\n\t    instAttrs = [], // All attributes on the Tag when it's first parsed\n\t    implAttrs = [], // expressions on this type of Tag\n\t    expressions = [],\n\t    root = conf.root,\n\t    tagName = conf.tagName || getTagName(root),\n\t    isVirtual = tagName === 'virtual',\n\t    propsInSyncWithParent = [],\n\t    dom;\n\t\n\t  // make this tag observable\n\t  if (!skipAnonymous) { observable$1(this); }\n\t  // only call unmount if we have a valid __TAG_IMPL (has name property)\n\t  if (impl.name && root._tag) { root._tag.unmount(true); }\n\t\n\t  // not yet mounted\n\t  this.isMounted = false;\n\t\n\t  defineProperty(this, '__', {\n\t    isAnonymous: isAnonymous,\n\t    instAttrs: instAttrs,\n\t    innerHTML: innerHTML,\n\t    tagName: tagName,\n\t    index: index,\n\t    isLoop: isLoop,\n\t    // tags having event listeners\n\t    // it would be better to use weak maps here but we can not introduce breaking changes now\n\t    listeners: [],\n\t    // these vars will be needed only for the virtual tags\n\t    virts: [],\n\t    tail: null,\n\t    head: null,\n\t    parent: null,\n\t    item: null\n\t  });\n\t\n\t  // create a unique id to this tag\n\t  // it could be handy to use it also to improve the virtual dom rendering speed\n\t  defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id\n\t  defineProperty(this, 'root', root);\n\t  extend(this, { opts: opts }, item);\n\t  // protect the \"tags\" and \"refs\" property from being overridden\n\t  defineProperty(this, 'parent', parent || null);\n\t  defineProperty(this, 'tags', {});\n\t  defineProperty(this, 'refs', {});\n\t\n\t  dom = isLoop && isAnonymous ? root : mkdom(impl.tmpl, innerHTML, isLoop);\n\t\n\t  /**\n\t   * Update the tag expressions and options\n\t   * @param   { * }  data - data we want to use to extend the tag properties\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'update', function tagUpdate(data) {\n\t    var nextOpts = {},\n\t      canTrigger = this.isMounted && !skipAnonymous;\n\t\n\t    // make sure the data passed will not override\n\t    // the component core methods\n\t    data = cleanUpData(data);\n\t    extend(this, data);\n\t    updateOpts.apply(this, [isLoop, parent, isAnonymous, nextOpts, instAttrs]);\n\t\n\t    if (canTrigger && this.isMounted && isFunction(this.shouldUpdate) && !this.shouldUpdate(data, nextOpts)) {\n\t      return this\n\t    }\n\t\n\t    // inherit properties from the parent, but only for isAnonymous tags\n\t    if (isLoop && isAnonymous) { inheritFrom.apply(this, [this.parent, propsInSyncWithParent]); }\n\t    extend(opts, nextOpts);\n\t    if (canTrigger) { this.trigger('update', data); }\n\t    updateAllExpressions.call(this, expressions);\n\t    if (canTrigger) { this.trigger('updated'); }\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Add a mixin to this tag\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'mixin', function tagMixin() {\n\t    var this$1 = this;\n\t\n\t    each(arguments, function (mix) {\n\t      var instance, obj;\n\t      var props = [];\n\t\n\t      // properties blacklisted and will not be bound to the tag instance\n\t      var propsBlacklist = ['init', '__proto__'];\n\t\n\t      mix = isString(mix) ? mixin$1(mix) : mix;\n\t\n\t      // check if the mixin is a function\n\t      if (isFunction(mix)) {\n\t        // create the new mixin instance\n\t        instance = new mix();\n\t      } else { instance = mix; }\n\t\n\t      var proto = Object.getPrototypeOf(instance);\n\t\n\t      // build multilevel prototype inheritance chain property list\n\t      do { props = props.concat(Object.getOwnPropertyNames(obj || instance)); }\n\t      while (obj = Object.getPrototypeOf(obj || instance))\n\t\n\t      // loop the keys in the function prototype or the all object keys\n\t      each(props, function (key) {\n\t        // bind methods to this\n\t        // allow mixins to override other properties/parent mixins\n\t        if (!contains(propsBlacklist, key)) {\n\t          // check for getters/setters\n\t          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key);\n\t          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set);\n\t\n\t          // apply method only if it does not already exist on the instance\n\t          if (!this$1.hasOwnProperty(key) && hasGetterSetter) {\n\t            Object.defineProperty(this$1, key, descriptor);\n\t          } else {\n\t            this$1[key] = isFunction(instance[key]) ?\n\t              instance[key].bind(this$1) :\n\t              instance[key];\n\t          }\n\t        }\n\t      });\n\t\n\t      // init method will be called automatically\n\t      if (instance.init)\n\t        { instance.init.bind(this$1)(); }\n\t    });\n\t    return this\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Mount the current tag instance\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'mount', function tagMount() {\n\t    var this$1 = this;\n\t\n\t    root._tag = this; // keep a reference to the tag just created\n\t\n\t    // Read all the attrs on this instance. This give us the info we need for updateOpts\n\t    parseAttributes.apply(parent, [root, root.attributes, function (attr, expr) {\n\t      if (!isAnonymous && RefExpr.isPrototypeOf(expr)) { expr.tag = this$1; }\n\t      attr.expr = expr;\n\t      instAttrs.push(attr);\n\t    }]);\n\t\n\t    // update the root adding custom attributes coming from the compiler\n\t    implAttrs = [];\n\t    walkAttrs(impl.attrs, function (k, v) { implAttrs.push({name: k, value: v}); });\n\t    parseAttributes.apply(this, [root, implAttrs, function (attr, expr) {\n\t      if (expr) { expressions.push(expr); }\n\t      else { setAttr(root, attr.name, attr.value); }\n\t    }]);\n\t\n\t    // initialiation\n\t    updateOpts.apply(this, [isLoop, parent, isAnonymous, opts, instAttrs]);\n\t\n\t    // add global mixins\n\t    var globalMixin = mixin$1(GLOBAL_MIXIN);\n\t\n\t    if (globalMixin && !skipAnonymous) {\n\t      for (var i in globalMixin) {\n\t        if (globalMixin.hasOwnProperty(i)) {\n\t          this$1.mixin(globalMixin[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (impl.fn) { impl.fn.call(this, opts); }\n\t\n\t    if (!skipAnonymous) { this.trigger('before-mount'); }\n\t\n\t    // parse layout after init. fn may calculate args for nested custom tags\n\t    parseExpressions.apply(this, [dom, expressions, isAnonymous]);\n\t\n\t    this.update(item);\n\t\n\t    if (!isAnonymous) {\n\t      while (dom.firstChild) { root.appendChild(dom.firstChild); }\n\t    }\n\t\n\t    defineProperty(this, 'root', root);\n\t    defineProperty(this, 'isMounted', true);\n\t\n\t    if (skipAnonymous) { return }\n\t\n\t    // if it's not a child tag we can trigger its mount event\n\t    if (!this.parent) {\n\t      this.trigger('mount');\n\t    }\n\t    // otherwise we need to wait that the parent \"mount\" or \"updated\" event gets triggered\n\t    else {\n\t      var p = getImmediateCustomParentTag(this.parent);\n\t      p.one(!p.isMounted ? 'mount' : 'updated', function () {\n\t        this$1.trigger('mount');\n\t      });\n\t    }\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Unmount the tag instance\n\t   * @param { Boolean } mustKeepRoot - if it's true the root node will not be removed\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'unmount', function tagUnmount(mustKeepRoot) {\n\t    var this$1 = this;\n\t\n\t    var el = this.root,\n\t      p = el.parentNode,\n\t      ptag,\n\t      tagIndex = __TAGS_CACHE.indexOf(this);\n\t\n\t    if (!skipAnonymous) { this.trigger('before-unmount'); }\n\t\n\t    // clear all attributes coming from the mounted tag\n\t    walkAttrs(impl.attrs, function (name) {\n\t      if (startsWith(name, ATTRS_PREFIX))\n\t        { name = name.slice(ATTRS_PREFIX.length); }\n\t      remAttr(root, name);\n\t    });\n\t\n\t    // remove all the event listeners\n\t    this.__.listeners.forEach(function (dom) {\n\t      Object.keys(dom[RIOT_EVENTS_KEY]).forEach(function (eventName) {\n\t        dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][eventName]);\n\t      });\n\t    });\n\t\n\t    // remove this tag instance from the global virtualDom variable\n\t    if (tagIndex !== -1)\n\t      { __TAGS_CACHE.splice(tagIndex, 1); }\n\t\n\t    if (p || isVirtual) {\n\t      if (parent) {\n\t        ptag = getImmediateCustomParentTag(parent);\n\t\n\t        if (isVirtual) {\n\t          Object.keys(this.tags).forEach(function (tagName) {\n\t            arrayishRemove(ptag.tags, tagName, this$1.tags[tagName]);\n\t          });\n\t        } else {\n\t          arrayishRemove(ptag.tags, tagName, this);\n\t          if(parent !== ptag) // remove from _parent too\n\t            { arrayishRemove(parent.tags, tagName, this); }\n\t        }\n\t      } else {\n\t        // remove the tag contents\n\t        setInnerHTML(el, '');\n\t      }\n\t\n\t      if (p && !mustKeepRoot) { p.removeChild(el); }\n\t    }\n\t\n\t    if (this.__.virts) {\n\t      each(this.__.virts, function (v) {\n\t        if (v.parentNode) { v.parentNode.removeChild(v); }\n\t      });\n\t    }\n\t\n\t    // allow expressions to unmount themselves\n\t    unmountAll(expressions);\n\t    each(instAttrs, function (a) { return a.expr && a.expr.unmount && a.expr.unmount(); });\n\t\n\t    // custom internal unmount function to avoid relying on the observable\n\t    if (this.__.onUnmount) { this.__.onUnmount(); }\n\t\n\t    if (!skipAnonymous) {\n\t      this.trigger('unmount');\n\t      this.off('*');\n\t    }\n\t\n\t    defineProperty(this, 'isMounted', false);\n\t\n\t    delete this.root._tag;\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t}\n\t\n\t/**\n\t * Detect the tag implementation by a DOM node\n\t * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n\t * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n\t */\n\tfunction getTag(dom) {\n\t  return dom.tagName && __TAG_IMPL[getAttr(dom, IS_DIRECTIVE) ||\n\t    getAttr(dom, IS_DIRECTIVE) || dom.tagName.toLowerCase()]\n\t}\n\t\n\t/**\n\t * Inherit properties from a target tag instance\n\t * @this Tag\n\t * @param   { Tag } target - tag where we will inherit properties\n\t * @param   { Array } propsInSyncWithParent - array of properties to sync with the target\n\t */\n\tfunction inheritFrom(target, propsInSyncWithParent) {\n\t  var this$1 = this;\n\t\n\t  each(Object.keys(target), function (k) {\n\t    // some properties must be always in sync with the parent tag\n\t    var mustSync = !isReservedName(k) && contains(propsInSyncWithParent, k);\n\t\n\t    if (isUndefined(this$1[k]) || mustSync) {\n\t      // track the property to keep in sync\n\t      // so we can keep it updated\n\t      if (!mustSync) { propsInSyncWithParent.push(k); }\n\t      this$1[k] = target[k];\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Move the position of a custom tag in its parent tag\n\t * @this Tag\n\t * @param   { String } tagName - key where the tag was stored\n\t * @param   { Number } newPos - index where the new tag will be stored\n\t */\n\tfunction moveChildTag(tagName, newPos) {\n\t  var parent = this.parent,\n\t    tags;\n\t  // no parent no move\n\t  if (!parent) { return }\n\t\n\t  tags = parent.tags[tagName];\n\t\n\t  if (isArray(tags))\n\t    { tags.splice(newPos, 0, tags.splice(tags.indexOf(this), 1)[0]); }\n\t  else { arrayishAdd(parent.tags, tagName, this); }\n\t}\n\t\n\t/**\n\t * Create a new child tag including it correctly into its parent\n\t * @param   { Object } child - child tag implementation\n\t * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n\t * @param   { String } innerHTML - inner html of the child node\n\t * @param   { Object } parent - instance of the parent tag including the child custom tag\n\t * @returns { Object } instance of the new child tag just created\n\t */\n\tfunction initChildTag(child, opts, innerHTML, parent) {\n\t  var tag = new Tag$1(child, opts, innerHTML),\n\t    tagName = opts.tagName || getTagName(opts.root, true),\n\t    ptag = getImmediateCustomParentTag(parent);\n\t  // fix for the parent attribute in the looped elements\n\t  defineProperty(tag, 'parent', ptag);\n\t  // store the real parent tag\n\t  // in some cases this could be different from the custom parent tag\n\t  // for example in nested loops\n\t  tag.__.parent = parent;\n\t\n\t  // add this tag to the custom parent tag\n\t  arrayishAdd(ptag.tags, tagName, tag);\n\t\n\t  // and also to the real parent tag\n\t  if (ptag !== parent)\n\t    { arrayishAdd(parent.tags, tagName, tag); }\n\t\n\t  // empty the child node once we got its template\n\t  // to avoid that its children get compiled multiple times\n\t  opts.root.innerHTML = '';\n\t\n\t  return tag\n\t}\n\t\n\t/**\n\t * Loop backward all the parents tree to detect the first custom parent tag\n\t * @param   { Object } tag - a Tag instance\n\t * @returns { Object } the instance of the first custom parent tag found\n\t */\n\tfunction getImmediateCustomParentTag(tag) {\n\t  var ptag = tag;\n\t  while (ptag.__.isAnonymous) {\n\t    if (!ptag.parent) { break }\n\t    ptag = ptag.parent;\n\t  }\n\t  return ptag\n\t}\n\t\n\t/**\n\t * Trigger the unmount method on all the expressions\n\t * @param   { Array } expressions - DOM expressions\n\t */\n\tfunction unmountAll(expressions) {\n\t  each(expressions, function(expr) {\n\t    if (expr instanceof Tag$1) { expr.unmount(true); }\n\t    else if (expr.tagName) { expr.tag.unmount(true); }\n\t    else if (expr.unmount) { expr.unmount(); }\n\t  });\n\t}\n\t\n\t/**\n\t * Get the tag name of any DOM node\n\t * @param   { Object } dom - DOM node we want to parse\n\t * @param   { Boolean } skipDataIs - hack to ignore the data-is attribute when attaching to parent\n\t * @returns { String } name to identify this dom node in riot\n\t */\n\tfunction getTagName(dom, skipDataIs) {\n\t  var child = getTag(dom),\n\t    namedTag = !skipDataIs && getAttr(dom, IS_DIRECTIVE);\n\t  return namedTag && !tmpl.hasExpr(namedTag) ?\n\t                namedTag :\n\t              child ? child.name : dom.tagName.toLowerCase()\n\t}\n\t\n\t/**\n\t * With this function we avoid that the internal Tag methods get overridden\n\t * @param   { Object } data - options we want to use to extend the tag instance\n\t * @returns { Object } clean object without containing the riot internal reserved words\n\t */\n\tfunction cleanUpData(data) {\n\t  if (!(data instanceof Tag$1) && !(data && isFunction(data.trigger)))\n\t    { return data }\n\t\n\t  var o = {};\n\t  for (var key in data) {\n\t    if (!RE_RESERVED_NAMES.test(key)) { o[key] = data[key]; }\n\t  }\n\t  return o\n\t}\n\t\n\t/**\n\t * Set the property of an object for a given key. If something already\n\t * exists there, then it becomes an array containing both the old and new value.\n\t * @param { Object } obj - object on which to set the property\n\t * @param { String } key - property name\n\t * @param { Object } value - the value of the property to be set\n\t * @param { Boolean } ensureArray - ensure that the property remains an array\n\t * @param { Number } index - add the new item in a certain array position\n\t */\n\tfunction arrayishAdd(obj, key, value, ensureArray, index) {\n\t  var dest = obj[key];\n\t  var isArr = isArray(dest);\n\t  var hasIndex = !isUndefined(index);\n\t\n\t  if (dest && dest === value) { return }\n\t\n\t  // if the key was never set, set it once\n\t  if (!dest && ensureArray) { obj[key] = [value]; }\n\t  else if (!dest) { obj[key] = value; }\n\t  // if it was an array and not yet set\n\t  else {\n\t    if (isArr) {\n\t      var oldIndex = dest.indexOf(value);\n\t      // this item never changed its position\n\t      if (oldIndex === index) { return }\n\t      // remove the item from its old position\n\t      if (oldIndex !== -1) { dest.splice(oldIndex, 1); }\n\t      // move or add the item\n\t      if (hasIndex) {\n\t        dest.splice(index, 0, value);\n\t      } else {\n\t        dest.push(value);\n\t      }\n\t    } else { obj[key] = [dest, value]; }\n\t  }\n\t}\n\t\n\t/**\n\t * Removes an item from an object at a given key. If the key points to an array,\n\t * then the item is just removed from the array.\n\t * @param { Object } obj - object on which to remove the property\n\t * @param { String } key - property name\n\t * @param { Object } value - the value of the property to be removed\n\t * @param { Boolean } ensureArray - ensure that the property remains an array\n\t*/\n\tfunction arrayishRemove(obj, key, value, ensureArray) {\n\t  if (isArray(obj[key])) {\n\t    var index = obj[key].indexOf(value);\n\t    if (index !== -1) { obj[key].splice(index, 1); }\n\t    if (!obj[key].length) { delete obj[key]; }\n\t    else if (obj[key].length === 1 && !ensureArray) { obj[key] = obj[key][0]; }\n\t  } else\n\t    { delete obj[key]; } // otherwise just delete the key\n\t}\n\t\n\t/**\n\t * Mount a tag creating new Tag instance\n\t * @param   { Object } root - dom node where the tag will be mounted\n\t * @param   { String } tagName - name of the riot tag we want to mount\n\t * @param   { Object } opts - options to pass to the Tag instance\n\t * @param   { Object } ctx - optional context that will be used to extend an existing class ( used in riot.Tag )\n\t * @returns { Tag } a new Tag instance\n\t */\n\tfunction mountTo(root, tagName, opts, ctx) {\n\t  var impl = __TAG_IMPL[tagName],\n\t    implClass = __TAG_IMPL[tagName].class,\n\t    tag = ctx || (implClass ? Object.create(implClass.prototype) : {}),\n\t    // cache the inner HTML to fix #855\n\t    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;\n\t\n\t  // clear the inner html\n\t  root.innerHTML = '';\n\t\n\t  var conf = extend({ root: root, opts: opts }, { parent: opts ? opts.parent : null });\n\t\n\t  if (impl && root) { Tag$1.apply(tag, [impl, conf, innerHTML]); }\n\t\n\t  if (tag && tag.mount) {\n\t    tag.mount(true);\n\t    // add this tag to the virtualDom variable\n\t    if (!contains(__TAGS_CACHE, tag)) { __TAGS_CACHE.push(tag); }\n\t  }\n\t\n\t  return tag\n\t}\n\t\n\t/**\n\t * makes a tag virtual and replaces a reference in the dom\n\t * @this Tag\n\t * @param { tag } the tag to make virtual\n\t * @param { ref } the dom reference location\n\t */\n\tfunction makeReplaceVirtual(tag, ref) {\n\t  var frag = createFrag();\n\t  makeVirtual.call(tag, frag);\n\t  ref.parentNode.replaceChild(frag, ref);\n\t}\n\t\n\t/**\n\t * Adds the elements for a virtual tag\n\t * @this Tag\n\t * @param { Node } src - the node that will do the inserting or appending\n\t * @param { Tag } target - only if inserting, insert before this tag's first child\n\t */\n\tfunction makeVirtual(src, target) {\n\t  var this$1 = this;\n\t\n\t  var head = createDOMPlaceholder(),\n\t    tail = createDOMPlaceholder(),\n\t    frag = createFrag(),\n\t    sib, el;\n\t\n\t  this.root.insertBefore(head, this.root.firstChild);\n\t  this.root.appendChild(tail);\n\t\n\t  this.__.head = el = head;\n\t  this.__.tail = tail;\n\t\n\t  while (el) {\n\t    sib = el.nextSibling;\n\t    frag.appendChild(el);\n\t    this$1.__.virts.push(el); // hold for unmounting\n\t    el = sib;\n\t  }\n\t\n\t  if (target)\n\t    { src.insertBefore(frag, target.__.head); }\n\t  else\n\t    { src.appendChild(frag); }\n\t}\n\t\n\t/**\n\t * Move virtual tag and all child nodes\n\t * @this Tag\n\t * @param { Node } src  - the node that will do the inserting\n\t * @param { Tag } target - insert before this tag's first child\n\t */\n\tfunction moveVirtual(src, target) {\n\t  var this$1 = this;\n\t\n\t  var el = this.__.head,\n\t    frag = createFrag(),\n\t    sib;\n\t\n\t  while (el) {\n\t    sib = el.nextSibling;\n\t    frag.appendChild(el);\n\t    el = sib;\n\t    if (el === this$1.__.tail) {\n\t      frag.appendChild(el);\n\t      src.insertBefore(frag, target.__.head);\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Get selectors for tags\n\t * @param   { Array } tags - tag names to select\n\t * @returns { String } selector\n\t */\n\tfunction selectTags(tags) {\n\t  // select all tags\n\t  if (!tags) {\n\t    var keys = Object.keys(__TAG_IMPL);\n\t    return keys + selectTags(keys)\n\t  }\n\t\n\t  return tags\n\t    .filter(function (t) { return !/[^-\\w]/.test(t); })\n\t    .reduce(function (list, t) {\n\t      var name = t.trim().toLowerCase();\n\t      return list + \",[\" + IS_DIRECTIVE + \"=\\\"\" + name + \"\\\"]\"\n\t    }, '')\n\t}\n\t\n\t\n\tvar tags = Object.freeze({\n\t\tgetTag: getTag,\n\t\tinheritFrom: inheritFrom,\n\t\tmoveChildTag: moveChildTag,\n\t\tinitChildTag: initChildTag,\n\t\tgetImmediateCustomParentTag: getImmediateCustomParentTag,\n\t\tunmountAll: unmountAll,\n\t\tgetTagName: getTagName,\n\t\tcleanUpData: cleanUpData,\n\t\tarrayishAdd: arrayishAdd,\n\t\tarrayishRemove: arrayishRemove,\n\t\tmountTo: mountTo,\n\t\tmakeReplaceVirtual: makeReplaceVirtual,\n\t\tmakeVirtual: makeVirtual,\n\t\tmoveVirtual: moveVirtual,\n\t\tselectTags: selectTags\n\t});\n\t\n\t/**\n\t * Riot public api\n\t */\n\tvar settings = settings$1;\n\tvar util = {\n\t  tmpl: tmpl,\n\t  brackets: brackets,\n\t  styleManager: styleManager,\n\t  vdom: __TAGS_CACHE,\n\t  styleNode: styleManager.styleNode,\n\t  // export the riot internal utils as well\n\t  dom: dom,\n\t  check: check,\n\t  misc: misc,\n\t  tags: tags\n\t};\n\t\n\t// export the core props/methods\n\tvar Tag$$1 = Tag$2;\n\tvar tag$$1 = tag$1;\n\tvar tag2$$1 = tag2$1;\n\tvar mount$$1 = mount$1;\n\tvar mixin$$1 = mixin$1;\n\tvar update$$1 = update$1;\n\tvar unregister$$1 = unregister$1;\n\tvar version$$1 = version$1;\n\tvar observable = observable$1;\n\t\n\tvar riot$1 = extend({}, core, {\n\t  observable: observable$1,\n\t  settings: settings,\n\t  util: util,\n\t});\n\t\n\texports.settings = settings;\n\texports.util = util;\n\texports.Tag = Tag$$1;\n\texports.tag = tag$$1;\n\texports.tag2 = tag2$$1;\n\texports.mount = mount$$1;\n\texports.mixin = mixin$$1;\n\texports.update = update$$1;\n\texports.unregister = unregister$$1;\n\texports.version = version$$1;\n\texports.observable = observable;\n\texports['default'] = riot$1;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d3Axis = __webpack_require__(26);\n\t\n\tObject.defineProperty(exports, 'axisLeft', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Axis.axisLeft;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'axisBottom', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Axis.axisBottom;\n\t  }\n\t});\n\t\n\tvar _d3Shape = __webpack_require__(35);\n\t\n\tObject.defineProperty(exports, 'line', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Shape.line;\n\t  }\n\t});\n\t\n\tvar _d3Scale = __webpack_require__(33);\n\t\n\tObject.defineProperty(exports, 'scaleLinear', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Scale.scaleLinear;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'scaleTime', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Scale.scaleTime;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'scaleQuantile', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Scale.scaleQuantile;\n\t  }\n\t});\n\t\n\tvar _d3Selection = __webpack_require__(34);\n\t\n\tObject.defineProperty(exports, 'select', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Selection.select;\n\t  }\n\t});\n\t\n\tvar _d3TimeFormat = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'timeParse', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3TimeFormat.timeParse;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'timeFormat', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3TimeFormat.timeFormat;\n\t  }\n\t});\n\t\n\tvar _d3Dsv = __webpack_require__(28);\n\t\n\tObject.defineProperty(exports, 'csvParse', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Dsv.csvParse;\n\t  }\n\t});\n\t\n\tvar _d3Geo = __webpack_require__(30);\n\t\n\tObject.defineProperty(exports, 'geoPath', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Geo.geoPath;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'geoMercator', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Geo.geoMercator;\n\t  }\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar colors = ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'];\n\texports.default = d3.scaleQuantile().domain([5, 10]).range(colors);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (hilighted) {\n\t  return hilighted && hilighted.classed('-hilight', false);\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar formatDate = d3.timeFormat('%Y');\n\tvar parseDate = d3.timeParse('%Y');\n\tvar toDate = function toDate(str) {\n\t  return parseDate(str);\n\t};\n\t\n\tmodule.exports = {\n\t  fromDate: function fromDate(date) {\n\t    return formatDate(date);\n\t  },\n\t  convertDate: function convertDate(str) {\n\t    return formatDate(parseDate(str));\n\t  },\n\t  toDate: toDate,\n\t  years: [\"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"].map(function (y) {\n\t    return toDate(y);\n\t  })\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _topojson = __webpack_require__(40);\n\t\n\tvar topojson = _interopRequireWildcard(_topojson);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar _data = d3.csvParse(__webpack_require__(39));\n\tvar search = function search(str) {\n\t  return _data.filter(function (d) {\n\t    return d.search.indexOf(str) > -1 || d.plz.indexOf(str) === 0;\n\t  });\n\t};\n\tvar data = {};\n\t_data.map(function (d) {\n\t  return data[d.ags] = d;\n\t});\n\tvar geoSrc = __webpack_require__(38);\n\tvar geoData = topojson.feature(geoSrc, geoSrc.objects.nrw);\n\tgeoData.features.map(function (f) {\n\t  var id = f.properties.AGS;\n\t  f.data = data[id];\n\t  f.data.name = f.properties.GEN;\n\t  f.id = id;\n\t});\n\t\n\tmodule.exports = {\n\t  search: search,\n\t  geoData: geoData\n\t};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(10)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Time) { 'use strict';\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\texports.timeFormatDefaultLocale = defaultLocale;\n\texports.timeFormatLocale = formatLocale;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar t0 = new Date;\n\tvar t1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0.setTime(+start), t1.setTime(+end);\n\t      floori(t0), floori(t1);\n\t      return Math.floor(count(t0, t1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(13);\n\t\n\t__webpack_require__(12);\n\t\n\t__webpack_require__(15);\n\t\n\t__webpack_require__(16);\n\t\n\triot.tag2('cor-mj-munis-map', '<map-searchbox ref=\"searchbox\"></map-searchbox> <map-infobox ref=\"infobox\" config=\"{opts.config}\"></map-infobox> <districts-map ref=\"districts-map\"></districts-map> <districts-map-legend ref=\"districts-map-legend\"></districts-map-legend>', '', 'class=\"{getClass(\\'app-wrapper\\')}\"', function (opts) {});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _get_color = __webpack_require__(3);\n\t\n\tvar _get_color2 = _interopRequireDefault(_get_color);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\triot.tag2('districts-map-legend', '<span class=\"{getClass(\\'annotation\\')}\">Anteil der <strong>ausschließlich</strong> geringfügig Beschäftigten am Wohnort</span> <ul class=\"{getClass(\\'list\\')}\"> <li each=\"{ticks}\" class=\"{parent.getClass(\\'list-item\\')}\"> {value}&nbsp;%<span riot-style=\"background-color:{color};\"></span> </li> </ul>', '', 'class=\"{getClass()}\"', function (opts) {\n\t\n\t  this.ticks = _get_color2.default.quantiles().map(function (q) {\n\t    return {\n\t      color: (0, _get_color2.default)(q),\n\t      value: Math.round(q * 10) / 10\n\t    };\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _render_map = __webpack_require__(18);\n\t\n\tvar _render_map2 = _interopRequireDefault(_render_map);\n\t\n\tvar _hilight_path = __webpack_require__(17);\n\t\n\tvar _hilight_path2 = _interopRequireDefault(_hilight_path);\n\t\n\tvar _unhilight_path = __webpack_require__(4);\n\t\n\tvar _unhilight_path2 = _interopRequireDefault(_unhilight_path);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\triot.tag2('districts-map', '<div class=\"{getClass(\\'svg-wrapper\\')}\" id=\"svg-map\"></div>', '', 'class=\"{getClass()}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.on('mount', function () {\n\t    _this.selection = (0, _render_map2.default)({\n\t      element: d3.select('#svg-map'),\n\t      getClass: _this.getClass\n\t    });\n\t  });\n\t\n\t  riot.control.on(riot.EVT.hilight, function (id) {\n\t    return _this.hilighted = (0, _hilight_path2.default)(_this.selection, id, _this.hilighted);\n\t  });\n\t  riot.control.on(riot.EVT.unhilight, function () {\n\t    return (0, _unhilight_path2.default)(_this.hilighted);\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _init_history_chart = __webpack_require__(20);\n\t\n\tvar _init_history_chart2 = _interopRequireDefault(_init_history_chart);\n\t\n\tvar _draw_line = __webpack_require__(19);\n\t\n\tvar _draw_line2 = _interopRequireDefault(_draw_line);\n\t\n\tvar _update_line = __webpack_require__(22);\n\t\n\tvar _update_line2 = _interopRequireDefault(_update_line);\n\t\n\tvar _transform_data = __webpack_require__(21);\n\t\n\tvar _transform_data2 = _interopRequireDefault(_transform_data);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\triot.tag2('history-chart', '', '', 'class=\"{getClass()}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.drawed = false; // identify if we already drawed a line\n\t\n\t  this.on('mount', function () {\n\t    _this.chart = (0, _init_history_chart2.default)({\n\t      element: _this.root,\n\t      getClass: _this.getClass\n\t    }, _this.opts.config);\n\t  });\n\t\n\t  this.on('update', function () {\n\t    var _chart = _this.chart,\n\t        g = _chart.g,\n\t        line = _chart.line;\n\t\n\t    var data = (0, _transform_data2.default)(_this.opts.data, _this.opts.config.keys);\n\t    if (data) {\n\t      if (_this.drawed) {\n\t        (0, _update_line2.default)({ g: g, line: line, data: data });\n\t      } else {\n\t        (0, _draw_line2.default)({ g: g, line: line, data: data });\n\t        _this.drawed = true;\n\t      }\n\t    }\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(14);\n\t\n\triot.tag2('map-infobox', '<button class=\"{getClass(\\'close-btn\\')}\" aria-label=\"Close\" onclick=\"{close}\"></button> <header class=\"{getClass(\\'header\\')}\"> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'state\\')}\">Nordrhein-Westfalen</span> <h3 class=\"{getClass(\\'title\\')}\">{data.name}</h3> </section> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'population\\')}\"><strong>{data.t}</strong>&nbsp;Einwohner</span> <span class=\"{getClass(\\'f-ratio\\')}\">davon <strong>{data.fRatio}&nbsp;%</strong>&nbsp;Frauen</span> </section> <span class=\"-clear-\"></span> </header> <section class=\"{getClass(\\'section\\')}\"> <h4 class=\"{getClass(\\'section__title\\')}\">Anteil der Minijobber</h4> <dl> <dt>{data.pwa}&nbsp;%</dt> <dt class=\"-small\">{data.wa}</dt> <dd class=\"badge badge--e\">ausschließlich</dd> </dl> <dl> <dt>{data.pwn}&nbsp;%</dt> <dt class=\"-small\">{data.wn}</dt> <dd class=\"badge badge--i\">Nebenjob</dd> </dl> <dl> <dt>{data.pwi}&nbsp;%</dt> <dt class=\"-small\">{data.wi}</dt> <dd class=\"badge badge--t\">Gesamt</dd> </dl> <span class=\"-clear-\"></span> </section> <section class=\"{getClass(\\'section\\') + \\' \\' + getClass(\\'section--last\\')}\"> <h4 class=\"{getClass(\\'section__title\\')}\">Entwicklung seit 2003</h4> <history-chart ref=\"history-chart\" config=\"{opts.config.historyChart}\" data=\"{data}\"></history-chart> </section> <span class=\"-clear-\"></span>', '', 'if=\"{data}\" class=\"{getClass()} {-visible: visible}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.visible = false;\n\t  this.data = {};\n\t\n\t  riot.control.on(riot.EVT.updateInfobox, function (data) {\n\t    data.fRatio = Math.round(data.f / data.t * 1000) / 10;\n\t    _this.update({\n\t      data: data,\n\t      visible: true\n\t    });\n\t  });\n\t\n\t  riot.control.on(riot.EVT.hideInfobox, function () {\n\t    _this.close();\n\t  });\n\t\n\t  this.close = function () {\n\t    return _this.update({ visible: false });\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _entry = __webpack_require__(6);\n\t\n\triot.tag2('map-searchbox', '<input type=\"text\" oninput=\"{doSearch}\" class=\"{getClass(\\'input\\')}\" placeholder=\"Suche nach Deiner Stadt oder Postleitzahl...\"> <ul if=\"{results.length}\" class=\"{getClass(\\'result-list\\')}\"> <li each=\"{results}\" class=\"{parent.getClass(\\'result-list__item\\')}\" onclick=\"{handleClick}\"> {name} <span>{plz}</span> </li> </ul>', '', 'class=\"{getClass()}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.results = [];\n\t\n\t  this.doSearch = function (e) {\n\t    riot.control.trigger(riot.EVT.hideInfobox);\n\t    var str = e.target.value.toLowerCase();\n\t    if (str.length > 1) {\n\t      var results = (0, _entry.search)(str);\n\t      if (results.length === 1) {\n\t        _this.clearResults();\n\t        _this._jumpTo(results[0]);\n\t      } else {\n\t        _this.update({ results: results });\n\t      }\n\t    } else {\n\t      _this.clearResults();\n\t    }\n\t  };\n\t\n\t  this.handleClick = function (e) {\n\t    _this.clearResults();\n\t    _this._jumpTo(e.item);\n\t  };\n\t\n\t  this.clearResults = function () {\n\t    _this.update({ results: [] });\n\t  };\n\t\n\t  riot.control.on(riot.EVT.clearResults, function () {\n\t    _this.clearResults();\n\t  });\n\t\n\t  this._jumpTo = function (data) {\n\t    riot.control.trigger(riot.EVT.updateInfobox, data);\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _unhilight_path = __webpack_require__(4);\n\t\n\tvar _unhilight_path2 = _interopRequireDefault(_unhilight_path);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (selection, id, hilighted) {\n\t  hilighted && (0, _unhilight_path2.default)(hilighted);\n\t  var path = selection.select(function (d) {\n\t    return d.id === id && this;\n\t  });\n\t  path.node().parentNode.appendChild(path.node());\n\t  path.classed('-hilight', true);\n\t  return path;\n\t};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _entry = __webpack_require__(6);\n\t\n\tvar _get_color = __webpack_require__(3);\n\t\n\tvar _get_color2 = _interopRequireDefault(_get_color);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (_ref) {\n\t  var element = _ref.element,\n\t      getClass = _ref.getClass;\n\t\n\t  var path = d3.geoPath().projection(d3.geoMercator().fitSize([600, 600], _entry.geoData));\n\t\n\t  return element.append('svg').attr('class', getClass('svg')).attr('preserveAspectRatio', 'xMinYMin meet').attr('viewBox', '0 0 600 600').append('g').selectAll('path').data(_entry.geoData.features).enter().append('path').attr('class', getClass('path')).attr('d', path).attr('fill', function (d) {\n\t    return (0, _get_color2.default)(+d.data.pwa);\n\t  }).on('mouseover', function (d) {\n\t    riot.control.trigger(riot.EVT.hilight, d.id);\n\t    riot.control.trigger(riot.EVT.updateInfobox, d.data);\n\t  });\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (_ref) {\n\t  var g = _ref.g,\n\t      line = _ref.line,\n\t      data = _ref.data;\n\t\n\t  g.selectAll('.line').data(data).enter().append('path').attr('class', function (d) {\n\t    return 'line line--' + d.id;\n\t  }).attr('d', function (d) {\n\t    return line(d.values);\n\t  });\n\t};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _date = __webpack_require__(5);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (_ref, _ref2) {\n\t  var element = _ref.element,\n\t      getClass = _ref.getClass;\n\t  var width = _ref2.width,\n\t      height = _ref2.height,\n\t      margin = _ref2.margin,\n\t      xExtent = _ref2.xExtent,\n\t      yExtent = _ref2.yExtent,\n\t      yTickValues = _ref2.yTickValues;\n\t\n\t  var x = d3.scaleTime().rangeRound([0, width]).domain([(0, _date.toDate)(xExtent[0]), (0, _date.toDate)(xExtent[1])]);\n\t  var y = d3.scaleLinear().rangeRound([height, 0]).domain(yExtent);\n\t\n\t  var line = d3.line().x(function (d) {\n\t    return x(d.year);\n\t  }).y(function (d) {\n\t    return y(d.value);\n\t  }).defined(function (d) {\n\t    return !isNaN(d.value);\n\t  });\n\t  // .curve(d3.curveStep())\n\t\n\t  var top = margin.top,\n\t      right = margin.right,\n\t      bottom = margin.bottom,\n\t      left = margin.left;\n\t\n\t\n\t  var g = d3.select(element).append('svg').attr('preserveAspectRatio', 'xMinYMin meet').attr('viewBox', '0 0 ' + (width + left + right) + ' ' + (height + top + bottom)).attr('class', getClass('svg')).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t  g.append('g').attr('class', 'axis axis--x').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x).ticks(6));\n\t\n\t  g.append('g').attr('class', 'axis axis--y').call(d3.axisLeft(y).tickValues(yTickValues)).append('text').attr('transform', 'rotate(-90)').attr('y', 6).attr('dy', '0.71em').style('text-anchor', 'end').text('Anteil in %');\n\t\n\t  return { g: g, line: line };\n\t};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _date = __webpack_require__(5);\n\t\n\texports.default = function (data, keys) {\n\t  if (Object.keys(data).length > 0 && keys) {\n\t    return keys.map(function (k) {\n\t      return {\n\t        id: k,\n\t        values: data[k].split(',').map(function (d, i) {\n\t          return {\n\t            year: _date.years[i],\n\t            value: +d\n\t          };\n\t        })\n\t      };\n\t    });\n\t  }\n\t};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (_ref) {\n\t    var g = _ref.g,\n\t        line = _ref.line,\n\t        data = _ref.data;\n\t\n\t    g.selectAll('path.line').data(data).attr('class', function (d) {\n\t        return 'line line--' + d.id;\n\t    }).attr('d', function (d) {\n\t        return line(d.values);\n\t    });\n\t};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(36);\n\t\n\t__webpack_require__(25);\n\t\n\tvar _class_name = __webpack_require__(24);\n\t\n\tvar _class_name2 = _interopRequireDefault(_class_name);\n\t\n\t__webpack_require__(11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (false) {\n\t  module.hot.accept();\n\t}\n\t\n\t// import 'babel-polyfill'\n\t\n\t\n\t// load config\n\tvar config = __webpack_require__(37);\n\t\n\t// event bus\n\t\n\t\n\t// setup responsiveness\n\t// import {getWindowWidth, getActiveBreakpointFunc} from './responsive.js'\n\t// const getActiveBreakpoint = getActiveBreakpointFunc(config.global.breakpoints)\n\t// riot.STORE.breakpoint = getActiveBreakpoint(getWindowWidth())\n\t// riot.STORE.getActiveBreakpoint = getActiveBreakpoint\n\t\n\t// mixins\n\t\n\triot.mixin((0, _class_name2.default)(config.global.cssNamespace));\n\t\n\t// mount app\n\t\n\triot.mount('[data-riot-mount=\"cor-mj-munis-map-nrw\"]', 'cor-mj-munis-map', { config: config });\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t// riot mixin for computing class names\n\t//\n\t// it takes a global `cssNamespace` on init that becomes prefix for all classes.\n\t//\n\t// components can have the `ref`-attribute set to append this (say, the name for this component) to the\n\t// global prefix\n\t//\n\t// components then have `this.getClass` that computes the acutal class name for something, e.g:\n\t//    global namespace is 'foo', components ref-attr is 'bar', then\n\t//      `getClass('title')` results in a class named 'foo-bar__title'\n\t//     if ref is undefined, `getClass('title')` becomes 'foo-title'\n\t\n\texports.default = function (cssNamespace) {\n\t  return {\n\t    getClass: function getClass(name) {\n\t      var ref = this.opts.ref;\n\t      var part = ref ? cssNamespace + \"-\" + ref : false;\n\t      return name ? part ? part + \"__\" + name : cssNamespace + \"-\" + name : part;\n\t    }\n\t  };\n\t};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// store\n\t// const S = {\n\t//   supported: false,\n\t//   mapbox: {\n\t//     map: null,\n\t//     containerWidth: null\n\t//   },\n\t//   breakpoint: null,\n\t//   getActiveBreakpoint: null\n\t// }\n\t\n\t// event names\n\tvar E = {\n\t  // mapMouseOver: 'mmo',\n\t  // mapJumpTo: 'mjt',\n\t  // mapClearMarker: 'mcm',\n\t  updateInfobox: 'uib',\n\t  hideInfobox: 'hib',\n\t  clearResults: 'cr'\n\t};\n\t\n\t// event bus\n\tvar C = riot.observable();\n\t\n\t// mouseover event chaining\n\t// C.on(E.mapMouseOver, data => {\n\t//   // C.trigger(E.clearResults)  FIXME\n\t//   C.trigger(E.updateInfobox, data)\n\t//   C.trigger(E.mapClearMarker)\n\t// })\n\t\n\t// trigger actual breakpoint\n\t// C.on(E.windowResize, width => {\n\t//   const bp = S.getActiveBreakpoint(width)\n\t//   if (S.breakpoint !== bp) {\n\t//     S.breakpoint = bp\n\t//     C.trigger(E.breakpointChanged, bp)\n\t//   }\n\t// })\n\t\n\t// unsupported extra data loading\n\t// C.on(E.unsupported, () => {\n\t//   d3.csv('./data/unsupported_data.csv', data => {\n\t//     S.unsupportedData = {}\n\t//     data.map(d => {\n\t//       S.unsupportedData[d.ags] = d\n\t//     })\n\t//     C.trigger(E.unsupportedDataLoaded)\n\t//   })\n\t\n\t//   // forward jumpto event to infobox\n\t//   C.on(E.mapJumpTo, ({data}) => {\n\t//     const _data = S.unsupportedData[data.ags]\n\t//     _data.gen = data.name\n\t//     _data.s = data.state\n\t//     C.trigger(E.updateInfobox, {\n\t//       data: _data,\n\t//       point: {}\n\t//     })\n\t//    })\n\t// })\n\t\n\t// make available\n\t// riot.STORE = S\n\triot.EVT = E;\n\triot.control = C;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-axis/ Version 1.0.7. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map$$1, depth) {\n\t    if (++depth > keys.length) return map$$1;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n\t    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map();\n\t}\n\t\n\tfunction setMap(map$$1, key, value) {\n\t  map$$1.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\texports.nest = nest;\n\texports.set = set;\n\texports.map = map;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-dsv/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent(max) - exponent(step)) + 1;\n\t};\n\t\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-geo/ Version 1.6.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(7)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Array) { 'use strict';\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add(temp, y, this.t);\n\t    add(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon = 1e-6;\n\tvar epsilon2 = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar quarterPi = pi / 4;\n\tvar tau = pi * 2;\n\t\n\tvar degrees = 180 / pi;\n\tvar radians = pi / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin(x / 2)) * x;\n\t}\n\t\n\tfunction noop() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos(phi),\n\t      sinPhi = sin(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos(adLambda),\n\t      v = k * sdLambda * sin(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n\t  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon) phi1 = 90;\n\t    else if (deltaSum < -epsilon) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range$$1, x) {\n\t  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos(deltaPhi),\n\t      sinDeltaPhi = sin(deltaPhi),\n\t      cosDeltaGamma = cos(deltaGamma),\n\t      sinDeltaGamma = sin(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos(radius),\n\t      sinRadius = sin(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant([0, 0]),\n\t      radius = constant(90),\n\t      precision = constant(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees, x[1] *= degrees;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link(subject);\n\t  link(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = d3Array.merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin(lambda), -cos(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin(phi0),\n\t        cosPhi0 = cos(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin(phi1),\n\t          cosPhi1 = cos(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop,\n\t  point: noop,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin(phi),\n\t      cosPhi = cos(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos(delta),\n\t      sinDelta = sin(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length(object);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n\t        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n\t      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos(y0),\n\t      sy0 = sin(y0),\n\t      cy1 = cos(y1),\n\t      sy1 = sin(y1),\n\t      kx0 = cy0 * cos(x0),\n\t      ky0 = cy0 * sin(x0),\n\t      kx1 = cy1 * cos(x1),\n\t      ky1 = cy1 * sin(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin(t *= d) / k,\n\t        A = sin(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees, y0 * degrees];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = d3Array.merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi, -halfPi]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi : -pi,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi) < epsilon) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon\n\t      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n\t          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi;\n\t    stream.point(-pi, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi, phi);\n\t    stream.point(pi, 0);\n\t    stream.point(pi, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi, -phi);\n\t    stream.point(-pi, 0);\n\t    stream.point(-pi, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon) {\n\t    var lambda = from[0] < to[0] ? pi : -pi;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos(lambda) * cos(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon;\n\t            point1[1] += epsilon;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi) < epsilon,\n\t        meridian = polar || delta < epsilon;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees, point[1] * degrees];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin(y)) / n;\n\t    return [r * sin(x *= n), r0 - r * cos(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos(x),\n\t        cy = cos(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin(x),\n\t      k * sin(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin(c),\n\t        cc = cos(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n\t    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin(n * x), f - r * cos(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin(nx), g - gy * cos(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos(y), k = cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$1 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos(y) * sin(x), sin(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos(y), k = 1 + cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate;\n\texports.geoLength = length;\n\texports.geoPath = index;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$1;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(8)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Color) { 'use strict';\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tvar rgb$1 = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = d3Color.rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar number = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = value(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar string = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: number(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar value = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant(b)\n\t      : (t === \"number\" ? number\n\t      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n\t      : b instanceof d3Color.color ? rgb$1\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : number)(a, b);\n\t};\n\t\n\tvar round = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar zoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\texports.interpolate = value;\n\texports.interpolateArray = array;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = number;\n\texports.interpolateObject = object;\n\texports.interpolateRound = round;\n\texports.interpolateString = string;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = zoom;\n\texports.interpolateRgb = rgb$1;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau + tau;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\texports.path = path;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(7), __webpack_require__(27), __webpack_require__(31), __webpack_require__(29), __webpack_require__(10), __webpack_require__(9), __webpack_require__(8)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\t\n\tvar array = Array.prototype;\n\t\n\tvar map$1 = array.map;\n\tvar slice = array.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range$$1) {\n\t  var index = d3Collection.map(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range$$1[(i - 1) % range$$1.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = d3Collection.map();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range$$1)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = d3Array.bisect(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = d3Interpolate.interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n\t      return d3Format.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return d3Format.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = d3Array.tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear() {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(d3Array.ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$1(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format$$1(\".%L\"),\n\t      formatSecond = format$$1(\":%S\"),\n\t      formatMinute = format$$1(\"%I:%M\"),\n\t      formatHour = format$$1(\"%I %p\"),\n\t      formatDay = format$$1(\"%a %d\"),\n\t      formatWeek = format$$1(\"%b %d\"),\n\t      formatMonth = format$$1(\"%B\"),\n\t      formatYear = format$$1(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second,  1,      durationSecond],\n\t    [second,  5,  5 * durationSecond],\n\t    [second, 15, 15 * durationSecond],\n\t    [second, 30, 30 * durationSecond],\n\t    [minute,  1,      durationMinute],\n\t    [minute,  5,  5 * durationMinute],\n\t    [minute, 15, 15 * durationMinute],\n\t    [minute, 30, 30 * durationMinute],\n\t    [  hour,  1,      durationHour  ],\n\t    [  hour,  3,  3 * durationHour  ],\n\t    [  hour,  6,  6 * durationHour  ],\n\t    [  hour, 12, 12 * durationHour  ],\n\t    [   day,  1,      durationDay   ],\n\t    [   day,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month,  1,      durationMonth ],\n\t    [ month,  3,  3 * durationMonth ],\n\t    [  year,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second(date) < date ? formatMillisecond\n\t        : minute(date) < date ? formatSecond\n\t        : hour(date) < date ? formatMinute\n\t        : day(date) < date ? formatHour\n\t        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = d3Array.tickStep(start, stop, interval);\n\t        interval = millisecond;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format$$1(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = d3Color.cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range$$1) {\n\t  var n = range$$1.length;\n\t  return function(t) {\n\t    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\texports.scaleBand = band;\n\texports.scalePoint = point;\n\texports.scaleIdentity = identity;\n\texports.scaleLinear = linear;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$1;\n\texports.scaleQuantize = quantize;\n\texports.scaleThreshold = threshold;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$1;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\texports.creator = creator;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-shape/ Version 1.1.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(32)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Path) { 'use strict';\n\t\n\tvar constant = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs = Math.abs;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar sin = Math.sin;\n\tvar sqrt = Math.sqrt;\n\t\n\tvar epsilon = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar tau = 2 * pi;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi,\n\t        a1 = endAngle.apply(this, arguments) - halfPi,\n\t        da = abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = d3Path.path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau - epsilon) {\n\t      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon) {\n\t        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n\t          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon) {\n\t        var p0 = asin(rp / r0 * sin(ap)),\n\t            p1 = asin(rp / r1 * sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos(a01),\n\t          y01 = r1 * sin(a01),\n\t          x10 = r0 * cos(a10),\n\t          y10 = r0 * sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon) {\n\t        var x11 = r1 * cos(a11),\n\t            y11 = r1 * sin(a11),\n\t            x00 = r0 * cos(a00),\n\t            y00 = r0 * sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi) {\n\t          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n\t              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n\t    return [cos(a) * r, sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant(0),\n\t      y1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity,\n\t      sortValues = descending,\n\t      sort = null,\n\t      startAngle = constant(0),\n\t      endAngle = constant(tau),\n\t      padAngle = constant(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tvar radialPoint = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x,\n\t      y$$1 = y,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = d3Path.path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = radialPoint(x0, y0),\n\t      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n\t      p2 = radialPoint(x1, y0),\n\t      p3 = radialPoint(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau);\n\t  }\n\t};\n\t\n\tvar cross = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\n\tvar kx = Math.sin(tau / 10) * kr;\n\tvar ky = -Math.cos(tau / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant(circle),\n\t      size = constant(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = d3Path.path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending = function(series) {\n\t  var sums = series.map(sum);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$1 = function(series) {\n\t  return ascending(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\texports.arc = arc;\n\texports.area = area;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending;\n\texports.stackOrderDescending = descending$1;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"global\": {\n\t\t\t\"cssNamespace\": \"mjmmnrw\",\n\t\t\t\"breakpoints\": {\n\t\t\t\t\"small\": 600,\n\t\t\t\t\"medium\": 768,\n\t\t\t\t\"large\": 1280\n\t\t\t}\n\t\t},\n\t\t\"historyChart\": {\n\t\t\t\"keys\": [\n\t\t\t\t\"pwi_h\",\n\t\t\t\t\"pwa_h\",\n\t\t\t\t\"pwn_h\"\n\t\t\t],\n\t\t\t\"width\": 300,\n\t\t\t\"height\": 80,\n\t\t\t\"margin\": {\n\t\t\t\t\"top\": 10,\n\t\t\t\t\"right\": 20,\n\t\t\t\t\"bottom\": 20,\n\t\t\t\t\"left\": 20\n\t\t\t},\n\t\t\t\"xExtent\": [\n\t\t\t\t\"2003\",\n\t\t\t\t\"2016\"\n\t\t\t],\n\t\t\t\"yExtent\": [\n\t\t\t\t0,\n\t\t\t\t15\n\t\t\t],\n\t\t\t\"yTickValues\": [\n\t\t\t\t0,\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t15\n\t\t\t]\n\t\t}\n\t};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"type\": \"Topology\",\n\t\t\"arcs\": [\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3529,\n\t\t\t\t\t1843\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3597,\n\t\t\t\t\t1778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3703,\n\t\t\t\t\t1712\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3766,\n\t\t\t\t\t1502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3530,\n\t\t\t\t\t1446\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t147\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3406,\n\t\t\t\t\t1593\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3292,\n\t\t\t\t\t1624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3260,\n\t\t\t\t\t1672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t150\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3291,\n\t\t\t\t\t1822\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3381,\n\t\t\t\t\t1867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t105,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2161,\n\t\t\t\t\t2900\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-161\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2245,\n\t\t\t\t\t2459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2207,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2078,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-137,\n\t\t\t\t\t161\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2010,\n\t\t\t\t\t2694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2051,\n\t\t\t\t\t2791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2132,\n\t\t\t\t\t2838\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2110,\n\t\t\t\t\t2910\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2111,\n\t\t\t\t\t2933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5431,\n\t\t\t\t\t3450\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5484,\n\t\t\t\t\t3365\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5475,\n\t\t\t\t\t3307\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5447,\n\t\t\t\t\t3285\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5467,\n\t\t\t\t\t3225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5542,\n\t\t\t\t\t3251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5583,\n\t\t\t\t\t3222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t-135\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5695,\n\t\t\t\t\t3087\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5658,\n\t\t\t\t\t3041\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5635,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5591,\n\t\t\t\t\t3128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-277,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-222,\n\t\t\t\t\t-160\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5092,\n\t\t\t\t\t2899\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5049,\n\t\t\t\t\t2897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5033,\n\t\t\t\t\t2962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5053,\n\t\t\t\t\t3028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t224\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5127,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5104,\n\t\t\t\t\t3282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t190,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5320,\n\t\t\t\t\t3391\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4152,\n\t\t\t\t\t3384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4323,\n\t\t\t\t\t3295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4248,\n\t\t\t\t\t3228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-149\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4147,\n\t\t\t\t\t3079\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4159,\n\t\t\t\t\t3071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4111,\n\t\t\t\t\t3096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-158,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3953,\n\t\t\t\t\t3072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3903,\n\t\t\t\t\t3094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3918,\n\t\t\t\t\t3192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3945,\n\t\t\t\t\t3235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3979,\n\t\t\t\t\t3231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3984,\n\t\t\t\t\t3290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4008,\n\t\t\t\t\t3339\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4036,\n\t\t\t\t\t3390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4053,\n\t\t\t\t\t3385\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4133,\n\t\t\t\t\t3415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6602,\n\t\t\t\t\t5166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6618,\n\t\t\t\t\t5206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t148,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6766,\n\t\t\t\t\t5109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6814,\n\t\t\t\t\t5122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-163,\n\t\t\t\t\t-135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6627,\n\t\t\t\t\t4596\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6498,\n\t\t\t\t\t4552\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6440,\n\t\t\t\t\t4552\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6282,\n\t\t\t\t\t4949\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6303,\n\t\t\t\t\t5012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t227,\n\t\t\t\t\t109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6532,\n\t\t\t\t\t5147\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6526,\n\t\t\t\t\t5177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4697,\n\t\t\t\t\t7537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4843,\n\t\t\t\t\t7512\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4947,\n\t\t\t\t\t7427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-149,\n\t\t\t\t\t-239\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4742,\n\t\t\t\t\t7165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-160,\n\t\t\t\t\t151\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4582,\n\t\t\t\t\t7316\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4537,\n\t\t\t\t\t7369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4502,\n\t\t\t\t\t7391\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4450,\n\t\t\t\t\t7415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t159\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4590,\n\t\t\t\t\t7574\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3721,\n\t\t\t\t\t5031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t129,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t150,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4131,\n\t\t\t\t\t5017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4147,\n\t\t\t\t\t4990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4214,\n\t\t\t\t\t4891\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4235,\n\t\t\t\t\t4866\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4231,\n\t\t\t\t\t4851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4243,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4146,\n\t\t\t\t\t4719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4174,\n\t\t\t\t\t4598\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4118,\n\t\t\t\t\t4542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4086,\n\t\t\t\t\t4581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4014,\n\t\t\t\t\t4526\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4006,\n\t\t\t\t\t4485\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3941,\n\t\t\t\t\t4409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3927,\n\t\t\t\t\t4387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3933,\n\t\t\t\t\t4351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3829,\n\t\t\t\t\t4344\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3837,\n\t\t\t\t\t4409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3707,\n\t\t\t\t\t4482\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3561,\n\t\t\t\t\t4617\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3534,\n\t\t\t\t\t4615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3465,\n\t\t\t\t\t4772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3516,\n\t\t\t\t\t4766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3585,\n\t\t\t\t\t4796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3603,\n\t\t\t\t\t5048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3662,\n\t\t\t\t\t5034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3671,\n\t\t\t\t\t5058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3715,\n\t\t\t\t\t5083\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3733,\n\t\t\t\t\t5063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1961,\n\t\t\t\t\t809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t162,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2107,\n\t\t\t\t\t611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2055,\n\t\t\t\t\t499\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2002,\n\t\t\t\t\t475\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1976,\n\t\t\t\t\t529\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-264,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1711,\n\t\t\t\t\t424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1695,\n\t\t\t\t\t422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1629,\n\t\t\t\t\t490\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1618,\n\t\t\t\t\t489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1774,\n\t\t\t\t\t708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1782,\n\t\t\t\t\t755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1872,\n\t\t\t\t\t754\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1904,\n\t\t\t\t\t767\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6816,\n\t\t\t\t\t5883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6903,\n\t\t\t\t\t5895\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t146,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7227,\n\t\t\t\t\t5716\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7273,\n\t\t\t\t\t5739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7291,\n\t\t\t\t\t5626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7266,\n\t\t\t\t\t5447\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7238,\n\t\t\t\t\t5419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7212,\n\t\t\t\t\t5403\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7104,\n\t\t\t\t\t5451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7076,\n\t\t\t\t\t5471\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7054,\n\t\t\t\t\t5458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7026,\n\t\t\t\t\t5406\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-181,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6758,\n\t\t\t\t\t5359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6696,\n\t\t\t\t\t5307\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6684,\n\t\t\t\t\t5339\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6706,\n\t\t\t\t\t5349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6700,\n\t\t\t\t\t5423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6713,\n\t\t\t\t\t5527\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6668,\n\t\t\t\t\t5597\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6762,\n\t\t\t\t\t5853\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6755,\n\t\t\t\t\t5861\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1541,\n\t\t\t\t\t1266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1651,\n\t\t\t\t\t1293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1686,\n\t\t\t\t\t1216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1644,\n\t\t\t\t\t1160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1620,\n\t\t\t\t\t1049\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1599,\n\t\t\t\t\t1080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-167,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1312,\n\t\t\t\t\t1133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1274,\n\t\t\t\t\t1077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1248,\n\t\t\t\t\t1125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1251,\n\t\t\t\t\t1157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1278,\n\t\t\t\t\t1170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1303,\n\t\t\t\t\t1250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1384,\n\t\t\t\t\t1304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t157,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2693,\n\t\t\t\t\t5064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2731,\n\t\t\t\t\t4814\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2703,\n\t\t\t\t\t4818\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2659,\n\t\t\t\t\t4867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2609,\n\t\t\t\t\t4876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2542,\n\t\t\t\t\t4934\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2658,\n\t\t\t\t\t5108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t5179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2700,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1650,\n\t\t\t\t\t2175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1770,\n\t\t\t\t\t2015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1776,\n\t\t\t\t\t1959\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1605,\n\t\t\t\t\t1887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1560,\n\t\t\t\t\t1937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1518,\n\t\t\t\t\t2071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1537,\n\t\t\t\t\t2086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1552,\n\t\t\t\t\t2165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1587,\n\t\t\t\t\t2233\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1324,\n\t\t\t\t\t5968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1311,\n\t\t\t\t\t5956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1315,\n\t\t\t\t\t5914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1339,\n\t\t\t\t\t5903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1477,\n\t\t\t\t\t5937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-148\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1474,\n\t\t\t\t\t5571\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1405,\n\t\t\t\t\t5496\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1305,\n\t\t\t\t\t5537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1313,\n\t\t\t\t\t5651\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1024,\n\t\t\t\t\t5913\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t210,\n\t\t\t\t\t113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1234,\n\t\t\t\t\t6026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3788,\n\t\t\t\t\t5304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3777,\n\t\t\t\t\t5275\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3822,\n\t\t\t\t\t5241\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3812,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3759,\n\t\t\t\t\t5115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3662,\n\t\t\t\t\t5034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3603,\n\t\t\t\t\t5048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3530,\n\t\t\t\t\t5084\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3536,\n\t\t\t\t\t5105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3480,\n\t\t\t\t\t5151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3488,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3498,\n\t\t\t\t\t5176\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3564,\n\t\t\t\t\t5181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3714,\n\t\t\t\t\t5336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2368,\n\t\t\t\t\t1717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t1705\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2454,\n\t\t\t\t\t1644\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2474,\n\t\t\t\t\t1632\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2503,\n\t\t\t\t\t1595\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2453,\n\t\t\t\t\t1546\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-130,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t1469\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2251,\n\t\t\t\t\t1463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2235,\n\t\t\t\t\t1424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2127,\n\t\t\t\t\t1419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2232,\n\t\t\t\t\t1647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2221,\n\t\t\t\t\t1655\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2258,\n\t\t\t\t\t1715\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2333,\n\t\t\t\t\t1741\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2368,\n\t\t\t\t\t1815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2394,\n\t\t\t\t\t1782\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2559,\n\t\t\t\t\t1587\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2555,\n\t\t\t\t\t1567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2606,\n\t\t\t\t\t1515\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2653,\n\t\t\t\t\t1447\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2699,\n\t\t\t\t\t1350\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t1329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-158,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2462,\n\t\t\t\t\t1198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2398,\n\t\t\t\t\t1244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2355,\n\t\t\t\t\t1424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2503,\n\t\t\t\t\t1595\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6683,\n\t\t\t\t\t7708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6769,\n\t\t\t\t\t7634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6764,\n\t\t\t\t\t7615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6719,\n\t\t\t\t\t7541\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6726,\n\t\t\t\t\t7493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6751,\n\t\t\t\t\t7494\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6671,\n\t\t\t\t\t7398\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6655,\n\t\t\t\t\t7426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6605,\n\t\t\t\t\t7426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6594,\n\t\t\t\t\t7650\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6611,\n\t\t\t\t\t7733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4537,\n\t\t\t\t\t7369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4742,\n\t\t\t\t\t7165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4754,\n\t\t\t\t\t7104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4757,\n\t\t\t\t\t7079\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4676,\n\t\t\t\t\t7076\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4430,\n\t\t\t\t\t7155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4419,\n\t\t\t\t\t7141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4396,\n\t\t\t\t\t7408\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2167,\n\t\t\t\t\t1532\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2136,\n\t\t\t\t\t1433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2061,\n\t\t\t\t\t1460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-190\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2022,\n\t\t\t\t\t1270\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1946,\n\t\t\t\t\t1240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-132,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1705,\n\t\t\t\t\t1228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1686,\n\t\t\t\t\t1216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1661,\n\t\t\t\t\t1281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1733,\n\t\t\t\t\t1428\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1722,\n\t\t\t\t\t1455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t141\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1983,\n\t\t\t\t\t1657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1968,\n\t\t\t\t\t1674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t128,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4757,\n\t\t\t\t\t7079\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4793,\n\t\t\t\t\t7048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4886,\n\t\t\t\t\t6828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4822,\n\t\t\t\t\t6705\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4797,\n\t\t\t\t\t6711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-146,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4525,\n\t\t\t\t\t6952\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4453,\n\t\t\t\t\t6950\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4520,\n\t\t\t\t\t7089\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2939,\n\t\t\t\t\t7429\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2772,\n\t\t\t\t\t7245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2745,\n\t\t\t\t\t7260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-151,\n\t\t\t\t\t163\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2594,\n\t\t\t\t\t7423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-167\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3847,\n\t\t\t\t\t5630\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3872,\n\t\t\t\t\t5606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3858,\n\t\t\t\t\t5581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3989,\n\t\t\t\t\t5506\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3993,\n\t\t\t\t\t5459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4018,\n\t\t\t\t\t5451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4022,\n\t\t\t\t\t5431\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4010,\n\t\t\t\t\t5342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4014,\n\t\t\t\t\t5271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3907,\n\t\t\t\t\t5267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3856,\n\t\t\t\t\t5293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3855,\n\t\t\t\t\t5278\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3788,\n\t\t\t\t\t5304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3694,\n\t\t\t\t\t5345\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3767,\n\t\t\t\t\t5387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3786,\n\t\t\t\t\t5431\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3722,\n\t\t\t\t\t5527\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3730,\n\t\t\t\t\t5553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3789,\n\t\t\t\t\t5589\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3164,\n\t\t\t\t\t5980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t5823\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3331,\n\t\t\t\t\t5784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3482,\n\t\t\t\t\t5636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3393,\n\t\t\t\t\t5571\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3309,\n\t\t\t\t\t5515\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3300,\n\t\t\t\t\t5500\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3259,\n\t\t\t\t\t5500\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3188,\n\t\t\t\t\t5481\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3189,\n\t\t\t\t\t5495\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t5554\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3036,\n\t\t\t\t\t5549\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2927,\n\t\t\t\t\t5514\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2821,\n\t\t\t\t\t5488\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2895,\n\t\t\t\t\t5543\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2898,\n\t\t\t\t\t5588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2921,\n\t\t\t\t\t5617\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t159\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2910,\n\t\t\t\t\t5776\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2891,\n\t\t\t\t\t5811\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3029,\n\t\t\t\t\t5907\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t135,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6702,\n\t\t\t\t\t4603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t156,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6933,\n\t\t\t\t\t4544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6946,\n\t\t\t\t\t4494\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t-247\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6811,\n\t\t\t\t\t4247\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t-211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t-173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6475,\n\t\t\t\t\t3951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t125\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6272,\n\t\t\t\t\t4287\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6266,\n\t\t\t\t\t4312\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6249,\n\t\t\t\t\t4363\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t196,\n\t\t\t\t\t121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6498,\n\t\t\t\t\t4552\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1340,\n\t\t\t\t\t2092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1352,\n\t\t\t\t\t2047\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1443,\n\t\t\t\t\t2062\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1462,\n\t\t\t\t\t2046\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1560,\n\t\t\t\t\t1937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1568,\n\t\t\t\t\t1877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1550,\n\t\t\t\t\t1809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1542,\n\t\t\t\t\t1765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1402,\n\t\t\t\t\t1625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1374,\n\t\t\t\t\t1663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1281,\n\t\t\t\t\t1755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1261,\n\t\t\t\t\t1794\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1226,\n\t\t\t\t\t1976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1242,\n\t\t\t\t\t2020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1297,\n\t\t\t\t\t2067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3331,\n\t\t\t\t\t3928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3319,\n\t\t\t\t\t3828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3349,\n\t\t\t\t\t3815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3376,\n\t\t\t\t\t3764\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3396,\n\t\t\t\t\t3673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3423,\n\t\t\t\t\t3660\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3449,\n\t\t\t\t\t3614\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3431,\n\t\t\t\t\t3513\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3405,\n\t\t\t\t\t3513\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3347,\n\t\t\t\t\t3509\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3328,\n\t\t\t\t\t3551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3298,\n\t\t\t\t\t3573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3270,\n\t\t\t\t\t3575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3198,\n\t\t\t\t\t3521\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3175,\n\t\t\t\t\t3538\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3106,\n\t\t\t\t\t3517\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3076,\n\t\t\t\t\t3370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3000,\n\t\t\t\t\t3379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2973,\n\t\t\t\t\t3431\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2930,\n\t\t\t\t\t3554\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2820,\n\t\t\t\t\t3503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2832,\n\t\t\t\t\t3603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2762,\n\t\t\t\t\t3653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2743,\n\t\t\t\t\t3653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2783,\n\t\t\t\t\t3665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2846,\n\t\t\t\t\t3698\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2905,\n\t\t\t\t\t3795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2940,\n\t\t\t\t\t3852\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2986,\n\t\t\t\t\t3895\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3110,\n\t\t\t\t\t3928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3116,\n\t\t\t\t\t3868\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3143,\n\t\t\t\t\t3874\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t105,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3248,\n\t\t\t\t\t3912\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7385,\n\t\t\t\t\t7760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7443,\n\t\t\t\t\t7750\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7465,\n\t\t\t\t\t7768\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t145,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-143,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7497,\n\t\t\t\t\t7482\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7509,\n\t\t\t\t\t7443\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7464,\n\t\t\t\t\t7444\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7433,\n\t\t\t\t\t7429\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7355,\n\t\t\t\t\t7441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7345,\n\t\t\t\t\t7454\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7307,\n\t\t\t\t\t7466\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7278,\n\t\t\t\t\t7477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7227,\n\t\t\t\t\t7489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7201,\n\t\t\t\t\t7478\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7198,\n\t\t\t\t\t7695\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7221,\n\t\t\t\t\t7702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7257,\n\t\t\t\t\t7692\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7354,\n\t\t\t\t\t7782\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1057,\n\t\t\t\t\t4608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1075,\n\t\t\t\t\t4527\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1065,\n\t\t\t\t\t4441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-125,\n\t\t\t\t\t-208\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t940,\n\t\t\t\t\t4233\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t913,\n\t\t\t\t\t4127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t836,\n\t\t\t\t\t4138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t864,\n\t\t\t\t\t4615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4930,\n\t\t\t\t\t8172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4867,\n\t\t\t\t\t7813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4838,\n\t\t\t\t\t7721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4740,\n\t\t\t\t\t7755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4699,\n\t\t\t\t\t7804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4655,\n\t\t\t\t\t7817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4678,\n\t\t\t\t\t8019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4666,\n\t\t\t\t\t8086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4623,\n\t\t\t\t\t8119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4636,\n\t\t\t\t\t8166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4669,\n\t\t\t\t\t8193\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1305,\n\t\t\t\t\t5537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-116\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1451,\n\t\t\t\t\t5360\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1500,\n\t\t\t\t\t5235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1544,\n\t\t\t\t\t5215\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1478,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1486,\n\t\t\t\t\t5146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1457,\n\t\t\t\t\t5139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1438,\n\t\t\t\t\t5200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1380,\n\t\t\t\t\t5208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1366,\n\t\t\t\t\t5199\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1306,\n\t\t\t\t\t5231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1219,\n\t\t\t\t\t5304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1193,\n\t\t\t\t\t5381\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1211,\n\t\t\t\t\t5417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1154,\n\t\t\t\t\t5499\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t132,\n\t\t\t\t\t155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1265,\n\t\t\t\t\t5693\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2055,\n\t\t\t\t\t499\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-115,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1748,\n\t\t\t\t\t250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t174\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1976,\n\t\t\t\t\t529\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2664,\n\t\t\t\t\t3250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2697,\n\t\t\t\t\t3248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-124\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2681,\n\t\t\t\t\t2969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2611,\n\t\t\t\t\t2958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2560,\n\t\t\t\t\t2958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2516,\n\t\t\t\t\t3092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2489,\n\t\t\t\t\t3146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2527,\n\t\t\t\t\t3217\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2588,\n\t\t\t\t\t3259\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2618,\n\t\t\t\t\t3246\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3479,\n\t\t\t\t\t1373\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3533,\n\t\t\t\t\t1342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-186,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3189,\n\t\t\t\t\t1304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t155,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3403,\n\t\t\t\t\t1354\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7104,\n\t\t\t\t\t5451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7185,\n\t\t\t\t\t5383\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-163\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7157,\n\t\t\t\t\t5220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7088,\n\t\t\t\t\t5200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-149,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6939,\n\t\t\t\t\t5140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6888,\n\t\t\t\t\t5113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6876,\n\t\t\t\t\t5126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6840,\n\t\t\t\t\t5209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6824,\n\t\t\t\t\t5204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6787,\n\t\t\t\t\t5272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6765,\n\t\t\t\t\t5292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7026,\n\t\t\t\t\t5406\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7076,\n\t\t\t\t\t5471\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1262,\n\t\t\t\t\t702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1286,\n\t\t\t\t\t669\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1323,\n\t\t\t\t\t663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1341,\n\t\t\t\t\t679\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1415,\n\t\t\t\t\t663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t678\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1502,\n\t\t\t\t\t662\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1486,\n\t\t\t\t\t620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1540,\n\t\t\t\t\t570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1512,\n\t\t\t\t\t512\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1602,\n\t\t\t\t\t487\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1597,\n\t\t\t\t\t478\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1695,\n\t\t\t\t\t422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1632,\n\t\t\t\t\t409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-181,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1346,\n\t\t\t\t\t311\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1055,\n\t\t\t\t\t639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1089,\n\t\t\t\t\t672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1134,\n\t\t\t\t\t681\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1230,\n\t\t\t\t\t708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6760,\n\t\t\t\t\t3201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-134,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6594,\n\t\t\t\t\t3335\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6580,\n\t\t\t\t\t3396\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6547,\n\t\t\t\t\t3447\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6535,\n\t\t\t\t\t3546\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6560,\n\t\t\t\t\t3663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t226,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-306\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-130,\n\t\t\t\t\t-141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5113,\n\t\t\t\t\t5384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5135,\n\t\t\t\t\t5367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-142\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5218,\n\t\t\t\t\t5225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5307,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5328,\n\t\t\t\t\t5182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5314,\n\t\t\t\t\t5181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5185,\n\t\t\t\t\t4961\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5099,\n\t\t\t\t\t4941\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4923,\n\t\t\t\t\t5011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4912,\n\t\t\t\t\t5068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4905,\n\t\t\t\t\t5140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5884,\n\t\t\t\t\t2691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5942,\n\t\t\t\t\t2649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5913,\n\t\t\t\t\t2572\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5898,\n\t\t\t\t\t2584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5892,\n\t\t\t\t\t2609\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5779,\n\t\t\t\t\t2545\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5719,\n\t\t\t\t\t2432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5668,\n\t\t\t\t\t2374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5639,\n\t\t\t\t\t2424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5629,\n\t\t\t\t\t2448\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5635,\n\t\t\t\t\t2558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5640,\n\t\t\t\t\t2630\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5590,\n\t\t\t\t\t2701\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5573,\n\t\t\t\t\t2748\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5637,\n\t\t\t\t\t2755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5654,\n\t\t\t\t\t2781\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5700,\n\t\t\t\t\t2875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2600,\n\t\t\t\t\t2002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2660,\n\t\t\t\t\t2025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2658,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2779,\n\t\t\t\t\t1863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-173,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2606,\n\t\t\t\t\t1876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2549,\n\t\t\t\t\t1903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2561,\n\t\t\t\t\t1908\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2541,\n\t\t\t\t\t2011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2578,\n\t\t\t\t\t2044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4231,\n\t\t\t\t\t6879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4359,\n\t\t\t\t\t6832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4445,\n\t\t\t\t\t6827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4554,\n\t\t\t\t\t6440\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4559,\n\t\t\t\t\t6375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4536,\n\t\t\t\t\t6286\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4472,\n\t\t\t\t\t6289\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4440,\n\t\t\t\t\t6315\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4365,\n\t\t\t\t\t6304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-132\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4395,\n\t\t\t\t\t6172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4347,\n\t\t\t\t\t6202\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4244,\n\t\t\t\t\t6164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4268,\n\t\t\t\t\t6151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4228,\n\t\t\t\t\t6109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4196,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4155,\n\t\t\t\t\t6067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t172\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3937,\n\t\t\t\t\t6439\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3865,\n\t\t\t\t\t6503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3935,\n\t\t\t\t\t6577\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3942,\n\t\t\t\t\t6696\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3959,\n\t\t\t\t\t6699\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3946,\n\t\t\t\t\t6747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3990,\n\t\t\t\t\t6829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4083,\n\t\t\t\t\t6896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4194,\n\t\t\t\t\t6917\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2928,\n\t\t\t\t\t2772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2955,\n\t\t\t\t\t2756\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2996,\n\t\t\t\t\t2709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t190,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3186,\n\t\t\t\t\t2740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3268,\n\t\t\t\t\t2633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3310,\n\t\t\t\t\t2618\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3181,\n\t\t\t\t\t2461\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3142,\n\t\t\t\t\t2394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3043,\n\t\t\t\t\t2343\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3036,\n\t\t\t\t\t2375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2986,\n\t\t\t\t\t2430\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2915,\n\t\t\t\t\t2497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2856,\n\t\t\t\t\t2721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3115,\n\t\t\t\t\t3113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t3084\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2987,\n\t\t\t\t\t2920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2951,\n\t\t\t\t\t2931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2872,\n\t\t\t\t\t2940\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2886,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t157,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t3145\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5780,\n\t\t\t\t\t4748\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t150,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5930,\n\t\t\t\t\t4738\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5979,\n\t\t\t\t\t4642\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-233\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6108,\n\t\t\t\t\t4360\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-136,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5972,\n\t\t\t\t\t4269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-133,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5673,\n\t\t\t\t\t4305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5605,\n\t\t\t\t\t4366\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t314\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5674,\n\t\t\t\t\t4739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5691,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3850,\n\t\t\t\t\t1915\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3850,\n\t\t\t\t\t1901\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-150\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3953,\n\t\t\t\t\t1631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3996,\n\t\t\t\t\t1620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-132,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3703,\n\t\t\t\t\t1712\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3653,\n\t\t\t\t\t1829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t171,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3824,\n\t\t\t\t\t1933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4111,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4249,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4263,\n\t\t\t\t\t1989\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-151,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-118,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3996,\n\t\t\t\t\t1620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3850,\n\t\t\t\t\t1901\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3850,\n\t\t\t\t\t1915\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3849,\n\t\t\t\t\t1931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t133,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3982,\n\t\t\t\t\t1995\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3982,\n\t\t\t\t\t1987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4062,\n\t\t\t\t\t2026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1505,\n\t\t\t\t\t3614\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1542,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1554,\n\t\t\t\t\t3576\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1554,\n\t\t\t\t\t3328\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1565,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1483,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1433,\n\t\t\t\t\t3206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1420,\n\t\t\t\t\t3192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1429,\n\t\t\t\t\t3117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1369,\n\t\t\t\t\t3118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1307,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1164,\n\t\t\t\t\t3052\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1149,\n\t\t\t\t\t3108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1135,\n\t\t\t\t\t3149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t193\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1004,\n\t\t\t\t\t3342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t997,\n\t\t\t\t\t3374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1091,\n\t\t\t\t\t3498\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1091,\n\t\t\t\t\t3571\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t203,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1399,\n\t\t\t\t\t3666\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5400,\n\t\t\t\t\t1836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5411,\n\t\t\t\t\t1820\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t-219\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-144,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5144,\n\t\t\t\t\t1640\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5301,\n\t\t\t\t\t1773\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5308,\n\t\t\t\t\t1849\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5330,\n\t\t\t\t\t1846\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4999,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-194\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4954,\n\t\t\t\t\t2125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4940,\n\t\t\t\t\t2041\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t175\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4760,\n\t\t\t\t\t2367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t145,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4905,\n\t\t\t\t\t2363\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4970,\n\t\t\t\t\t2387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8213,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8191,\n\t\t\t\t\t6153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8098,\n\t\t\t\t\t6157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8110,\n\t\t\t\t\t6246\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8034,\n\t\t\t\t\t6274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8015,\n\t\t\t\t\t6359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8031,\n\t\t\t\t\t6432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1205,\n\t\t\t\t\t3894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1229,\n\t\t\t\t\t3898\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1321,\n\t\t\t\t\t3788\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1287,\n\t\t\t\t\t3771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1091,\n\t\t\t\t\t3571\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1091,\n\t\t\t\t\t3539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t982,\n\t\t\t\t\t3707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t930,\n\t\t\t\t\t3748\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t941,\n\t\t\t\t\t3795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1052,\n\t\t\t\t\t3828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1064,\n\t\t\t\t\t3923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t127,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1191,\n\t\t\t\t\t3968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t870,\n\t\t\t\t\t6003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t863,\n\t\t\t\t\t5918\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t884,\n\t\t\t\t\t5875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t573,\n\t\t\t\t\t5657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t548,\n\t\t\t\t\t5668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-122,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t406,\n\t\t\t\t\t5669\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t436,\n\t\t\t\t\t5746\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t210\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t388,\n\t\t\t\t\t6045\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t132,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1091,\n\t\t\t\t\t3539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t997,\n\t\t\t\t\t3374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t939,\n\t\t\t\t\t3393\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t832,\n\t\t\t\t\t3519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t826,\n\t\t\t\t\t3603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t801,\n\t\t\t\t\t3626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t868,\n\t\t\t\t\t3660\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t907,\n\t\t\t\t\t3711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t930,\n\t\t\t\t\t3748\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5205,\n\t\t\t\t\t2733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5204,\n\t\t\t\t\t2714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5245,\n\t\t\t\t\t2564\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5290,\n\t\t\t\t\t2520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5221,\n\t\t\t\t\t2483\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5221,\n\t\t\t\t\t2464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5175,\n\t\t\t\t\t2412\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5040,\n\t\t\t\t\t2445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4996,\n\t\t\t\t\t2433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4961,\n\t\t\t\t\t2408\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4926,\n\t\t\t\t\t2418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4957,\n\t\t\t\t\t2630\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t153\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5046,\n\t\t\t\t\t2783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5092,\n\t\t\t\t\t2789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5173,\n\t\t\t\t\t2838\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t563,\n\t\t\t\t\t2284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t645,\n\t\t\t\t\t2230\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t606,\n\t\t\t\t\t2219\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t620,\n\t\t\t\t\t2172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t603,\n\t\t\t\t\t2091\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t578,\n\t\t\t\t\t2040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t546,\n\t\t\t\t\t2058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t509,\n\t\t\t\t\t2052\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t535,\n\t\t\t\t\t2003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t557,\n\t\t\t\t\t1970\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t557,\n\t\t\t\t\t1933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t548,\n\t\t\t\t\t1913\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t132\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t435,\n\t\t\t\t\t2027\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t219,\n\t\t\t\t\t2860\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t229,\n\t\t\t\t\t2812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t191,\n\t\t\t\t\t2606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-145,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t577,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t700,\n\t\t\t\t\t2890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t811,\n\t\t\t\t\t2754\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t789,\n\t\t\t\t\t2718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t607,\n\t\t\t\t\t2711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t546,\n\t\t\t\t\t2659\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t509,\n\t\t\t\t\t2668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t490,\n\t\t\t\t\t2656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t433,\n\t\t\t\t\t2766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t426,\n\t\t\t\t\t2887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t442,\n\t\t\t\t\t3063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t135,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t927,\n\t\t\t\t\t2425\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t933,\n\t\t\t\t\t2364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t955,\n\t\t\t\t\t2355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t965,\n\t\t\t\t\t2328\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t988,\n\t\t\t\t\t2349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1031,\n\t\t\t\t\t2323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1074,\n\t\t\t\t\t2222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1070,\n\t\t\t\t\t2135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1016,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t954,\n\t\t\t\t\t2157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t879,\n\t\t\t\t\t2154\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t849,\n\t\t\t\t\t2116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t822,\n\t\t\t\t\t2207\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t777,\n\t\t\t\t\t2273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t846,\n\t\t\t\t\t2347\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3415,\n\t\t\t\t\t2986\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3486,\n\t\t\t\t\t2882\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3492,\n\t\t\t\t\t2856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3441,\n\t\t\t\t\t2773\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3409,\n\t\t\t\t\t2796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3392,\n\t\t\t\t\t2729\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3370,\n\t\t\t\t\t2719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3186,\n\t\t\t\t\t2740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t141\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3177,\n\t\t\t\t\t2931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3217,\n\t\t\t\t\t2956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3921,\n\t\t\t\t\t3563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4018,\n\t\t\t\t\t3599\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4052,\n\t\t\t\t\t3473\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4083,\n\t\t\t\t\t3476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4109,\n\t\t\t\t\t3443\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4036,\n\t\t\t\t\t3390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3984,\n\t\t\t\t\t3290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3945,\n\t\t\t\t\t3235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3895,\n\t\t\t\t\t3170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3869,\n\t\t\t\t\t3234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3853,\n\t\t\t\t\t3243\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3751,\n\t\t\t\t\t3396\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3720,\n\t\t\t\t\t3427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3744,\n\t\t\t\t\t3492\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3781,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3864,\n\t\t\t\t\t3605\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3899,\n\t\t\t\t\t3633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4680,\n\t\t\t\t\t3694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4922,\n\t\t\t\t\t3674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4955,\n\t\t\t\t\t3656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4986,\n\t\t\t\t\t3608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4890,\n\t\t\t\t\t3368\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4841,\n\t\t\t\t\t3324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4794,\n\t\t\t\t\t3355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4682,\n\t\t\t\t\t3292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4655,\n\t\t\t\t\t3281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4569,\n\t\t\t\t\t3555\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4554,\n\t\t\t\t\t3610\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4625,\n\t\t\t\t\t3672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6484,\n\t\t\t\t\t8682\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t-127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6456,\n\t\t\t\t\t8300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6445,\n\t\t\t\t\t8256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6366,\n\t\t\t\t\t8157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6380,\n\t\t\t\t\t8131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6328,\n\t\t\t\t\t8128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6297,\n\t\t\t\t\t8147\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6208,\n\t\t\t\t\t8177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6196,\n\t\t\t\t\t8153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-321,\n\t\t\t\t\t181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t150,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t170,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1677,\n\t\t\t\t\t3280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1708,\n\t\t\t\t\t3277\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1694,\n\t\t\t\t\t3190\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1640,\n\t\t\t\t\t3093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1547,\n\t\t\t\t\t3012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1585,\n\t\t\t\t\t2972\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1546,\n\t\t\t\t\t2902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1480,\n\t\t\t\t\t2857\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1453,\n\t\t\t\t\t2804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1445,\n\t\t\t\t\t2893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1403,\n\t\t\t\t\t2914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1386,\n\t\t\t\t\t2907\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1381,\n\t\t\t\t\t3030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1429,\n\t\t\t\t\t3117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1433,\n\t\t\t\t\t3206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1565,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t3232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1810,\n\t\t\t\t\t3284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2006,\n\t\t\t\t\t3201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2019,\n\t\t\t\t\t3144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1984,\n\t\t\t\t\t3129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1942,\n\t\t\t\t\t3115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1899,\n\t\t\t\t\t3069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1832,\n\t\t\t\t\t2774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1691,\n\t\t\t\t\t2739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t166\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1584,\n\t\t\t\t\t2905\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1547,\n\t\t\t\t\t3012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1640,\n\t\t\t\t\t3093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1708,\n\t\t\t\t\t3277\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1726,\n\t\t\t\t\t3276\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1765,\n\t\t\t\t\t3267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t794,\n\t\t\t\t\t1865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t127,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1005,\n\t\t\t\t\t1792\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1052,\n\t\t\t\t\t1747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1152,\n\t\t\t\t\t1708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1176,\n\t\t\t\t\t1694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-189\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1049,\n\t\t\t\t\t1419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t946,\n\t\t\t\t\t1396\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t870,\n\t\t\t\t\t1479\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t817,\n\t\t\t\t\t1451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t754,\n\t\t\t\t\t1845\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t753,\n\t\t\t\t\t1876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2446,\n\t\t\t\t\t4163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2524,\n\t\t\t\t\t4105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2531,\n\t\t\t\t\t4067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2509,\n\t\t\t\t\t4043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-186\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2589,\n\t\t\t\t\t3857\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2663,\n\t\t\t\t\t3876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2660,\n\t\t\t\t\t3855\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2563,\n\t\t\t\t\t3809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t3766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2397,\n\t\t\t\t\t3761\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2348,\n\t\t\t\t\t3779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t282\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2237,\n\t\t\t\t\t4073\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2268,\n\t\t\t\t\t4089\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2299,\n\t\t\t\t\t4082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2345,\n\t\t\t\t\t4119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3380,\n\t\t\t\t\t6300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t132,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t161,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3733,\n\t\t\t\t\t6202\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3738,\n\t\t\t\t\t6157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-138\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3752,\n\t\t\t\t\t6019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3720,\n\t\t\t\t\t5955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-192,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3387,\n\t\t\t\t\t5833\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3164,\n\t\t\t\t\t5980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-156,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3008,\n\t\t\t\t\t6019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2948,\n\t\t\t\t\t6077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t201,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3338,\n\t\t\t\t\t6401\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3366,\n\t\t\t\t\t6333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2729,\n\t\t\t\t\t4095\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2731,\n\t\t\t\t\t4008\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2691,\n\t\t\t\t\t3972\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t3917\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2663,\n\t\t\t\t\t3876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2509,\n\t\t\t\t\t4043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2584,\n\t\t\t\t\t4081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2677,\n\t\t\t\t\t4112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8213,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8263,\n\t\t\t\t\t6093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8163,\n\t\t\t\t\t5836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8159,\n\t\t\t\t\t5821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-122,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7934,\n\t\t\t\t\t5821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7922,\n\t\t\t\t\t5965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7940,\n\t\t\t\t\t5967\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7985,\n\t\t\t\t\t6013\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7973,\n\t\t\t\t\t6040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8021,\n\t\t\t\t\t6122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8060,\n\t\t\t\t\t6146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4727,\n\t\t\t\t\t4595\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4757,\n\t\t\t\t\t4537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4833,\n\t\t\t\t\t4424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-166\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4872,\n\t\t\t\t\t4258\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4823,\n\t\t\t\t\t4244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4809,\n\t\t\t\t\t4267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4728,\n\t\t\t\t\t4265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4621,\n\t\t\t\t\t4319\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4588,\n\t\t\t\t\t4336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4528,\n\t\t\t\t\t4349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4484,\n\t\t\t\t\t4326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4394,\n\t\t\t\t\t4533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4464,\n\t\t\t\t\t4568\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t143,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4607,\n\t\t\t\t\t4566\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4652,\n\t\t\t\t\t4578\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4685,\n\t\t\t\t\t4570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2930,\n\t\t\t\t\t3554\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3000,\n\t\t\t\t\t3379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3034,\n\t\t\t\t\t3297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3031,\n\t\t\t\t\t3269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t3293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3093,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3126,\n\t\t\t\t\t3180\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3054,\n\t\t\t\t\t3146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2992,\n\t\t\t\t\t3199\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-190,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2716,\n\t\t\t\t\t3162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2664,\n\t\t\t\t\t3250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2588,\n\t\t\t\t\t3259\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2624,\n\t\t\t\t\t3338\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2664,\n\t\t\t\t\t3333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2777,\n\t\t\t\t\t3426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t4563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1504,\n\t\t\t\t\t4518\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1552,\n\t\t\t\t\t4442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1522,\n\t\t\t\t\t4357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1457,\n\t\t\t\t\t4358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1431,\n\t\t\t\t\t4392\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1368,\n\t\t\t\t\t4467\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1316,\n\t\t\t\t\t4555\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1365,\n\t\t\t\t\t4585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1440,\n\t\t\t\t\t4611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3070,\n\t\t\t\t\t7367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3033,\n\t\t\t\t\t7322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3130,\n\t\t\t\t\t7216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2965,\n\t\t\t\t\t7105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2965,\n\t\t\t\t\t7060\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2922,\n\t\t\t\t\t7062\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2868,\n\t\t\t\t\t7020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2746,\n\t\t\t\t\t7177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2787,\n\t\t\t\t\t7232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2939,\n\t\t\t\t\t7429\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3636,\n\t\t\t\t\t7762\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3771,\n\t\t\t\t\t7478\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3767,\n\t\t\t\t\t7434\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3750,\n\t\t\t\t\t7421\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3705,\n\t\t\t\t\t7481\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3597,\n\t\t\t\t\t7484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3509,\n\t\t\t\t\t7740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3588,\n\t\t\t\t\t7881\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6832,\n\t\t\t\t\t6438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6952,\n\t\t\t\t\t6381\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7022,\n\t\t\t\t\t6386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7090,\n\t\t\t\t\t6251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7103,\n\t\t\t\t\t6212\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6920,\n\t\t\t\t\t6134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t127\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6854,\n\t\t\t\t\t6261\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6768,\n\t\t\t\t\t6358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2530,\n\t\t\t\t\t3644\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2569,\n\t\t\t\t\t3594\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2647,\n\t\t\t\t\t3566\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2659,\n\t\t\t\t\t3553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t3530\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2678,\n\t\t\t\t\t3487\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2570,\n\t\t\t\t\t3458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2545,\n\t\t\t\t\t3449\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2483,\n\t\t\t\t\t3456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2491,\n\t\t\t\t\t3517\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t133,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4841,\n\t\t\t\t\t3324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4906,\n\t\t\t\t\t3336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5095,\n\t\t\t\t\t3297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5053,\n\t\t\t\t\t3028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5019,\n\t\t\t\t\t3016\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4934,\n\t\t\t\t\t3015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4786,\n\t\t\t\t\t2987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4696,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4681,\n\t\t\t\t\t2968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4695,\n\t\t\t\t\t2995\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t169\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4667,\n\t\t\t\t\t3249\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4794,\n\t\t\t\t\t3355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t925,\n\t\t\t\t\t3138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t952,\n\t\t\t\t\t3118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t158,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1110,\n\t\t\t\t\t3079\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1307,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1381,\n\t\t\t\t\t3030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1403,\n\t\t\t\t\t2914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1445,\n\t\t\t\t\t2893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1390,\n\t\t\t\t\t2854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1167,\n\t\t\t\t\t2733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1072,\n\t\t\t\t\t2718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1018,\n\t\t\t\t\t2731\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1004,\n\t\t\t\t\t2777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1020,\n\t\t\t\t\t2780\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1008,\n\t\t\t\t\t2823\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1011,\n\t\t\t\t\t2863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t804,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t780,\n\t\t\t\t\t3070\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t791,\n\t\t\t\t\t3078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t777,\n\t\t\t\t\t3096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t806,\n\t\t\t\t\t3112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t900,\n\t\t\t\t\t3131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t551,\n\t\t\t\t\t2462\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t588,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t669,\n\t\t\t\t\t2386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t657,\n\t\t\t\t\t2339\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t665,\n\t\t\t\t\t2319\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t563,\n\t\t\t\t\t2284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-171,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t331,\n\t\t\t\t\t2456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3189,\n\t\t\t\t\t5495\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3166,\n\t\t\t\t\t5460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-171\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3183,\n\t\t\t\t\t5289\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3164,\n\t\t\t\t\t5292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3125,\n\t\t\t\t\t5289\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3059,\n\t\t\t\t\t5243\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2997,\n\t\t\t\t\t5189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-128,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2869,\n\t\t\t\t\t5146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2785,\n\t\t\t\t\t5209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2795,\n\t\t\t\t\t5210\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2794,\n\t\t\t\t\t5257\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2843,\n\t\t\t\t\t5444\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3036,\n\t\t\t\t\t5549\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4258,\n\t\t\t\t\t4763\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4308,\n\t\t\t\t\t4648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4319,\n\t\t\t\t\t4653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4329,\n\t\t\t\t\t4550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4283,\n\t\t\t\t\t4524\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4249,\n\t\t\t\t\t4521\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4227,\n\t\t\t\t\t4486\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4236,\n\t\t\t\t\t4536\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4165,\n\t\t\t\t\t4586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4146,\n\t\t\t\t\t4719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1154,\n\t\t\t\t\t5499\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1150,\n\t\t\t\t\t5476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1033,\n\t\t\t\t\t5472\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t903,\n\t\t\t\t\t5551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t940,\n\t\t\t\t\t5583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t205\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t927,\n\t\t\t\t\t5788\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t130\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t863,\n\t\t\t\t\t5918\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t870,\n\t\t\t\t\t6003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2394,\n\t\t\t\t\t6415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2408,\n\t\t\t\t\t6425\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2444,\n\t\t\t\t\t6368\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2488,\n\t\t\t\t\t6330\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2470,\n\t\t\t\t\t6207\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2457,\n\t\t\t\t\t6157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2497,\n\t\t\t\t\t6097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2519,\n\t\t\t\t\t5837\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2406,\n\t\t\t\t\t5786\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2316,\n\t\t\t\t\t5889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2222,\n\t\t\t\t\t5903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2156,\n\t\t\t\t\t5875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2124,\n\t\t\t\t\t5859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t130\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2087,\n\t\t\t\t\t6316\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2113,\n\t\t\t\t\t6344\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2167,\n\t\t\t\t\t6325\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t154,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2321,\n\t\t\t\t\t6379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5426,\n\t\t\t\t\t2174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5526,\n\t\t\t\t\t2085\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5605,\n\t\t\t\t\t2044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5597,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5400,\n\t\t\t\t\t1836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5308,\n\t\t\t\t\t1849\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5255,\n\t\t\t\t\t1851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5225,\n\t\t\t\t\t1888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5243,\n\t\t\t\t\t1927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5318,\n\t\t\t\t\t2111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5340,\n\t\t\t\t\t2126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5372,\n\t\t\t\t\t2144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5658,\n\t\t\t\t\t3041\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5652,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5712,\n\t\t\t\t\t2934\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5700,\n\t\t\t\t\t2875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5637,\n\t\t\t\t\t2755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5497,\n\t\t\t\t\t2721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5387,\n\t\t\t\t\t2744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5314,\n\t\t\t\t\t2760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5218,\n\t\t\t\t\t2687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5205,\n\t\t\t\t\t2733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5173,\n\t\t\t\t\t2838\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5092,\n\t\t\t\t\t2789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5046,\n\t\t\t\t\t2783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5002,\n\t\t\t\t\t2779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5030,\n\t\t\t\t\t2912\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5591,\n\t\t\t\t\t3128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2992,\n\t\t\t\t\t3199\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3054,\n\t\t\t\t\t3146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3083,\n\t\t\t\t\t3157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2886,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2684,\n\t\t\t\t\t3036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3534,\n\t\t\t\t\t4615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3532,\n\t\t\t\t\t4504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-133,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3399,\n\t\t\t\t\t4498\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3383,\n\t\t\t\t\t4442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3316,\n\t\t\t\t\t4333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-173,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3143,\n\t\t\t\t\t4359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3080,\n\t\t\t\t\t4336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3003,\n\t\t\t\t\t4418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2999,\n\t\t\t\t\t4501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2981,\n\t\t\t\t\t4568\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2958,\n\t\t\t\t\t4607\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3038,\n\t\t\t\t\t4644\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3073,\n\t\t\t\t\t4695\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3115,\n\t\t\t\t\t4699\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3171,\n\t\t\t\t\t4720\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3207,\n\t\t\t\t\t4770\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3256,\n\t\t\t\t\t4752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3313,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3326,\n\t\t\t\t\t4794\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t139,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4218,\n\t\t\t\t\t2349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4238,\n\t\t\t\t\t2316\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4289,\n\t\t\t\t\t2278\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4313,\n\t\t\t\t\t2290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4343,\n\t\t\t\t\t2256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-223\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4268,\n\t\t\t\t\t2033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4111,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3982,\n\t\t\t\t\t1987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3983,\n\t\t\t\t\t2030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3943,\n\t\t\t\t\t2078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4046,\n\t\t\t\t\t2098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4179,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4225,\n\t\t\t\t\t2364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4488,\n\t\t\t\t\t2628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4513,\n\t\t\t\t\t2577\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4589,\n\t\t\t\t\t2586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4602,\n\t\t\t\t\t2424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t2327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4415,\n\t\t\t\t\t2296\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4347,\n\t\t\t\t\t2303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4289,\n\t\t\t\t\t2278\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4238,\n\t\t\t\t\t2316\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4225,\n\t\t\t\t\t2364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4194,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4154,\n\t\t\t\t\t2620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4138,\n\t\t\t\t\t2652\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4184,\n\t\t\t\t\t2666\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4256,\n\t\t\t\t\t2679\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4258,\n\t\t\t\t\t2667\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4365,\n\t\t\t\t\t2700\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4422,\n\t\t\t\t\t2693\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4111,\n\t\t\t\t\t3096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4159,\n\t\t\t\t\t3071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4170,\n\t\t\t\t\t3054\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4179,\n\t\t\t\t\t2989\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4173,\n\t\t\t\t\t2978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-152,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3833,\n\t\t\t\t\t2875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3811,\n\t\t\t\t\t2891\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3803,\n\t\t\t\t\t2951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3859,\n\t\t\t\t\t3023\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3875,\n\t\t\t\t\t3072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3887,\n\t\t\t\t\t3069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1998,\n\t\t\t\t\t2001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-191\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1931,\n\t\t\t\t\t1756\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1936,\n\t\t\t\t\t1740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-176,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1696,\n\t\t\t\t\t1802\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1659,\n\t\t\t\t\t1781\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1675,\n\t\t\t\t\t1759\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1595,\n\t\t\t\t\t1721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1593,\n\t\t\t\t\t1777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1568,\n\t\t\t\t\t1877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1776,\n\t\t\t\t\t1959\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t1976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1927,\n\t\t\t\t\t1986\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2549,\n\t\t\t\t\t1903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2547,\n\t\t\t\t\t1881\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2426,\n\t\t\t\t\t1844\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2379,\n\t\t\t\t\t1800\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2368,\n\t\t\t\t\t1815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2350,\n\t\t\t\t\t1813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t167\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2304,\n\t\t\t\t\t1980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2345,\n\t\t\t\t\t2035\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2447,\n\t\t\t\t\t2063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2512,\n\t\t\t\t\t2078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-170\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t1951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3442,\n\t\t\t\t\t1955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3381,\n\t\t\t\t\t1867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-115,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3266,\n\t\t\t\t\t1827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3164,\n\t\t\t\t\t1825\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3129,\n\t\t\t\t\t1862\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3147,\n\t\t\t\t\t1904\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3176,\n\t\t\t\t\t1955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3240,\n\t\t\t\t\t1914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3389,\n\t\t\t\t\t1973\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4797,\n\t\t\t\t\t6711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4869,\n\t\t\t\t\t6675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4795,\n\t\t\t\t\t6606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4817,\n\t\t\t\t\t6551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4772,\n\t\t\t\t\t6539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4692,\n\t\t\t\t\t6497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4632,\n\t\t\t\t\t6484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4561,\n\t\t\t\t\t6417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4445,\n\t\t\t\t\t6827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4405,\n\t\t\t\t\t6836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4453,\n\t\t\t\t\t6950\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3774,\n\t\t\t\t\t6018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3881,\n\t\t\t\t\t5985\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3890,\n\t\t\t\t\t5989\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3997,\n\t\t\t\t\t5810\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3985,\n\t\t\t\t\t5752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-166\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3878,\n\t\t\t\t\t5586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3847,\n\t\t\t\t\t5630\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3789,\n\t\t\t\t\t5589\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3753,\n\t\t\t\t\t5575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3596,\n\t\t\t\t\t5661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3553,\n\t\t\t\t\t5623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3504,\n\t\t\t\t\t5651\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3331,\n\t\t\t\t\t5784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3720,\n\t\t\t\t\t5955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3266,\n\t\t\t\t\t1827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3260,\n\t\t\t\t\t1672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3284,\n\t\t\t\t\t1637\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3206,\n\t\t\t\t\t1616\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3185,\n\t\t\t\t\t1649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3084,\n\t\t\t\t\t1674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3009,\n\t\t\t\t\t1757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3054,\n\t\t\t\t\t1809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3129,\n\t\t\t\t\t1862\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2906,\n\t\t\t\t\t6114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3008,\n\t\t\t\t\t6019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2891,\n\t\t\t\t\t5811\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2888,\n\t\t\t\t\t5800\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2755,\n\t\t\t\t\t5891\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2676,\n\t\t\t\t\t5902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2671,\n\t\t\t\t\t5916\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t208\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2728,\n\t\t\t\t\t6124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2767,\n\t\t\t\t\t6150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2759,\n\t\t\t\t\t6161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2821,\n\t\t\t\t\t6242\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2841,\n\t\t\t\t\t6248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3838,\n\t\t\t\t\t2222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t141\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3842,\n\t\t\t\t\t2363\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3819,\n\t\t\t\t\t2390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t151,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4155,\n\t\t\t\t\t2389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4046,\n\t\t\t\t\t2098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-118,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3928,\n\t\t\t\t\t2101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3822,\n\t\t\t\t\t2178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5019,\n\t\t\t\t\t3016\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5049,\n\t\t\t\t\t2897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5002,\n\t\t\t\t\t2779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4959,\n\t\t\t\t\t2643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4907,\n\t\t\t\t\t2672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4820,\n\t\t\t\t\t2659\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-156,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4664,\n\t\t\t\t\t2614\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4645,\n\t\t\t\t\t2624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4711,\n\t\t\t\t\t2927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4934,\n\t\t\t\t\t3015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4820,\n\t\t\t\t\t2659\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4959,\n\t\t\t\t\t2643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4926,\n\t\t\t\t\t2418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4760,\n\t\t\t\t\t2367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-158,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4589,\n\t\t\t\t\t2586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4599,\n\t\t\t\t\t2582\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4434,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4407,\n\t\t\t\t\t2945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4400,\n\t\t\t\t\t2919\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4247,\n\t\t\t\t\t2703\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4256,\n\t\t\t\t\t2679\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4138,\n\t\t\t\t\t2652\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4112,\n\t\t\t\t\t2642\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4036,\n\t\t\t\t\t2604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3960,\n\t\t\t\t\t2564\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3911,\n\t\t\t\t\t2646\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3778,\n\t\t\t\t\t2742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3792,\n\t\t\t\t\t2813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3806,\n\t\t\t\t\t2838\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4173,\n\t\t\t\t\t2978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4217,\n\t\t\t\t\t2943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t129,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4346,\n\t\t\t\t\t2991\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4375,\n\t\t\t\t\t3015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5972,\n\t\t\t\t\t4269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6000,\n\t\t\t\t\t4266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-211\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6008,\n\t\t\t\t\t3883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6020,\n\t\t\t\t\t3828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5840,\n\t\t\t\t\t3783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5792,\n\t\t\t\t\t3789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5749,\n\t\t\t\t\t3839\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5741,\n\t\t\t\t\t3812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-159,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5453,\n\t\t\t\t\t3774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5402,\n\t\t\t\t\t3761\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5385,\n\t\t\t\t\t3739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5357,\n\t\t\t\t\t3744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5366,\n\t\t\t\t\t3988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5437,\n\t\t\t\t\t4044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5419,\n\t\t\t\t\t4146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5541,\n\t\t\t\t\t4253\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5553,\n\t\t\t\t\t4288\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5622,\n\t\t\t\t\t4322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t2327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-142,\n\t\t\t\t\t-219\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4263,\n\t\t\t\t\t1989\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4343,\n\t\t\t\t\t2256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4347,\n\t\t\t\t\t2303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4420,\n\t\t\t\t\t3553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4432,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4564,\n\t\t\t\t\t3594\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4655,\n\t\t\t\t\t3281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4618,\n\t\t\t\t\t3248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-186,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4432,\n\t\t\t\t\t3230\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4374,\n\t\t\t\t\t3297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4400,\n\t\t\t\t\t2919\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4477,\n\t\t\t\t\t2801\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t2762\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4422,\n\t\t\t\t\t2693\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4258,\n\t\t\t\t\t2667\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4662,\n\t\t\t\t\t2955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4696,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4645,\n\t\t\t\t\t2624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4599,\n\t\t\t\t\t2582\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4488,\n\t\t\t\t\t2628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4477,\n\t\t\t\t\t2801\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4407,\n\t\t\t\t\t2945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4520,\n\t\t\t\t\t2955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4607,\n\t\t\t\t\t2987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5497,\n\t\t\t\t\t2721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5590,\n\t\t\t\t\t2701\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5635,\n\t\t\t\t\t2558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5629,\n\t\t\t\t\t2448\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5540,\n\t\t\t\t\t2477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5538,\n\t\t\t\t\t2507\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5462,\n\t\t\t\t\t2533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5491,\n\t\t\t\t\t2518\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5419,\n\t\t\t\t\t2452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5351,\n\t\t\t\t\t2554\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5321,\n\t\t\t\t\t2553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5204,\n\t\t\t\t\t2714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5218,\n\t\t\t\t\t2687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5314,\n\t\t\t\t\t2760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3778,\n\t\t\t\t\t2455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3819,\n\t\t\t\t\t2407\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3838,\n\t\t\t\t\t2222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3818,\n\t\t\t\t\t2160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3799,\n\t\t\t\t\t2158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3765,\n\t\t\t\t\t2131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3744,\n\t\t\t\t\t2067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3699,\n\t\t\t\t\t2046\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3678,\n\t\t\t\t\t2080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3592,\n\t\t\t\t\t2122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3592,\n\t\t\t\t\t2158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3559,\n\t\t\t\t\t2162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3438,\n\t\t\t\t\t2293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3488,\n\t\t\t\t\t2332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t149,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3637,\n\t\t\t\t\t2402\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3656,\n\t\t\t\t\t2460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3685,\n\t\t\t\t\t2980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3688,\n\t\t\t\t\t2958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3811,\n\t\t\t\t\t2891\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3792,\n\t\t\t\t\t2813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3742,\n\t\t\t\t\t2713\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-132,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3610,\n\t\t\t\t\t2647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3542,\n\t\t\t\t\t2621\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3463,\n\t\t\t\t\t2561\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3392,\n\t\t\t\t\t2550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3392,\n\t\t\t\t\t2729\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3441,\n\t\t\t\t\t2773\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3492,\n\t\t\t\t\t2856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3574,\n\t\t\t\t\t2883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3619,\n\t\t\t\t\t2947\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3559,\n\t\t\t\t\t2162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3592,\n\t\t\t\t\t2158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3678,\n\t\t\t\t\t2080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3614,\n\t\t\t\t\t2043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-149\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3521,\n\t\t\t\t\t1894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t1951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3389,\n\t\t\t\t\t1973\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t208\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3442,\n\t\t\t\t\t2181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1936,\n\t\t\t\t\t1740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1722,\n\t\t\t\t\t1455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1723,\n\t\t\t\t\t1444\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1645,\n\t\t\t\t\t1438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1592,\n\t\t\t\t\t1460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1574,\n\t\t\t\t\t1573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1582,\n\t\t\t\t\t1643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1603,\n\t\t\t\t\t1710\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1659,\n\t\t\t\t\t1781\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t911,\n\t\t\t\t\t5300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t874,\n\t\t\t\t\t5244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t901,\n\t\t\t\t\t5173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t910,\n\t\t\t\t\t5161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t892,\n\t\t\t\t\t5129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t881,\n\t\t\t\t\t5093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t752,\n\t\t\t\t\t4963\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t707,\n\t\t\t\t\t4927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-193,\n\t\t\t\t\t182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t522,\n\t\t\t\t\t5150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t749,\n\t\t\t\t\t5397\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2102,\n\t\t\t\t\t2053\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2231,\n\t\t\t\t\t2064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2234,\n\t\t\t\t\t2082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2326,\n\t\t\t\t\t2009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2350,\n\t\t\t\t\t1813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2258,\n\t\t\t\t\t1715\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2232,\n\t\t\t\t\t1647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1968,\n\t\t\t\t\t1674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1998,\n\t\t\t\t\t2001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1950,\n\t\t\t\t\t2005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t2109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3310,\n\t\t\t\t\t2618\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3463,\n\t\t\t\t\t2561\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3518,\n\t\t\t\t\t2550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3641,\n\t\t\t\t\t2501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3656,\n\t\t\t\t\t2460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3488,\n\t\t\t\t\t2332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3434,\n\t\t\t\t\t2291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3353,\n\t\t\t\t\t2338\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3238,\n\t\t\t\t\t2379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3182,\n\t\t\t\t\t2394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3193,\n\t\t\t\t\t2419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3174,\n\t\t\t\t\t2438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3699,\n\t\t\t\t\t3386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3853,\n\t\t\t\t\t3243\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3895,\n\t\t\t\t\t3170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3903,\n\t\t\t\t\t3094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3875,\n\t\t\t\t\t3072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3803,\n\t\t\t\t\t2951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-115,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3685,\n\t\t\t\t\t2980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3574,\n\t\t\t\t\t2883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3415,\n\t\t\t\t\t2986\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3412,\n\t\t\t\t\t3054\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3471,\n\t\t\t\t\t3087\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3639,\n\t\t\t\t\t3294\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3626,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3699,\n\t\t\t\t\t3419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2636,\n\t\t\t\t\t3456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2662,\n\t\t\t\t\t3360\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2624,\n\t\t\t\t\t3338\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2588,\n\t\t\t\t\t3259\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2509,\n\t\t\t\t\t3234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2518,\n\t\t\t\t\t3428\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2570,\n\t\t\t\t\t3458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1505,\n\t\t\t\t\t4943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1551,\n\t\t\t\t\t4903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1613,\n\t\t\t\t\t4902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1696,\n\t\t\t\t\t4827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1702,\n\t\t\t\t\t4718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1709,\n\t\t\t\t\t4699\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1672,\n\t\t\t\t\t4600\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1655,\n\t\t\t\t\t4575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1588,\n\t\t\t\t\t4600\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1495,\n\t\t\t\t\t4584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1437,\n\t\t\t\t\t4663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1427,\n\t\t\t\t\t4765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1453,\n\t\t\t\t\t4769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t4952\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1965,\n\t\t\t\t\t3573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-143\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2055,\n\t\t\t\t\t3434\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t163,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2218,\n\t\t\t\t\t3369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2208,\n\t\t\t\t\t3278\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2219,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2019,\n\t\t\t\t\t3137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1810,\n\t\t\t\t\t3284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1778,\n\t\t\t\t\t3310\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1793,\n\t\t\t\t\t3394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1836,\n\t\t\t\t\t3413\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t180\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1842,\n\t\t\t\t\t3593\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t123,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1691,\n\t\t\t\t\t2739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t141,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1832,\n\t\t\t\t\t2774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1887,\n\t\t\t\t\t2661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1782,\n\t\t\t\t\t2631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1710,\n\t\t\t\t\t2590\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1648,\n\t\t\t\t\t2542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1643,\n\t\t\t\t\t2556\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1612,\n\t\t\t\t\t2571\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1501,\n\t\t\t\t\t2559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1482,\n\t\t\t\t\t2604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1428,\n\t\t\t\t\t2776\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1546,\n\t\t\t\t\t2902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t426,\n\t\t\t\t\t2887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t394,\n\t\t\t\t\t2797\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t351,\n\t\t\t\t\t2824\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t254,\n\t\t\t\t\t2832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t219,\n\t\t\t\t\t2860\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1260,\n\t\t\t\t\t2541\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1303,\n\t\t\t\t\t2538\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1365,\n\t\t\t\t\t2502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1374,\n\t\t\t\t\t2504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1388,\n\t\t\t\t\t2378\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1346,\n\t\t\t\t\t2375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1346,\n\t\t\t\t\t2296\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1327,\n\t\t\t\t\t2209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1230,\n\t\t\t\t\t2200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1180,\n\t\t\t\t\t2240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1031,\n\t\t\t\t\t2323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t965,\n\t\t\t\t\t2328\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t933,\n\t\t\t\t\t2364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t940,\n\t\t\t\t\t2412\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t976,\n\t\t\t\t\t2457\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1045,\n\t\t\t\t\t2496\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1145,\n\t\t\t\t\t2504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1198,\n\t\t\t\t\t2588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1214,\n\t\t\t\t\t2554\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t738,\n\t\t\t\t\t2226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t786,\n\t\t\t\t\t2240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t849,\n\t\t\t\t\t2116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t796,\n\t\t\t\t\t2056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t775,\n\t\t\t\t\t2040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-122,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t599,\n\t\t\t\t\t2079\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t620,\n\t\t\t\t\t2172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t606,\n\t\t\t\t\t2219\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t659,\n\t\t\t\t\t2234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1487,\n\t\t\t\t\t2464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1547,\n\t\t\t\t\t2246\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1552,\n\t\t\t\t\t2165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1537,\n\t\t\t\t\t2086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1462,\n\t\t\t\t\t2046\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1352,\n\t\t\t\t\t2047\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1331,\n\t\t\t\t\t2146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1291,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1346,\n\t\t\t\t\t2296\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1388,\n\t\t\t\t\t2378\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1412,\n\t\t\t\t\t2418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1460,\n\t\t\t\t\t2463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3928,\n\t\t\t\t\t2101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3943,\n\t\t\t\t\t2078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3983,\n\t\t\t\t\t2030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3849,\n\t\t\t\t\t1931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3653,\n\t\t\t\t\t1829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3529,\n\t\t\t\t\t1843\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3614,\n\t\t\t\t\t2043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3744,\n\t\t\t\t\t2067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3765,\n\t\t\t\t\t2131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3818,\n\t\t\t\t\t2160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6045,\n\t\t\t\t\t6565\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t144,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6339,\n\t\t\t\t\t6355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6330,\n\t\t\t\t\t6337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6220,\n\t\t\t\t\t6271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6219,\n\t\t\t\t\t6227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6124,\n\t\t\t\t\t6141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-128,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5996,\n\t\t\t\t\t6149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5892,\n\t\t\t\t\t6242\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5915,\n\t\t\t\t\t6274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5873,\n\t\t\t\t\t6293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5872,\n\t\t\t\t\t6321\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5808,\n\t\t\t\t\t6387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5833,\n\t\t\t\t\t6411\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5849,\n\t\t\t\t\t6433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5887,\n\t\t\t\t\t6403\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5910,\n\t\t\t\t\t6498\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5883,\n\t\t\t\t\t6553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5905,\n\t\t\t\t\t6562\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6004,\n\t\t\t\t\t6606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7544,\n\t\t\t\t\t5867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7645,\n\t\t\t\t\t5832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7667,\n\t\t\t\t\t5865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7700,\n\t\t\t\t\t5881\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7735,\n\t\t\t\t\t5850\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7747,\n\t\t\t\t\t5724\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7760,\n\t\t\t\t\t5717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7742,\n\t\t\t\t\t5680\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7809,\n\t\t\t\t\t5685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7760,\n\t\t\t\t\t5288\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7732,\n\t\t\t\t\t5262\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7648,\n\t\t\t\t\t5322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7606,\n\t\t\t\t\t5331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7502,\n\t\t\t\t\t5279\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7465,\n\t\t\t\t\t5394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7521,\n\t\t\t\t\t5694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7494,\n\t\t\t\t\t5739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7459,\n\t\t\t\t\t5778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7445,\n\t\t\t\t\t5845\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7492,\n\t\t\t\t\t5876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5221,\n\t\t\t\t\t2464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5233,\n\t\t\t\t\t2427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5228,\n\t\t\t\t\t2338\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5196,\n\t\t\t\t\t2337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5256,\n\t\t\t\t\t2255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5377,\n\t\t\t\t\t2254\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5340,\n\t\t\t\t\t2126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5243,\n\t\t\t\t\t1927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5164,\n\t\t\t\t\t1940\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4940,\n\t\t\t\t\t2041\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4999,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4970,\n\t\t\t\t\t2387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4996,\n\t\t\t\t\t2433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5175,\n\t\t\t\t\t2412\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2207,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2278,\n\t\t\t\t\t2375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2316,\n\t\t\t\t\t2333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2280,\n\t\t\t\t\t2225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2206,\n\t\t\t\t\t2199\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2171,\n\t\t\t\t\t2167\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2109,\n\t\t\t\t\t2352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2030,\n\t\t\t\t\t2379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7956,\n\t\t\t\t\t6871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-186\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-123,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7883,\n\t\t\t\t\t6570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-228,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7655,\n\t\t\t\t\t6603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7626,\n\t\t\t\t\t6666\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7632,\n\t\t\t\t\t6708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7704,\n\t\t\t\t\t6689\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7758,\n\t\t\t\t\t6723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7752,\n\t\t\t\t\t6821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7742,\n\t\t\t\t\t6852\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7777,\n\t\t\t\t\t6865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7789,\n\t\t\t\t\t6901\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t167,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6783,\n\t\t\t\t\t6122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6924,\n\t\t\t\t\t6128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6965,\n\t\t\t\t\t6025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6917,\n\t\t\t\t\t5897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6755,\n\t\t\t\t\t5861\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6724,\n\t\t\t\t\t5888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6495,\n\t\t\t\t\t5962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6497,\n\t\t\t\t\t6066\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t136,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6633,\n\t\t\t\t\t6143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6694,\n\t\t\t\t\t6158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3668,\n\t\t\t\t\t4003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3729,\n\t\t\t\t\t3956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3717,\n\t\t\t\t\t3920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3750,\n\t\t\t\t\t3835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3731,\n\t\t\t\t\t3809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3705,\n\t\t\t\t\t3786\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3678,\n\t\t\t\t\t3751\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3713,\n\t\t\t\t\t3701\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3604,\n\t\t\t\t\t3687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3558,\n\t\t\t\t\t3629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3545,\n\t\t\t\t\t3638\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3509,\n\t\t\t\t\t3675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3446,\n\t\t\t\t\t3629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3423,\n\t\t\t\t\t3660\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3439,\n\t\t\t\t\t3734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3476,\n\t\t\t\t\t3765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3454,\n\t\t\t\t\t3869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3447,\n\t\t\t\t\t3878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3489,\n\t\t\t\t\t3918\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t167,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3656,\n\t\t\t\t\t3969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1127,\n\t\t\t\t\t4633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1201,\n\t\t\t\t\t4620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1259,\n\t\t\t\t\t4611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1308,\n\t\t\t\t\t4545\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1431,\n\t\t\t\t\t4392\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1408,\n\t\t\t\t\t4303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1251,\n\t\t\t\t\t4321\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-154,\n\t\t\t\t\t144\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1097,\n\t\t\t\t\t4465\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1075,\n\t\t\t\t\t4527\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1054,\n\t\t\t\t\t4628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2034,\n\t\t\t\t\t6280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1859,\n\t\t\t\t\t5866\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1819,\n\t\t\t\t\t5889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1724,\n\t\t\t\t\t5901\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1671,\n\t\t\t\t\t5871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1666,\n\t\t\t\t\t5850\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1578,\n\t\t\t\t\t5968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1486,\n\t\t\t\t\t6078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t216,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4014,\n\t\t\t\t\t5271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4053,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4075,\n\t\t\t\t\t5162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4106,\n\t\t\t\t\t5096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4136,\n\t\t\t\t\t5064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3721,\n\t\t\t\t\t5031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3715,\n\t\t\t\t\t5083\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3812,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3822,\n\t\t\t\t\t5241\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3856,\n\t\t\t\t\t5293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t791,\n\t\t\t\t\t3034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1011,\n\t\t\t\t\t2863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1008,\n\t\t\t\t\t2823\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1004,\n\t\t\t\t\t2777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t983,\n\t\t\t\t\t2760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t915,\n\t\t\t\t\t2658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t838,\n\t\t\t\t\t2636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t813,\n\t\t\t\t\t2708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t700,\n\t\t\t\t\t2890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t666,\n\t\t\t\t\t2973\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2453,\n\t\t\t\t\t7148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t-163\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2492,\n\t\t\t\t\t6878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2419,\n\t\t\t\t\t6823\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-141\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2334,\n\t\t\t\t\t6682\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2288,\n\t\t\t\t\t6672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-270,\n\t\t\t\t\t186\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t136,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t203,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t7213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7104,\n\t\t\t\t\t6798\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7197,\n\t\t\t\t\t6675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7200,\n\t\t\t\t\t6661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-153,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6960,\n\t\t\t\t\t6419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6832,\n\t\t\t\t\t6438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6836,\n\t\t\t\t\t6518\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6853,\n\t\t\t\t\t6511\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6861,\n\t\t\t\t\t6601\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6878,\n\t\t\t\t\t6631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6875,\n\t\t\t\t\t6673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6856,\n\t\t\t\t\t6730\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6863,\n\t\t\t\t\t6804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6913,\n\t\t\t\t\t6783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6971,\n\t\t\t\t\t6809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7047,\n\t\t\t\t\t6799\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7065,\n\t\t\t\t\t6825\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3164,\n\t\t\t\t\t5292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3214,\n\t\t\t\t\t5280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3300,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3363,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3408,\n\t\t\t\t\t5168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3408,\n\t\t\t\t\t5093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3389,\n\t\t\t\t\t5032\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3313,\n\t\t\t\t\t4991\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3252,\n\t\t\t\t\t4942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3140,\n\t\t\t\t\t4895\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t294\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3085,\n\t\t\t\t\t5189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3031,\n\t\t\t\t\t5220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3125,\n\t\t\t\t\t5289\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5731,\n\t\t\t\t\t5784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5846,\n\t\t\t\t\t5655\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5870,\n\t\t\t\t\t5567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5832,\n\t\t\t\t\t5468\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5764,\n\t\t\t\t\t5342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5724,\n\t\t\t\t\t5327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5648,\n\t\t\t\t\t5320\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5588,\n\t\t\t\t\t5333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5541,\n\t\t\t\t\t5489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5422,\n\t\t\t\t\t5542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5399,\n\t\t\t\t\t5582\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5425,\n\t\t\t\t\t5735\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5483,\n\t\t\t\t\t5744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5591,\n\t\t\t\t\t5734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4227,\n\t\t\t\t\t4486\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4202,\n\t\t\t\t\t4484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4196,\n\t\t\t\t\t4353\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4185,\n\t\t\t\t\t4222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4124,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-203,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3921,\n\t\t\t\t\t4337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3941,\n\t\t\t\t\t4409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4014,\n\t\t\t\t\t4526\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4118,\n\t\t\t\t\t4542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4165,\n\t\t\t\t\t4586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2779,\n\t\t\t\t\t1863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2793,\n\t\t\t\t\t1802\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2865,\n\t\t\t\t\t1746\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2843,\n\t\t\t\t\t1716\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2779,\n\t\t\t\t\t1685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t-112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2655,\n\t\t\t\t\t1573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2621,\n\t\t\t\t\t1558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2559,\n\t\t\t\t\t1587\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2454,\n\t\t\t\t\t1644\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2368,\n\t\t\t\t\t1717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2394,\n\t\t\t\t\t1782\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2379,\n\t\t\t\t\t1800\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2547,\n\t\t\t\t\t1881\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2779,\n\t\t\t\t\t1685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2804,\n\t\t\t\t\t1672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2798,\n\t\t\t\t\t1303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2752,\n\t\t\t\t\t1322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2699,\n\t\t\t\t\t1350\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2606,\n\t\t\t\t\t1515\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2655,\n\t\t\t\t\t1573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1438,\n\t\t\t\t\t5200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1457,\n\t\t\t\t\t5139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1478,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1529,\n\t\t\t\t\t5196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1579,\n\t\t\t\t\t5213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-177\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1620,\n\t\t\t\t\t5036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1653,\n\t\t\t\t\t4990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1505,\n\t\t\t\t\t4943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1433,\n\t\t\t\t\t4954\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1333,\n\t\t\t\t\t4974\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1310,\n\t\t\t\t\t5177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1380,\n\t\t\t\t\t5208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4601,\n\t\t\t\t\t4774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4631,\n\t\t\t\t\t4732\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4718,\n\t\t\t\t\t4750\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-146\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4755,\n\t\t\t\t\t4604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4652,\n\t\t\t\t\t4578\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4464,\n\t\t\t\t\t4568\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4319,\n\t\t\t\t\t4653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4344,\n\t\t\t\t\t4652\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t188,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4532,\n\t\t\t\t\t4756\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3453,\n\t\t\t\t\t5534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3619,\n\t\t\t\t\t5403\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3564,\n\t\t\t\t\t5181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3488,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3455,\n\t\t\t\t\t5140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3448,\n\t\t\t\t\t5178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t5194\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3368,\n\t\t\t\t\t5198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t166\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3284,\n\t\t\t\t\t5448\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3393,\n\t\t\t\t\t5571\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2406,\n\t\t\t\t\t5786\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2506,\n\t\t\t\t\t5801\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-127\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2491,\n\t\t\t\t\t5674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2364,\n\t\t\t\t\t5605\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t5635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2220,\n\t\t\t\t\t5660\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2159,\n\t\t\t\t\t5674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2150,\n\t\t\t\t\t5755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2117,\n\t\t\t\t\t5794\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2222,\n\t\t\t\t\t5903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7598,\n\t\t\t\t\t7002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7634,\n\t\t\t\t\t6994\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7712,\n\t\t\t\t\t6854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7752,\n\t\t\t\t\t6821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7704,\n\t\t\t\t\t6689\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7632,\n\t\t\t\t\t6708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7574,\n\t\t\t\t\t6709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7526,\n\t\t\t\t\t6721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7510,\n\t\t\t\t\t6788\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7479,\n\t\t\t\t\t6809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7447,\n\t\t\t\t\t6863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7464,\n\t\t\t\t\t6898\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7478,\n\t\t\t\t\t6965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1433,\n\t\t\t\t\t4954\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1453,\n\t\t\t\t\t4769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1437,\n\t\t\t\t\t4663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1440,\n\t\t\t\t\t4611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1316,\n\t\t\t\t\t4555\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1308,\n\t\t\t\t\t4545\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1238,\n\t\t\t\t\t4639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1294,\n\t\t\t\t\t4944\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1312,\n\t\t\t\t\t4983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7307,\n\t\t\t\t\t7466\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7355,\n\t\t\t\t\t7441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7301,\n\t\t\t\t\t7369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-156\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7292,\n\t\t\t\t\t7213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7269,\n\t\t\t\t\t7149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7073,\n\t\t\t\t\t7171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6964,\n\t\t\t\t\t7159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6878,\n\t\t\t\t\t7151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t132\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6939,\n\t\t\t\t\t7283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6947,\n\t\t\t\t\t7331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7005,\n\t\t\t\t\t7353\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7194,\n\t\t\t\t\t7449\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7227,\n\t\t\t\t\t7489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4276,\n\t\t\t\t\t3726\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4386,\n\t\t\t\t\t3654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4430,\n\t\t\t\t\t3653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4451,\n\t\t\t\t\t3619\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4374,\n\t\t\t\t\t3297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4339,\n\t\t\t\t\t3306\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4152,\n\t\t\t\t\t3384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4133,\n\t\t\t\t\t3415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4109,\n\t\t\t\t\t3443\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4052,\n\t\t\t\t\t3473\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4054,\n\t\t\t\t\t3570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4196,\n\t\t\t\t\t3730\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4240,\n\t\t\t\t\t3760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5099,\n\t\t\t\t\t4941\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5084,\n\t\t\t\t\t4876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5032,\n\t\t\t\t\t4817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4945,\n\t\t\t\t\t4770\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4898,\n\t\t\t\t\t4761\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4864,\n\t\t\t\t\t4753\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4844,\n\t\t\t\t\t4720\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4770,\n\t\t\t\t\t4789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4748,\n\t\t\t\t\t4812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4715,\n\t\t\t\t\t4819\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4740,\n\t\t\t\t\t4889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4702,\n\t\t\t\t\t4999\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4809,\n\t\t\t\t\t5061\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8159,\n\t\t\t\t\t5821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8136,\n\t\t\t\t\t5791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8140,\n\t\t\t\t\t5763\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8206,\n\t\t\t\t\t5657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8203,\n\t\t\t\t\t5629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-216\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8133,\n\t\t\t\t\t5413\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8088,\n\t\t\t\t\t5336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8068,\n\t\t\t\t\t5255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8035,\n\t\t\t\t\t5223\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7996,\n\t\t\t\t\t5208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7744,\n\t\t\t\t\t5230\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7809,\n\t\t\t\t\t5685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7742,\n\t\t\t\t\t5680\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7760,\n\t\t\t\t\t5717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7776,\n\t\t\t\t\t5708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7900,\n\t\t\t\t\t5762\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7958,\n\t\t\t\t\t6131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7985,\n\t\t\t\t\t6013\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7922,\n\t\t\t\t\t5965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7776,\n\t\t\t\t\t5708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7735,\n\t\t\t\t\t5850\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7667,\n\t\t\t\t\t5865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7544,\n\t\t\t\t\t5867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7539,\n\t\t\t\t\t5906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t318,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5276,\n\t\t\t\t\t5926\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5362,\n\t\t\t\t\t5906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5379,\n\t\t\t\t\t5842\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5450,\n\t\t\t\t\t5740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5399,\n\t\t\t\t\t5582\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5389,\n\t\t\t\t\t5557\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5269,\n\t\t\t\t\t5534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5188,\n\t\t\t\t\t5557\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5061,\n\t\t\t\t\t5570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5069,\n\t\t\t\t\t5607\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5008,\n\t\t\t\t\t5633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5019,\n\t\t\t\t\t5714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t167\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5098,\n\t\t\t\t\t5881\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5096,\n\t\t\t\t\t5928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2660,\n\t\t\t\t\t3855\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-135\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2809,\n\t\t\t\t\t3694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2783,\n\t\t\t\t\t3665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2743,\n\t\t\t\t\t3653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2756,\n\t\t\t\t\t3636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2679,\n\t\t\t\t\t3562\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2659,\n\t\t\t\t\t3553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2569,\n\t\t\t\t\t3594\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2547,\n\t\t\t\t\t3668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2562,\n\t\t\t\t\t3766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6337,\n\t\t\t\t\t3204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6341,\n\t\t\t\t\t3175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6443,\n\t\t\t\t\t3077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-175,\n\t\t\t\t\t-174\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6224,\n\t\t\t\t\t2548\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-132,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5929,\n\t\t\t\t\t2562\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5942,\n\t\t\t\t\t2649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5700,\n\t\t\t\t\t2875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5652,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5695,\n\t\t\t\t\t3087\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5790,\n\t\t\t\t\t3082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t150,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6008,\n\t\t\t\t\t3086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t141,\n\t\t\t\t\t150\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6149,\n\t\t\t\t\t3236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6210,\n\t\t\t\t\t3208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6291,\n\t\t\t\t\t3269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7574,\n\t\t\t\t\t6709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7626,\n\t\t\t\t\t6666\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7883,\n\t\t\t\t\t6570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7984,\n\t\t\t\t\t6502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7959,\n\t\t\t\t\t6492\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7952,\n\t\t\t\t\t6511\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7819,\n\t\t\t\t\t6372\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-159,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7660,\n\t\t\t\t\t6324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7552,\n\t\t\t\t\t6384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7535,\n\t\t\t\t\t6405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7495,\n\t\t\t\t\t6399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7492,\n\t\t\t\t\t6414\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t190\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7430,\n\t\t\t\t\t6604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7459,\n\t\t\t\t\t6665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7481,\n\t\t\t\t\t6723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4437,\n\t\t\t\t\t3830\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4488,\n\t\t\t\t\t3805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4473,\n\t\t\t\t\t3791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4491,\n\t\t\t\t\t3746\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4595,\n\t\t\t\t\t3738\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4628,\n\t\t\t\t\t3752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4668,\n\t\t\t\t\t3732\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4554,\n\t\t\t\t\t3610\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4432,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4451,\n\t\t\t\t\t3619\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4386,\n\t\t\t\t\t3654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4406,\n\t\t\t\t\t3733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3829,\n\t\t\t\t\t4344\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3803,\n\t\t\t\t\t4315\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3756,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3669,\n\t\t\t\t\t4256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3669,\n\t\t\t\t\t4287\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3634,\n\t\t\t\t\t4236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3574,\n\t\t\t\t\t4270\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3642,\n\t\t\t\t\t4367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4538,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4553,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4606,\n\t\t\t\t\t5152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-173\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4695,\n\t\t\t\t\t4997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4674,\n\t\t\t\t\t4987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4661,\n\t\t\t\t\t4981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4620,\n\t\t\t\t\t4929\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4592,\n\t\t\t\t\t4943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4508,\n\t\t\t\t\t4964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4477,\n\t\t\t\t\t5026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4432,\n\t\t\t\t\t5044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4442,\n\t\t\t\t\t5056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4423,\n\t\t\t\t\t5081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4464,\n\t\t\t\t\t5193\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5639,\n\t\t\t\t\t7031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5707,\n\t\t\t\t\t6976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5725,\n\t\t\t\t\t6804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5705,\n\t\t\t\t\t6767\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5604,\n\t\t\t\t\t6717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-118,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5486,\n\t\t\t\t\t6738\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5475,\n\t\t\t\t\t6756\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5416,\n\t\t\t\t\t6716\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5339,\n\t\t\t\t\t6686\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5301,\n\t\t\t\t\t6741\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t187\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5605,\n\t\t\t\t\t7053\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3372,\n\t\t\t\t\t4159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3425,\n\t\t\t\t\t4185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3458,\n\t\t\t\t\t4119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-183\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3434,\n\t\t\t\t\t3936\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3416,\n\t\t\t\t\t3945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t3893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3331,\n\t\t\t\t\t3928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3248,\n\t\t\t\t\t3912\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3116,\n\t\t\t\t\t3868\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3130,\n\t\t\t\t\t3915\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t125,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3255,\n\t\t\t\t\t4038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3235,\n\t\t\t\t\t4158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3294,\n\t\t\t\t\t4182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t4218\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3911,\n\t\t\t\t\t2646\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3877,\n\t\t\t\t\t2604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3736,\n\t\t\t\t\t2474\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3739,\n\t\t\t\t\t2454\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3518,\n\t\t\t\t\t2550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3542,\n\t\t\t\t\t2621\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3742,\n\t\t\t\t\t2713\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3886,\n\t\t\t\t\t3929\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3954,\n\t\t\t\t\t3734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3938,\n\t\t\t\t\t3705\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3896,\n\t\t\t\t\t3675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3781,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3743,\n\t\t\t\t\t3537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3705,\n\t\t\t\t\t3586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3705,\n\t\t\t\t\t3557\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3680,\n\t\t\t\t\t3559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3679,\n\t\t\t\t\t3628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3647,\n\t\t\t\t\t3660\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3621,\n\t\t\t\t\t3641\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3585,\n\t\t\t\t\t3656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3713,\n\t\t\t\t\t3701\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3678,\n\t\t\t\t\t3751\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3731,\n\t\t\t\t\t3809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3751,\n\t\t\t\t\t3855\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3738,\n\t\t\t\t\t3875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3822,\n\t\t\t\t\t3951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3300,\n\t\t\t\t\t5500\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3368,\n\t\t\t\t\t5198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3363,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3214,\n\t\t\t\t\t5280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3166,\n\t\t\t\t\t5460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3259,\n\t\t\t\t\t5500\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5996,\n\t\t\t\t\t6149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6076,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-133,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5955,\n\t\t\t\t\t5953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5924,\n\t\t\t\t\t5911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5850,\n\t\t\t\t\t5858\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5740,\n\t\t\t\t\t5903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5681,\n\t\t\t\t\t5983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5614,\n\t\t\t\t\t6034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5647,\n\t\t\t\t\t6038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5688,\n\t\t\t\t\t6064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t123,\n\t\t\t\t\t109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5826,\n\t\t\t\t\t6231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5915,\n\t\t\t\t\t6274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7254,\n\t\t\t\t\t6687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t151,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7405,\n\t\t\t\t\t6624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7492,\n\t\t\t\t\t6414\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7448,\n\t\t\t\t\t6355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7425,\n\t\t\t\t\t6324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7388,\n\t\t\t\t\t6283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-138\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7261,\n\t\t\t\t\t6170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7214,\n\t\t\t\t\t6129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7161,\n\t\t\t\t\t6149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7022,\n\t\t\t\t\t6386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7200,\n\t\t\t\t\t6661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7203,\n\t\t\t\t\t6651\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7224,\n\t\t\t\t\t6657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t394,\n\t\t\t\t\t2797\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t490,\n\t\t\t\t\t2656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t437,\n\t\t\t\t\t2611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-155\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t331,\n\t\t\t\t\t2456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-167,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t229,\n\t\t\t\t\t2812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t254,\n\t\t\t\t\t2832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4588,\n\t\t\t\t\t4336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4728,\n\t\t\t\t\t4265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4767,\n\t\t\t\t\t4198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4702,\n\t\t\t\t\t4086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4628,\n\t\t\t\t\t4004\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4557,\n\t\t\t\t\t3932\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4527,\n\t\t\t\t\t3946\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4445,\n\t\t\t\t\t3945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4528,\n\t\t\t\t\t4349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3626,\n\t\t\t\t\t3427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3471,\n\t\t\t\t\t3087\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3382,\n\t\t\t\t\t3107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3366,\n\t\t\t\t\t3129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3415,\n\t\t\t\t\t3258\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3426,\n\t\t\t\t\t3341\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3443,\n\t\t\t\t\t3390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3596,\n\t\t\t\t\t3460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6841,\n\t\t\t\t\t7691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6862,\n\t\t\t\t\t7692\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6857,\n\t\t\t\t\t7674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6902,\n\t\t\t\t\t7667\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7006,\n\t\t\t\t\t7534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7001,\n\t\t\t\t\t7433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6947,\n\t\t\t\t\t7331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6909,\n\t\t\t\t\t7304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6820,\n\t\t\t\t\t7362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6726,\n\t\t\t\t\t7493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6764,\n\t\t\t\t\t7615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6800,\n\t\t\t\t\t7677\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6802,\n\t\t\t\t\t7700\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6009,\n\t\t\t\t\t7160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6003,\n\t\t\t\t\t7104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5958,\n\t\t\t\t\t7077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5949,\n\t\t\t\t\t7043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5943,\n\t\t\t\t\t7029\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5746,\n\t\t\t\t\t6879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5639,\n\t\t\t\t\t7031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5605,\n\t\t\t\t\t7053\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t157,\n\t\t\t\t\t178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2427,\n\t\t\t\t\t3178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2463,\n\t\t\t\t\t3168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2516,\n\t\t\t\t\t3092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2461,\n\t\t\t\t\t2928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2411,\n\t\t\t\t\t3129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2359,\n\t\t\t\t\t3175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2362,\n\t\t\t\t\t3196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1230,\n\t\t\t\t\t2200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1331,\n\t\t\t\t\t2146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1340,\n\t\t\t\t\t2092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1242,\n\t\t\t\t\t2020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1233,\n\t\t\t\t\t2008\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-136,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1097,\n\t\t\t\t\t2002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1055,\n\t\t\t\t\t2121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t7452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3336,\n\t\t\t\t\t7361\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3265,\n\t\t\t\t\t7427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3216,\n\t\t\t\t\t7408\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3166,\n\t\t\t\t\t7357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3070,\n\t\t\t\t\t7367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t176\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t234,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3233,\n\t\t\t\t\t7763\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-194\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5966,\n\t\t\t\t\t7067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6050,\n\t\t\t\t\t7014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6069,\n\t\t\t\t\t6960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6129,\n\t\t\t\t\t6879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5899,\n\t\t\t\t\t6751\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5844,\n\t\t\t\t\t6711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5843,\n\t\t\t\t\t6693\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5761,\n\t\t\t\t\t6700\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5739,\n\t\t\t\t\t6732\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5725,\n\t\t\t\t\t6804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5943,\n\t\t\t\t\t7029\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5958,\n\t\t\t\t\t7077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7189,\n\t\t\t\t\t4864\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7268,\n\t\t\t\t\t4815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7371,\n\t\t\t\t\t4747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7460,\n\t\t\t\t\t4709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-193,\n\t\t\t\t\t-100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t139,\n\t\t\t\t\t-216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-171,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6946,\n\t\t\t\t\t4494\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7021,\n\t\t\t\t\t4507\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7067,\n\t\t\t\t\t4598\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7130,\n\t\t\t\t\t4704\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7100,\n\t\t\t\t\t4753\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7070,\n\t\t\t\t\t4807\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7158,\n\t\t\t\t\t4831\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1238,\n\t\t\t\t\t4639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1201,\n\t\t\t\t\t4620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1054,\n\t\t\t\t\t4628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t864,\n\t\t\t\t\t4615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t143\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t778,\n\t\t\t\t\t4789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t139,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1140,\n\t\t\t\t\t4971\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4855,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-146\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4907,\n\t\t\t\t\t4094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4919,\n\t\t\t\t\t4058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4946,\n\t\t\t\t\t3977\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4917,\n\t\t\t\t\t3888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4844,\n\t\t\t\t\t3836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4571,\n\t\t\t\t\t3920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4702,\n\t\t\t\t\t4086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4767,\n\t\t\t\t\t4198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4823,\n\t\t\t\t\t4244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3753,\n\t\t\t\t\t5575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3722,\n\t\t\t\t\t5527\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3786,\n\t\t\t\t\t5431\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3694,\n\t\t\t\t\t5345\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3453,\n\t\t\t\t\t5534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3504,\n\t\t\t\t\t5651\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3553,\n\t\t\t\t\t5623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2832,\n\t\t\t\t\t3603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2777,\n\t\t\t\t\t3426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-115,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2636,\n\t\t\t\t\t3456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t3530\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2756,\n\t\t\t\t\t3636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5394,\n\t\t\t\t\t5196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5440,\n\t\t\t\t\t5159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5475,\n\t\t\t\t\t5130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5472,\n\t\t\t\t\t4882\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5504,\n\t\t\t\t\t4832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5544,\n\t\t\t\t\t4806\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5415,\n\t\t\t\t\t4796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5349,\n\t\t\t\t\t4782\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5321,\n\t\t\t\t\t4809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5186,\n\t\t\t\t\t4789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5162,\n\t\t\t\t\t4835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5086,\n\t\t\t\t\t4808\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5084,\n\t\t\t\t\t4876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5314,\n\t\t\t\t\t5181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2190,\n\t\t\t\t\t4057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2211,\n\t\t\t\t\t4078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2348,\n\t\t\t\t\t3779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t3766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2547,\n\t\t\t\t\t3668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2491,\n\t\t\t\t\t3517\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2483,\n\t\t\t\t\t3456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2509,\n\t\t\t\t\t3234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2527,\n\t\t\t\t\t3217\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2427,\n\t\t\t\t\t3178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2359,\n\t\t\t\t\t3175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2218,\n\t\t\t\t\t3369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1965,\n\t\t\t\t\t3573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t3702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2019,\n\t\t\t\t\t4010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2083,\n\t\t\t\t\t4077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6417,\n\t\t\t\t\t6385\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6432,\n\t\t\t\t\t6360\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6463,\n\t\t\t\t\t6371\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6569,\n\t\t\t\t\t6109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-204,\n\t\t\t\t\t-93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6365,\n\t\t\t\t\t6016\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6241,\n\t\t\t\t\t6162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6199,\n\t\t\t\t\t6196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6219,\n\t\t\t\t\t6227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6330,\n\t\t\t\t\t6337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6354,\n\t\t\t\t\t6374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6403,\n\t\t\t\t\t6399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6443,\n\t\t\t\t\t5367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6501,\n\t\t\t\t\t5329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-182\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6303,\n\t\t\t\t\t5012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6243,\n\t\t\t\t\t4974\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6211,\n\t\t\t\t\t5000\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6222,\n\t\t\t\t\t5044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6159,\n\t\t\t\t\t5081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6107,\n\t\t\t\t\t5233\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6130,\n\t\t\t\t\t5324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6133,\n\t\t\t\t\t5358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6227,\n\t\t\t\t\t5442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6346,\n\t\t\t\t\t5409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t783,\n\t\t\t\t\t2440\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t832,\n\t\t\t\t\t2432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t777,\n\t\t\t\t\t2273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t738,\n\t\t\t\t\t2226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t659,\n\t\t\t\t\t2234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t645,\n\t\t\t\t\t2230\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t657,\n\t\t\t\t\t2339\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t720,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t745,\n\t\t\t\t\t2441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t763,\n\t\t\t\t\t2465\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1390,\n\t\t\t\t\t2854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1453,\n\t\t\t\t\t2804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1482,\n\t\t\t\t\t2604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1502,\n\t\t\t\t\t2551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1460,\n\t\t\t\t\t2533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1451,\n\t\t\t\t\t2501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1473,\n\t\t\t\t\t2496\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1412,\n\t\t\t\t\t2418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1365,\n\t\t\t\t\t2502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1260,\n\t\t\t\t\t2541\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1198,\n\t\t\t\t\t2588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1106,\n\t\t\t\t\t2611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1154,\n\t\t\t\t\t2733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1028,\n\t\t\t\t\t4116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1042,\n\t\t\t\t\t4006\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1065,\n\t\t\t\t\t4005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-177\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t941,\n\t\t\t\t\t3795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t907,\n\t\t\t\t\t3711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t877,\n\t\t\t\t\t3686\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t859,\n\t\t\t\t\t3792\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t773,\n\t\t\t\t\t3885\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t666,\n\t\t\t\t\t3905\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t135,\n\t\t\t\t\t129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t913,\n\t\t\t\t\t4127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6818,\n\t\t\t\t\t6605\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6853,\n\t\t\t\t\t6511\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6768,\n\t\t\t\t\t6358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6656,\n\t\t\t\t\t6380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6628,\n\t\t\t\t\t6445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6669,\n\t\t\t\t\t6579\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6706,\n\t\t\t\t\t6587\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6768,\n\t\t\t\t\t6575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6781,\n\t\t\t\t\t6623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5339,\n\t\t\t\t\t6686\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5386,\n\t\t\t\t\t6702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-182\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5391,\n\t\t\t\t\t6520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5340,\n\t\t\t\t\t6547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-205,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5073,\n\t\t\t\t\t6841\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t160,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-189\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3597,\n\t\t\t\t\t7484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-159,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3438,\n\t\t\t\t\t7476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3233,\n\t\t\t\t\t7763\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t192,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t832,\n\t\t\t\t\t3519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t899,\n\t\t\t\t\t3432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t876,\n\t\t\t\t\t3423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t716,\n\t\t\t\t\t3410\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-156,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t494,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t265,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t759,\n\t\t\t\t\t3628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t6626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t163,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2486,\n\t\t\t\t\t6545\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t6558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2533,\n\t\t\t\t\t6452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2501,\n\t\t\t\t\t6464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2416,\n\t\t\t\t\t6416\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2394,\n\t\t\t\t\t6415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2321,\n\t\t\t\t\t6379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-154,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2113,\n\t\t\t\t\t6344\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2288,\n\t\t\t\t\t6672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7103,\n\t\t\t\t\t6212\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7214,\n\t\t\t\t\t6129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7234,\n\t\t\t\t\t6143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7295,\n\t\t\t\t\t6106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7309,\n\t\t\t\t\t5967\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7269,\n\t\t\t\t\t5906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-244,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7025,\n\t\t\t\t\t5883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6972,\n\t\t\t\t\t5958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5255,\n\t\t\t\t\t1851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5144,\n\t\t\t\t\t1640\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5164,\n\t\t\t\t\t1940\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5311,\n\t\t\t\t\t3635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5348,\n\t\t\t\t\t3638\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5407,\n\t\t\t\t\t3634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5388,\n\t\t\t\t\t3480\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5104,\n\t\t\t\t\t3282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4906,\n\t\t\t\t\t3336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4986,\n\t\t\t\t\t3608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4974,\n\t\t\t\t\t3610\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t137,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5245,\n\t\t\t\t\t3664\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7513,\n\t\t\t\t\t8009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7443,\n\t\t\t\t\t7750\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7385,\n\t\t\t\t\t7760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7257,\n\t\t\t\t\t7692\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-228,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7029,\n\t\t\t\t\t7758\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t150\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7206,\n\t\t\t\t\t8059\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7216,\n\t\t\t\t\t8096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7217,\n\t\t\t\t\t8101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6665,\n\t\t\t\t\t8364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6681,\n\t\t\t\t\t8319\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t170,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6851,\n\t\t\t\t\t8272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6793,\n\t\t\t\t\t8142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6753,\n\t\t\t\t\t8051\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-132,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6621,\n\t\t\t\t\t8045\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-153,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6468,\n\t\t\t\t\t8082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6466,\n\t\t\t\t\t8119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6366,\n\t\t\t\t\t8157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6445,\n\t\t\t\t\t8256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6448,\n\t\t\t\t\t8281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6584,\n\t\t\t\t\t8351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1522,\n\t\t\t\t\t4038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1473,\n\t\t\t\t\t3889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1481,\n\t\t\t\t\t3878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-160,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1321,\n\t\t\t\t\t3788\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1229,\n\t\t\t\t\t3898\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1274,\n\t\t\t\t\t3909\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1226,\n\t\t\t\t\t4002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1282,\n\t\t\t\t\t4043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t152,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1434,\n\t\t\t\t\t4049\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1450,\n\t\t\t\t\t4076\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t946,\n\t\t\t\t\t1396\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t885,\n\t\t\t\t\t1326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t889,\n\t\t\t\t\t1297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-142,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t164\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t760,\n\t\t\t\t\t1384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t769,\n\t\t\t\t\t1380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t908,\n\t\t\t\t\t1217\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t902,\n\t\t\t\t\t1163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2246,\n\t\t\t\t\t1080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t151,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t905\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2533,\n\t\t\t\t\t887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-258,\n\t\t\t\t\t149\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1961,\n\t\t\t\t\t809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t155\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2060,\n\t\t\t\t\t964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2134,\n\t\t\t\t\t1028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2152,\n\t\t\t\t\t1065\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2203,\n\t\t\t\t\t1078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2888,\n\t\t\t\t\t5800\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2921,\n\t\t\t\t\t5617\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2898,\n\t\t\t\t\t5588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2821,\n\t\t\t\t\t5488\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2794,\n\t\t\t\t\t5257\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2795,\n\t\t\t\t\t5210\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2759,\n\t\t\t\t\t5212\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2752,\n\t\t\t\t\t5189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t5179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2628,\n\t\t\t\t\t5197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2581,\n\t\t\t\t\t5225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t5265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2471,\n\t\t\t\t\t5229\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2527,\n\t\t\t\t\t5618\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2506,\n\t\t\t\t\t5801\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2600,\n\t\t\t\t\t5778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2640,\n\t\t\t\t\t5877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1756,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1842,\n\t\t\t\t\t4670\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-151\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1912,\n\t\t\t\t\t4519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1917,\n\t\t\t\t\t4450\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1839,\n\t\t\t\t\t4273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1828,\n\t\t\t\t\t4251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-128,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1679,\n\t\t\t\t\t4327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t219\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1703,\n\t\t\t\t\t4576\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1702,\n\t\t\t\t\t4718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1716,\n\t\t\t\t\t4772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t670,\n\t\t\t\t\t3237\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t723,\n\t\t\t\t\t3178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t763,\n\t\t\t\t\t3131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t748,\n\t\t\t\t\t3118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t780,\n\t\t\t\t\t3070\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t666,\n\t\t\t\t\t2973\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t577,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5391,\n\t\t\t\t\t6520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5430,\n\t\t\t\t\t6503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5528,\n\t\t\t\t\t6400\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5519,\n\t\t\t\t\t6389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5515,\n\t\t\t\t\t6327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5448,\n\t\t\t\t\t6268\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5426,\n\t\t\t\t\t6277\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5390,\n\t\t\t\t\t6323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5290,\n\t\t\t\t\t6320\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5325,\n\t\t\t\t\t6459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5326,\n\t\t\t\t\t6485\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2765,\n\t\t\t\t\t1304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2842,\n\t\t\t\t\t1182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2861,\n\t\t\t\t\t1184\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2811,\n\t\t\t\t\t1064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2667,\n\t\t\t\t\t937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2700,\n\t\t\t\t\t1041\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2707,\n\t\t\t\t\t1137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2752,\n\t\t\t\t\t1322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6020,\n\t\t\t\t\t3828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6026,\n\t\t\t\t\t3809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6094,\n\t\t\t\t\t3725\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6156,\n\t\t\t\t\t3740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6165,\n\t\t\t\t\t3703\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6185,\n\t\t\t\t\t3616\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6138,\n\t\t\t\t\t3574\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6130,\n\t\t\t\t\t3552\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6162,\n\t\t\t\t\t3519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6259,\n\t\t\t\t\t3418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6297,\n\t\t\t\t\t3371\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-123,\n\t\t\t\t\t-133\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6174,\n\t\t\t\t\t3238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6149,\n\t\t\t\t\t3236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t-150\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5790,\n\t\t\t\t\t3082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5583,\n\t\t\t\t\t3222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5467,\n\t\t\t\t\t3225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5475,\n\t\t\t\t\t3307\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5517,\n\t\t\t\t\t3382\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t171,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5788,\n\t\t\t\t\t3753\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5898,\n\t\t\t\t\t2584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6224,\n\t\t\t\t\t2548\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-153,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t128\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5778,\n\t\t\t\t\t2235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5784,\n\t\t\t\t\t2257\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5699,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5697,\n\t\t\t\t\t2383\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5779,\n\t\t\t\t\t2545\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5924,\n\t\t\t\t\t5911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5938,\n\t\t\t\t\t5867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5989,\n\t\t\t\t\t5816\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6007,\n\t\t\t\t\t5713\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5948,\n\t\t\t\t\t5612\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5929,\n\t\t\t\t\t5604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5913,\n\t\t\t\t\t5583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5731,\n\t\t\t\t\t5784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5604,\n\t\t\t\t\t6717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t135,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5761,\n\t\t\t\t\t6700\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5910,\n\t\t\t\t\t6498\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5849,\n\t\t\t\t\t6433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5761,\n\t\t\t\t\t6448\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5622,\n\t\t\t\t\t6493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5589,\n\t\t\t\t\t6494\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5528,\n\t\t\t\t\t6400\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5386,\n\t\t\t\t\t6702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5475,\n\t\t\t\t\t6756\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4347,\n\t\t\t\t\t3896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4527,\n\t\t\t\t\t3946\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4539,\n\t\t\t\t\t3943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4515,\n\t\t\t\t\t3824\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4495,\n\t\t\t\t\t3843\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4437,\n\t\t\t\t\t3830\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4276,\n\t\t\t\t\t3726\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4240,\n\t\t\t\t\t3760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4229,\n\t\t\t\t\t3757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4261,\n\t\t\t\t\t3793\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4258,\n\t\t\t\t\t3911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4290,\n\t\t\t\t\t3944\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6490,\n\t\t\t\t\t7359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6531,\n\t\t\t\t\t7385\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6545,\n\t\t\t\t\t7387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6579,\n\t\t\t\t\t7308\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6587,\n\t\t\t\t\t7251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6597,\n\t\t\t\t\t7247\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6583,\n\t\t\t\t\t7187\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-122,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6461,\n\t\t\t\t\t7146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6457,\n\t\t\t\t\t7107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6430,\n\t\t\t\t\t7129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6346,\n\t\t\t\t\t7192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6331,\n\t\t\t\t\t7238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6322,\n\t\t\t\t\t7337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6491,\n\t\t\t\t\t7734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6497,\n\t\t\t\t\t7719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6605,\n\t\t\t\t\t7426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6580,\n\t\t\t\t\t7420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6573,\n\t\t\t\t\t7388\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6490,\n\t\t\t\t\t7359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6411,\n\t\t\t\t\t7433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6389,\n\t\t\t\t\t7457\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6258,\n\t\t\t\t\t7477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t149,\n\t\t\t\t\t163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6477,\n\t\t\t\t\t7675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4596,\n\t\t\t\t\t8228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4467,\n\t\t\t\t\t8052\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4219,\n\t\t\t\t\t8086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4316,\n\t\t\t\t\t8185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4428,\n\t\t\t\t\t8314\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t168,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6987,\n\t\t\t\t\t8292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t-188\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7188,\n\t\t\t\t\t8085\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7029,\n\t\t\t\t\t7758\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6992,\n\t\t\t\t\t7792\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6835,\n\t\t\t\t\t7862\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6824,\n\t\t\t\t\t7970\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t172\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6851,\n\t\t\t\t\t8272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t136,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3015,\n\t\t\t\t\t1244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3084,\n\t\t\t\t\t1274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-180,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2861,\n\t\t\t\t\t1184\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2961,\n\t\t\t\t\t1295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4854,\n\t\t\t\t\t6540\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4893,\n\t\t\t\t\t6455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4826,\n\t\t\t\t\t6285\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4735,\n\t\t\t\t\t6210\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4555,\n\t\t\t\t\t6288\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4559,\n\t\t\t\t\t6375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4632,\n\t\t\t\t\t6484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4772,\n\t\t\t\t\t6539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4817,\n\t\t\t\t\t6551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3140,\n\t\t\t\t\t4895\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3056,\n\t\t\t\t\t4893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2962,\n\t\t\t\t\t5061\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2893,\n\t\t\t\t\t5106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2997,\n\t\t\t\t\t5189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3031,\n\t\t\t\t\t5220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1578,\n\t\t\t\t\t5968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1541,\n\t\t\t\t\t5959\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1527,\n\t\t\t\t\t5946\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1315,\n\t\t\t\t\t5914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1324,\n\t\t\t\t\t5968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t149,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6365,\n\t\t\t\t\t6016\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6397,\n\t\t\t\t\t5964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6376,\n\t\t\t\t\t5930\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-128,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6248,\n\t\t\t\t\t5858\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-142,\n\t\t\t\t\t-173\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6106,\n\t\t\t\t\t5685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6049,\n\t\t\t\t\t5559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5948,\n\t\t\t\t\t5612\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5989,\n\t\t\t\t\t5816\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5938,\n\t\t\t\t\t5867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6076,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6124,\n\t\t\t\t\t6141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6199,\n\t\t\t\t\t6196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1150,\n\t\t\t\t\t5476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1211,\n\t\t\t\t\t5417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1167,\n\t\t\t\t\t5337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1077,\n\t\t\t\t\t5231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1020,\n\t\t\t\t\t5269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t969,\n\t\t\t\t\t5246\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t806,\n\t\t\t\t\t5389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t848,\n\t\t\t\t\t5464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t814,\n\t\t\t\t\t5540\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4316,\n\t\t\t\t\t8185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4082,\n\t\t\t\t\t8067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4028,\n\t\t\t\t\t8159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4012,\n\t\t\t\t\t8173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t205,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-212\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3343,\n\t\t\t\t\t4958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-146\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3415,\n\t\t\t\t\t4812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3313,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3207,\n\t\t\t\t\t4770\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3171,\n\t\t\t\t\t4720\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3073,\n\t\t\t\t\t4695\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3039,\n\t\t\t\t\t4717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t154\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3004,\n\t\t\t\t\t4871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t136,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3252,\n\t\t\t\t\t4942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3289,\n\t\t\t\t\t4978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4113,\n\t\t\t\t\t3859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4200,\n\t\t\t\t\t3815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4234,\n\t\t\t\t\t3777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4229,\n\t\t\t\t\t3757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4054,\n\t\t\t\t\t3570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3921,\n\t\t\t\t\t3563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3899,\n\t\t\t\t\t3633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3938,\n\t\t\t\t\t3705\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3996,\n\t\t\t\t\t3757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7956,\n\t\t\t\t\t6871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-167,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7777,\n\t\t\t\t\t6865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7634,\n\t\t\t\t\t6994\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7600,\n\t\t\t\t\t7032\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t194\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7594,\n\t\t\t\t\t7226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t127,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t-143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6455,\n\t\t\t\t\t7747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6258,\n\t\t\t\t\t7477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2846,\n\t\t\t\t\t2058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2925,\n\t\t\t\t\t1994\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-171\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2907,\n\t\t\t\t\t1770\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2793,\n\t\t\t\t\t1802\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2658,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2668,\n\t\t\t\t\t2038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2785,\n\t\t\t\t\t2057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7247,\n\t\t\t\t\t7056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t123,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7434,\n\t\t\t\t\t6952\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7447,\n\t\t\t\t\t6863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7510,\n\t\t\t\t\t6788\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7459,\n\t\t\t\t\t6665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7254,\n\t\t\t\t\t6687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7203,\n\t\t\t\t\t6651\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7104,\n\t\t\t\t\t6798\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7080,\n\t\t\t\t\t6856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7108,\n\t\t\t\t\t6884\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7162,\n\t\t\t\t\t6892\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t138\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7163,\n\t\t\t\t\t7030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7167,\n\t\t\t\t\t7069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4740,\n\t\t\t\t\t4889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4715,\n\t\t\t\t\t4819\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4734,\n\t\t\t\t\t4798\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4601,\n\t\t\t\t\t4774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4344,\n\t\t\t\t\t4652\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4258,\n\t\t\t\t\t4763\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4243,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4235,\n\t\t\t\t\t4866\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4240,\n\t\t\t\t\t4938\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t184,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4477,\n\t\t\t\t\t4941\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4620,\n\t\t\t\t\t4929\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4674,\n\t\t\t\t\t4987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4433,\n\t\t\t\t\t5138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4423,\n\t\t\t\t\t5081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4432,\n\t\t\t\t\t5044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4508,\n\t\t\t\t\t4964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4240,\n\t\t\t\t\t4938\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4147,\n\t\t\t\t\t4990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4136,\n\t\t\t\t\t5064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4220,\n\t\t\t\t\t5035\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4265,\n\t\t\t\t\t5096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4363,\n\t\t\t\t\t5118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4366,\n\t\t\t\t\t5141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t940,\n\t\t\t\t\t5583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t903,\n\t\t\t\t\t5551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t764,\n\t\t\t\t\t5648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t723,\n\t\t\t\t\t5680\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t719,\n\t\t\t\t\t5664\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t672,\n\t\t\t\t\t5687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t670,\n\t\t\t\t\t5615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t884,\n\t\t\t\t\t5875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5622,\n\t\t\t\t\t6493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t139,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5761,\n\t\t\t\t\t6448\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5808,\n\t\t\t\t\t6387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5872,\n\t\t\t\t\t6321\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5873,\n\t\t\t\t\t6293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5688,\n\t\t\t\t\t6064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5615,\n\t\t\t\t\t6130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5499,\n\t\t\t\t\t6282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5519,\n\t\t\t\t\t6389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3625,\n\t\t\t\t\t7042\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3714,\n\t\t\t\t\t7027\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3683,\n\t\t\t\t\t6916\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3695,\n\t\t\t\t\t6854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3555,\n\t\t\t\t\t6842\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-147,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3408,\n\t\t\t\t\t6901\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3418,\n\t\t\t\t\t6922\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3411,\n\t\t\t\t\t6931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3556,\n\t\t\t\t\t7015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5419,\n\t\t\t\t\t2452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5462,\n\t\t\t\t\t2533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5540,\n\t\t\t\t\t2477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5668,\n\t\t\t\t\t2374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5699,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5778,\n\t\t\t\t\t2235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5605,\n\t\t\t\t\t2044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5426,\n\t\t\t\t\t2174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5256,\n\t\t\t\t\t2255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5228,\n\t\t\t\t\t2338\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5233,\n\t\t\t\t\t2427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5290,\n\t\t\t\t\t2520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5321,\n\t\t\t\t\t2553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3143,\n\t\t\t\t\t4359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t173,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3316,\n\t\t\t\t\t4333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3323,\n\t\t\t\t\t4211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3235,\n\t\t\t\t\t4158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3130,\n\t\t\t\t\t3915\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3107,\n\t\t\t\t\t3979\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t124\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3091,\n\t\t\t\t\t4138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3065,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3020,\n\t\t\t\t\t4204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3002,\n\t\t\t\t\t4191\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2992,\n\t\t\t\t\t4255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3020,\n\t\t\t\t\t4332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2000,\n\t\t\t\t\t4887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2185,\n\t\t\t\t\t4816\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2169,\n\t\t\t\t\t4774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2246,\n\t\t\t\t\t4505\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2236,\n\t\t\t\t\t4470\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2279,\n\t\t\t\t\t4151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2268,\n\t\t\t\t\t4089\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2190,\n\t\t\t\t\t4057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2019,\n\t\t\t\t\t4010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1922,\n\t\t\t\t\t4157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1878,\n\t\t\t\t\t4204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1848,\n\t\t\t\t\t4227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1831,\n\t\t\t\t\t4222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1917,\n\t\t\t\t\t4450\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1842,\n\t\t\t\t\t4670\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1812,\n\t\t\t\t\t4697\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1982,\n\t\t\t\t\t4781\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1950,\n\t\t\t\t\t4925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4251,\n\t\t\t\t\t4043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4300,\n\t\t\t\t\t3963\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4261,\n\t\t\t\t\t3793\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4200,\n\t\t\t\t\t3815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4102,\n\t\t\t\t\t3942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4099,\n\t\t\t\t\t3999\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4192,\n\t\t\t\t\t4009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4226,\n\t\t\t\t\t4022\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2124,\n\t\t\t\t\t5859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2117,\n\t\t\t\t\t5794\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2095,\n\t\t\t\t\t5771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2003,\n\t\t\t\t\t5778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1907,\n\t\t\t\t\t5799\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2034,\n\t\t\t\t\t6280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7217,\n\t\t\t\t\t8101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7216,\n\t\t\t\t\t8096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6987,\n\t\t\t\t\t8292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t194,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t210,\n\t\t\t\t\t309\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-136,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6671,\n\t\t\t\t\t7398\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6752,\n\t\t\t\t\t7298\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6627,\n\t\t\t\t\t7222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6587,\n\t\t\t\t\t7251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6545,\n\t\t\t\t\t7387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6580,\n\t\t\t\t\t7420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4082,\n\t\t\t\t\t8067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4251,\n\t\t\t\t\t7860\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-137\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4349,\n\t\t\t\t\t7723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-152\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4283,\n\t\t\t\t\t7530\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4162,\n\t\t\t\t\t7580\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4121,\n\t\t\t\t\t7623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t185\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4063,\n\t\t\t\t\t7808\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t172\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3950,\n\t\t\t\t\t7980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-138,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3812,\n\t\t\t\t\t8047\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3826,\n\t\t\t\t\t8078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t159,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4012,\n\t\t\t\t\t8173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5615,\n\t\t\t\t\t6130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5614,\n\t\t\t\t\t6034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5740,\n\t\t\t\t\t5903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5483,\n\t\t\t\t\t5744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5379,\n\t\t\t\t\t5842\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5362,\n\t\t\t\t\t5906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t144\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5320,\n\t\t\t\t\t6050\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5435,\n\t\t\t\t\t6222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5417,\n\t\t\t\t\t6249\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5448,\n\t\t\t\t\t6268\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3705,\n\t\t\t\t\t7481\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3777,\n\t\t\t\t\t7397\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-174\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3800,\n\t\t\t\t\t7223\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3774,\n\t\t\t\t\t7137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3625,\n\t\t\t\t\t7042\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3566,\n\t\t\t\t\t7071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3458,\n\t\t\t\t\t7202\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3416,\n\t\t\t\t\t7267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3362,\n\t\t\t\t\t7276\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3438,\n\t\t\t\t\t7476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t145,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6475,\n\t\t\t\t\t3951\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6427,\n\t\t\t\t\t3783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-161,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6266,\n\t\t\t\t\t3739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6207,\n\t\t\t\t\t3733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6194,\n\t\t\t\t\t3712\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6147,\n\t\t\t\t\t3752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t224\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6128,\n\t\t\t\t\t4303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6134,\n\t\t\t\t\t4320\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6251,\n\t\t\t\t\t4417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6266,\n\t\t\t\t\t4312\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7465,\n\t\t\t\t\t5394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7502,\n\t\t\t\t\t5279\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7478,\n\t\t\t\t\t5167\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7526,\n\t\t\t\t\t5072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7563,\n\t\t\t\t\t5071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7533,\n\t\t\t\t\t4998\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7535,\n\t\t\t\t\t4966\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7430,\n\t\t\t\t\t4927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7406,\n\t\t\t\t\t4890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7307,\n\t\t\t\t\t4820\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7189,\n\t\t\t\t\t4864\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7139,\n\t\t\t\t\t4873\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-173,\n\t\t\t\t\t131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6966,\n\t\t\t\t\t5004\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7088,\n\t\t\t\t\t5200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7185,\n\t\t\t\t\t5383\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7238,\n\t\t\t\t\t5419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7264,\n\t\t\t\t\t5463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t152,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6210,\n\t\t\t\t\t6711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6079,\n\t\t\t\t\t6575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5905,\n\t\t\t\t\t6562\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5844,\n\t\t\t\t\t6711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6129,\n\t\t\t\t\t6879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1569,\n\t\t\t\t\t5583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t141,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t130,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1840,\n\t\t\t\t\t5485\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1929,\n\t\t\t\t\t5455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1908,\n\t\t\t\t\t5426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2002,\n\t\t\t\t\t5393\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1958,\n\t\t\t\t\t5260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1945,\n\t\t\t\t\t5265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1946,\n\t\t\t\t\t5235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1879,\n\t\t\t\t\t5226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1806,\n\t\t\t\t\t5197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1760,\n\t\t\t\t\t5232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1742,\n\t\t\t\t\t5226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1709,\n\t\t\t\t\t5166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1691,\n\t\t\t\t\t5156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1685,\n\t\t\t\t\t5181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1633,\n\t\t\t\t\t5164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1529,\n\t\t\t\t\t5196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1544,\n\t\t\t\t\t5215\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1451,\n\t\t\t\t\t5360\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1405,\n\t\t\t\t\t5496\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2511,\n\t\t\t\t\t2231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2497,\n\t\t\t\t\t2194\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-116\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2512,\n\t\t\t\t\t2078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2345,\n\t\t\t\t\t2035\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2234,\n\t\t\t\t\t2082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2229,\n\t\t\t\t\t2124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2175,\n\t\t\t\t\t2174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2280,\n\t\t\t\t\t2225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2384,\n\t\t\t\t\t2290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2387,\n\t\t\t\t\t2281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1274,\n\t\t\t\t\t3909\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1205,\n\t\t\t\t\t3894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1191,\n\t\t\t\t\t3968\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1064,\n\t\t\t\t\t3923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1042,\n\t\t\t\t\t4006\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1028,\n\t\t\t\t\t4116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1067,\n\t\t\t\t\t4134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1098,\n\t\t\t\t\t4188\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1157,\n\t\t\t\t\t4186\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1160,\n\t\t\t\t\t4197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2592,\n\t\t\t\t\t6801\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t209,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2801,\n\t\t\t\t\t6783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2818,\n\t\t\t\t\t6689\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-221,\n\t\t\t\t\t-105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2560,\n\t\t\t\t\t6594\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t6558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t6626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2419,\n\t\t\t\t\t6823\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2529,\n\t\t\t\t\t6885\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2546,\n\t\t\t\t\t6874\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3557,\n\t\t\t\t\t4068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3595,\n\t\t\t\t\t4063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3614,\n\t\t\t\t\t4064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3632,\n\t\t\t\t\t4028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3662,\n\t\t\t\t\t4009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3489,\n\t\t\t\t\t3918\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3458,\n\t\t\t\t\t4119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3535,\n\t\t\t\t\t4098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4347,\n\t\t\t\t\t3896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4290,\n\t\t\t\t\t3944\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4251,\n\t\t\t\t\t4043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4192,\n\t\t\t\t\t4009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4151,\n\t\t\t\t\t4066\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4117,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4185,\n\t\t\t\t\t4222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4202,\n\t\t\t\t\t4484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4283,\n\t\t\t\t\t4524\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1075,\n\t\t\t\t\t1279\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1201,\n\t\t\t\t\t1332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1206,\n\t\t\t\t\t1270\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1283,\n\t\t\t\t\t1233\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1251,\n\t\t\t\t\t1157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1274,\n\t\t\t\t\t1077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1306,\n\t\t\t\t\t1064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t-164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1158,\n\t\t\t\t\t771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1014,\n\t\t\t\t\t907\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t980,\n\t\t\t\t\t936\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t957,\n\t\t\t\t\t1002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t926,\n\t\t\t\t\t1101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t885,\n\t\t\t\t\t1326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t985,\n\t\t\t\t\t1402\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t980,\n\t\t\t\t\t1367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t908,\n\t\t\t\t\t1217\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3566,\n\t\t\t\t\t7071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3411,\n\t\t\t\t\t6931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3364,\n\t\t\t\t\t6927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3352,\n\t\t\t\t\t6933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3317,\n\t\t\t\t\t7134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3290,\n\t\t\t\t\t7253\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3416,\n\t\t\t\t\t7267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3695,\n\t\t\t\t\t6854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3725,\n\t\t\t\t\t6839\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3752,\n\t\t\t\t\t6755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-145,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3607,\n\t\t\t\t\t6673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3620,\n\t\t\t\t\t6628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3525,\n\t\t\t\t\t6556\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3457,\n\t\t\t\t\t6511\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-134,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3272,\n\t\t\t\t\t6458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3222,\n\t\t\t\t\t6649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3258,\n\t\t\t\t\t6672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3386,\n\t\t\t\t\t6729\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3471,\n\t\t\t\t\t6802\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2829,\n\t\t\t\t\t4727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2878,\n\t\t\t\t\t4621\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2981,\n\t\t\t\t\t4568\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3003,\n\t\t\t\t\t4418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2992,\n\t\t\t\t\t4255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2987,\n\t\t\t\t\t4181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-148,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2839,\n\t\t\t\t\t4131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2793,\n\t\t\t\t\t4125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2757,\n\t\t\t\t\t4140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2584,\n\t\t\t\t\t4081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2524,\n\t\t\t\t\t4105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2505,\n\t\t\t\t\t4177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2508,\n\t\t\t\t\t4531\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2452,\n\t\t\t\t\t4590\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2514,\n\t\t\t\t\t4668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t164,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2678,\n\t\t\t\t\t4717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2693,\n\t\t\t\t\t4805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2703,\n\t\t\t\t\t4818\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1646,\n\t\t\t\t\t3589\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1744,\n\t\t\t\t\t3386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1778,\n\t\t\t\t\t3310\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1726,\n\t\t\t\t\t3276\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t3232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1554,\n\t\t\t\t\t3576\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1574,\n\t\t\t\t\t3563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1593,\n\t\t\t\t\t3604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4229,\n\t\t\t\t\t6023\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t135,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-218\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4425,\n\t\t\t\t\t5690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4463,\n\t\t\t\t\t5694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t5611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4432,\n\t\t\t\t\t5559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4377,\n\t\t\t\t\t5558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4292,\n\t\t\t\t\t5519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4256,\n\t\t\t\t\t5542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4221,\n\t\t\t\t\t5526\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4204,\n\t\t\t\t\t5566\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t154\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4088,\n\t\t\t\t\t5720\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4083,\n\t\t\t\t\t5877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4142,\n\t\t\t\t\t6067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4329,\n\t\t\t\t\t5331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-213\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4363,\n\t\t\t\t\t5118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4220,\n\t\t\t\t\t5035\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4106,\n\t\t\t\t\t5096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4075,\n\t\t\t\t\t5162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4113,\n\t\t\t\t\t5245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4133,\n\t\t\t\t\t5254\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4184,\n\t\t\t\t\t5281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4218,\n\t\t\t\t\t5269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4277,\n\t\t\t\t\t5321\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6791,\n\t\t\t\t\t6859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6883,\n\t\t\t\t\t6852\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6856,\n\t\t\t\t\t6730\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6878,\n\t\t\t\t\t6631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6818,\n\t\t\t\t\t6605\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6781,\n\t\t\t\t\t6623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6706,\n\t\t\t\t\t6587\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6716,\n\t\t\t\t\t6752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6682,\n\t\t\t\t\t6835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6699,\n\t\t\t\t\t6837\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6713,\n\t\t\t\t\t6875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7600,\n\t\t\t\t\t7032\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7478,\n\t\t\t\t\t6965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7247,\n\t\t\t\t\t7056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7269,\n\t\t\t\t\t7149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7301,\n\t\t\t\t\t7369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7464,\n\t\t\t\t\t7444\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7497,\n\t\t\t\t\t7482\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-164\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4140,\n\t\t\t\t\t7603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4202,\n\t\t\t\t\t7326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4159,\n\t\t\t\t\t7291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4148,\n\t\t\t\t\t7303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4070,\n\t\t\t\t\t7282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4056,\n\t\t\t\t\t7309\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3866,\n\t\t\t\t\t7263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3837,\n\t\t\t\t\t7272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t125\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3777,\n\t\t\t\t\t7397\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3767,\n\t\t\t\t\t7434\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3838,\n\t\t\t\t\t7470\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3931,\n\t\t\t\t\t7519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3944,\n\t\t\t\t\t7541\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t177,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4121,\n\t\t\t\t\t7623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1748,\n\t\t\t\t\t250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-180,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1632,\n\t\t\t\t\t409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3800,\n\t\t\t\t\t6724\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3852,\n\t\t\t\t\t6677\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3942,\n\t\t\t\t\t6696\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3865,\n\t\t\t\t\t6503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3829,\n\t\t\t\t\t6436\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3782,\n\t\t\t\t\t6439\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3768,\n\t\t\t\t\t6423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3694,\n\t\t\t\t\t6515\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3612,\n\t\t\t\t\t6556\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3593,\n\t\t\t\t\t6554\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3607,\n\t\t\t\t\t6673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3738,\n\t\t\t\t\t6735\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5333,\n\t\t\t\t\t4099\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5437,\n\t\t\t\t\t4044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5357,\n\t\t\t\t\t3744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5325,\n\t\t\t\t\t3721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5296,\n\t\t\t\t\t3734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4974,\n\t\t\t\t\t3610\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4955,\n\t\t\t\t\t3656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4931,\n\t\t\t\t\t3714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4901,\n\t\t\t\t\t3810\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4946,\n\t\t\t\t\t3977\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4907,\n\t\t\t\t\t4094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4974,\n\t\t\t\t\t4214\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t133,\n\t\t\t\t\t-159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5741,\n\t\t\t\t\t3812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5792,\n\t\t\t\t\t3789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5517,\n\t\t\t\t\t3382\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5431,\n\t\t\t\t\t3450\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5407,\n\t\t\t\t\t3634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5311,\n\t\t\t\t\t3635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5325,\n\t\t\t\t\t3721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5402,\n\t\t\t\t\t3761\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1946,\n\t\t\t\t\t1240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2023,\n\t\t\t\t\t1165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2150,\n\t\t\t\t\t1117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2134,\n\t\t\t\t\t1028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1904,\n\t\t\t\t\t767\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1782,\n\t\t\t\t\t755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1760,\n\t\t\t\t\t769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1667,\n\t\t\t\t\t891\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1621,\n\t\t\t\t\t869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1608,\n\t\t\t\t\t926\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1626,\n\t\t\t\t\t987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1608,\n\t\t\t\t\t1065\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1644,\n\t\t\t\t\t1160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1588,\n\t\t\t\t\t4600\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1672,\n\t\t\t\t\t4600\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1679,\n\t\t\t\t\t4327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1643,\n\t\t\t\t\t4238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1589,\n\t\t\t\t\t4290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1568,\n\t\t\t\t\t4332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1563,\n\t\t\t\t\t4375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1552,\n\t\t\t\t\t4442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1504,\n\t\t\t\t\t4518\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t4563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1495,\n\t\t\t\t\t4584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2728,\n\t\t\t\t\t6124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-208\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2676,\n\t\t\t\t\t5902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2600,\n\t\t\t\t\t5778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2497,\n\t\t\t\t\t6097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2593,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2627,\n\t\t\t\t\t6119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2672,\n\t\t\t\t\t6181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5186,\n\t\t\t\t\t4789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5145,\n\t\t\t\t\t4552\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5127,\n\t\t\t\t\t4581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-123,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5004,\n\t\t\t\t\t4545\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4933,\n\t\t\t\t\t4628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4930,\n\t\t\t\t\t4644\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4898,\n\t\t\t\t\t4761\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5032,\n\t\t\t\t\t4817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5162,\n\t\t\t\t\t4835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1896,\n\t\t\t\t\t3625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1926,\n\t\t\t\t\t3603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1836,\n\t\t\t\t\t3413\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1646,\n\t\t\t\t\t3589\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1673,\n\t\t\t\t\t3620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1755,\n\t\t\t\t\t3665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1853,\n\t\t\t\t\t3718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1869,\n\t\t\t\t\t3716\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1568,\n\t\t\t\t\t4332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1554,\n\t\t\t\t\t4271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-203\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1469,\n\t\t\t\t\t4067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1434,\n\t\t\t\t\t4049\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-152,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1226,\n\t\t\t\t\t4002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t190\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1160,\n\t\t\t\t\t4197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1229,\n\t\t\t\t\t4256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1242,\n\t\t\t\t\t4288\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t153,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1408,\n\t\t\t\t\t4303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1522,\n\t\t\t\t\t4357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4204,\n\t\t\t\t\t5566\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4218,\n\t\t\t\t\t5544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4076,\n\t\t\t\t\t5481\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3993,\n\t\t\t\t\t5459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3858,\n\t\t\t\t\t5581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3985,\n\t\t\t\t\t5752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8433,\n\t\t\t\t\t5612\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8374,\n\t\t\t\t\t5572\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8300,\n\t\t\t\t\t5631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8319,\n\t\t\t\t\t5523\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8298,\n\t\t\t\t\t5490\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8215,\n\t\t\t\t\t5412\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8166,\n\t\t\t\t\t5375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8203,\n\t\t\t\t\t5629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8206,\n\t\t\t\t\t5657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8136,\n\t\t\t\t\t5791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8263,\n\t\t\t\t\t6093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-154,\n\t\t\t\t\t-149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8106,\n\t\t\t\t\t5340\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t166,\n\t\t\t\t\t-186\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8272,\n\t\t\t\t\t5154\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8304,\n\t\t\t\t\t5131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8344,\n\t\t\t\t\t5133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8185,\n\t\t\t\t\t4729\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-340,\n\t\t\t\t\t142\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7845,\n\t\t\t\t\t4871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7850,\n\t\t\t\t\t4925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7886,\n\t\t\t\t\t4933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7911,\n\t\t\t\t\t4938\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7932,\n\t\t\t\t\t4949\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7975,\n\t\t\t\t\t4937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t207\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7999,\n\t\t\t\t\t5144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7992,\n\t\t\t\t\t5190\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8035,\n\t\t\t\t\t5223\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8088,\n\t\t\t\t\t5336\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6535,\n\t\t\t\t\t3546\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6580,\n\t\t\t\t\t3396\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6490,\n\t\t\t\t\t3350\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6548,\n\t\t\t\t\t3266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6478,\n\t\t\t\t\t3245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6342,\n\t\t\t\t\t3205\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6210,\n\t\t\t\t\t3208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6297,\n\t\t\t\t\t3371\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6162,\n\t\t\t\t\t3519\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6138,\n\t\t\t\t\t3574\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6165,\n\t\t\t\t\t3703\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6156,\n\t\t\t\t\t3740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6207,\n\t\t\t\t\t3733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6427,\n\t\t\t\t\t3783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1158,\n\t\t\t\t\t771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1207,\n\t\t\t\t\t795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1186,\n\t\t\t\t\t725\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1055,\n\t\t\t\t\t639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t154\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t957,\n\t\t\t\t\t1002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t980,\n\t\t\t\t\t936\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t868,\n\t\t\t\t\t965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t153,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4844,\n\t\t\t\t\t4720\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4933,\n\t\t\t\t\t4628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4890,\n\t\t\t\t\t4647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4892,\n\t\t\t\t\t4636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4849,\n\t\t\t\t\t4615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4833,\n\t\t\t\t\t4595\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4814,\n\t\t\t\t\t4528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4757,\n\t\t\t\t\t4537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4727,\n\t\t\t\t\t4595\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4718,\n\t\t\t\t\t4750\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4734,\n\t\t\t\t\t4798\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4748,\n\t\t\t\t\t4812\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3933,\n\t\t\t\t\t4351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4124,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4117,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4151,\n\t\t\t\t\t4066\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4102,\n\t\t\t\t\t3942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3996,\n\t\t\t\t\t3757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3886,\n\t\t\t\t\t3929\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3738,\n\t\t\t\t\t3875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3751,\n\t\t\t\t\t3855\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3717,\n\t\t\t\t\t3920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3668,\n\t\t\t\t\t4003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3632,\n\t\t\t\t\t4028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3657,\n\t\t\t\t\t4095\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t157\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3678,\n\t\t\t\t\t4252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3803,\n\t\t\t\t\t4315\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1671,\n\t\t\t\t\t5871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1819,\n\t\t\t\t\t5889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1907,\n\t\t\t\t\t5799\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2095,\n\t\t\t\t\t5771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2150,\n\t\t\t\t\t5755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2158,\n\t\t\t\t\t5658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-166,\n\t\t\t\t\t-100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1942,\n\t\t\t\t\t5490\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1929,\n\t\t\t\t\t5455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1569,\n\t\t\t\t\t5583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1477,\n\t\t\t\t\t5937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1541,\n\t\t\t\t\t5959\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t125,\n\t\t\t\t\t-109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6147,\n\t\t\t\t\t3752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6156,\n\t\t\t\t\t3740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6026,\n\t\t\t\t\t3809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6000,\n\t\t\t\t\t4266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6062,\n\t\t\t\t\t4310\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6468,\n\t\t\t\t\t8082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t153,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6753,\n\t\t\t\t\t8051\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6835,\n\t\t\t\t\t7862\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6652,\n\t\t\t\t\t7871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6629,\n\t\t\t\t\t7836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6492,\n\t\t\t\t\t7771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4934,\n\t\t\t\t\t7635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4838,\n\t\t\t\t\t7721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4930,\n\t\t\t\t\t8172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-138,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-281\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1595,\n\t\t\t\t\t1721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1582,\n\t\t\t\t\t1643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1592,\n\t\t\t\t\t1460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1610,\n\t\t\t\t\t1456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1397,\n\t\t\t\t\t1491\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1342,\n\t\t\t\t\t1501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1353,\n\t\t\t\t\t1612\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1542,\n\t\t\t\t\t1765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3950,\n\t\t\t\t\t7980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t-172\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3944,\n\t\t\t\t\t7541\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3838,\n\t\t\t\t\t7470\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3636,\n\t\t\t\t\t7762\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3588,\n\t\t\t\t\t7881\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3826,\n\t\t\t\t\t8078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1879,\n\t\t\t\t\t5226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1946,\n\t\t\t\t\t5235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1956,\n\t\t\t\t\t5169\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1978,\n\t\t\t\t\t5168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2035,\n\t\t\t\t\t5039\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2028,\n\t\t\t\t\t5025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1953,\n\t\t\t\t\t4940\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1735,\n\t\t\t\t\t5067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1760,\n\t\t\t\t\t5232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4844,\n\t\t\t\t\t3836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4931,\n\t\t\t\t\t3714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4680,\n\t\t\t\t\t3694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4628,\n\t\t\t\t\t3752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4491,\n\t\t\t\t\t3746\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4488,\n\t\t\t\t\t3805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4515,\n\t\t\t\t\t3824\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4539,\n\t\t\t\t\t3943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4557,\n\t\t\t\t\t3932\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3336,\n\t\t\t\t\t7361\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3290,\n\t\t\t\t\t7253\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3312,\n\t\t\t\t\t7180\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3228,\n\t\t\t\t\t7165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-156,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3033,\n\t\t\t\t\t7322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3216,\n\t\t\t\t\t7408\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4961,\n\t\t\t\t\t5978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4998,\n\t\t\t\t\t5982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5018,\n\t\t\t\t\t5962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5019,\n\t\t\t\t\t5714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5069,\n\t\t\t\t\t5607\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5062,\n\t\t\t\t\t5578\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5025,\n\t\t\t\t\t5522\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4972,\n\t\t\t\t\t5503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4853,\n\t\t\t\t\t5499\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4829,\n\t\t\t\t\t5573\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4781,\n\t\t\t\t\t5581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4724,\n\t\t\t\t\t5609\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4686,\n\t\t\t\t\t5647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4668,\n\t\t\t\t\t5649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4676,\n\t\t\t\t\t5719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t146\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4619,\n\t\t\t\t\t5865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4608,\n\t\t\t\t\t5920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4635,\n\t\t\t\t\t5931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4832,\n\t\t\t\t\t5956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4852,\n\t\t\t\t\t6007\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4874,\n\t\t\t\t\t6005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2705,\n\t\t\t\t\t3948\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t123,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2828,\n\t\t\t\t\t3976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2836,\n\t\t\t\t\t3953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2905,\n\t\t\t\t\t3795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2846,\n\t\t\t\t\t3698\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2660,\n\t\t\t\t\t3855\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2691,\n\t\t\t\t\t3972\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6149,\n\t\t\t\t\t7119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6256,\n\t\t\t\t\t7104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6258,\n\t\t\t\t\t7063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6205,\n\t\t\t\t\t6945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6178,\n\t\t\t\t\t6888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6167,\n\t\t\t\t\t6896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6050,\n\t\t\t\t\t7014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5966,\n\t\t\t\t\t7067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6009,\n\t\t\t\t\t7160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8433,\n\t\t\t\t\t5612\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8304,\n\t\t\t\t\t5131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8106,\n\t\t\t\t\t5340\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8166,\n\t\t\t\t\t5375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8298,\n\t\t\t\t\t5490\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8300,\n\t\t\t\t\t5631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4472,\n\t\t\t\t\t6289\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4735,\n\t\t\t\t\t6210\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4825,\n\t\t\t\t\t6060\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4832,\n\t\t\t\t\t5956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4635,\n\t\t\t\t\t5931\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4557,\n\t\t\t\t\t6034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4377,\n\t\t\t\t\t6111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4384,\n\t\t\t\t\t6181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4365,\n\t\t\t\t\t6304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6665,\n\t\t\t\t\t8364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6448,\n\t\t\t\t\t8281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6484,\n\t\t\t\t\t8682\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t230,\n\t\t\t\t\t124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-193\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-144,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2059,\n\t\t\t\t\t2369\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2171,\n\t\t\t\t\t2167\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2229,\n\t\t\t\t\t2124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2102,\n\t\t\t\t\t2053\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1950,\n\t\t\t\t\t2005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t1976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1650,\n\t\t\t\t\t2175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1628,\n\t\t\t\t\t2239\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t123,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1852,\n\t\t\t\t\t2283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1929,\n\t\t\t\t\t2361\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t130,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1643,\n\t\t\t\t\t2556\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1755,\n\t\t\t\t\t2452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t-124\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1874,\n\t\t\t\t\t2328\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1628,\n\t\t\t\t\t2239\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1487,\n\t\t\t\t\t2464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1451,\n\t\t\t\t\t2501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1460,\n\t\t\t\t\t2533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1502,\n\t\t\t\t\t2551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1501,\n\t\t\t\t\t2559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1233,\n\t\t\t\t\t2008\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1261,\n\t\t\t\t\t1794\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1196,\n\t\t\t\t\t1711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1193,\n\t\t\t\t\t1688\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1052,\n\t\t\t\t\t1747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1014,\n\t\t\t\t\t1828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1114,\n\t\t\t\t\t2000\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3272,\n\t\t\t\t\t6458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t6439\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2948,\n\t\t\t\t\t6077\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2906,\n\t\t\t\t\t6114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2841,\n\t\t\t\t\t6248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2850,\n\t\t\t\t\t6299\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t198\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2918,\n\t\t\t\t\t6497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2924,\n\t\t\t\t\t6593\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t279,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3203,\n\t\t\t\t\t6627\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1709,\n\t\t\t\t\t5166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1735,\n\t\t\t\t\t5067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1953,\n\t\t\t\t\t4940\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1812,\n\t\t\t\t\t4697\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1756,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1716,\n\t\t\t\t\t4772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1613,\n\t\t\t\t\t4902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1620,\n\t\t\t\t\t5036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t128\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1685,\n\t\t\t\t\t5181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2384,\n\t\t\t\t\t5072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-125,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2259,\n\t\t\t\t\t4981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2277,\n\t\t\t\t\t4946\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2193,\n\t\t\t\t\t4886\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2180,\n\t\t\t\t\t4861\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2000,\n\t\t\t\t\t4887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1950,\n\t\t\t\t\t4925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2028,\n\t\t\t\t\t5025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2208,\n\t\t\t\t\t5082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2348,\n\t\t\t\t\t5114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4793,\n\t\t\t\t\t7048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4947,\n\t\t\t\t\t7427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t177,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-345,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2869,\n\t\t\t\t\t5146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2893,\n\t\t\t\t\t5106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3056,\n\t\t\t\t\t4893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3039,\n\t\t\t\t\t4717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2958,\n\t\t\t\t\t4607\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2829,\n\t\t\t\t\t4727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2693,\n\t\t\t\t\t5064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2700,\n\t\t\t\t\t5165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2759,\n\t\t\t\t\t5212\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6029,\n\t\t\t\t\t5010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6044,\n\t\t\t\t\t5008\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6048,\n\t\t\t\t\t4978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5964,\n\t\t\t\t\t4727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5780,\n\t\t\t\t\t4748\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5691,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5711,\n\t\t\t\t\t4805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5685,\n\t\t\t\t\t4970\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5716,\n\t\t\t\t\t5010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5892,\n\t\t\t\t\t5027\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5919,\n\t\t\t\t\t5043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5999,\n\t\t\t\t\t5057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3408,\n\t\t\t\t\t6901\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3386,\n\t\t\t\t\t6729\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3258,\n\t\t\t\t\t6672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2924,\n\t\t\t\t\t6593\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2845,\n\t\t\t\t\t6745\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t134\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3114,\n\t\t\t\t\t6885\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t184,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3298,\n\t\t\t\t\t6872\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3309,\n\t\t\t\t\t6904\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3364,\n\t\t\t\t\t6927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2006,\n\t\t\t\t\t5538\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2136,\n\t\t\t\t\t5438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2192,\n\t\t\t\t\t5326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t136,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2328,\n\t\t\t\t\t5322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2337,\n\t\t\t\t\t5263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2396,\n\t\t\t\t\t5175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2348,\n\t\t\t\t\t5114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2208,\n\t\t\t\t\t5082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2035,\n\t\t\t\t\t5039\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1956,\n\t\t\t\t\t5169\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1958,\n\t\t\t\t\t5260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1908,\n\t\t\t\t\t5426\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1942,\n\t\t\t\t\t5490\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2647,\n\t\t\t\t\t2710\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t130,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2870,\n\t\t\t\t\t2742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2915,\n\t\t\t\t\t2497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3036,\n\t\t\t\t\t2375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3040,\n\t\t\t\t\t2290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3075,\n\t\t\t\t\t2161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-150,\n\t\t\t\t\t-167\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2846,\n\t\t\t\t\t2058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2668,\n\t\t\t\t\t2038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2600,\n\t\t\t\t\t2002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2541,\n\t\t\t\t\t2011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t183\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2511,\n\t\t\t\t\t2231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2384,\n\t\t\t\t\t2290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2278,\n\t\t\t\t\t2375\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2161,\n\t\t\t\t\t2900\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2160,\n\t\t\t\t\t2926\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2194,\n\t\t\t\t\t2944\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2226,\n\t\t\t\t\t2906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t127,\n\t\t\t\t\t100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2353,\n\t\t\t\t\t3006\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2505,\n\t\t\t\t\t4177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2345,\n\t\t\t\t\t4119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2299,\n\t\t\t\t\t4082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2236,\n\t\t\t\t\t4470\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2290,\n\t\t\t\t\t4476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2394,\n\t\t\t\t\t4513\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4070,\n\t\t\t\t\t7282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4159,\n\t\t\t\t\t7291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4223,\n\t\t\t\t\t7310\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4281,\n\t\t\t\t\t7272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4298,\n\t\t\t\t\t7274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4356,\n\t\t\t\t\t7251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4419,\n\t\t\t\t\t7249\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4430,\n\t\t\t\t\t7155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4405,\n\t\t\t\t\t6836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4231,\n\t\t\t\t\t6879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4083,\n\t\t\t\t\t6896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4013,\n\t\t\t\t\t6942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3992,\n\t\t\t\t\t7009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3995,\n\t\t\t\t\t7021\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4023,\n\t\t\t\t\t7080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t147\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3970,\n\t\t\t\t\t7227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4781,\n\t\t\t\t\t5581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4853,\n\t\t\t\t\t5499\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4972,\n\t\t\t\t\t5503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5054,\n\t\t\t\t\t5454\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4905,\n\t\t\t\t\t5140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4912,\n\t\t\t\t\t5068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4809,\n\t\t\t\t\t5061\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4606,\n\t\t\t\t\t5152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4538,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4464,\n\t\t\t\t\t5193\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4433,\n\t\t\t\t\t5138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4366,\n\t\t\t\t\t5141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t196\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4336,\n\t\t\t\t\t5337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4371,\n\t\t\t\t\t5335\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4430,\n\t\t\t\t\t5370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4461,\n\t\t\t\t\t5398\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4408,\n\t\t\t\t\t5534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t5611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t5639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4641,\n\t\t\t\t\t5627\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4686,\n\t\t\t\t\t5647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2745,\n\t\t\t\t\t7260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2787,\n\t\t\t\t\t7232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2868,\n\t\t\t\t\t7020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2592,\n\t\t\t\t\t6801\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2529,\n\t\t\t\t\t6885\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2453,\n\t\t\t\t\t7148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t7213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1975,\n\t\t\t\t\t3064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2110,\n\t\t\t\t\t2910\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2051,\n\t\t\t\t\t2791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2020,\n\t\t\t\t\t2727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1919,\n\t\t\t\t\t2730\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1899,\n\t\t\t\t\t3069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1942,\n\t\t\t\t\t3115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1610,\n\t\t\t\t\t1456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1723,\n\t\t\t\t\t1444\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1661,\n\t\t\t\t\t1281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1541,\n\t\t\t\t\t1266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1303,\n\t\t\t\t\t1250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1206,\n\t\t\t\t\t1270\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1197,\n\t\t\t\t\t1352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1230,\n\t\t\t\t\t1379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1370,\n\t\t\t\t\t1405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1363,\n\t\t\t\t\t1449\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t5194\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3455,\n\t\t\t\t\t5140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3536,\n\t\t\t\t\t5105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3585,\n\t\t\t\t\t4796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3516,\n\t\t\t\t\t4766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3343,\n\t\t\t\t\t4958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3289,\n\t\t\t\t\t4978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3389,\n\t\t\t\t\t5032\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3408,\n\t\t\t\t\t5168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1599,\n\t\t\t\t\t1080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1608,\n\t\t\t\t\t1065\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1608,\n\t\t\t\t\t926\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1614,\n\t\t\t\t\t908\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t706\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1415,\n\t\t\t\t\t663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1323,\n\t\t\t\t\t663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1262,\n\t\t\t\t\t702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1134,\n\t\t\t\t\t681\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1207,\n\t\t\t\t\t795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1306,\n\t\t\t\t\t1064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3558,\n\t\t\t\t\t3629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3621,\n\t\t\t\t\t3641\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3647,\n\t\t\t\t\t3660\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3679,\n\t\t\t\t\t3628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3680,\n\t\t\t\t\t3559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3705,\n\t\t\t\t\t3586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3743,\n\t\t\t\t\t3537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3720,\n\t\t\t\t\t3427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3699,\n\t\t\t\t\t3386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3626,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3626,\n\t\t\t\t\t3427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3443,\n\t\t\t\t\t3390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3427,\n\t\t\t\t\t3456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3449,\n\t\t\t\t\t3614\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3509,\n\t\t\t\t\t3675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4377,\n\t\t\t\t\t5558\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4461,\n\t\t\t\t\t5398\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4371,\n\t\t\t\t\t5335\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4336,\n\t\t\t\t\t5337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4277,\n\t\t\t\t\t5321\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4184,\n\t\t\t\t\t5281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4113,\n\t\t\t\t\t5245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4053,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4010,\n\t\t\t\t\t5342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4022,\n\t\t\t\t\t5431\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4218,\n\t\t\t\t\t5544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4256,\n\t\t\t\t\t5542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5415,\n\t\t\t\t\t4796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5592,\n\t\t\t\t\t4816\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5652,\n\t\t\t\t\t4765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5605,\n\t\t\t\t\t4366\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5546,\n\t\t\t\t\t4390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-165,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5381,\n\t\t\t\t\t4481\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5196,\n\t\t\t\t\t4512\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5162,\n\t\t\t\t\t4523\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5321,\n\t\t\t\t\t4809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6457,\n\t\t\t\t\t7107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6487,\n\t\t\t\t\t7101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6641,\n\t\t\t\t\t6943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6682,\n\t\t\t\t\t6835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6716,\n\t\t\t\t\t6752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6628,\n\t\t\t\t\t6445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6417,\n\t\t\t\t\t6385\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6354,\n\t\t\t\t\t6374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6045,\n\t\t\t\t\t6565\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6210,\n\t\t\t\t\t6711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6178,\n\t\t\t\t\t6888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6258,\n\t\t\t\t\t7063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6281,\n\t\t\t\t\t7115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6328,\n\t\t\t\t\t7130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6888,\n\t\t\t\t\t5113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7139,\n\t\t\t\t\t4873\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7070,\n\t\t\t\t\t4807\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7130,\n\t\t\t\t\t4704\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7021,\n\t\t\t\t\t4507\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6702,\n\t\t\t\t\t4603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6814,\n\t\t\t\t\t5122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1760,\n\t\t\t\t\t769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1618,\n\t\t\t\t\t489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1602,\n\t\t\t\t\t487\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1540,\n\t\t\t\t\t570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1502,\n\t\t\t\t\t662\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1614,\n\t\t\t\t\t908\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1621,\n\t\t\t\t\t869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2953,\n\t\t\t\t\t7058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3085,\n\t\t\t\t\t6967\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3130,\n\t\t\t\t\t6933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3131,\n\t\t\t\t\t6913\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3153,\n\t\t\t\t\t6894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2845,\n\t\t\t\t\t6745\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2922,\n\t\t\t\t\t7062\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6921,\n\t\t\t\t\t7793\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6869,\n\t\t\t\t\t7721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6841,\n\t\t\t\t\t7691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6800,\n\t\t\t\t\t7677\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6683,\n\t\t\t\t\t7708\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6611,\n\t\t\t\t\t7733\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6491,\n\t\t\t\t\t7734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6455,\n\t\t\t\t\t7747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6475,\n\t\t\t\t\t7768\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6652,\n\t\t\t\t\t7871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5955,\n\t\t\t\t\t5252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6057,\n\t\t\t\t\t5229\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6067,\n\t\t\t\t\t5215\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6159,\n\t\t\t\t\t5081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6073,\n\t\t\t\t\t5066\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6029,\n\t\t\t\t\t5010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5919,\n\t\t\t\t\t5043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5716,\n\t\t\t\t\t5010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5643,\n\t\t\t\t\t4984\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5613,\n\t\t\t\t\t5051\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5610,\n\t\t\t\t\t5126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5626,\n\t\t\t\t\t5176\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5663,\n\t\t\t\t\t5185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t154,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5907,\n\t\t\t\t\t5280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6656,\n\t\t\t\t\t6380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6854,\n\t\t\t\t\t6261\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-133\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6783,\n\t\t\t\t\t6122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6633,\n\t\t\t\t\t6143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6463,\n\t\t\t\t\t6371\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4194,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3819,\n\t\t\t\t\t2390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3778,\n\t\t\t\t\t2455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3739,\n\t\t\t\t\t2454\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3877,\n\t\t\t\t\t2604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4036,\n\t\t\t\t\t2604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4112,\n\t\t\t\t\t2642\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3185,\n\t\t\t\t\t1649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3211,\n\t\t\t\t\t1606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-201\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3132,\n\t\t\t\t\t1405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3015,\n\t\t\t\t\t1244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2961,\n\t\t\t\t\t1295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2765,\n\t\t\t\t\t1304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2804,\n\t\t\t\t\t1672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2865,\n\t\t\t\t\t1746\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3009,\n\t\t\t\t\t1757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1020,\n\t\t\t\t\t5269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1001,\n\t\t\t\t\t5238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t179,\n\t\t\t\t\t-132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1185,\n\t\t\t\t\t4977\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t778,\n\t\t\t\t\t4789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t752,\n\t\t\t\t\t4963\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t892,\n\t\t\t\t\t5129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t901,\n\t\t\t\t\t5173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t911,\n\t\t\t\t\t5300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t939,\n\t\t\t\t\t3393\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1135,\n\t\t\t\t\t3149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1149,\n\t\t\t\t\t3108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t952,\n\t\t\t\t\t3118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t925,\n\t\t\t\t\t3138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t806,\n\t\t\t\t\t3112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t777,\n\t\t\t\t\t3096\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t763,\n\t\t\t\t\t3131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t670,\n\t\t\t\t\t3237\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t716,\n\t\t\t\t\t3410\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t899,\n\t\t\t\t\t3432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1219,\n\t\t\t\t\t5304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1366,\n\t\t\t\t\t5199\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1312,\n\t\t\t\t\t4983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1001,\n\t\t\t\t\t5238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1167,\n\t\t\t\t\t5337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1193,\n\t\t\t\t\t5381\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2411,\n\t\t\t\t\t3129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2226,\n\t\t\t\t\t2906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2160,\n\t\t\t\t\t2926\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1975,\n\t\t\t\t\t3064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2019,\n\t\t\t\t\t3144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2219,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t3856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1584,\n\t\t\t\t\t3837\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1733,\n\t\t\t\t\t3722\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1804,\n\t\t\t\t\t3675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1673,\n\t\t\t\t\t3620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1574,\n\t\t\t\t\t3563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1505,\n\t\t\t\t\t3614\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-161,\n\t\t\t\t\t154\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1287,\n\t\t\t\t\t3771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t194,\n\t\t\t\t\t107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1481,\n\t\t\t\t\t3878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5627,\n\t\t\t\t\t5254\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5622,\n\t\t\t\t\t5231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5610,\n\t\t\t\t\t5126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5643,\n\t\t\t\t\t4984\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5711,\n\t\t\t\t\t4805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5592,\n\t\t\t\t\t4816\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5504,\n\t\t\t\t\t4832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5475,\n\t\t\t\t\t5130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5451,\n\t\t\t\t\t5142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5487,\n\t\t\t\t\t5240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5565,\n\t\t\t\t\t5244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3020,\n\t\t\t\t\t4204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3065,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3107,\n\t\t\t\t\t3979\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2986,\n\t\t\t\t\t3895\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2836,\n\t\t\t\t\t3953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2705,\n\t\t\t\t\t3948\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2729,\n\t\t\t\t\t4095\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2793,\n\t\t\t\t\t4125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2987,\n\t\t\t\t\t4181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1643,\n\t\t\t\t\t4238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t185,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1828,\n\t\t\t\t\t4251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1848,\n\t\t\t\t\t4227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1922,\n\t\t\t\t\t4157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1998,\n\t\t\t\t\t4024\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1925,\n\t\t\t\t\t3960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t3911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1794,\n\t\t\t\t\t3840\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-210,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1497,\n\t\t\t\t\t3856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1522,\n\t\t\t\t\t4038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1554,\n\t\t\t\t\t4271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t3702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-123,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1896,\n\t\t\t\t\t3625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1853,\n\t\t\t\t\t3718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1733,\n\t\t\t\t\t3722\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t3911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t129,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1925,\n\t\t\t\t\t3960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1998,\n\t\t\t\t\t4024\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3193,\n\t\t\t\t\t2419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3238,\n\t\t\t\t\t2379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3307,\n\t\t\t\t\t2377\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3276,\n\t\t\t\t\t2319\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-155\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3185,\n\t\t\t\t\t2164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3154,\n\t\t\t\t\t2160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3040,\n\t\t\t\t\t2290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3142,\n\t\t\t\t\t2394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4155,\n\t\t\t\t\t6067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4083,\n\t\t\t\t\t5877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3890,\n\t\t\t\t\t5989\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3774,\n\t\t\t\t\t6018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3752,\n\t\t\t\t\t6019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t138\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3738,\n\t\t\t\t\t6157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3778,\n\t\t\t\t\t6235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3746,\n\t\t\t\t\t6394\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3829,\n\t\t\t\t\t6436\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t548,\n\t\t\t\t\t1913\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t540,\n\t\t\t\t\t1884\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t603,\n\t\t\t\t\t1877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t149,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t752,\n\t\t\t\t\t1894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t817,\n\t\t\t\t\t1451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t760,\n\t\t\t\t\t1384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7828,\n\t\t\t\t\t6291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7938,\n\t\t\t\t\t6152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7539,\n\t\t\t\t\t5906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7445,\n\t\t\t\t\t5845\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t194\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7417,\n\t\t\t\t\t6039\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7590,\n\t\t\t\t\t6215\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7776,\n\t\t\t\t\t6267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7833,\n\t\t\t\t\t6339\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7660,\n\t\t\t\t\t6324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7743,\n\t\t\t\t\t6337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7733,\n\t\t\t\t\t6295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7417,\n\t\t\t\t\t6039\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-189\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7433,\n\t\t\t\t\t5850\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7416,\n\t\t\t\t\t5880\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7373,\n\t\t\t\t\t5882\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7364,\n\t\t\t\t\t5872\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7356,\n\t\t\t\t\t5923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7295,\n\t\t\t\t\t6106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7234,\n\t\t\t\t\t6143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7388,\n\t\t\t\t\t6283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7448,\n\t\t\t\t\t6355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7535,\n\t\t\t\t\t6405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1072,\n\t\t\t\t\t2718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1106,\n\t\t\t\t\t2611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1045,\n\t\t\t\t\t2496\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t940,\n\t\t\t\t\t2412\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t927,\n\t\t\t\t\t2425\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t783,\n\t\t\t\t\t2440\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t763,\n\t\t\t\t\t2465\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t783,\n\t\t\t\t\t2477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t849,\n\t\t\t\t\t2614\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t983,\n\t\t\t\t\t2760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3317,\n\t\t\t\t\t3303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3338,\n\t\t\t\t\t3258\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3382,\n\t\t\t\t\t3107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3412,\n\t\t\t\t\t3054\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3217,\n\t\t\t\t\t2956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3157,\n\t\t\t\t\t2942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3135,\n\t\t\t\t\t2936\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3047,\n\t\t\t\t\t2925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t159\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t3084\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3115,\n\t\t\t\t\t3113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3083,\n\t\t\t\t\t3157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3093,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3152,\n\t\t\t\t\t3295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3237,\n\t\t\t\t\t3315\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4618,\n\t\t\t\t\t3248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4695,\n\t\t\t\t\t2995\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4662,\n\t\t\t\t\t2955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4520,\n\t\t\t\t\t2955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4434,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4375,\n\t\t\t\t\t3015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4217,\n\t\t\t\t\t2943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4170,\n\t\t\t\t\t3054\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4248,\n\t\t\t\t\t3228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4339,\n\t\t\t\t\t3306\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t773,\n\t\t\t\t\t3885\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t877,\n\t\t\t\t\t3686\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t801,\n\t\t\t\t\t3626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t759,\n\t\t\t\t\t3628\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-265,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t494,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t132\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t666,\n\t\t\t\t\t3905\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6909,\n\t\t\t\t\t7304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6878,\n\t\t\t\t\t7151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6895,\n\t\t\t\t\t7144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-163,\n\t\t\t\t\t-121\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6732,\n\t\t\t\t\t7023\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6487,\n\t\t\t\t\t7101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6583,\n\t\t\t\t\t7187\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6752,\n\t\t\t\t\t7298\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1024,\n\t\t\t\t\t5913\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-123,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-205,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t218,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4666,\n\t\t\t\t\t8086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4655,\n\t\t\t\t\t7817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4587,\n\t\t\t\t\t7851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4477,\n\t\t\t\t\t7974\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4465,\n\t\t\t\t\t8030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4596,\n\t\t\t\t\t8228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4636,\n\t\t\t\t\t8166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5217,\n\t\t\t\t\t6370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5287,\n\t\t\t\t\t6337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5290,\n\t\t\t\t\t6320\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5390,\n\t\t\t\t\t6323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5435,\n\t\t\t\t\t6222\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5320,\n\t\t\t\t\t6050\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-124\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5096,\n\t\t\t\t\t5928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4998,\n\t\t\t\t\t5982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4961,\n\t\t\t\t\t5978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4852,\n\t\t\t\t\t6007\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4825,\n\t\t\t\t\t6060\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4827,\n\t\t\t\t\t6123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5052,\n\t\t\t\t\t6165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5053,\n\t\t\t\t\t6228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5155,\n\t\t\t\t\t6329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5182,\n\t\t\t\t\t6387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1070,\n\t\t\t\t\t2135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1097,\n\t\t\t\t\t2002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1014,\n\t\t\t\t\t1828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t794,\n\t\t\t\t\t1865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t753,\n\t\t\t\t\t1876\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t752,\n\t\t\t\t\t1894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t799,\n\t\t\t\t\t1925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t773,\n\t\t\t\t\t1992\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t796,\n\t\t\t\t\t2056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t954,\n\t\t\t\t\t2157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2707,\n\t\t\t\t\t1137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2667,\n\t\t\t\t\t937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2533,\n\t\t\t\t\t887\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2549,\n\t\t\t\t\t937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t966\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2444,\n\t\t\t\t\t954\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2444,\n\t\t\t\t\t1003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2477,\n\t\t\t\t\t1088\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2665,\n\t\t\t\t\t1329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6724,\n\t\t\t\t\t5888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6668,\n\t\t\t\t\t5597\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6634,\n\t\t\t\t\t5599\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6524,\n\t\t\t\t\t5591\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6304,\n\t\t\t\t\t5584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6235,\n\t\t\t\t\t5581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6152,\n\t\t\t\t\t5568\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6106,\n\t\t\t\t\t5685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t142,\n\t\t\t\t\t173\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6248,\n\t\t\t\t\t5858\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t128,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6397,\n\t\t\t\t\t5964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6497,\n\t\t\t\t\t6066\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7269,\n\t\t\t\t\t5906\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7356,\n\t\t\t\t\t5923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7304,\n\t\t\t\t\t5880\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7313,\n\t\t\t\t\t5765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6903,\n\t\t\t\t\t5895\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6965,\n\t\t\t\t\t6025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6972,\n\t\t\t\t\t5958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2646,\n\t\t\t\t\t6458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2697,\n\t\t\t\t\t6437\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2711,\n\t\t\t\t\t6332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2735,\n\t\t\t\t\t6234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2794,\n\t\t\t\t\t6248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2759,\n\t\t\t\t\t6161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2672,\n\t\t\t\t\t6181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2593,\n\t\t\t\t\t6121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2470,\n\t\t\t\t\t6207\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2444,\n\t\t\t\t\t6368\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2501,\n\t\t\t\t\t6464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2020,\n\t\t\t\t\t2727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2030,\n\t\t\t\t\t2379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1929,\n\t\t\t\t\t2361\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1755,\n\t\t\t\t\t2452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1710,\n\t\t\t\t\t2590\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1887,\n\t\t\t\t\t2661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t838,\n\t\t\t\t\t2636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t783,\n\t\t\t\t\t2477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t720,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t588,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t437,\n\t\t\t\t\t2611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t546,\n\t\t\t\t\t2659\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t789,\n\t\t\t\t\t2718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6211,\n\t\t\t\t\t5000\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6243,\n\t\t\t\t\t4974\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6440,\n\t\t\t\t\t4552\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t-93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6251,\n\t\t\t\t\t4417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6062,\n\t\t\t\t\t4310\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5979,\n\t\t\t\t\t4642\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6048,\n\t\t\t\t\t4978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6159,\n\t\t\t\t\t5081\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5062,\n\t\t\t\t\t5578\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5188,\n\t\t\t\t\t5557\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5389,\n\t\t\t\t\t5557\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5422,\n\t\t\t\t\t5542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5588,\n\t\t\t\t\t5333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5568,\n\t\t\t\t\t5334\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5560,\n\t\t\t\t\t5305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5573,\n\t\t\t\t\t5308\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5565,\n\t\t\t\t\t5244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5451,\n\t\t\t\t\t5142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5394,\n\t\t\t\t\t5196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5307,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5135,\n\t\t\t\t\t5367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5054,\n\t\t\t\t\t5454\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5025,\n\t\t\t\t\t5522\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3612,\n\t\t\t\t\t6556\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3768,\n\t\t\t\t\t6423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3778,\n\t\t\t\t\t6235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3380,\n\t\t\t\t\t6300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t6439\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3525,\n\t\t\t\t\t6556\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3328,\n\t\t\t\t\t3551\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3405,\n\t\t\t\t\t3513\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3427,\n\t\t\t\t\t3456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3415,\n\t\t\t\t\t3258\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3317,\n\t\t\t\t\t3303\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3152,\n\t\t\t\t\t3295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t3293\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3034,\n\t\t\t\t\t3297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3106,\n\t\t\t\t\t3517\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3198,\n\t\t\t\t\t3521\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3270,\n\t\t\t\t\t3575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3292,\n\t\t\t\t\t1624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3530,\n\t\t\t\t\t1446\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3479,\n\t\t\t\t\t1373\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3189,\n\t\t\t\t\t1304\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3211,\n\t\t\t\t\t1606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3284,\n\t\t\t\t\t1637\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4283,\n\t\t\t\t\t7530\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4273,\n\t\t\t\t\t7517\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4324,\n\t\t\t\t\t7521\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4356,\n\t\t\t\t\t7251\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4298,\n\t\t\t\t\t7274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4223,\n\t\t\t\t\t7310\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4140,\n\t\t\t\t\t7603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4162,\n\t\t\t\t\t7580\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t436,\n\t\t\t\t\t5746\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-162\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t372,\n\t\t\t\t\t5584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-195,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t226,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6328,\n\t\t\t\t\t8128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6492,\n\t\t\t\t\t7771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6455,\n\t\t\t\t\t7747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-156,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t170\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6208,\n\t\t\t\t\t8177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t5635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2491,\n\t\t\t\t\t5674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2471,\n\t\t\t\t\t5229\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2387,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2337,\n\t\t\t\t\t5263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2192,\n\t\t\t\t\t5326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2006,\n\t\t\t\t\t5538\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t152,\n\t\t\t\t\t120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2158,\n\t\t\t\t\t5658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2159,\n\t\t\t\t\t5674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1251,\n\t\t\t\t\t4321\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1229,\n\t\t\t\t\t4256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1157,\n\t\t\t\t\t4186\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1067,\n\t\t\t\t\t4134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t130\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1065,\n\t\t\t\t\t4441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3312,\n\t\t\t\t\t7180\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3352,\n\t\t\t\t\t6933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3298,\n\t\t\t\t\t6872\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-145,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3153,\n\t\t\t\t\t6894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3130,\n\t\t\t\t\t6933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2953,\n\t\t\t\t\t7058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2965,\n\t\t\t\t\t7060\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3130,\n\t\t\t\t\t7216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t723,\n\t\t\t\t\t5680\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t764,\n\t\t\t\t\t5648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t814,\n\t\t\t\t\t5540\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t806,\n\t\t\t\t\t5389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t522,\n\t\t\t\t\t5150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-196,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t205\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t372,\n\t\t\t\t\t5584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t548,\n\t\t\t\t\t5668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t672,\n\t\t\t\t\t5687\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3434,\n\t\t\t\t\t2291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3240,\n\t\t\t\t\t1914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3196,\n\t\t\t\t\t2044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3212,\n\t\t\t\t\t2100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3276,\n\t\t\t\t\t2319\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3307,\n\t\t\t\t\t2377\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6760,\n\t\t\t\t\t3201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-260,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6341,\n\t\t\t\t\t3175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6337,\n\t\t\t\t\t3204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6478,\n\t\t\t\t\t3245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6490,\n\t\t\t\t\t3350\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3154,\n\t\t\t\t\t2160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3212,\n\t\t\t\t\t2100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3196,\n\t\t\t\t\t2044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3176,\n\t\t\t\t\t1955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3129,\n\t\t\t\t\t1862\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3009,\n\t\t\t\t\t1757\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2925,\n\t\t\t\t\t1994\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6668,\n\t\t\t\t\t5597\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6700,\n\t\t\t\t\t5423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6684,\n\t\t\t\t\t5339\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6696,\n\t\t\t\t\t5307\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6787,\n\t\t\t\t\t5272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6840,\n\t\t\t\t\t5209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6618,\n\t\t\t\t\t5206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6526,\n\t\t\t\t\t5177\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t152\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6443,\n\t\t\t\t\t5367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6346,\n\t\t\t\t\t5409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6271,\n\t\t\t\t\t5477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6257,\n\t\t\t\t\t5479\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6275,\n\t\t\t\t\t5520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6249,\n\t\t\t\t\t5547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6524,\n\t\t\t\t\t5591\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7984,\n\t\t\t\t\t6502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8031,\n\t\t\t\t\t6432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8034,\n\t\t\t\t\t6274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8098,\n\t\t\t\t\t6157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8021,\n\t\t\t\t\t6122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7828,\n\t\t\t\t\t6291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7776,\n\t\t\t\t\t6267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7743,\n\t\t\t\t\t6337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7952,\n\t\t\t\t\t6511\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4465,\n\t\t\t\t\t8030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4587,\n\t\t\t\t\t7851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4740,\n\t\t\t\t\t7755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-279,\n\t\t\t\t\t-101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-158\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4359,\n\t\t\t\t\t7496\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4273,\n\t\t\t\t\t7517\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t161\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4251,\n\t\t\t\t\t7860\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7073,\n\t\t\t\t\t7171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7167,\n\t\t\t\t\t7069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7162,\n\t\t\t\t\t6892\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7080,\n\t\t\t\t\t6856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7047,\n\t\t\t\t\t6799\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6913,\n\t\t\t\t\t6783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6791,\n\t\t\t\t\t6859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6713,\n\t\t\t\t\t6875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6895,\n\t\t\t\t\t7144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4347,\n\t\t\t\t\t6202\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4384,\n\t\t\t\t\t6181\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4557,\n\t\t\t\t\t6034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4608,\n\t\t\t\t\t5920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4676,\n\t\t\t\t\t5719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4481,\n\t\t\t\t\t5639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4463,\n\t\t\t\t\t5694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4229,\n\t\t\t\t\t6023\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4228,\n\t\t\t\t\t6109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4244,\n\t\t\t\t\t6164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4934,\n\t\t\t\t\t7635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4697,\n\t\t\t\t\t7537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4450,\n\t\t\t\t\t7415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4396,\n\t\t\t\t\t7408\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7373,\n\t\t\t\t\t5882\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7433,\n\t\t\t\t\t5850\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7494,\n\t\t\t\t\t5739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7264,\n\t\t\t\t\t5463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7291,\n\t\t\t\t\t5626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7273,\n\t\t\t\t\t5739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7304,\n\t\t\t\t\t5880\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5340,\n\t\t\t\t\t6547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5325,\n\t\t\t\t\t6459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5217,\n\t\t\t\t\t6370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5182,\n\t\t\t\t\t6387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5053,\n\t\t\t\t\t6228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4827,\n\t\t\t\t\t6123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4893,\n\t\t\t\t\t6455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4854,\n\t\t\t\t\t6540\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4869,\n\t\t\t\t\t6675\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4886,\n\t\t\t\t\t6828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t155,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3157,\n\t\t\t\t\t2942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2996,\n\t\t\t\t\t2709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2928,\n\t\t\t\t\t2772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2943,\n\t\t\t\t\t2791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2981,\n\t\t\t\t\t2899\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3047,\n\t\t\t\t\t2925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2136,\n\t\t\t\t\t1433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2235,\n\t\t\t\t\t1424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t1469\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2398,\n\t\t\t\t\t1244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2477,\n\t\t\t\t\t1088\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2444,\n\t\t\t\t\t954\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2549,\n\t\t\t\t\t937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2246,\n\t\t\t\t\t1080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2152,\n\t\t\t\t\t1065\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2023,\n\t\t\t\t\t1165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2061,\n\t\t\t\t\t1460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t578,\n\t\t\t\t\t2040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t775,\n\t\t\t\t\t2040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t799,\n\t\t\t\t\t1925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-196,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t540,\n\t\t\t\t\t1884\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t557,\n\t\t\t\t\t1933\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t535,\n\t\t\t\t\t2003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t509,\n\t\t\t\t\t2052\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2539,\n\t\t\t\t\t4679\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2452,\n\t\t\t\t\t4590\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2290,\n\t\t\t\t\t4476\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2169,\n\t\t\t\t\t4774\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2193,\n\t\t\t\t\t4886\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2259,\n\t\t\t\t\t4981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2304,\n\t\t\t\t\t5003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7732,\n\t\t\t\t\t5262\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7992,\n\t\t\t\t\t5190\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7975,\n\t\t\t\t\t4937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7911,\n\t\t\t\t\t4938\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7850,\n\t\t\t\t\t4925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7835,\n\t\t\t\t\t4894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7700,\n\t\t\t\t\t5000\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7526,\n\t\t\t\t\t5072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7606,\n\t\t\t\t\t5331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7835,\n\t\t\t\t\t4894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8185,\n\t\t\t\t\t4729\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-208,\n\t\t\t\t\t-183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-165,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7371,\n\t\t\t\t\t4747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7406,\n\t\t\t\t\t4890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7430,\n\t\t\t\t\t4927\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t105,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7533,\n\t\t\t\t\t4998\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5127,\n\t\t\t\t\t4581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5196,\n\t\t\t\t\t4512\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5546,\n\t\t\t\t\t4390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5553,\n\t\t\t\t\t4288\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5419,\n\t\t\t\t\t4146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4974,\n\t\t\t\t\t4214\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4855,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4833,\n\t\t\t\t\t4424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4833,\n\t\t\t\t\t4595\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4849,\n\t\t\t\t\t4615\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4890,\n\t\t\t\t\t4647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t-102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6411,\n\t\t\t\t\t7433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6331,\n\t\t\t\t\t7238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6346,\n\t\t\t\t\t7192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6328,\n\t\t\t\t\t7130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6281,\n\t\t\t\t\t7115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6149,\n\t\t\t\t\t7119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t167,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t116\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3416,\n\t\t\t\t\t3945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3454,\n\t\t\t\t\t3869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3439,\n\t\t\t\t\t3734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3376,\n\t\t\t\t\t3764\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3319,\n\t\t\t\t\t3828\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3707,\n\t\t\t\t\t4482\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3574,\n\t\t\t\t\t4270\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3547,\n\t\t\t\t\t4291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3509,\n\t\t\t\t\t4316\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3372,\n\t\t\t\t\t4159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t4218\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3383,\n\t\t\t\t\t4442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3532,\n\t\t\t\t\t4504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3547,\n\t\t\t\t\t4291\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3634,\n\t\t\t\t\t4236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3669,\n\t\t\t\t\t4256\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3657,\n\t\t\t\t\t4095\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3595,\n\t\t\t\t\t4063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3557,\n\t\t\t\t\t4068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3509,\n\t\t\t\t\t4316\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2872,\n\t\t\t\t\t2940\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2987,\n\t\t\t\t\t2920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2943,\n\t\t\t\t\t2791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2647,\n\t\t\t\t\t2710\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-159,\n\t\t\t\t\t131\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2461,\n\t\t\t\t\t2928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2611,\n\t\t\t\t\t2958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2681,\n\t\t\t\t\t2969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2684,\n\t\t\t\t\t3036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2850,\n\t\t\t\t\t6299\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2794,\n\t\t\t\t\t6248\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2711,\n\t\t\t\t\t6332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2646,\n\t\t\t\t\t6458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2533,\n\t\t\t\t\t6452\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2818,\n\t\t\t\t\t6689\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3866,\n\t\t\t\t\t7263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4023,\n\t\t\t\t\t7080\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3995,\n\t\t\t\t\t7021\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3927,\n\t\t\t\t\t6962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3837,\n\t\t\t\t\t6981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3805,\n\t\t\t\t\t6962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3742,\n\t\t\t\t\t6988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3737,\n\t\t\t\t\t7058\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3774,\n\t\t\t\t\t7137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3800,\n\t\t\t\t\t7223\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6049,\n\t\t\t\t\t5559\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6235,\n\t\t\t\t\t5581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6275,\n\t\t\t\t\t5520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6271,\n\t\t\t\t\t5477\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6133,\n\t\t\t\t\t5358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6130,\n\t\t\t\t\t5324\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6107,\n\t\t\t\t\t5233\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6067,\n\t\t\t\t\t5215\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5955,\n\t\t\t\t\t5252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5663,\n\t\t\t\t\t5185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5627,\n\t\t\t\t\t5254\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5560,\n\t\t\t\t\t5305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5568,\n\t\t\t\t\t5334\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5648,\n\t\t\t\t\t5320\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5764,\n\t\t\t\t\t5342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5870,\n\t\t\t\t\t5567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5929,\n\t\t\t\t\t5604\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2628,\n\t\t\t\t\t5197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2542,\n\t\t\t\t\t4934\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2659,\n\t\t\t\t\t4867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2678,\n\t\t\t\t\t4717\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2304,\n\t\t\t\t\t5003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2384,\n\t\t\t\t\t5072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2396,\n\t\t\t\t\t5175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2387,\n\t\t\t\t\t5211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t5265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3742,\n\t\t\t\t\t6988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3805,\n\t\t\t\t\t6962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3927,\n\t\t\t\t\t6962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4013,\n\t\t\t\t\t6942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3990,\n\t\t\t\t\t6829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3959,\n\t\t\t\t\t6699\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3800,\n\t\t\t\t\t6724\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3738,\n\t\t\t\t\t6735\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3725,\n\t\t\t\t\t6839\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3714,\n\t\t\t\t\t7027\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1374,\n\t\t\t\t\t1663\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1342,\n\t\t\t\t\t1501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1370,\n\t\t\t\t\t1405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1230,\n\t\t\t\t\t1379\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1197,\n\t\t\t\t\t1352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1075,\n\t\t\t\t\t1279\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t985,\n\t\t\t\t\t1402\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1176,\n\t\t\t\t\t1694\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1196,\n\t\t\t\t\t1711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6992,\n\t\t\t\t\t7792\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t152,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7198,\n\t\t\t\t\t7695\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7005,\n\t\t\t\t\t7353\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7001,\n\t\t\t\t\t7433\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t101\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6902,\n\t\t\t\t\t7667\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6857,\n\t\t\t\t\t7674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6921,\n\t\t\t\t\t7793\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"transform\": {\n\t\t\t\"scale\": [\n\t\t\t\t0.0004145531070705779,\n\t\t\t\t0.0002480636152443112\n\t\t\t],\n\t\t\t\"translate\": [\n\t\t\t\t5.878025523533185,\n\t\t\t\t50.33856106917782\n\t\t\t]\n\t\t},\n\t\t\"objects\": {\n\t\t\t\"nrw\": {\n\t\t\t\t\"type\": \"GeometryCollection\",\n\t\t\t\t\"geometries\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t\t6,\n\t\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t9\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382020\",\n\t\t\t\t\t\t\t\"GEN\": \"Hennef (Sieg)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t\t11,\n\t\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t\t17,\n\t\t\t\t\t\t\t\t18\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362036\",\n\t\t\t\t\t\t\t\"GEN\": \"Pulheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t19,\n\t\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t\t21,\n\t\t\t\t\t\t\t\t22,\n\t\t\t\t\t\t\t\t23,\n\t\t\t\t\t\t\t\t24,\n\t\t\t\t\t\t\t\t25,\n\t\t\t\t\t\t\t\t26,\n\t\t\t\t\t\t\t\t27,\n\t\t\t\t\t\t\t\t28,\n\t\t\t\t\t\t\t\t29,\n\t\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t\t31,\n\t\t\t\t\t\t\t\t32,\n\t\t\t\t\t\t\t\t33,\n\t\t\t\t\t\t\t\t34,\n\t\t\t\t\t\t\t\t35,\n\t\t\t\t\t\t\t\t36\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966020\",\n\t\t\t\t\t\t\t\"GEN\": \"Lennestadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t37,\n\t\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t\t39,\n\t\t\t\t\t\t\t\t40,\n\t\t\t\t\t\t\t\t41,\n\t\t\t\t\t\t\t\t42,\n\t\t\t\t\t\t\t\t43,\n\t\t\t\t\t\t\t\t44,\n\t\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t\t46,\n\t\t\t\t\t\t\t\t47,\n\t\t\t\t\t\t\t\t48,\n\t\t\t\t\t\t\t\t49,\n\t\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\t\t51,\n\t\t\t\t\t\t\t\t52\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962028\",\n\t\t\t\t\t\t\t\"GEN\": \"Kierspe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t53,\n\t\t\t\t\t\t\t\t54,\n\t\t\t\t\t\t\t\t55,\n\t\t\t\t\t\t\t\t56,\n\t\t\t\t\t\t\t\t57,\n\t\t\t\t\t\t\t\t58,\n\t\t\t\t\t\t\t\t59,\n\t\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t\t61,\n\t\t\t\t\t\t\t\t62,\n\t\t\t\t\t\t\t\t63\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774016\",\n\t\t\t\t\t\t\t\"GEN\": \"Büren\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t64,\n\t\t\t\t\t\t\t\t65,\n\t\t\t\t\t\t\t\t66,\n\t\t\t\t\t\t\t\t67,\n\t\t\t\t\t\t\t\t68,\n\t\t\t\t\t\t\t\t69,\n\t\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t\t71,\n\t\t\t\t\t\t\t\t72\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566040\",\n\t\t\t\t\t\t\t\"GEN\": \"Lengerich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t73,\n\t\t\t\t\t\t\t\t74,\n\t\t\t\t\t\t\t\t75,\n\t\t\t\t\t\t\t\t76,\n\t\t\t\t\t\t\t\t77,\n\t\t\t\t\t\t\t\t78,\n\t\t\t\t\t\t\t\t79,\n\t\t\t\t\t\t\t\t80,\n\t\t\t\t\t\t\t\t81,\n\t\t\t\t\t\t\t\t82,\n\t\t\t\t\t\t\t\t83,\n\t\t\t\t\t\t\t\t84,\n\t\t\t\t\t\t\t\t85,\n\t\t\t\t\t\t\t\t86,\n\t\t\t\t\t\t\t\t87,\n\t\t\t\t\t\t\t\t88,\n\t\t\t\t\t\t\t\t89,\n\t\t\t\t\t\t\t\t90,\n\t\t\t\t\t\t\t\t91,\n\t\t\t\t\t\t\t\t92,\n\t\t\t\t\t\t\t\t93,\n\t\t\t\t\t\t\t\t94,\n\t\t\t\t\t\t\t\t95,\n\t\t\t\t\t\t\t\t96,\n\t\t\t\t\t\t\t\t97,\n\t\t\t\t\t\t\t\t98,\n\t\t\t\t\t\t\t\t99,\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\t101\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05913000\",\n\t\t\t\t\t\t\t\"GEN\": \"Dortmund\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t102,\n\t\t\t\t\t\t\t\t103,\n\t\t\t\t\t\t\t\t104,\n\t\t\t\t\t\t\t\t105,\n\t\t\t\t\t\t\t\t106,\n\t\t\t\t\t\t\t\t107,\n\t\t\t\t\t\t\t\t108,\n\t\t\t\t\t\t\t\t109,\n\t\t\t\t\t\t\t\t110,\n\t\t\t\t\t\t\t\t111,\n\t\t\t\t\t\t\t\t112,\n\t\t\t\t\t\t\t\t113,\n\t\t\t\t\t\t\t\t114\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366032\",\n\t\t\t\t\t\t\t\"GEN\": \"Nettersheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t115,\n\t\t\t\t\t\t\t\t116,\n\t\t\t\t\t\t\t\t117,\n\t\t\t\t\t\t\t\t118,\n\t\t\t\t\t\t\t\t119,\n\t\t\t\t\t\t\t\t120,\n\t\t\t\t\t\t\t\t121,\n\t\t\t\t\t\t\t\t122,\n\t\t\t\t\t\t\t\t123,\n\t\t\t\t\t\t\t\t124,\n\t\t\t\t\t\t\t\t125,\n\t\t\t\t\t\t\t\t126,\n\t\t\t\t\t\t\t\t127,\n\t\t\t\t\t\t\t\t128,\n\t\t\t\t\t\t\t\t129,\n\t\t\t\t\t\t\t\t130,\n\t\t\t\t\t\t\t\t131,\n\t\t\t\t\t\t\t\t132,\n\t\t\t\t\t\t\t\t133,\n\t\t\t\t\t\t\t\t134,\n\t\t\t\t\t\t\t\t135\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774032\",\n\t\t\t\t\t\t\t\"GEN\": \"Paderborn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t136,\n\t\t\t\t\t\t\t\t137,\n\t\t\t\t\t\t\t\t138,\n\t\t\t\t\t\t\t\t139,\n\t\t\t\t\t\t\t\t140,\n\t\t\t\t\t\t\t\t141,\n\t\t\t\t\t\t\t\t142,\n\t\t\t\t\t\t\t\t143,\n\t\t\t\t\t\t\t\t144,\n\t\t\t\t\t\t\t\t145,\n\t\t\t\t\t\t\t\t146,\n\t\t\t\t\t\t\t\t147,\n\t\t\t\t\t\t\t\t148\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358012\",\n\t\t\t\t\t\t\t\"GEN\": \"Heimbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t149,\n\t\t\t\t\t\t\t\t150,\n\t\t\t\t\t\t\t\t151,\n\t\t\t\t\t\t\t\t152,\n\t\t\t\t\t\t\t\t153,\n\t\t\t\t\t\t\t\t154,\n\t\t\t\t\t\t\t\t155,\n\t\t\t\t\t\t\t\t156,\n\t\t\t\t\t\t\t\t157\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562014\",\n\t\t\t\t\t\t\t\"GEN\": \"Gladbeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t158,\n\t\t\t\t\t\t\t\t159,\n\t\t\t\t\t\t\t\t160,\n\t\t\t\t\t\t\t\t161,\n\t\t\t\t\t\t\t\t162,\n\t\t\t\t\t\t\t\t163,\n\t\t\t\t\t\t\t\t164,\n\t\t\t\t\t\t\t\t165,\n\t\t\t\t\t\t\t\t166\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358040\",\n\t\t\t\t\t\t\t\"GEN\": \"Merzenich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t167,\n\t\t\t\t\t\t\t\t168,\n\t\t\t\t\t\t\t\t169,\n\t\t\t\t\t\t\t\t170,\n\t\t\t\t\t\t\t\t171,\n\t\t\t\t\t\t\t\t172,\n\t\t\t\t\t\t\t\t173,\n\t\t\t\t\t\t\t\t174,\n\t\t\t\t\t\t\t\t175,\n\t\t\t\t\t\t\t\t176,\n\t\t\t\t\t\t\t\t177\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154044\",\n\t\t\t\t\t\t\t\"GEN\": \"Rees\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t178,\n\t\t\t\t\t\t\t\t179,\n\t\t\t\t\t\t\t\t180,\n\t\t\t\t\t\t\t\t181,\n\t\t\t\t\t\t\t\t182,\n\t\t\t\t\t\t\t\t-99,\n\t\t\t\t\t\t\t\t183,\n\t\t\t\t\t\t\t\t184,\n\t\t\t\t\t\t\t\t185,\n\t\t\t\t\t\t\t\t186,\n\t\t\t\t\t\t\t\t187,\n\t\t\t\t\t\t\t\t188,\n\t\t\t\t\t\t\t\t189,\n\t\t\t\t\t\t\t\t190,\n\t\t\t\t\t\t\t\t191\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562036\",\n\t\t\t\t\t\t\t\"GEN\": \"Waltrop\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t192,\n\t\t\t\t\t\t\t\t193,\n\t\t\t\t\t\t\t\t194,\n\t\t\t\t\t\t\t\t195,\n\t\t\t\t\t\t\t\t196,\n\t\t\t\t\t\t\t\t197,\n\t\t\t\t\t\t\t\t198,\n\t\t\t\t\t\t\t\t199,\n\t\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t\t201,\n\t\t\t\t\t\t\t\t202,\n\t\t\t\t\t\t\t\t203,\n\t\t\t\t\t\t\t\t204,\n\t\t\t\t\t\t\t\t205,\n\t\t\t\t\t\t\t\t206,\n\t\t\t\t\t\t\t\t207\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366040\",\n\t\t\t\t\t\t\t\"GEN\": \"Weilerswist\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t208,\n\t\t\t\t\t\t\t\t209,\n\t\t\t\t\t\t\t\t210,\n\t\t\t\t\t\t\t\t211,\n\t\t\t\t\t\t\t\t212,\n\t\t\t\t\t\t\t\t213,\n\t\t\t\t\t\t\t\t214,\n\t\t\t\t\t\t\t\t215,\n\t\t\t\t\t\t\t\t216,\n\t\t\t\t\t\t\t\t-197,\n\t\t\t\t\t\t\t\t217\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382064\",\n\t\t\t\t\t\t\t\"GEN\": \"Swisttal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t218,\n\t\t\t\t\t\t\t\t219,\n\t\t\t\t\t\t\t\t220,\n\t\t\t\t\t\t\t\t221,\n\t\t\t\t\t\t\t\t222,\n\t\t\t\t\t\t\t\t223,\n\t\t\t\t\t\t\t\t224,\n\t\t\t\t\t\t\t\t225,\n\t\t\t\t\t\t\t\t226,\n\t\t\t\t\t\t\t\t227,\n\t\t\t\t\t\t\t\t228\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758020\",\n\t\t\t\t\t\t\t\"GEN\": \"Kirchlengern\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-70,\n\t\t\t\t\t\t\t\t229,\n\t\t\t\t\t\t\t\t-68,\n\t\t\t\t\t\t\t\t230,\n\t\t\t\t\t\t\t\t231,\n\t\t\t\t\t\t\t\t232,\n\t\t\t\t\t\t\t\t233,\n\t\t\t\t\t\t\t\t234,\n\t\t\t\t\t\t\t\t235,\n\t\t\t\t\t\t\t\t236\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566032\",\n\t\t\t\t\t\t\t\"GEN\": \"Ladbergen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t237,\n\t\t\t\t\t\t\t\t238,\n\t\t\t\t\t\t\t\t239,\n\t\t\t\t\t\t\t\t240,\n\t\t\t\t\t\t\t\t241,\n\t\t\t\t\t\t\t\t242,\n\t\t\t\t\t\t\t\t243,\n\t\t\t\t\t\t\t\t244,\n\t\t\t\t\t\t\t\t245,\n\t\t\t\t\t\t\t\t246,\n\t\t\t\t\t\t\t\t247,\n\t\t\t\t\t\t\t\t248\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366044\",\n\t\t\t\t\t\t\t\"GEN\": \"Zülpich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-233,\n\t\t\t\t\t\t\t\t249,\n\t\t\t\t\t\t\t\t250,\n\t\t\t\t\t\t\t\t251,\n\t\t\t\t\t\t\t\t252,\n\t\t\t\t\t\t\t\t253,\n\t\t\t\t\t\t\t\t254,\n\t\t\t\t\t\t\t\t255,\n\t\t\t\t\t\t\t\t256\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570032\",\n\t\t\t\t\t\t\t\"GEN\": \"Ostbevern\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t257,\n\t\t\t\t\t\t\t\t258,\n\t\t\t\t\t\t\t\t259,\n\t\t\t\t\t\t\t\t260\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554020\",\n\t\t\t\t\t\t\t\"GEN\": \"Gronau (Westf.)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t261,\n\t\t\t\t\t\t\t\t262,\n\t\t\t\t\t\t\t\t263,\n\t\t\t\t\t\t\t\t264,\n\t\t\t\t\t\t\t\t265,\n\t\t\t\t\t\t\t\t266,\n\t\t\t\t\t\t\t\t267,\n\t\t\t\t\t\t\t\t268,\n\t\t\t\t\t\t\t\t269,\n\t\t\t\t\t\t\t\t270,\n\t\t\t\t\t\t\t\t271,\n\t\t\t\t\t\t\t\t272,\n\t\t\t\t\t\t\t\t-179,\n\t\t\t\t\t\t\t\t273,\n\t\t\t\t\t\t\t\t274,\n\t\t\t\t\t\t\t\t275,\n\t\t\t\t\t\t\t\t276,\n\t\t\t\t\t\t\t\t277,\n\t\t\t\t\t\t\t\t278,\n\t\t\t\t\t\t\t\t279\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978032\",\n\t\t\t\t\t\t\t\"GEN\": \"Selm\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t280,\n\t\t\t\t\t\t\t\t281,\n\t\t\t\t\t\t\t\t282,\n\t\t\t\t\t\t\t\t283,\n\t\t\t\t\t\t\t\t284,\n\t\t\t\t\t\t\t\t285,\n\t\t\t\t\t\t\t\t286,\n\t\t\t\t\t\t\t\t287,\n\t\t\t\t\t\t\t\t288,\n\t\t\t\t\t\t\t\t289,\n\t\t\t\t\t\t\t\t290,\n\t\t\t\t\t\t\t\t291,\n\t\t\t\t\t\t\t\t292,\n\t\t\t\t\t\t\t\t293,\n\t\t\t\t\t\t\t\t294,\n\t\t\t\t\t\t\t\t295,\n\t\t\t\t\t\t\t\t296,\n\t\t\t\t\t\t\t\t297,\n\t\t\t\t\t\t\t\t298,\n\t\t\t\t\t\t\t\t299\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562016\",\n\t\t\t\t\t\t\t\"GEN\": \"Haltern am See\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t300,\n\t\t\t\t\t\t\t\t301,\n\t\t\t\t\t\t\t\t302,\n\t\t\t\t\t\t\t\t303,\n\t\t\t\t\t\t\t\t304,\n\t\t\t\t\t\t\t\t305,\n\t\t\t\t\t\t\t\t306,\n\t\t\t\t\t\t\t\t307,\n\t\t\t\t\t\t\t\t-59,\n\t\t\t\t\t\t\t\t308\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958012\",\n\t\t\t\t\t\t\t\"GEN\": \"Brilon\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t309,\n\t\t\t\t\t\t\t\t310,\n\t\t\t\t\t\t\t\t311,\n\t\t\t\t\t\t\t\t312,\n\t\t\t\t\t\t\t\t-163,\n\t\t\t\t\t\t\t\t313,\n\t\t\t\t\t\t\t\t314,\n\t\t\t\t\t\t\t\t315,\n\t\t\t\t\t\t\t\t316,\n\t\t\t\t\t\t\t\t317,\n\t\t\t\t\t\t\t\t318,\n\t\t\t\t\t\t\t\t319,\n\t\t\t\t\t\t\t\t320,\n\t\t\t\t\t\t\t\t321,\n\t\t\t\t\t\t\t\t322,\n\t\t\t\t\t\t\t\t323\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358008\",\n\t\t\t\t\t\t\t\"GEN\": \"Düren\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t324,\n\t\t\t\t\t\t\t\t325,\n\t\t\t\t\t\t\t\t326,\n\t\t\t\t\t\t\t\t327,\n\t\t\t\t\t\t\t\t328,\n\t\t\t\t\t\t\t\t329,\n\t\t\t\t\t\t\t\t330,\n\t\t\t\t\t\t\t\t331,\n\t\t\t\t\t\t\t\t332,\n\t\t\t\t\t\t\t\t333,\n\t\t\t\t\t\t\t\t334,\n\t\t\t\t\t\t\t\t335,\n\t\t\t\t\t\t\t\t336,\n\t\t\t\t\t\t\t\t337,\n\t\t\t\t\t\t\t\t338,\n\t\t\t\t\t\t\t\t339,\n\t\t\t\t\t\t\t\t340,\n\t\t\t\t\t\t\t\t341,\n\t\t\t\t\t\t\t\t342,\n\t\t\t\t\t\t\t\t343,\n\t\t\t\t\t\t\t\t344,\n\t\t\t\t\t\t\t\t345,\n\t\t\t\t\t\t\t\t346,\n\t\t\t\t\t\t\t\t347,\n\t\t\t\t\t\t\t\t348,\n\t\t\t\t\t\t\t\t349,\n\t\t\t\t\t\t\t\t350,\n\t\t\t\t\t\t\t\t351,\n\t\t\t\t\t\t\t\t352,\n\t\t\t\t\t\t\t\t353,\n\t\t\t\t\t\t\t\t354,\n\t\t\t\t\t\t\t\t355,\n\t\t\t\t\t\t\t\t356\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05124000\",\n\t\t\t\t\t\t\t\"GEN\": \"Wuppertal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t357,\n\t\t\t\t\t\t\t\t358,\n\t\t\t\t\t\t\t\t359,\n\t\t\t\t\t\t\t\t360,\n\t\t\t\t\t\t\t\t361,\n\t\t\t\t\t\t\t\t362,\n\t\t\t\t\t\t\t\t363,\n\t\t\t\t\t\t\t\t364,\n\t\t\t\t\t\t\t\t365,\n\t\t\t\t\t\t\t\t366,\n\t\t\t\t\t\t\t\t367,\n\t\t\t\t\t\t\t\t368,\n\t\t\t\t\t\t\t\t369,\n\t\t\t\t\t\t\t\t370,\n\t\t\t\t\t\t\t\t371,\n\t\t\t\t\t\t\t\t372,\n\t\t\t\t\t\t\t\t373\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770032\",\n\t\t\t\t\t\t\t\"GEN\": \"Porta Westfalica\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t374,\n\t\t\t\t\t\t\t\t375,\n\t\t\t\t\t\t\t\t376,\n\t\t\t\t\t\t\t\t377,\n\t\t\t\t\t\t\t\t378,\n\t\t\t\t\t\t\t\t379,\n\t\t\t\t\t\t\t\t380\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154052\",\n\t\t\t\t\t\t\t\"GEN\": \"Straelen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t381,\n\t\t\t\t\t\t\t\t382,\n\t\t\t\t\t\t\t\t383,\n\t\t\t\t\t\t\t\t384,\n\t\t\t\t\t\t\t\t385,\n\t\t\t\t\t\t\t\t386,\n\t\t\t\t\t\t\t\t387,\n\t\t\t\t\t\t\t\t388,\n\t\t\t\t\t\t\t\t389,\n\t\t\t\t\t\t\t\t390,\n\t\t\t\t\t\t\t\t391\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566092\",\n\t\t\t\t\t\t\t\"GEN\": \"Westerkappeln\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-175,\n\t\t\t\t\t\t\t\t392,\n\t\t\t\t\t\t\t\t393,\n\t\t\t\t\t\t\t\t394,\n\t\t\t\t\t\t\t\t395,\n\t\t\t\t\t\t\t\t396,\n\t\t\t\t\t\t\t\t397,\n\t\t\t\t\t\t\t\t398,\n\t\t\t\t\t\t\t\t399,\n\t\t\t\t\t\t\t\t400,\n\t\t\t\t\t\t\t\t401,\n\t\t\t\t\t\t\t\t402,\n\t\t\t\t\t\t\t\t403,\n\t\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t\t405,\n\t\t\t\t\t\t\t\t406,\n\t\t\t\t\t\t\t\t407\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170052\",\n\t\t\t\t\t\t\t\"GEN\": \"Xanten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-105,\n\t\t\t\t\t\t\t\t408,\n\t\t\t\t\t\t\t\t409,\n\t\t\t\t\t\t\t\t-107,\n\t\t\t\t\t\t\t\t410\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366008\",\n\t\t\t\t\t\t\t\"GEN\": \"Blankenheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t411,\n\t\t\t\t\t\t\t\t412,\n\t\t\t\t\t\t\t\t413,\n\t\t\t\t\t\t\t\t414,\n\t\t\t\t\t\t\t\t415,\n\t\t\t\t\t\t\t\t416,\n\t\t\t\t\t\t\t\t417,\n\t\t\t\t\t\t\t\t418,\n\t\t\t\t\t\t\t\t419,\n\t\t\t\t\t\t\t\t420\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158020\",\n\t\t\t\t\t\t\t\"GEN\": \"Langenfeld (Rhld.)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t421,\n\t\t\t\t\t\t\t\t422,\n\t\t\t\t\t\t\t\t423,\n\t\t\t\t\t\t\t\t424\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Honnef\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t425,\n\t\t\t\t\t\t\t\t426,\n\t\t\t\t\t\t\t\t427,\n\t\t\t\t\t\t\t\t428,\n\t\t\t\t\t\t\t\t429,\n\t\t\t\t\t\t\t\t430,\n\t\t\t\t\t\t\t\t431,\n\t\t\t\t\t\t\t\t432,\n\t\t\t\t\t\t\t\t433,\n\t\t\t\t\t\t\t\t434,\n\t\t\t\t\t\t\t\t435,\n\t\t\t\t\t\t\t\t-127,\n\t\t\t\t\t\t\t\t436,\n\t\t\t\t\t\t\t\t-125,\n\t\t\t\t\t\t\t\t437\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774012\",\n\t\t\t\t\t\t\t\"GEN\": \"Borchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t438,\n\t\t\t\t\t\t\t\t439,\n\t\t\t\t\t\t\t\t440,\n\t\t\t\t\t\t\t\t441,\n\t\t\t\t\t\t\t\t442,\n\t\t\t\t\t\t\t\t443,\n\t\t\t\t\t\t\t\t444,\n\t\t\t\t\t\t\t\t445,\n\t\t\t\t\t\t\t\t446,\n\t\t\t\t\t\t\t\t447,\n\t\t\t\t\t\t\t\t448,\n\t\t\t\t\t\t\t\t449,\n\t\t\t\t\t\t\t\t-109,\n\t\t\t\t\t\t\t\t450,\n\t\t\t\t\t\t\t\t451,\n\t\t\t\t\t\t\t\t452,\n\t\t\t\t\t\t\t\t453,\n\t\t\t\t\t\t\t\t454,\n\t\t\t\t\t\t\t\t455,\n\t\t\t\t\t\t\t\t456\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366020\",\n\t\t\t\t\t\t\t\"GEN\": \"Hellenthal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t457,\n\t\t\t\t\t\t\t\t458,\n\t\t\t\t\t\t\t\t459,\n\t\t\t\t\t\t\t\t460,\n\t\t\t\t\t\t\t\t461,\n\t\t\t\t\t\t\t\t462\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958028\",\n\t\t\t\t\t\t\t\"GEN\": \"Medebach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t463,\n\t\t\t\t\t\t\t\t464,\n\t\t\t\t\t\t\t\t465,\n\t\t\t\t\t\t\t\t466,\n\t\t\t\t\t\t\t\t467,\n\t\t\t\t\t\t\t\t468,\n\t\t\t\t\t\t\t\t469,\n\t\t\t\t\t\t\t\t470,\n\t\t\t\t\t\t\t\t471,\n\t\t\t\t\t\t\t\t472,\n\t\t\t\t\t\t\t\t473\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974048\",\n\t\t\t\t\t\t\t\"GEN\": \"Welver\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t474,\n\t\t\t\t\t\t\t\t475,\n\t\t\t\t\t\t\t\t476,\n\t\t\t\t\t\t\t\t477,\n\t\t\t\t\t\t\t\t478,\n\t\t\t\t\t\t\t\t479,\n\t\t\t\t\t\t\t\t480,\n\t\t\t\t\t\t\t\t481,\n\t\t\t\t\t\t\t\t482,\n\t\t\t\t\t\t\t\t483,\n\t\t\t\t\t\t\t\t484,\n\t\t\t\t\t\t\t\t485,\n\t\t\t\t\t\t\t\t486,\n\t\t\t\t\t\t\t\t487,\n\t\t\t\t\t\t\t\t488,\n\t\t\t\t\t\t\t\t489,\n\t\t\t\t\t\t\t\t490\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970012\",\n\t\t\t\t\t\t\t\"GEN\": \"Erndtebrück\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t491,\n\t\t\t\t\t\t\t\t492,\n\t\t\t\t\t\t\t\t493,\n\t\t\t\t\t\t\t\t494,\n\t\t\t\t\t\t\t\t495,\n\t\t\t\t\t\t\t\t496,\n\t\t\t\t\t\t\t\t497,\n\t\t\t\t\t\t\t\t498,\n\t\t\t\t\t\t\t\t499\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362040\",\n\t\t\t\t\t\t\t\"GEN\": \"Wesseling\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t\t501,\n\t\t\t\t\t\t\t\t502,\n\t\t\t\t\t\t\t\t503,\n\t\t\t\t\t\t\t\t504,\n\t\t\t\t\t\t\t\t505,\n\t\t\t\t\t\t\t\t506,\n\t\t\t\t\t\t\t\t507,\n\t\t\t\t\t\t\t\t508,\n\t\t\t\t\t\t\t\t509,\n\t\t\t\t\t\t\t\t510,\n\t\t\t\t\t\t\t\t511,\n\t\t\t\t\t\t\t\t512,\n\t\t\t\t\t\t\t\t513,\n\t\t\t\t\t\t\t\t514,\n\t\t\t\t\t\t\t\t515,\n\t\t\t\t\t\t\t\t516,\n\t\t\t\t\t\t\t\t517,\n\t\t\t\t\t\t\t\t518,\n\t\t\t\t\t\t\t\t519,\n\t\t\t\t\t\t\t\t520,\n\t\t\t\t\t\t\t\t521,\n\t\t\t\t\t\t\t\t522,\n\t\t\t\t\t\t\t\t523,\n\t\t\t\t\t\t\t\t524\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05515000\",\n\t\t\t\t\t\t\t\"GEN\": \"Münster\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t525,\n\t\t\t\t\t\t\t\t526,\n\t\t\t\t\t\t\t\t527,\n\t\t\t\t\t\t\t\t528,\n\t\t\t\t\t\t\t\t529,\n\t\t\t\t\t\t\t\t530,\n\t\t\t\t\t\t\t\t531,\n\t\t\t\t\t\t\t\t532,\n\t\t\t\t\t\t\t\t533,\n\t\t\t\t\t\t\t\t534,\n\t\t\t\t\t\t\t\t535,\n\t\t\t\t\t\t\t\t536,\n\t\t\t\t\t\t\t\t537\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bergisch Gladbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t538,\n\t\t\t\t\t\t\t\t539,\n\t\t\t\t\t\t\t\t540,\n\t\t\t\t\t\t\t\t541,\n\t\t\t\t\t\t\t\t542,\n\t\t\t\t\t\t\t\t543,\n\t\t\t\t\t\t\t\t544\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378008\",\n\t\t\t\t\t\t\t\"GEN\": \"Burscheid\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t545,\n\t\t\t\t\t\t\t\t546,\n\t\t\t\t\t\t\t\t547,\n\t\t\t\t\t\t\t\t548,\n\t\t\t\t\t\t\t\t549,\n\t\t\t\t\t\t\t\t550,\n\t\t\t\t\t\t\t\t551,\n\t\t\t\t\t\t\t\t552,\n\t\t\t\t\t\t\t\t553\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974044\",\n\t\t\t\t\t\t\t\"GEN\": \"Warstein\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t554,\n\t\t\t\t\t\t\t\t555,\n\t\t\t\t\t\t\t\t556,\n\t\t\t\t\t\t\t\t557,\n\t\t\t\t\t\t\t\t-3,\n\t\t\t\t\t\t\t\t558,\n\t\t\t\t\t\t\t\t559,\n\t\t\t\t\t\t\t\t560\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382016\",\n\t\t\t\t\t\t\t\"GEN\": \"Eitorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t561,\n\t\t\t\t\t\t\t\t562,\n\t\t\t\t\t\t\t\t563,\n\t\t\t\t\t\t\t\t564,\n\t\t\t\t\t\t\t\t-556,\n\t\t\t\t\t\t\t\t565,\n\t\t\t\t\t\t\t\t566,\n\t\t\t\t\t\t\t\t567,\n\t\t\t\t\t\t\t\t568,\n\t\t\t\t\t\t\t\t569,\n\t\t\t\t\t\t\t\t570\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382076\",\n\t\t\t\t\t\t\t\"GEN\": \"Windeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t571,\n\t\t\t\t\t\t\t\t572,\n\t\t\t\t\t\t\t\t573,\n\t\t\t\t\t\t\t\t574,\n\t\t\t\t\t\t\t\t575,\n\t\t\t\t\t\t\t\t576,\n\t\t\t\t\t\t\t\t577,\n\t\t\t\t\t\t\t\t578,\n\t\t\t\t\t\t\t\t579,\n\t\t\t\t\t\t\t\t580,\n\t\t\t\t\t\t\t\t581,\n\t\t\t\t\t\t\t\t582,\n\t\t\t\t\t\t\t\t583,\n\t\t\t\t\t\t\t\t584,\n\t\t\t\t\t\t\t\t585,\n\t\t\t\t\t\t\t\t586,\n\t\t\t\t\t\t\t\t587,\n\t\t\t\t\t\t\t\t588,\n\t\t\t\t\t\t\t\t589\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05116000\",\n\t\t\t\t\t\t\t\"GEN\": \"Mönchengladbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t590,\n\t\t\t\t\t\t\t\t591,\n\t\t\t\t\t\t\t\t592,\n\t\t\t\t\t\t\t\t593,\n\t\t\t\t\t\t\t\t594,\n\t\t\t\t\t\t\t\t595\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970008\",\n\t\t\t\t\t\t\t\"GEN\": \"Burbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t596,\n\t\t\t\t\t\t\t\t597,\n\t\t\t\t\t\t\t\t598,\n\t\t\t\t\t\t\t\t599,\n\t\t\t\t\t\t\t\t600,\n\t\t\t\t\t\t\t\t601\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970016\",\n\t\t\t\t\t\t\t\"GEN\": \"Freudenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t602,\n\t\t\t\t\t\t\t\t603,\n\t\t\t\t\t\t\t\t604,\n\t\t\t\t\t\t\t\t605,\n\t\t\t\t\t\t\t\t606,\n\t\t\t\t\t\t\t\t607,\n\t\t\t\t\t\t\t\t608\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766052\",\n\t\t\t\t\t\t\t\"GEN\": \"Lügde\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t609,\n\t\t\t\t\t\t\t\t610,\n\t\t\t\t\t\t\t\t611,\n\t\t\t\t\t\t\t\t612,\n\t\t\t\t\t\t\t\t-589,\n\t\t\t\t\t\t\t\t613,\n\t\t\t\t\t\t\t\t614,\n\t\t\t\t\t\t\t\t615,\n\t\t\t\t\t\t\t\t616,\n\t\t\t\t\t\t\t\t617,\n\t\t\t\t\t\t\t\t618,\n\t\t\t\t\t\t\t\t619,\n\t\t\t\t\t\t\t\t620\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166032\",\n\t\t\t\t\t\t\t\"GEN\": \"Viersen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t621,\n\t\t\t\t\t\t\t\t622,\n\t\t\t\t\t\t\t\t623,\n\t\t\t\t\t\t\t\t624,\n\t\t\t\t\t\t\t\t625,\n\t\t\t\t\t\t\t\t626,\n\t\t\t\t\t\t\t\t627,\n\t\t\t\t\t\t\t\t628\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154036\",\n\t\t\t\t\t\t\t\"GEN\": \"Kleve\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-615,\n\t\t\t\t\t\t\t\t629,\n\t\t\t\t\t\t\t\t-587,\n\t\t\t\t\t\t\t\t630,\n\t\t\t\t\t\t\t\t631,\n\t\t\t\t\t\t\t\t632,\n\t\t\t\t\t\t\t\t633,\n\t\t\t\t\t\t\t\t634,\n\t\t\t\t\t\t\t\t635,\n\t\t\t\t\t\t\t\t636,\n\t\t\t\t\t\t\t\t637\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166024\",\n\t\t\t\t\t\t\t\"GEN\": \"Schwalmtal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t638,\n\t\t\t\t\t\t\t\t639,\n\t\t\t\t\t\t\t\t640,\n\t\t\t\t\t\t\t\t641,\n\t\t\t\t\t\t\t\t642,\n\t\t\t\t\t\t\t\t643,\n\t\t\t\t\t\t\t\t644,\n\t\t\t\t\t\t\t\t645,\n\t\t\t\t\t\t\t\t646,\n\t\t\t\t\t\t\t\t647,\n\t\t\t\t\t\t\t\t648,\n\t\t\t\t\t\t\t\t649,\n\t\t\t\t\t\t\t\t650,\n\t\t\t\t\t\t\t\t651,\n\t\t\t\t\t\t\t\t652\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970024\",\n\t\t\t\t\t\t\t\"GEN\": \"Kreuztal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t653,\n\t\t\t\t\t\t\t\t654,\n\t\t\t\t\t\t\t\t655,\n\t\t\t\t\t\t\t\t656,\n\t\t\t\t\t\t\t\t657,\n\t\t\t\t\t\t\t\t658,\n\t\t\t\t\t\t\t\t659,\n\t\t\t\t\t\t\t\t660,\n\t\t\t\t\t\t\t\t661,\n\t\t\t\t\t\t\t\t662,\n\t\t\t\t\t\t\t\t663,\n\t\t\t\t\t\t\t\t664,\n\t\t\t\t\t\t\t\t665\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334016\",\n\t\t\t\t\t\t\t\"GEN\": \"Herzogenrath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t666,\n\t\t\t\t\t\t\t\t667,\n\t\t\t\t\t\t\t\t668\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370024\",\n\t\t\t\t\t\t\t\"GEN\": \"Selfkant\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t669,\n\t\t\t\t\t\t\t\t670,\n\t\t\t\t\t\t\t\t671,\n\t\t\t\t\t\t\t\t672,\n\t\t\t\t\t\t\t\t673,\n\t\t\t\t\t\t\t\t674,\n\t\t\t\t\t\t\t\t675,\n\t\t\t\t\t\t\t\t676,\n\t\t\t\t\t\t\t\t677,\n\t\t\t\t\t\t\t\t678,\n\t\t\t\t\t\t\t\t679\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370016\",\n\t\t\t\t\t\t\t\"GEN\": \"Heinsberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t680,\n\t\t\t\t\t\t\t\t681,\n\t\t\t\t\t\t\t\t682,\n\t\t\t\t\t\t\t\t683,\n\t\t\t\t\t\t\t\t684,\n\t\t\t\t\t\t\t\t685,\n\t\t\t\t\t\t\t\t686,\n\t\t\t\t\t\t\t\t687,\n\t\t\t\t\t\t\t\t688,\n\t\t\t\t\t\t\t\t689,\n\t\t\t\t\t\t\t\t690,\n\t\t\t\t\t\t\t\t691,\n\t\t\t\t\t\t\t\t692,\n\t\t\t\t\t\t\t\t693,\n\t\t\t\t\t\t\t\t694\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358004\",\n\t\t\t\t\t\t\t\"GEN\": \"Aldenhoven\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t695,\n\t\t\t\t\t\t\t\t696,\n\t\t\t\t\t\t\t\t697,\n\t\t\t\t\t\t\t\t698,\n\t\t\t\t\t\t\t\t699,\n\t\t\t\t\t\t\t\t700,\n\t\t\t\t\t\t\t\t701,\n\t\t\t\t\t\t\t\t-529,\n\t\t\t\t\t\t\t\t702,\n\t\t\t\t\t\t\t\t703,\n\t\t\t\t\t\t\t\t704\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378012\",\n\t\t\t\t\t\t\t\"GEN\": \"Kürten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t705,\n\t\t\t\t\t\t\t\t706,\n\t\t\t\t\t\t\t\t707,\n\t\t\t\t\t\t\t\t708,\n\t\t\t\t\t\t\t\t709,\n\t\t\t\t\t\t\t\t-51,\n\t\t\t\t\t\t\t\t710,\n\t\t\t\t\t\t\t\t-49,\n\t\t\t\t\t\t\t\t711,\n\t\t\t\t\t\t\t\t-47,\n\t\t\t\t\t\t\t\t712,\n\t\t\t\t\t\t\t\t713,\n\t\t\t\t\t\t\t\t714,\n\t\t\t\t\t\t\t\t715,\n\t\t\t\t\t\t\t\t716,\n\t\t\t\t\t\t\t\t717,\n\t\t\t\t\t\t\t\t718,\n\t\t\t\t\t\t\t\t719,\n\t\t\t\t\t\t\t\t720,\n\t\t\t\t\t\t\t\t721\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962012\",\n\t\t\t\t\t\t\t\"GEN\": \"Halver\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t722,\n\t\t\t\t\t\t\t\t723,\n\t\t\t\t\t\t\t\t724,\n\t\t\t\t\t\t\t\t725,\n\t\t\t\t\t\t\t\t726,\n\t\t\t\t\t\t\t\t727,\n\t\t\t\t\t\t\t\t728,\n\t\t\t\t\t\t\t\t729,\n\t\t\t\t\t\t\t\t730,\n\t\t\t\t\t\t\t\t731,\n\t\t\t\t\t\t\t\t732,\n\t\t\t\t\t\t\t\t733\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962052\",\n\t\t\t\t\t\t\t\"GEN\": \"Plettenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t734,\n\t\t\t\t\t\t\t\t735,\n\t\t\t\t\t\t\t\t736,\n\t\t\t\t\t\t\t\t737,\n\t\t\t\t\t\t\t\t738,\n\t\t\t\t\t\t\t\t739,\n\t\t\t\t\t\t\t\t740,\n\t\t\t\t\t\t\t\t741,\n\t\t\t\t\t\t\t\t742\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770044\",\n\t\t\t\t\t\t\t\"GEN\": \"Stemwede\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t743,\n\t\t\t\t\t\t\t\t744,\n\t\t\t\t\t\t\t\t745,\n\t\t\t\t\t\t\t\t746,\n\t\t\t\t\t\t\t\t747,\n\t\t\t\t\t\t\t\t748,\n\t\t\t\t\t\t\t\t749,\n\t\t\t\t\t\t\t\t750,\n\t\t\t\t\t\t\t\t751,\n\t\t\t\t\t\t\t\t752,\n\t\t\t\t\t\t\t\t753,\n\t\t\t\t\t\t\t\t754,\n\t\t\t\t\t\t\t\t755,\n\t\t\t\t\t\t\t\t-580,\n\t\t\t\t\t\t\t\t756,\n\t\t\t\t\t\t\t\t-578,\n\t\t\t\t\t\t\t\t757,\n\t\t\t\t\t\t\t\t-576,\n\t\t\t\t\t\t\t\t758,\n\t\t\t\t\t\t\t\t759\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162012\",\n\t\t\t\t\t\t\t\"GEN\": \"Jüchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t760,\n\t\t\t\t\t\t\t\t761,\n\t\t\t\t\t\t\t\t762,\n\t\t\t\t\t\t\t\t763,\n\t\t\t\t\t\t\t\t764,\n\t\t\t\t\t\t\t\t765,\n\t\t\t\t\t\t\t\t766,\n\t\t\t\t\t\t\t\t767,\n\t\t\t\t\t\t\t\t768,\n\t\t\t\t\t\t\t\t-748,\n\t\t\t\t\t\t\t\t769,\n\t\t\t\t\t\t\t\t770,\n\t\t\t\t\t\t\t\t-745,\n\t\t\t\t\t\t\t\t771,\n\t\t\t\t\t\t\t\t772,\n\t\t\t\t\t\t\t\t773\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162008\",\n\t\t\t\t\t\t\t\"GEN\": \"Grevenbroich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t774,\n\t\t\t\t\t\t\t\t775,\n\t\t\t\t\t\t\t\t776,\n\t\t\t\t\t\t\t\t777,\n\t\t\t\t\t\t\t\t778,\n\t\t\t\t\t\t\t\t779,\n\t\t\t\t\t\t\t\t780,\n\t\t\t\t\t\t\t\t781,\n\t\t\t\t\t\t\t\t782,\n\t\t\t\t\t\t\t\t783,\n\t\t\t\t\t\t\t\t784\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334032\",\n\t\t\t\t\t\t\t\"GEN\": \"Stolberg (Rhld.)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t785,\n\t\t\t\t\t\t\t\t786,\n\t\t\t\t\t\t\t\t787,\n\t\t\t\t\t\t\t\t788,\n\t\t\t\t\t\t\t\t789,\n\t\t\t\t\t\t\t\t790,\n\t\t\t\t\t\t\t\t791,\n\t\t\t\t\t\t\t\t792,\n\t\t\t\t\t\t\t\t793,\n\t\t\t\t\t\t\t\t794,\n\t\t\t\t\t\t\t\t795,\n\t\t\t\t\t\t\t\t796,\n\t\t\t\t\t\t\t\t797,\n\t\t\t\t\t\t\t\t798,\n\t\t\t\t\t\t\t\t799\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158028\",\n\t\t\t\t\t\t\t\"GEN\": \"Ratingen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t800,\n\t\t\t\t\t\t\t\t801,\n\t\t\t\t\t\t\t\t802,\n\t\t\t\t\t\t\t\t803,\n\t\t\t\t\t\t\t\t804,\n\t\t\t\t\t\t\t\t805,\n\t\t\t\t\t\t\t\t-281,\n\t\t\t\t\t\t\t\t806,\n\t\t\t\t\t\t\t\t807,\n\t\t\t\t\t\t\t\t808,\n\t\t\t\t\t\t\t\t809,\n\t\t\t\t\t\t\t\t810\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558016\",\n\t\t\t\t\t\t\t\"GEN\": \"Dülmen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t811,\n\t\t\t\t\t\t\t\t812,\n\t\t\t\t\t\t\t\t813,\n\t\t\t\t\t\t\t\t814,\n\t\t\t\t\t\t\t\t815,\n\t\t\t\t\t\t\t\t-789,\n\t\t\t\t\t\t\t\t816,\n\t\t\t\t\t\t\t\t817,\n\t\t\t\t\t\t\t\t818\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158012\",\n\t\t\t\t\t\t\t\"GEN\": \"Heiligenhaus\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-603,\n\t\t\t\t\t\t\t\t819,\n\t\t\t\t\t\t\t\t820,\n\t\t\t\t\t\t\t\t821,\n\t\t\t\t\t\t\t\t822,\n\t\t\t\t\t\t\t\t823,\n\t\t\t\t\t\t\t\t824,\n\t\t\t\t\t\t\t\t825,\n\t\t\t\t\t\t\t\t826,\n\t\t\t\t\t\t\t\t827,\n\t\t\t\t\t\t\t\t828,\n\t\t\t\t\t\t\t\t829\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762024\",\n\t\t\t\t\t\t\t\"GEN\": \"Marienmünster\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t830,\n\t\t\t\t\t\t\t\t831,\n\t\t\t\t\t\t\t\t832,\n\t\t\t\t\t\t\t\t833,\n\t\t\t\t\t\t\t\t834,\n\t\t\t\t\t\t\t\t835,\n\t\t\t\t\t\t\t\t836,\n\t\t\t\t\t\t\t\t837,\n\t\t\t\t\t\t\t\t838,\n\t\t\t\t\t\t\t\t839,\n\t\t\t\t\t\t\t\t840,\n\t\t\t\t\t\t\t\t841,\n\t\t\t\t\t\t\t\t842,\n\t\t\t\t\t\t\t\t843,\n\t\t\t\t\t\t\t\t844,\n\t\t\t\t\t\t\t\t845\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962040\",\n\t\t\t\t\t\t\t\"GEN\": \"Menden (Sauerland)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t846,\n\t\t\t\t\t\t\t\t-342,\n\t\t\t\t\t\t\t\t847,\n\t\t\t\t\t\t\t\t848,\n\t\t\t\t\t\t\t\t849,\n\t\t\t\t\t\t\t\t850,\n\t\t\t\t\t\t\t\t851,\n\t\t\t\t\t\t\t\t852,\n\t\t\t\t\t\t\t\t853,\n\t\t\t\t\t\t\t\t854,\n\t\t\t\t\t\t\t\t855,\n\t\t\t\t\t\t\t\t-412,\n\t\t\t\t\t\t\t\t856,\n\t\t\t\t\t\t\t\t-420,\n\t\t\t\t\t\t\t\t857,\n\t\t\t\t\t\t\t\t858,\n\t\t\t\t\t\t\t\t859,\n\t\t\t\t\t\t\t\t860,\n\t\t\t\t\t\t\t\t-344\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05122000\",\n\t\t\t\t\t\t\t\"GEN\": \"Solingen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t861,\n\t\t\t\t\t\t\t\t862,\n\t\t\t\t\t\t\t\t863,\n\t\t\t\t\t\t\t\t864,\n\t\t\t\t\t\t\t\t865,\n\t\t\t\t\t\t\t\t866,\n\t\t\t\t\t\t\t\t867,\n\t\t\t\t\t\t\t\t868,\n\t\t\t\t\t\t\t\t869,\n\t\t\t\t\t\t\t\t870\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154048\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheurdt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t871,\n\t\t\t\t\t\t\t\t872,\n\t\t\t\t\t\t\t\t873,\n\t\t\t\t\t\t\t\t874,\n\t\t\t\t\t\t\t\t875,\n\t\t\t\t\t\t\t\t876,\n\t\t\t\t\t\t\t\t877,\n\t\t\t\t\t\t\t\t878,\n\t\t\t\t\t\t\t\t879,\n\t\t\t\t\t\t\t\t-258,\n\t\t\t\t\t\t\t\t880\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554024\",\n\t\t\t\t\t\t\t\"GEN\": \"Heek\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t881,\n\t\t\t\t\t\t\t\t882,\n\t\t\t\t\t\t\t\t883,\n\t\t\t\t\t\t\t\t884,\n\t\t\t\t\t\t\t\t885,\n\t\t\t\t\t\t\t\t886,\n\t\t\t\t\t\t\t\t887,\n\t\t\t\t\t\t\t\t888\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566060\",\n\t\t\t\t\t\t\t\"GEN\": \"Neuenkirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t889,\n\t\t\t\t\t\t\t\t890,\n\t\t\t\t\t\t\t\t891,\n\t\t\t\t\t\t\t\t892,\n\t\t\t\t\t\t\t\t893,\n\t\t\t\t\t\t\t\t894,\n\t\t\t\t\t\t\t\t895,\n\t\t\t\t\t\t\t\t896\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766004\",\n\t\t\t\t\t\t\t\"GEN\": \"Augustdorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t897,\n\t\t\t\t\t\t\t\t898,\n\t\t\t\t\t\t\t\t899,\n\t\t\t\t\t\t\t\t900,\n\t\t\t\t\t\t\t\t901,\n\t\t\t\t\t\t\t\t902,\n\t\t\t\t\t\t\t\t903,\n\t\t\t\t\t\t\t\t904,\n\t\t\t\t\t\t\t\t905,\n\t\t\t\t\t\t\t\t906\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158004\",\n\t\t\t\t\t\t\t\"GEN\": \"Erkrath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t907,\n\t\t\t\t\t\t\t\t908,\n\t\t\t\t\t\t\t\t909,\n\t\t\t\t\t\t\t\t-34,\n\t\t\t\t\t\t\t\t910,\n\t\t\t\t\t\t\t\t911,\n\t\t\t\t\t\t\t\t912,\n\t\t\t\t\t\t\t\t913,\n\t\t\t\t\t\t\t\t914,\n\t\t\t\t\t\t\t\t915,\n\t\t\t\t\t\t\t\t916,\n\t\t\t\t\t\t\t\t917,\n\t\t\t\t\t\t\t\t-729,\n\t\t\t\t\t\t\t\t918\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966004\",\n\t\t\t\t\t\t\t\"GEN\": \"Attendorn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t919,\n\t\t\t\t\t\t\t\t920,\n\t\t\t\t\t\t\t\t921,\n\t\t\t\t\t\t\t\t-582,\n\t\t\t\t\t\t\t\t922,\n\t\t\t\t\t\t\t\t923,\n\t\t\t\t\t\t\t\t-754,\n\t\t\t\t\t\t\t\t924,\n\t\t\t\t\t\t\t\t925,\n\t\t\t\t\t\t\t\t926,\n\t\t\t\t\t\t\t\t927,\n\t\t\t\t\t\t\t\t928,\n\t\t\t\t\t\t\t\t929,\n\t\t\t\t\t\t\t\t930,\n\t\t\t\t\t\t\t\t931,\n\t\t\t\t\t\t\t\t932,\n\t\t\t\t\t\t\t\t933,\n\t\t\t\t\t\t\t\t934,\n\t\t\t\t\t\t\t\t935,\n\t\t\t\t\t\t\t\t936,\n\t\t\t\t\t\t\t\t937,\n\t\t\t\t\t\t\t\t938,\n\t\t\t\t\t\t\t\t939\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370004\",\n\t\t\t\t\t\t\t\"GEN\": \"Erkelenz\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t940,\n\t\t\t\t\t\t\t\t941,\n\t\t\t\t\t\t\t\t942,\n\t\t\t\t\t\t\t\t943,\n\t\t\t\t\t\t\t\t944,\n\t\t\t\t\t\t\t\t945,\n\t\t\t\t\t\t\t\t946\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370028\",\n\t\t\t\t\t\t\t\"GEN\": \"Übach-Palenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-290,\n\t\t\t\t\t\t\t\t947,\n\t\t\t\t\t\t\t\t948,\n\t\t\t\t\t\t\t\t949,\n\t\t\t\t\t\t\t\t950,\n\t\t\t\t\t\t\t\t951,\n\t\t\t\t\t\t\t\t952,\n\t\t\t\t\t\t\t\t953,\n\t\t\t\t\t\t\t\t954,\n\t\t\t\t\t\t\t\t955,\n\t\t\t\t\t\t\t\t956,\n\t\t\t\t\t\t\t\t957,\n\t\t\t\t\t\t\t\t958,\n\t\t\t\t\t\t\t\t-292,\n\t\t\t\t\t\t\t\t959\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562024\",\n\t\t\t\t\t\t\t\"GEN\": \"Marl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t960,\n\t\t\t\t\t\t\t\t961,\n\t\t\t\t\t\t\t\t962,\n\t\t\t\t\t\t\t\t963,\n\t\t\t\t\t\t\t\t964,\n\t\t\t\t\t\t\t\t965,\n\t\t\t\t\t\t\t\t966,\n\t\t\t\t\t\t\t\t967,\n\t\t\t\t\t\t\t\t968,\n\t\t\t\t\t\t\t\t-81,\n\t\t\t\t\t\t\t\t969\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978016\",\n\t\t\t\t\t\t\t\"GEN\": \"Holzwickede\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-407,\n\t\t\t\t\t\t\t\t970,\n\t\t\t\t\t\t\t\t971,\n\t\t\t\t\t\t\t\t972,\n\t\t\t\t\t\t\t\t973,\n\t\t\t\t\t\t\t\t974,\n\t\t\t\t\t\t\t\t975,\n\t\t\t\t\t\t\t\t976,\n\t\t\t\t\t\t\t\t977\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154024\",\n\t\t\t\t\t\t\t\"GEN\": \"Kalkar\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t978,\n\t\t\t\t\t\t\t\t979,\n\t\t\t\t\t\t\t\t980,\n\t\t\t\t\t\t\t\t981,\n\t\t\t\t\t\t\t\t982,\n\t\t\t\t\t\t\t\t983,\n\t\t\t\t\t\t\t\t984,\n\t\t\t\t\t\t\t\t985,\n\t\t\t\t\t\t\t\t986,\n\t\t\t\t\t\t\t\t987,\n\t\t\t\t\t\t\t\t988,\n\t\t\t\t\t\t\t\t989,\n\t\t\t\t\t\t\t\t990,\n\t\t\t\t\t\t\t\t991,\n\t\t\t\t\t\t\t\t992,\n\t\t\t\t\t\t\t\t993,\n\t\t\t\t\t\t\t\t994\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554012\",\n\t\t\t\t\t\t\t\"GEN\": \"Borken\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t995,\n\t\t\t\t\t\t\t\t996,\n\t\t\t\t\t\t\t\t997,\n\t\t\t\t\t\t\t\t998,\n\t\t\t\t\t\t\t\t-591,\n\t\t\t\t\t\t\t\t999,\n\t\t\t\t\t\t\t\t-595,\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t1001,\n\t\t\t\t\t\t\t\t1002,\n\t\t\t\t\t\t\t\t1003,\n\t\t\t\t\t\t\t\t1004,\n\t\t\t\t\t\t\t\t1005,\n\t\t\t\t\t\t\t\t1006\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970044\",\n\t\t\t\t\t\t\t\"GEN\": \"Wilnsdorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-28,\n\t\t\t\t\t\t\t\t1007,\n\t\t\t\t\t\t\t\t1008,\n\t\t\t\t\t\t\t\t1009,\n\t\t\t\t\t\t\t\t1010,\n\t\t\t\t\t\t\t\t-489,\n\t\t\t\t\t\t\t\t1011,\n\t\t\t\t\t\t\t\t1012,\n\t\t\t\t\t\t\t\t1013,\n\t\t\t\t\t\t\t\t1014,\n\t\t\t\t\t\t\t\t1015,\n\t\t\t\t\t\t\t\t1016,\n\t\t\t\t\t\t\t\t1017,\n\t\t\t\t\t\t\t\t1018,\n\t\t\t\t\t\t\t\t1019,\n\t\t\t\t\t\t\t\t1020,\n\t\t\t\t\t\t\t\t1021,\n\t\t\t\t\t\t\t\t-30,\n\t\t\t\t\t\t\t\t1022\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966016\",\n\t\t\t\t\t\t\t\"GEN\": \"Kirchhundem\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1023,\n\t\t\t\t\t\t\t\t1024,\n\t\t\t\t\t\t\t\t1025,\n\t\t\t\t\t\t\t\t-544,\n\t\t\t\t\t\t\t\t1026,\n\t\t\t\t\t\t\t\t1027,\n\t\t\t\t\t\t\t\t-855\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378016\",\n\t\t\t\t\t\t\t\"GEN\": \"Leichlingen (Rhld.)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-94,\n\t\t\t\t\t\t\t\t1028,\n\t\t\t\t\t\t\t\t1029,\n\t\t\t\t\t\t\t\t1030,\n\t\t\t\t\t\t\t\t1031,\n\t\t\t\t\t\t\t\t1032,\n\t\t\t\t\t\t\t\t1033,\n\t\t\t\t\t\t\t\t1034,\n\t\t\t\t\t\t\t\t1035,\n\t\t\t\t\t\t\t\t1036,\n\t\t\t\t\t\t\t\t1037,\n\t\t\t\t\t\t\t\t1038,\n\t\t\t\t\t\t\t\t1039,\n\t\t\t\t\t\t\t\t1040,\n\t\t\t\t\t\t\t\t1041,\n\t\t\t\t\t\t\t\t1042,\n\t\t\t\t\t\t\t\t1043,\n\t\t\t\t\t\t\t\t1044,\n\t\t\t\t\t\t\t\t1045,\n\t\t\t\t\t\t\t\t1046\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05911000\",\n\t\t\t\t\t\t\t\"GEN\": \"Bochum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1047,\n\t\t\t\t\t\t\t\t1048,\n\t\t\t\t\t\t\t\t1049,\n\t\t\t\t\t\t\t\t1050,\n\t\t\t\t\t\t\t\t1051,\n\t\t\t\t\t\t\t\t1052,\n\t\t\t\t\t\t\t\t-562,\n\t\t\t\t\t\t\t\t1053,\n\t\t\t\t\t\t\t\t-570,\n\t\t\t\t\t\t\t\t1054,\n\t\t\t\t\t\t\t\t1055,\n\t\t\t\t\t\t\t\t1056,\n\t\t\t\t\t\t\t\t1057,\n\t\t\t\t\t\t\t\t1058,\n\t\t\t\t\t\t\t\t1059\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374044\",\n\t\t\t\t\t\t\t\"GEN\": \"Waldbröl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1060,\n\t\t\t\t\t\t\t\t1061,\n\t\t\t\t\t\t\t\t1062,\n\t\t\t\t\t\t\t\t1063,\n\t\t\t\t\t\t\t\t1064,\n\t\t\t\t\t\t\t\t1065,\n\t\t\t\t\t\t\t\t1066,\n\t\t\t\t\t\t\t\t-1050,\n\t\t\t\t\t\t\t\t1067,\n\t\t\t\t\t\t\t\t1068,\n\t\t\t\t\t\t\t\t-1060,\n\t\t\t\t\t\t\t\t1069,\n\t\t\t\t\t\t\t\t1070,\n\t\t\t\t\t\t\t\t1071,\n\t\t\t\t\t\t\t\t1072,\n\t\t\t\t\t\t\t\t1073,\n\t\t\t\t\t\t\t\t1074,\n\t\t\t\t\t\t\t\t1075,\n\t\t\t\t\t\t\t\t1076,\n\t\t\t\t\t\t\t\t1077\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374040\",\n\t\t\t\t\t\t\t\"GEN\": \"Reichshof\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-43,\n\t\t\t\t\t\t\t\t1078,\n\t\t\t\t\t\t\t\t1079,\n\t\t\t\t\t\t\t\t1080,\n\t\t\t\t\t\t\t\t1081,\n\t\t\t\t\t\t\t\t1082,\n\t\t\t\t\t\t\t\t1083,\n\t\t\t\t\t\t\t\t1084,\n\t\t\t\t\t\t\t\t1085,\n\t\t\t\t\t\t\t\t1086,\n\t\t\t\t\t\t\t\t1087,\n\t\t\t\t\t\t\t\t1088\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374024\",\n\t\t\t\t\t\t\t\"GEN\": \"Marienheide\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1089,\n\t\t\t\t\t\t\t\t1090,\n\t\t\t\t\t\t\t\t1091,\n\t\t\t\t\t\t\t\t1092,\n\t\t\t\t\t\t\t\t1093,\n\t\t\t\t\t\t\t\t1094,\n\t\t\t\t\t\t\t\t1095,\n\t\t\t\t\t\t\t\t1096,\n\t\t\t\t\t\t\t\t-315,\n\t\t\t\t\t\t\t\t1097,\n\t\t\t\t\t\t\t\t-161,\n\t\t\t\t\t\t\t\t1098,\n\t\t\t\t\t\t\t\t1099,\n\t\t\t\t\t\t\t\t1100\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358052\",\n\t\t\t\t\t\t\t\"GEN\": \"Nörvenich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-497,\n\t\t\t\t\t\t\t\t1101,\n\t\t\t\t\t\t\t\t1102,\n\t\t\t\t\t\t\t\t1103,\n\t\t\t\t\t\t\t\t1104,\n\t\t\t\t\t\t\t\t1105,\n\t\t\t\t\t\t\t\t1106,\n\t\t\t\t\t\t\t\t1107,\n\t\t\t\t\t\t\t\t1108,\n\t\t\t\t\t\t\t\t1109,\n\t\t\t\t\t\t\t\t1110\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362012\",\n\t\t\t\t\t\t\t\"GEN\": \"Brühl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1111,\n\t\t\t\t\t\t\t\t1112,\n\t\t\t\t\t\t\t\t1113,\n\t\t\t\t\t\t\t\t1114,\n\t\t\t\t\t\t\t\t1115,\n\t\t\t\t\t\t\t\t1116,\n\t\t\t\t\t\t\t\t1117,\n\t\t\t\t\t\t\t\t1118,\n\t\t\t\t\t\t\t\t1119,\n\t\t\t\t\t\t\t\t1120\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382060\",\n\t\t\t\t\t\t\t\"GEN\": \"Siegburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-254,\n\t\t\t\t\t\t\t\t1121,\n\t\t\t\t\t\t\t\t1122,\n\t\t\t\t\t\t\t\t1123,\n\t\t\t\t\t\t\t\t1124,\n\t\t\t\t\t\t\t\t1125,\n\t\t\t\t\t\t\t\t1126,\n\t\t\t\t\t\t\t\t1127,\n\t\t\t\t\t\t\t\t1128,\n\t\t\t\t\t\t\t\t-503,\n\t\t\t\t\t\t\t\t1129,\n\t\t\t\t\t\t\t\t1130,\n\t\t\t\t\t\t\t\t1131\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570044\",\n\t\t\t\t\t\t\t\"GEN\": \"Telgte\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1132,\n\t\t\t\t\t\t\t\t1133,\n\t\t\t\t\t\t\t\t1134,\n\t\t\t\t\t\t\t\t1135,\n\t\t\t\t\t\t\t\t1136,\n\t\t\t\t\t\t\t\t1137,\n\t\t\t\t\t\t\t\t-262,\n\t\t\t\t\t\t\t\t1138,\n\t\t\t\t\t\t\t\t1139,\n\t\t\t\t\t\t\t\t1140,\n\t\t\t\t\t\t\t\t1141,\n\t\t\t\t\t\t\t\t1142,\n\t\t\t\t\t\t\t\t1143,\n\t\t\t\t\t\t\t\t-283,\n\t\t\t\t\t\t\t\t1144,\n\t\t\t\t\t\t\t\t-805,\n\t\t\t\t\t\t\t\t1145\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558024\",\n\t\t\t\t\t\t\t\"GEN\": \"Lüdinghausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1115,\n\t\t\t\t\t\t\t\t1146,\n\t\t\t\t\t\t\t\t-8,\n\t\t\t\t\t\t\t\t1147,\n\t\t\t\t\t\t\t\t1148,\n\t\t\t\t\t\t\t\t1149,\n\t\t\t\t\t\t\t\t1150,\n\t\t\t\t\t\t\t\t1151,\n\t\t\t\t\t\t\t\t1152,\n\t\t\t\t\t\t\t\t1153,\n\t\t\t\t\t\t\t\t1154\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382056\",\n\t\t\t\t\t\t\t\"GEN\": \"Sankt Augustin\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1155,\n\t\t\t\t\t\t\t\t1156,\n\t\t\t\t\t\t\t\t-299,\n\t\t\t\t\t\t\t\t1157,\n\t\t\t\t\t\t\t\t1158,\n\t\t\t\t\t\t\t\t1159,\n\t\t\t\t\t\t\t\t1160,\n\t\t\t\t\t\t\t\t1161,\n\t\t\t\t\t\t\t\t1162,\n\t\t\t\t\t\t\t\t1163,\n\t\t\t\t\t\t\t\t1164,\n\t\t\t\t\t\t\t\t1165,\n\t\t\t\t\t\t\t\t1166\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554044\",\n\t\t\t\t\t\t\t\"GEN\": \"Reken\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1167,\n\t\t\t\t\t\t\t\t1168,\n\t\t\t\t\t\t\t\t1169,\n\t\t\t\t\t\t\t\t1170,\n\t\t\t\t\t\t\t\t-1058,\n\t\t\t\t\t\t\t\t1171,\n\t\t\t\t\t\t\t\t1172,\n\t\t\t\t\t\t\t\t1173\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374032\",\n\t\t\t\t\t\t\t\"GEN\": \"Nümbrecht\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1174,\n\t\t\t\t\t\t\t\t-32,\n\t\t\t\t\t\t\t\t1175,\n\t\t\t\t\t\t\t\t-1021,\n\t\t\t\t\t\t\t\t1176,\n\t\t\t\t\t\t\t\t1177,\n\t\t\t\t\t\t\t\t1178,\n\t\t\t\t\t\t\t\t1179,\n\t\t\t\t\t\t\t\t1180,\n\t\t\t\t\t\t\t\t1181,\n\t\t\t\t\t\t\t\t1182,\n\t\t\t\t\t\t\t\t-913,\n\t\t\t\t\t\t\t\t1183\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966024\",\n\t\t\t\t\t\t\t\"GEN\": \"Olpe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1184,\n\t\t\t\t\t\t\t\t-1178,\n\t\t\t\t\t\t\t\t1185,\n\t\t\t\t\t\t\t\t-649,\n\t\t\t\t\t\t\t\t1186,\n\t\t\t\t\t\t\t\t-600,\n\t\t\t\t\t\t\t\t1187,\n\t\t\t\t\t\t\t\t-1063,\n\t\t\t\t\t\t\t\t1188,\n\t\t\t\t\t\t\t\t1189,\n\t\t\t\t\t\t\t\t-1180\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966028\",\n\t\t\t\t\t\t\t\"GEN\": \"Wenden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1190,\n\t\t\t\t\t\t\t\t1191,\n\t\t\t\t\t\t\t\t1192,\n\t\t\t\t\t\t\t\t1193,\n\t\t\t\t\t\t\t\t1194,\n\t\t\t\t\t\t\t\t-1073,\n\t\t\t\t\t\t\t\t1195,\n\t\t\t\t\t\t\t\t1196,\n\t\t\t\t\t\t\t\t1197,\n\t\t\t\t\t\t\t\t1198,\n\t\t\t\t\t\t\t\t1199,\n\t\t\t\t\t\t\t\t1200,\n\t\t\t\t\t\t\t\t1201,\n\t\t\t\t\t\t\t\t1202,\n\t\t\t\t\t\t\t\t-1083,\n\t\t\t\t\t\t\t\t1203,\n\t\t\t\t\t\t\t\t1204,\n\t\t\t\t\t\t\t\t1205,\n\t\t\t\t\t\t\t\t1206\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374012\",\n\t\t\t\t\t\t\t\"GEN\": \"Gummersbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-550,\n\t\t\t\t\t\t\t\t1207,\n\t\t\t\t\t\t\t\t1208,\n\t\t\t\t\t\t\t\t1209,\n\t\t\t\t\t\t\t\t1210,\n\t\t\t\t\t\t\t\t1211,\n\t\t\t\t\t\t\t\t1212,\n\t\t\t\t\t\t\t\t1213,\n\t\t\t\t\t\t\t\t1214,\n\t\t\t\t\t\t\t\t1215,\n\t\t\t\t\t\t\t\t1216,\n\t\t\t\t\t\t\t\t1217,\n\t\t\t\t\t\t\t\t1218,\n\t\t\t\t\t\t\t\t1219,\n\t\t\t\t\t\t\t\t1220,\n\t\t\t\t\t\t\t\t1221,\n\t\t\t\t\t\t\t\t1222,\n\t\t\t\t\t\t\t\t1223,\n\t\t\t\t\t\t\t\t1224\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958032\",\n\t\t\t\t\t\t\t\"GEN\": \"Meschede\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1225,\n\t\t\t\t\t\t\t\t1226,\n\t\t\t\t\t\t\t\t-1052,\n\t\t\t\t\t\t\t\t1227,\n\t\t\t\t\t\t\t\t1228,\n\t\t\t\t\t\t\t\t-1065\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374028\",\n\t\t\t\t\t\t\t\"GEN\": \"Morsbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1229,\n\t\t\t\t\t\t\t\t1230,\n\t\t\t\t\t\t\t\t1231,\n\t\t\t\t\t\t\t\t-731,\n\t\t\t\t\t\t\t\t1232,\n\t\t\t\t\t\t\t\t1233,\n\t\t\t\t\t\t\t\t1234,\n\t\t\t\t\t\t\t\t1235\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962020\",\n\t\t\t\t\t\t\t\"GEN\": \"Herscheid\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1236,\n\t\t\t\t\t\t\t\t1237,\n\t\t\t\t\t\t\t\t1238,\n\t\t\t\t\t\t\t\t1239,\n\t\t\t\t\t\t\t\t-1076,\n\t\t\t\t\t\t\t\t1240,\n\t\t\t\t\t\t\t\t-1193\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bergneustadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1241,\n\t\t\t\t\t\t\t\t-915,\n\t\t\t\t\t\t\t\t1242,\n\t\t\t\t\t\t\t\t-1182,\n\t\t\t\t\t\t\t\t1243,\n\t\t\t\t\t\t\t\t1244,\n\t\t\t\t\t\t\t\t-1061,\n\t\t\t\t\t\t\t\t1245,\n\t\t\t\t\t\t\t\t-1238,\n\t\t\t\t\t\t\t\t1246,\n\t\t\t\t\t\t\t\t-1192,\n\t\t\t\t\t\t\t\t1247,\n\t\t\t\t\t\t\t\t1248,\n\t\t\t\t\t\t\t\t1249\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966008\",\n\t\t\t\t\t\t\t\"GEN\": \"Drolshagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1013,\n\t\t\t\t\t\t\t\t1250,\n\t\t\t\t\t\t\t\t-487,\n\t\t\t\t\t\t\t\t1251,\n\t\t\t\t\t\t\t\t-485,\n\t\t\t\t\t\t\t\t1252,\n\t\t\t\t\t\t\t\t1253,\n\t\t\t\t\t\t\t\t1254,\n\t\t\t\t\t\t\t\t1255,\n\t\t\t\t\t\t\t\t1256,\n\t\t\t\t\t\t\t\t1257,\n\t\t\t\t\t\t\t\t1258,\n\t\t\t\t\t\t\t\t1259,\n\t\t\t\t\t\t\t\t1260,\n\t\t\t\t\t\t\t\t-640,\n\t\t\t\t\t\t\t\t1261,\n\t\t\t\t\t\t\t\t1262,\n\t\t\t\t\t\t\t\t1263\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970020\",\n\t\t\t\t\t\t\t\"GEN\": \"Hilchenbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1264,\n\t\t\t\t\t\t\t\t1265,\n\t\t\t\t\t\t\t\t-1168,\n\t\t\t\t\t\t\t\t1266,\n\t\t\t\t\t\t\t\t1267,\n\t\t\t\t\t\t\t\t1268,\n\t\t\t\t\t\t\t\t1269,\n\t\t\t\t\t\t\t\t1270,\n\t\t\t\t\t\t\t\t1271,\n\t\t\t\t\t\t\t\t1272,\n\t\t\t\t\t\t\t\t1273,\n\t\t\t\t\t\t\t\t1274,\n\t\t\t\t\t\t\t\t1275,\n\t\t\t\t\t\t\t\t1276,\n\t\t\t\t\t\t\t\t1277,\n\t\t\t\t\t\t\t\t1278,\n\t\t\t\t\t\t\t\t1279\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382036\",\n\t\t\t\t\t\t\t\"GEN\": \"Much\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1280,\n\t\t\t\t\t\t\t\t1281,\n\t\t\t\t\t\t\t\t-1085,\n\t\t\t\t\t\t\t\t1282,\n\t\t\t\t\t\t\t\t-1202,\n\t\t\t\t\t\t\t\t1283,\n\t\t\t\t\t\t\t\t1284,\n\t\t\t\t\t\t\t\t1285,\n\t\t\t\t\t\t\t\t1286,\n\t\t\t\t\t\t\t\t1287,\n\t\t\t\t\t\t\t\t1288,\n\t\t\t\t\t\t\t\t-701,\n\t\t\t\t\t\t\t\t1289,\n\t\t\t\t\t\t\t\t-699,\n\t\t\t\t\t\t\t\t1290,\n\t\t\t\t\t\t\t\t1291,\n\t\t\t\t\t\t\t\t1292,\n\t\t\t\t\t\t\t\t1293\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374020\",\n\t\t\t\t\t\t\t\"GEN\": \"Lindlar\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1276,\n\t\t\t\t\t\t\t\t1294,\n\t\t\t\t\t\t\t\t1295,\n\t\t\t\t\t\t\t\t-1273,\n\t\t\t\t\t\t\t\t1296,\n\t\t\t\t\t\t\t\t1297,\n\t\t\t\t\t\t\t\t1298,\n\t\t\t\t\t\t\t\t-1112,\n\t\t\t\t\t\t\t\t1299,\n\t\t\t\t\t\t\t\t1300,\n\t\t\t\t\t\t\t\t1301\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382040\",\n\t\t\t\t\t\t\t\"GEN\": \"Neunkirchen-Seelscheid\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1302,\n\t\t\t\t\t\t\t\t-247,\n\t\t\t\t\t\t\t\t1303,\n\t\t\t\t\t\t\t\t1304,\n\t\t\t\t\t\t\t\t1305,\n\t\t\t\t\t\t\t\t1306,\n\t\t\t\t\t\t\t\t1307,\n\t\t\t\t\t\t\t\t1308,\n\t\t\t\t\t\t\t\t1309,\n\t\t\t\t\t\t\t\t-1094,\n\t\t\t\t\t\t\t\t1310,\n\t\t\t\t\t\t\t\t-1092\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358060\",\n\t\t\t\t\t\t\t\"GEN\": \"Vettweiß\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1311,\n\t\t\t\t\t\t\t\t1312,\n\t\t\t\t\t\t\t\t1313,\n\t\t\t\t\t\t\t\t1314,\n\t\t\t\t\t\t\t\t1315,\n\t\t\t\t\t\t\t\t1316,\n\t\t\t\t\t\t\t\t1317,\n\t\t\t\t\t\t\t\t1318,\n\t\t\t\t\t\t\t\t1319,\n\t\t\t\t\t\t\t\t1320\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154064\",\n\t\t\t\t\t\t\t\"GEN\": \"Weeze\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1321,\n\t\t\t\t\t\t\t\t1322,\n\t\t\t\t\t\t\t\t1323,\n\t\t\t\t\t\t\t\t1324,\n\t\t\t\t\t\t\t\t-1107,\n\t\t\t\t\t\t\t\t1325,\n\t\t\t\t\t\t\t\t-205,\n\t\t\t\t\t\t\t\t1326,\n\t\t\t\t\t\t\t\t-203,\n\t\t\t\t\t\t\t\t1327,\n\t\t\t\t\t\t\t\t-249,\n\t\t\t\t\t\t\t\t1328,\n\t\t\t\t\t\t\t\t-1090,\n\t\t\t\t\t\t\t\t1329,\n\t\t\t\t\t\t\t\t1330,\n\t\t\t\t\t\t\t\t1331\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362020\",\n\t\t\t\t\t\t\t\"GEN\": \"Erftstadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1332,\n\t\t\t\t\t\t\t\t-1288,\n\t\t\t\t\t\t\t\t1333,\n\t\t\t\t\t\t\t\t1334,\n\t\t\t\t\t\t\t\t1335,\n\t\t\t\t\t\t\t\t1336,\n\t\t\t\t\t\t\t\t-1278,\n\t\t\t\t\t\t\t\t1337,\n\t\t\t\t\t\t\t\t1338,\n\t\t\t\t\t\t\t\t1339,\n\t\t\t\t\t\t\t\t1340,\n\t\t\t\t\t\t\t\t1341,\n\t\t\t\t\t\t\t\t1342,\n\t\t\t\t\t\t\t\t1343,\n\t\t\t\t\t\t\t\t-531\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378024\",\n\t\t\t\t\t\t\t\"GEN\": \"Overath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1344,\n\t\t\t\t\t\t\t\t-716,\n\t\t\t\t\t\t\t\t1345,\n\t\t\t\t\t\t\t\t-714,\n\t\t\t\t\t\t\t\t1346,\n\t\t\t\t\t\t\t\t-45,\n\t\t\t\t\t\t\t\t1347,\n\t\t\t\t\t\t\t\t-1088,\n\t\t\t\t\t\t\t\t1348,\n\t\t\t\t\t\t\t\t-1086,\n\t\t\t\t\t\t\t\t1349,\n\t\t\t\t\t\t\t\t-1281,\n\t\t\t\t\t\t\t\t1350,\n\t\t\t\t\t\t\t\t-1293,\n\t\t\t\t\t\t\t\t1351,\n\t\t\t\t\t\t\t\t-696,\n\t\t\t\t\t\t\t\t1352,\n\t\t\t\t\t\t\t\t1353,\n\t\t\t\t\t\t\t\t1354,\n\t\t\t\t\t\t\t\t1355,\n\t\t\t\t\t\t\t\t1356,\n\t\t\t\t\t\t\t\t1357\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374052\",\n\t\t\t\t\t\t\t\"GEN\": \"Wipperfürth\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1358,\n\t\t\t\t\t\t\t\t1359,\n\t\t\t\t\t\t\t\t-859,\n\t\t\t\t\t\t\t\t1360,\n\t\t\t\t\t\t\t\t1361,\n\t\t\t\t\t\t\t\t1362,\n\t\t\t\t\t\t\t\t1363,\n\t\t\t\t\t\t\t\t-904,\n\t\t\t\t\t\t\t\t1364\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hilden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1365,\n\t\t\t\t\t\t\t\t1366,\n\t\t\t\t\t\t\t\t1367,\n\t\t\t\t\t\t\t\t1368,\n\t\t\t\t\t\t\t\t1369,\n\t\t\t\t\t\t\t\t1370,\n\t\t\t\t\t\t\t\t1371,\n\t\t\t\t\t\t\t\t1372,\n\t\t\t\t\t\t\t\t1373,\n\t\t\t\t\t\t\t\t1374,\n\t\t\t\t\t\t\t\t1375,\n\t\t\t\t\t\t\t\t1376,\n\t\t\t\t\t\t\t\t1377,\n\t\t\t\t\t\t\t\t1378\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170020\",\n\t\t\t\t\t\t\t\"GEN\": \"Kamp-Lintfort\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1379,\n\t\t\t\t\t\t\t\t1380,\n\t\t\t\t\t\t\t\t1381,\n\t\t\t\t\t\t\t\t1382,\n\t\t\t\t\t\t\t\t1383,\n\t\t\t\t\t\t\t\t1384,\n\t\t\t\t\t\t\t\t-761,\n\t\t\t\t\t\t\t\t1385,\n\t\t\t\t\t\t\t\t1386,\n\t\t\t\t\t\t\t\t1387,\n\t\t\t\t\t\t\t\t1388,\n\t\t\t\t\t\t\t\t1389\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162024\",\n\t\t\t\t\t\t\t\"GEN\": \"Neuss\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-768,\n\t\t\t\t\t\t\t\t1390,\n\t\t\t\t\t\t\t\t1391,\n\t\t\t\t\t\t\t\t1392,\n\t\t\t\t\t\t\t\t1393,\n\t\t\t\t\t\t\t\t1394,\n\t\t\t\t\t\t\t\t1395,\n\t\t\t\t\t\t\t\t1396,\n\t\t\t\t\t\t\t\t1397,\n\t\t\t\t\t\t\t\t1398,\n\t\t\t\t\t\t\t\t1399,\n\t\t\t\t\t\t\t\t1400,\n\t\t\t\t\t\t\t\t-750,\n\t\t\t\t\t\t\t\t1401\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bedburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-679,\n\t\t\t\t\t\t\t\t1402,\n\t\t\t\t\t\t\t\t1403,\n\t\t\t\t\t\t\t\t1404,\n\t\t\t\t\t\t\t\t1405,\n\t\t\t\t\t\t\t\t1406\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370032\",\n\t\t\t\t\t\t\t\"GEN\": \"Waldfeucht\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1407,\n\t\t\t\t\t\t\t\t1408,\n\t\t\t\t\t\t\t\t1409,\n\t\t\t\t\t\t\t\t1410,\n\t\t\t\t\t\t\t\t1411,\n\t\t\t\t\t\t\t\t1412,\n\t\t\t\t\t\t\t\t1413,\n\t\t\t\t\t\t\t\t1414,\n\t\t\t\t\t\t\t\t1415,\n\t\t\t\t\t\t\t\t1416,\n\t\t\t\t\t\t\t\t-686,\n\t\t\t\t\t\t\t\t1417,\n\t\t\t\t\t\t\t\t-684,\n\t\t\t\t\t\t\t\t1418,\n\t\t\t\t\t\t\t\t-682,\n\t\t\t\t\t\t\t\t1419,\n\t\t\t\t\t\t\t\t1420,\n\t\t\t\t\t\t\t\t1421,\n\t\t\t\t\t\t\t\t1422,\n\t\t\t\t\t\t\t\t1423,\n\t\t\t\t\t\t\t\t1424,\n\t\t\t\t\t\t\t\t1425\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358024\",\n\t\t\t\t\t\t\t\"GEN\": \"Jülich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1426,\n\t\t\t\t\t\t\t\t1427,\n\t\t\t\t\t\t\t\t-692,\n\t\t\t\t\t\t\t\t1428,\n\t\t\t\t\t\t\t\t1429,\n\t\t\t\t\t\t\t\t1430,\n\t\t\t\t\t\t\t\t1431,\n\t\t\t\t\t\t\t\t-657,\n\t\t\t\t\t\t\t\t1432,\n\t\t\t\t\t\t\t\t1433,\n\t\t\t\t\t\t\t\t1434\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334004\",\n\t\t\t\t\t\t\t\"GEN\": \"Alsdorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1435,\n\t\t\t\t\t\t\t\t1436,\n\t\t\t\t\t\t\t\t-166,\n\t\t\t\t\t\t\t\t1437,\n\t\t\t\t\t\t\t\t1438,\n\t\t\t\t\t\t\t\t1439,\n\t\t\t\t\t\t\t\t-311,\n\t\t\t\t\t\t\t\t1440,\n\t\t\t\t\t\t\t\t1441,\n\t\t\t\t\t\t\t\t1442,\n\t\t\t\t\t\t\t\t-1414,\n\t\t\t\t\t\t\t\t1443,\n\t\t\t\t\t\t\t\t-1412,\n\t\t\t\t\t\t\t\t1444,\n\t\t\t\t\t\t\t\t1445,\n\t\t\t\t\t\t\t\t1446\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358048\",\n\t\t\t\t\t\t\t\"GEN\": \"Niederzier\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1173,\n\t\t\t\t\t\t\t\t1447,\n\t\t\t\t\t\t\t\t1448,\n\t\t\t\t\t\t\t\t1449,\n\t\t\t\t\t\t\t\t-568,\n\t\t\t\t\t\t\t\t1450,\n\t\t\t\t\t\t\t\t-560,\n\t\t\t\t\t\t\t\t1451,\n\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t1452,\n\t\t\t\t\t\t\t\t-1298,\n\t\t\t\t\t\t\t\t1453,\n\t\t\t\t\t\t\t\t-1271,\n\t\t\t\t\t\t\t\t1454,\n\t\t\t\t\t\t\t\t1455,\n\t\t\t\t\t\t\t\t-1268,\n\t\t\t\t\t\t\t\t1456\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382052\",\n\t\t\t\t\t\t\t\"GEN\": \"Ruppichteroth\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1457,\n\t\t\t\t\t\t\t\t1458,\n\t\t\t\t\t\t\t\t1459,\n\t\t\t\t\t\t\t\t1460,\n\t\t\t\t\t\t\t\t1461,\n\t\t\t\t\t\t\t\t1462,\n\t\t\t\t\t\t\t\t1463,\n\t\t\t\t\t\t\t\t1464,\n\t\t\t\t\t\t\t\t1465,\n\t\t\t\t\t\t\t\t1466,\n\t\t\t\t\t\t\t\t1467,\n\t\t\t\t\t\t\t\t1468,\n\t\t\t\t\t\t\t\t1469,\n\t\t\t\t\t\t\t\t1470,\n\t\t\t\t\t\t\t\t1471,\n\t\t\t\t\t\t\t\t1472,\n\t\t\t\t\t\t\t\t1473,\n\t\t\t\t\t\t\t\t1474,\n\t\t\t\t\t\t\t\t1475\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754008\",\n\t\t\t\t\t\t\t\"GEN\": \"Gütersloh\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1476,\n\t\t\t\t\t\t\t\t1477,\n\t\t\t\t\t\t\t\t1478,\n\t\t\t\t\t\t\t\t1479,\n\t\t\t\t\t\t\t\t1480,\n\t\t\t\t\t\t\t\t1481,\n\t\t\t\t\t\t\t\t1482,\n\t\t\t\t\t\t\t\t1483,\n\t\t\t\t\t\t\t\t1484,\n\t\t\t\t\t\t\t\t1485,\n\t\t\t\t\t\t\t\t1486,\n\t\t\t\t\t\t\t\t1487,\n\t\t\t\t\t\t\t\t1488,\n\t\t\t\t\t\t\t\t1489,\n\t\t\t\t\t\t\t\t1490,\n\t\t\t\t\t\t\t\t1491,\n\t\t\t\t\t\t\t\t1492,\n\t\t\t\t\t\t\t\t1493,\n\t\t\t\t\t\t\t\t1494,\n\t\t\t\t\t\t\t\t1495\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Driburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1496,\n\t\t\t\t\t\t\t\t1497,\n\t\t\t\t\t\t\t\t1498,\n\t\t\t\t\t\t\t\t1499,\n\t\t\t\t\t\t\t\t1500,\n\t\t\t\t\t\t\t\t1501,\n\t\t\t\t\t\t\t\t-1006,\n\t\t\t\t\t\t\t\t1502,\n\t\t\t\t\t\t\t\t-1004,\n\t\t\t\t\t\t\t\t1503,\n\t\t\t\t\t\t\t\t1504,\n\t\t\t\t\t\t\t\t1505,\n\t\t\t\t\t\t\t\t-597,\n\t\t\t\t\t\t\t\t1506,\n\t\t\t\t\t\t\t\t1507,\n\t\t\t\t\t\t\t\t-647,\n\t\t\t\t\t\t\t\t1508,\n\t\t\t\t\t\t\t\t-645,\n\t\t\t\t\t\t\t\t1509\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970040\",\n\t\t\t\t\t\t\t\"GEN\": \"Siegen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1510,\n\t\t\t\t\t\t\t\t1511,\n\t\t\t\t\t\t\t\t1512,\n\t\t\t\t\t\t\t\t1513,\n\t\t\t\t\t\t\t\t1514,\n\t\t\t\t\t\t\t\t1515,\n\t\t\t\t\t\t\t\t1516,\n\t\t\t\t\t\t\t\t1517,\n\t\t\t\t\t\t\t\t-13\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362024\",\n\t\t\t\t\t\t\t\"GEN\": \"Frechen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1518,\n\t\t\t\t\t\t\t\t1519,\n\t\t\t\t\t\t\t\t1520,\n\t\t\t\t\t\t\t\t1521,\n\t\t\t\t\t\t\t\t1522,\n\t\t\t\t\t\t\t\t1523,\n\t\t\t\t\t\t\t\t1524,\n\t\t\t\t\t\t\t\t1525,\n\t\t\t\t\t\t\t\t1526,\n\t\t\t\t\t\t\t\t1527,\n\t\t\t\t\t\t\t\t1528\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766012\",\n\t\t\t\t\t\t\t\"GEN\": \"Barntrup\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1529,\n\t\t\t\t\t\t\t\t1530,\n\t\t\t\t\t\t\t\t1531,\n\t\t\t\t\t\t\t\t1532,\n\t\t\t\t\t\t\t\t-136,\n\t\t\t\t\t\t\t\t1533,\n\t\t\t\t\t\t\t\t1534,\n\t\t\t\t\t\t\t\t1535,\n\t\t\t\t\t\t\t\t1536,\n\t\t\t\t\t\t\t\t1537,\n\t\t\t\t\t\t\t\t1538\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774024\",\n\t\t\t\t\t\t\t\"GEN\": \"Hövelhof\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1539,\n\t\t\t\t\t\t\t\t1540,\n\t\t\t\t\t\t\t\t1541,\n\t\t\t\t\t\t\t\t1542,\n\t\t\t\t\t\t\t\t1543,\n\t\t\t\t\t\t\t\t1544,\n\t\t\t\t\t\t\t\t1545,\n\t\t\t\t\t\t\t\t1546,\n\t\t\t\t\t\t\t\t1547,\n\t\t\t\t\t\t\t\t1548,\n\t\t\t\t\t\t\t\t1549,\n\t\t\t\t\t\t\t\t1550,\n\t\t\t\t\t\t\t\t1551,\n\t\t\t\t\t\t\t\t1552,\n\t\t\t\t\t\t\t\t1553,\n\t\t\t\t\t\t\t\t1554,\n\t\t\t\t\t\t\t\t1555,\n\t\t\t\t\t\t\t\t1556,\n\t\t\t\t\t\t\t\t1557,\n\t\t\t\t\t\t\t\t1558\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954008\",\n\t\t\t\t\t\t\t\"GEN\": \"Ennepetal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1559,\n\t\t\t\t\t\t\t\t1560,\n\t\t\t\t\t\t\t\t1561,\n\t\t\t\t\t\t\t\t1562,\n\t\t\t\t\t\t\t\t-867,\n\t\t\t\t\t\t\t\t1563,\n\t\t\t\t\t\t\t\t1564,\n\t\t\t\t\t\t\t\t1565,\n\t\t\t\t\t\t\t\t1566,\n\t\t\t\t\t\t\t\t1567,\n\t\t\t\t\t\t\t\t1568\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154028\",\n\t\t\t\t\t\t\t\"GEN\": \"Kerken\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1569,\n\t\t\t\t\t\t\t\t1570,\n\t\t\t\t\t\t\t\t1571,\n\t\t\t\t\t\t\t\t1572,\n\t\t\t\t\t\t\t\t1573,\n\t\t\t\t\t\t\t\t1574,\n\t\t\t\t\t\t\t\t1575,\n\t\t\t\t\t\t\t\t1576\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bocholt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-270,\n\t\t\t\t\t\t\t\t1577,\n\t\t\t\t\t\t\t\t1578,\n\t\t\t\t\t\t\t\t1579,\n\t\t\t\t\t\t\t\t1580,\n\t\t\t\t\t\t\t\t1581,\n\t\t\t\t\t\t\t\t-74,\n\t\t\t\t\t\t\t\t1582,\n\t\t\t\t\t\t\t\t-101,\n\t\t\t\t\t\t\t\t1583,\n\t\t\t\t\t\t\t\t-182,\n\t\t\t\t\t\t\t\t1584,\n\t\t\t\t\t\t\t\t1585,\n\t\t\t\t\t\t\t\t-272,\n\t\t\t\t\t\t\t\t1586\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978024\",\n\t\t\t\t\t\t\t\"GEN\": \"Lünen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1587,\n\t\t\t\t\t\t\t\t-934,\n\t\t\t\t\t\t\t\t1588,\n\t\t\t\t\t\t\t\t1589,\n\t\t\t\t\t\t\t\t-931,\n\t\t\t\t\t\t\t\t1590,\n\t\t\t\t\t\t\t\t1591,\n\t\t\t\t\t\t\t\t1592,\n\t\t\t\t\t\t\t\t1593,\n\t\t\t\t\t\t\t\t1594,\n\t\t\t\t\t\t\t\t-671,\n\t\t\t\t\t\t\t\t1595,\n\t\t\t\t\t\t\t\t1596\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370020\",\n\t\t\t\t\t\t\t\"GEN\": \"Hückelhoven\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1597,\n\t\t\t\t\t\t\t\t1598,\n\t\t\t\t\t\t\t\t1599,\n\t\t\t\t\t\t\t\t1600,\n\t\t\t\t\t\t\t\t1601,\n\t\t\t\t\t\t\t\t1602\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554068\",\n\t\t\t\t\t\t\t\"GEN\": \"Vreden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1603,\n\t\t\t\t\t\t\t\t1604,\n\t\t\t\t\t\t\t\t1605,\n\t\t\t\t\t\t\t\t1606,\n\t\t\t\t\t\t\t\t-890,\n\t\t\t\t\t\t\t\t1607,\n\t\t\t\t\t\t\t\t1608,\n\t\t\t\t\t\t\t\t1609,\n\t\t\t\t\t\t\t\t1610,\n\t\t\t\t\t\t\t\t1611,\n\t\t\t\t\t\t\t\t1612,\n\t\t\t\t\t\t\t\t1613,\n\t\t\t\t\t\t\t\t1614,\n\t\t\t\t\t\t\t\t1615,\n\t\t\t\t\t\t\t\t1616,\n\t\t\t\t\t\t\t\t1617,\n\t\t\t\t\t\t\t\t1618\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766040\",\n\t\t\t\t\t\t\t\"GEN\": \"Lage\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1619,\n\t\t\t\t\t\t\t\t1620,\n\t\t\t\t\t\t\t\t1621,\n\t\t\t\t\t\t\t\t1622,\n\t\t\t\t\t\t\t\t1623,\n\t\t\t\t\t\t\t\t1624,\n\t\t\t\t\t\t\t\t1625,\n\t\t\t\t\t\t\t\t1626,\n\t\t\t\t\t\t\t\t1627,\n\t\t\t\t\t\t\t\t1628,\n\t\t\t\t\t\t\t\t1629,\n\t\t\t\t\t\t\t\t1630,\n\t\t\t\t\t\t\t\t-952,\n\t\t\t\t\t\t\t\t1631\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562032\",\n\t\t\t\t\t\t\t\"GEN\": \"Recklinghausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1632,\n\t\t\t\t\t\t\t\t1633,\n\t\t\t\t\t\t\t\t1634,\n\t\t\t\t\t\t\t\t1635,\n\t\t\t\t\t\t\t\t1636,\n\t\t\t\t\t\t\t\t1637,\n\t\t\t\t\t\t\t\t1638,\n\t\t\t\t\t\t\t\t1639,\n\t\t\t\t\t\t\t\t1640,\n\t\t\t\t\t\t\t\t1641,\n\t\t\t\t\t\t\t\t1642,\n\t\t\t\t\t\t\t\t1643,\n\t\t\t\t\t\t\t\t1644,\n\t\t\t\t\t\t\t\t1645\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570048\",\n\t\t\t\t\t\t\t\"GEN\": \"Wadersloh\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-967,\n\t\t\t\t\t\t\t\t1646,\n\t\t\t\t\t\t\t\t1647,\n\t\t\t\t\t\t\t\t1648,\n\t\t\t\t\t\t\t\t1649,\n\t\t\t\t\t\t\t\t1650,\n\t\t\t\t\t\t\t\t1651,\n\t\t\t\t\t\t\t\t-87,\n\t\t\t\t\t\t\t\t1652,\n\t\t\t\t\t\t\t\t-85,\n\t\t\t\t\t\t\t\t1653,\n\t\t\t\t\t\t\t\t-83,\n\t\t\t\t\t\t\t\t1654,\n\t\t\t\t\t\t\t\t1655\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978028\",\n\t\t\t\t\t\t\t\"GEN\": \"Schwerte\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-495,\n\t\t\t\t\t\t\t\t1656,\n\t\t\t\t\t\t\t\t1657,\n\t\t\t\t\t\t\t\t1658,\n\t\t\t\t\t\t\t\t1659,\n\t\t\t\t\t\t\t\t1660,\n\t\t\t\t\t\t\t\t1661,\n\t\t\t\t\t\t\t\t1662,\n\t\t\t\t\t\t\t\t-209,\n\t\t\t\t\t\t\t\t1663,\n\t\t\t\t\t\t\t\t-195,\n\t\t\t\t\t\t\t\t1664,\n\t\t\t\t\t\t\t\t-193,\n\t\t\t\t\t\t\t\t1665,\n\t\t\t\t\t\t\t\t1666,\n\t\t\t\t\t\t\t\t1667,\n\t\t\t\t\t\t\t\t-1103,\n\t\t\t\t\t\t\t\t1668\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382012\",\n\t\t\t\t\t\t\t\"GEN\": \"Bornheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1669,\n\t\t\t\t\t\t\t\t1670,\n\t\t\t\t\t\t\t\t1671,\n\t\t\t\t\t\t\t\t1672,\n\t\t\t\t\t\t\t\t1673,\n\t\t\t\t\t\t\t\t-211,\n\t\t\t\t\t\t\t\t1674,\n\t\t\t\t\t\t\t\t-1662,\n\t\t\t\t\t\t\t\t1675\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382004\",\n\t\t\t\t\t\t\t\"GEN\": \"Alfter\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1676,\n\t\t\t\t\t\t\t\t1677,\n\t\t\t\t\t\t\t\t-397,\n\t\t\t\t\t\t\t\t1678,\n\t\t\t\t\t\t\t\t1679,\n\t\t\t\t\t\t\t\t1680,\n\t\t\t\t\t\t\t\t1681,\n\t\t\t\t\t\t\t\t1682,\n\t\t\t\t\t\t\t\t-1366,\n\t\t\t\t\t\t\t\t1683,\n\t\t\t\t\t\t\t\t1684,\n\t\t\t\t\t\t\t\t1685,\n\t\t\t\t\t\t\t\t1686,\n\t\t\t\t\t\t\t\t1687\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170004\",\n\t\t\t\t\t\t\t\"GEN\": \"Alpen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1688,\n\t\t\t\t\t\t\t\t1689,\n\t\t\t\t\t\t\t\t1690,\n\t\t\t\t\t\t\t\t1691,\n\t\t\t\t\t\t\t\t-845,\n\t\t\t\t\t\t\t\t1692,\n\t\t\t\t\t\t\t\t-843,\n\t\t\t\t\t\t\t\t1693,\n\t\t\t\t\t\t\t\t-963,\n\t\t\t\t\t\t\t\t1694,\n\t\t\t\t\t\t\t\t1695,\n\t\t\t\t\t\t\t\t1696\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978012\",\n\t\t\t\t\t\t\t\"GEN\": \"Fröndenberg/Ruhr\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1697,\n\t\t\t\t\t\t\t\t1698,\n\t\t\t\t\t\t\t\t-191,\n\t\t\t\t\t\t\t\t1699,\n\t\t\t\t\t\t\t\t-189,\n\t\t\t\t\t\t\t\t1700,\n\t\t\t\t\t\t\t\t1701,\n\t\t\t\t\t\t\t\t1702,\n\t\t\t\t\t\t\t\t1703,\n\t\t\t\t\t\t\t\t1704,\n\t\t\t\t\t\t\t\t1705,\n\t\t\t\t\t\t\t\t-285,\n\t\t\t\t\t\t\t\t1706\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562008\",\n\t\t\t\t\t\t\t\"GEN\": \"Datteln\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-987,\n\t\t\t\t\t\t\t\t1707,\n\t\t\t\t\t\t\t\t1708,\n\t\t\t\t\t\t\t\t1709,\n\t\t\t\t\t\t\t\t1710,\n\t\t\t\t\t\t\t\t1711,\n\t\t\t\t\t\t\t\t1712,\n\t\t\t\t\t\t\t\t1713,\n\t\t\t\t\t\t\t\t1714,\n\t\t\t\t\t\t\t\t1715,\n\t\t\t\t\t\t\t\t-989,\n\t\t\t\t\t\t\t\t1716\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554040\",\n\t\t\t\t\t\t\t\"GEN\": \"Raesfeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1717,\n\t\t\t\t\t\t\t\t1718,\n\t\t\t\t\t\t\t\t1719,\n\t\t\t\t\t\t\t\t-1526,\n\t\t\t\t\t\t\t\t1720,\n\t\t\t\t\t\t\t\t-1524,\n\t\t\t\t\t\t\t\t1721,\n\t\t\t\t\t\t\t\t1722,\n\t\t\t\t\t\t\t\t1723,\n\t\t\t\t\t\t\t\t1724,\n\t\t\t\t\t\t\t\t1725,\n\t\t\t\t\t\t\t\t1726,\n\t\t\t\t\t\t\t\t1727,\n\t\t\t\t\t\t\t\t1728,\n\t\t\t\t\t\t\t\t1729\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766024\",\n\t\t\t\t\t\t\t\"GEN\": \"Dörentrup\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1685,\n\t\t\t\t\t\t\t\t1730,\n\t\t\t\t\t\t\t\t-1378,\n\t\t\t\t\t\t\t\t1731,\n\t\t\t\t\t\t\t\t-1376,\n\t\t\t\t\t\t\t\t1732,\n\t\t\t\t\t\t\t\t1733,\n\t\t\t\t\t\t\t\t-869,\n\t\t\t\t\t\t\t\t1734,\n\t\t\t\t\t\t\t\t1735,\n\t\t\t\t\t\t\t\t1736,\n\t\t\t\t\t\t\t\t1737,\n\t\t\t\t\t\t\t\t1738\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154020\",\n\t\t\t\t\t\t\t\"GEN\": \"Issum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-367,\n\t\t\t\t\t\t\t\t1739,\n\t\t\t\t\t\t\t\t-365,\n\t\t\t\t\t\t\t\t1740,\n\t\t\t\t\t\t\t\t1741,\n\t\t\t\t\t\t\t\t1742,\n\t\t\t\t\t\t\t\t1743,\n\t\t\t\t\t\t\t\t1744,\n\t\t\t\t\t\t\t\t1745,\n\t\t\t\t\t\t\t\t1746,\n\t\t\t\t\t\t\t\t1747,\n\t\t\t\t\t\t\t\t1748,\n\t\t\t\t\t\t\t\t1749,\n\t\t\t\t\t\t\t\t1750,\n\t\t\t\t\t\t\t\t-369,\n\t\t\t\t\t\t\t\t1751\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758036\",\n\t\t\t\t\t\t\t\"GEN\": \"Vlotho\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1752,\n\t\t\t\t\t\t\t\t1753,\n\t\t\t\t\t\t\t\t1754,\n\t\t\t\t\t\t\t\t1755,\n\t\t\t\t\t\t\t\t-1236,\n\t\t\t\t\t\t\t\t1756,\n\t\t\t\t\t\t\t\t1757,\n\t\t\t\t\t\t\t\t-38,\n\t\t\t\t\t\t\t\t1758,\n\t\t\t\t\t\t\t\t1759,\n\t\t\t\t\t\t\t\t1760,\n\t\t\t\t\t\t\t\t-708,\n\t\t\t\t\t\t\t\t1761,\n\t\t\t\t\t\t\t\t1762,\n\t\t\t\t\t\t\t\t1763,\n\t\t\t\t\t\t\t\t1764\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962032\",\n\t\t\t\t\t\t\t\"GEN\": \"Lüdenscheid\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-471,\n\t\t\t\t\t\t\t\t1765,\n\t\t\t\t\t\t\t\t1766,\n\t\t\t\t\t\t\t\t1767,\n\t\t\t\t\t\t\t\t1768,\n\t\t\t\t\t\t\t\t1769,\n\t\t\t\t\t\t\t\t1770,\n\t\t\t\t\t\t\t\t1771,\n\t\t\t\t\t\t\t\t1772,\n\t\t\t\t\t\t\t\t1773,\n\t\t\t\t\t\t\t\t1774,\n\t\t\t\t\t\t\t\t1775,\n\t\t\t\t\t\t\t\t1776,\n\t\t\t\t\t\t\t\t1777\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974052\",\n\t\t\t\t\t\t\t\"GEN\": \"Werl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1778,\n\t\t\t\t\t\t\t\t1779,\n\t\t\t\t\t\t\t\t1780,\n\t\t\t\t\t\t\t\t1781,\n\t\t\t\t\t\t\t\t1782,\n\t\t\t\t\t\t\t\t1783,\n\t\t\t\t\t\t\t\t1784,\n\t\t\t\t\t\t\t\t1785,\n\t\t\t\t\t\t\t\t1786,\n\t\t\t\t\t\t\t\t1787,\n\t\t\t\t\t\t\t\t1788,\n\t\t\t\t\t\t\t\t-1485,\n\t\t\t\t\t\t\t\t1789,\n\t\t\t\t\t\t\t\t1790,\n\t\t\t\t\t\t\t\t1791,\n\t\t\t\t\t\t\t\t1792,\n\t\t\t\t\t\t\t\t1793,\n\t\t\t\t\t\t\t\t-823\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762016\",\n\t\t\t\t\t\t\t\"GEN\": \"Brakel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1794,\n\t\t\t\t\t\t\t\t-827,\n\t\t\t\t\t\t\t\t1795,\n\t\t\t\t\t\t\t\t-825,\n\t\t\t\t\t\t\t\t1796,\n\t\t\t\t\t\t\t\t-1793,\n\t\t\t\t\t\t\t\t1797,\n\t\t\t\t\t\t\t\t-1481,\n\t\t\t\t\t\t\t\t1798,\n\t\t\t\t\t\t\t\t-1479,\n\t\t\t\t\t\t\t\t1799,\n\t\t\t\t\t\t\t\t-1477,\n\t\t\t\t\t\t\t\t1800,\n\t\t\t\t\t\t\t\t1801\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762028\",\n\t\t\t\t\t\t\t\"GEN\": \"Nieheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1802,\n\t\t\t\t\t\t\t\t1803,\n\t\t\t\t\t\t\t\t1804,\n\t\t\t\t\t\t\t\t1805,\n\t\t\t\t\t\t\t\t-1643,\n\t\t\t\t\t\t\t\t1806,\n\t\t\t\t\t\t\t\t1807,\n\t\t\t\t\t\t\t\t1808,\n\t\t\t\t\t\t\t\t1809,\n\t\t\t\t\t\t\t\t1810,\n\t\t\t\t\t\t\t\t1811,\n\t\t\t\t\t\t\t\t1812,\n\t\t\t\t\t\t\t\t1813,\n\t\t\t\t\t\t\t\t1814,\n\t\t\t\t\t\t\t\t1815\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570008\",\n\t\t\t\t\t\t\t\"GEN\": \"Beckum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1816,\n\t\t\t\t\t\t\t\t1817,\n\t\t\t\t\t\t\t\t1818,\n\t\t\t\t\t\t\t\t1819,\n\t\t\t\t\t\t\t\t1820,\n\t\t\t\t\t\t\t\t1821,\n\t\t\t\t\t\t\t\t1822,\n\t\t\t\t\t\t\t\t-899,\n\t\t\t\t\t\t\t\t1823,\n\t\t\t\t\t\t\t\t1824,\n\t\t\t\t\t\t\t\t1825,\n\t\t\t\t\t\t\t\t-792\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158024\",\n\t\t\t\t\t\t\t\"GEN\": \"Mettmann\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1826,\n\t\t\t\t\t\t\t\t1827,\n\t\t\t\t\t\t\t\t1828,\n\t\t\t\t\t\t\t\t1829,\n\t\t\t\t\t\t\t\t1830,\n\t\t\t\t\t\t\t\t-476,\n\t\t\t\t\t\t\t\t1831,\n\t\t\t\t\t\t\t\t-491,\n\t\t\t\t\t\t\t\t1832,\n\t\t\t\t\t\t\t\t-1009,\n\t\t\t\t\t\t\t\t1833,\n\t\t\t\t\t\t\t\t1834,\n\t\t\t\t\t\t\t\t1835,\n\t\t\t\t\t\t\t\t1836,\n\t\t\t\t\t\t\t\t1837,\n\t\t\t\t\t\t\t\t1838,\n\t\t\t\t\t\t\t\t1839\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Berleburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1724,\n\t\t\t\t\t\t\t\t1840,\n\t\t\t\t\t\t\t\t1841,\n\t\t\t\t\t\t\t\t-1520,\n\t\t\t\t\t\t\t\t1842,\n\t\t\t\t\t\t\t\t1843,\n\t\t\t\t\t\t\t\t1844,\n\t\t\t\t\t\t\t\t1845,\n\t\t\t\t\t\t\t\t1846,\n\t\t\t\t\t\t\t\t1847,\n\t\t\t\t\t\t\t\t1848,\n\t\t\t\t\t\t\t\t1849,\n\t\t\t\t\t\t\t\t1850,\n\t\t\t\t\t\t\t\t1851,\n\t\t\t\t\t\t\t\t1852,\n\t\t\t\t\t\t\t\t1853,\n\t\t\t\t\t\t\t\t1854\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766016\",\n\t\t\t\t\t\t\t\"GEN\": \"Blomberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1855,\n\t\t\t\t\t\t\t\t1856,\n\t\t\t\t\t\t\t\t1857,\n\t\t\t\t\t\t\t\t1858,\n\t\t\t\t\t\t\t\t1859,\n\t\t\t\t\t\t\t\t1860,\n\t\t\t\t\t\t\t\t1861,\n\t\t\t\t\t\t\t\t-733,\n\t\t\t\t\t\t\t\t1862,\n\t\t\t\t\t\t\t\t-1231,\n\t\t\t\t\t\t\t\t1863,\n\t\t\t\t\t\t\t\t1864,\n\t\t\t\t\t\t\t\t-1754,\n\t\t\t\t\t\t\t\t1865,\n\t\t\t\t\t\t\t\t1866\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962060\",\n\t\t\t\t\t\t\t\"GEN\": \"Werdohl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-90,\n\t\t\t\t\t\t\t\t1867,\n\t\t\t\t\t\t\t\t1868,\n\t\t\t\t\t\t\t\t1869,\n\t\t\t\t\t\t\t\t1870,\n\t\t\t\t\t\t\t\t1871,\n\t\t\t\t\t\t\t\t1872,\n\t\t\t\t\t\t\t\t1873,\n\t\t\t\t\t\t\t\t1874\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954020\",\n\t\t\t\t\t\t\t\"GEN\": \"Herdecke\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1875,\n\t\t\t\t\t\t\t\t1876,\n\t\t\t\t\t\t\t\t1877,\n\t\t\t\t\t\t\t\t1878,\n\t\t\t\t\t\t\t\t1879,\n\t\t\t\t\t\t\t\t1880,\n\t\t\t\t\t\t\t\t1881,\n\t\t\t\t\t\t\t\t1882,\n\t\t\t\t\t\t\t\t1883,\n\t\t\t\t\t\t\t\t1884,\n\t\t\t\t\t\t\t\t1885,\n\t\t\t\t\t\t\t\t1886,\n\t\t\t\t\t\t\t\t1887,\n\t\t\t\t\t\t\t\t1888\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bönen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1889,\n\t\t\t\t\t\t\t\t1890,\n\t\t\t\t\t\t\t\t1891,\n\t\t\t\t\t\t\t\t1892,\n\t\t\t\t\t\t\t\t1893,\n\t\t\t\t\t\t\t\t1894,\n\t\t\t\t\t\t\t\t1895,\n\t\t\t\t\t\t\t\t1896,\n\t\t\t\t\t\t\t\t1897,\n\t\t\t\t\t\t\t\t1898,\n\t\t\t\t\t\t\t\t1899\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754048\",\n\t\t\t\t\t\t\t\"GEN\": \"Versmold\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1900,\n\t\t\t\t\t\t\t\t1901,\n\t\t\t\t\t\t\t\t1902,\n\t\t\t\t\t\t\t\t1903,\n\t\t\t\t\t\t\t\t1904,\n\t\t\t\t\t\t\t\t1905,\n\t\t\t\t\t\t\t\t1906,\n\t\t\t\t\t\t\t\t1907,\n\t\t\t\t\t\t\t\t-355,\n\t\t\t\t\t\t\t\t1908,\n\t\t\t\t\t\t\t\t1909,\n\t\t\t\t\t\t\t\t1910,\n\t\t\t\t\t\t\t\t1911,\n\t\t\t\t\t\t\t\t1912,\n\t\t\t\t\t\t\t\t1913\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954028\",\n\t\t\t\t\t\t\t\"GEN\": \"Sprockhövel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1914,\n\t\t\t\t\t\t\t\t1915,\n\t\t\t\t\t\t\t\t1916,\n\t\t\t\t\t\t\t\t1917,\n\t\t\t\t\t\t\t\t-1335,\n\t\t\t\t\t\t\t\t1918,\n\t\t\t\t\t\t\t\t1919,\n\t\t\t\t\t\t\t\t-1285,\n\t\t\t\t\t\t\t\t1920,\n\t\t\t\t\t\t\t\t-1200\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374008\",\n\t\t\t\t\t\t\t\"GEN\": \"Engelskirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1921,\n\t\t\t\t\t\t\t\t1922,\n\t\t\t\t\t\t\t\t1923,\n\t\t\t\t\t\t\t\t1924,\n\t\t\t\t\t\t\t\t-720,\n\t\t\t\t\t\t\t\t1925,\n\t\t\t\t\t\t\t\t1926,\n\t\t\t\t\t\t\t\t1927,\n\t\t\t\t\t\t\t\t1928,\n\t\t\t\t\t\t\t\t1929,\n\t\t\t\t\t\t\t\t1930,\n\t\t\t\t\t\t\t\t1931,\n\t\t\t\t\t\t\t\t1932,\n\t\t\t\t\t\t\t\t1933,\n\t\t\t\t\t\t\t\t-1547,\n\t\t\t\t\t\t\t\t1934,\n\t\t\t\t\t\t\t\t1935,\n\t\t\t\t\t\t\t\t-1544,\n\t\t\t\t\t\t\t\t1936,\n\t\t\t\t\t\t\t\t1937,\n\t\t\t\t\t\t\t\t1938,\n\t\t\t\t\t\t\t\t1939\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954004\",\n\t\t\t\t\t\t\t\"GEN\": \"Breckerfeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1940,\n\t\t\t\t\t\t\t\t-1705,\n\t\t\t\t\t\t\t\t1941,\n\t\t\t\t\t\t\t\t1942,\n\t\t\t\t\t\t\t\t-1621,\n\t\t\t\t\t\t\t\t1943,\n\t\t\t\t\t\t\t\t-949,\n\t\t\t\t\t\t\t\t1944,\n\t\t\t\t\t\t\t\t-288,\n\t\t\t\t\t\t\t\t1945\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562028\",\n\t\t\t\t\t\t\t\"GEN\": \"Oer-Erkenschwick\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1464,\n\t\t\t\t\t\t\t\t1946,\n\t\t\t\t\t\t\t\t1947,\n\t\t\t\t\t\t\t\t1948,\n\t\t\t\t\t\t\t\t1949,\n\t\t\t\t\t\t\t\t1950,\n\t\t\t\t\t\t\t\t1951,\n\t\t\t\t\t\t\t\t1952,\n\t\t\t\t\t\t\t\t1953,\n\t\t\t\t\t\t\t\t1954,\n\t\t\t\t\t\t\t\t1955,\n\t\t\t\t\t\t\t\t1956,\n\t\t\t\t\t\t\t\t1957\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754028\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheda-Wiedenbrück\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1958,\n\t\t\t\t\t\t\t\t1959,\n\t\t\t\t\t\t\t\t-1852,\n\t\t\t\t\t\t\t\t1960,\n\t\t\t\t\t\t\t\t1961,\n\t\t\t\t\t\t\t\t1962,\n\t\t\t\t\t\t\t\t1963,\n\t\t\t\t\t\t\t\t1964,\n\t\t\t\t\t\t\t\t1965,\n\t\t\t\t\t\t\t\t1966,\n\t\t\t\t\t\t\t\t-892,\n\t\t\t\t\t\t\t\t1967,\n\t\t\t\t\t\t\t\t-1606,\n\t\t\t\t\t\t\t\t1968,\n\t\t\t\t\t\t\t\t1969,\n\t\t\t\t\t\t\t\t1970\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766020\",\n\t\t\t\t\t\t\t\"GEN\": \"Detmold\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1404,\n\t\t\t\t\t\t\t\t1971,\n\t\t\t\t\t\t\t\t-677,\n\t\t\t\t\t\t\t\t1972,\n\t\t\t\t\t\t\t\t1973,\n\t\t\t\t\t\t\t\t1974,\n\t\t\t\t\t\t\t\t-668,\n\t\t\t\t\t\t\t\t1975,\n\t\t\t\t\t\t\t\t1976\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370008\",\n\t\t\t\t\t\t\t\"GEN\": \"Gangelt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1977,\n\t\t\t\t\t\t\t\t-837,\n\t\t\t\t\t\t\t\t1978,\n\t\t\t\t\t\t\t\t1979,\n\t\t\t\t\t\t\t\t1980,\n\t\t\t\t\t\t\t\t1981,\n\t\t\t\t\t\t\t\t1982,\n\t\t\t\t\t\t\t\t1983,\n\t\t\t\t\t\t\t\t1984,\n\t\t\t\t\t\t\t\t-840,\n\t\t\t\t\t\t\t\t1985\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hemer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1986,\n\t\t\t\t\t\t\t\t-1355,\n\t\t\t\t\t\t\t\t1987,\n\t\t\t\t\t\t\t\t1988,\n\t\t\t\t\t\t\t\t1989,\n\t\t\t\t\t\t\t\t1990,\n\t\t\t\t\t\t\t\t1991,\n\t\t\t\t\t\t\t\t1992,\n\t\t\t\t\t\t\t\t1993\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hückeswagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1994,\n\t\t\t\t\t\t\t\t1995,\n\t\t\t\t\t\t\t\t1996,\n\t\t\t\t\t\t\t\t1997,\n\t\t\t\t\t\t\t\t1998,\n\t\t\t\t\t\t\t\t1999,\n\t\t\t\t\t\t\t\t2000,\n\t\t\t\t\t\t\t\t2001,\n\t\t\t\t\t\t\t\t2002,\n\t\t\t\t\t\t\t\t-223,\n\t\t\t\t\t\t\t\t2003,\n\t\t\t\t\t\t\t\t-221,\n\t\t\t\t\t\t\t\t2004,\n\t\t\t\t\t\t\t\t2005,\n\t\t\t\t\t\t\t\t2006\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758024\",\n\t\t\t\t\t\t\t\"GEN\": \"Löhne\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2007,\n\t\t\t\t\t\t\t\t2008,\n\t\t\t\t\t\t\t\t2009,\n\t\t\t\t\t\t\t\t2010,\n\t\t\t\t\t\t\t\t2011,\n\t\t\t\t\t\t\t\t2012,\n\t\t\t\t\t\t\t\t-1890,\n\t\t\t\t\t\t\t\t2013,\n\t\t\t\t\t\t\t\t2014\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754004\",\n\t\t\t\t\t\t\t\"GEN\": \"Borgholzhausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2015,\n\t\t\t\t\t\t\t\t2016,\n\t\t\t\t\t\t\t\t-417,\n\t\t\t\t\t\t\t\t2017,\n\t\t\t\t\t\t\t\t2018,\n\t\t\t\t\t\t\t\t2019,\n\t\t\t\t\t\t\t\t2020,\n\t\t\t\t\t\t\t\t2021\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158026\",\n\t\t\t\t\t\t\t\"GEN\": \"Monheim am Rhein\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2022,\n\t\t\t\t\t\t\t\t-1442,\n\t\t\t\t\t\t\t\t2023,\n\t\t\t\t\t\t\t\t2024,\n\t\t\t\t\t\t\t\t-323,\n\t\t\t\t\t\t\t\t2025,\n\t\t\t\t\t\t\t\t2026,\n\t\t\t\t\t\t\t\t2027,\n\t\t\t\t\t\t\t\t2028,\n\t\t\t\t\t\t\t\t-1416\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358020\",\n\t\t\t\t\t\t\t\"GEN\": \"Inden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2029,\n\t\t\t\t\t\t\t\t2030,\n\t\t\t\t\t\t\t\t2031,\n\t\t\t\t\t\t\t\t2032,\n\t\t\t\t\t\t\t\t2033,\n\t\t\t\t\t\t\t\t2034,\n\t\t\t\t\t\t\t\t2035\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566068\",\n\t\t\t\t\t\t\t\"GEN\": \"Ochtrup\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2036,\n\t\t\t\t\t\t\t\t2037,\n\t\t\t\t\t\t\t\t2038,\n\t\t\t\t\t\t\t\t2039,\n\t\t\t\t\t\t\t\t2040,\n\t\t\t\t\t\t\t\t2041,\n\t\t\t\t\t\t\t\t2042,\n\t\t\t\t\t\t\t\t2043,\n\t\t\t\t\t\t\t\t2044,\n\t\t\t\t\t\t\t\t-1892,\n\t\t\t\t\t\t\t\t2045,\n\t\t\t\t\t\t\t\t-2012,\n\t\t\t\t\t\t\t\t2046,\n\t\t\t\t\t\t\t\t-2010,\n\t\t\t\t\t\t\t\t2047\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754012\",\n\t\t\t\t\t\t\t\"GEN\": \"Halle (Westf.)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2048,\n\t\t\t\t\t\t\t\t2049,\n\t\t\t\t\t\t\t\t2050,\n\t\t\t\t\t\t\t\t2051,\n\t\t\t\t\t\t\t\t-303,\n\t\t\t\t\t\t\t\t2052,\n\t\t\t\t\t\t\t\t2053,\n\t\t\t\t\t\t\t\t2054,\n\t\t\t\t\t\t\t\t2055,\n\t\t\t\t\t\t\t\t2056,\n\t\t\t\t\t\t\t\t2057,\n\t\t\t\t\t\t\t\t2058\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958024\",\n\t\t\t\t\t\t\t\"GEN\": \"Marsberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1737,\n\t\t\t\t\t\t\t\t2059,\n\t\t\t\t\t\t\t\t-1561,\n\t\t\t\t\t\t\t\t2060,\n\t\t\t\t\t\t\t\t-1569,\n\t\t\t\t\t\t\t\t2061,\n\t\t\t\t\t\t\t\t-381,\n\t\t\t\t\t\t\t\t2062,\n\t\t\t\t\t\t\t\t2063,\n\t\t\t\t\t\t\t\t2064\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154012\",\n\t\t\t\t\t\t\t\"GEN\": \"Geldern\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2065,\n\t\t\t\t\t\t\t\t2066,\n\t\t\t\t\t\t\t\t2067,\n\t\t\t\t\t\t\t\t2068,\n\t\t\t\t\t\t\t\t2069,\n\t\t\t\t\t\t\t\t2070,\n\t\t\t\t\t\t\t\t2071,\n\t\t\t\t\t\t\t\t-1981,\n\t\t\t\t\t\t\t\t2072,\n\t\t\t\t\t\t\t\t2073,\n\t\t\t\t\t\t\t\t-835,\n\t\t\t\t\t\t\t\t2074\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962008\",\n\t\t\t\t\t\t\t\"GEN\": \"Balve\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1141,\n\t\t\t\t\t\t\t\t2075,\n\t\t\t\t\t\t\t\t-278,\n\t\t\t\t\t\t\t\t2076,\n\t\t\t\t\t\t\t\t2077,\n\t\t\t\t\t\t\t\t-275,\n\t\t\t\t\t\t\t\t2078,\n\t\t\t\t\t\t\t\t-1698,\n\t\t\t\t\t\t\t\t2079,\n\t\t\t\t\t\t\t\t-1144,\n\t\t\t\t\t\t\t\t2080,\n\t\t\t\t\t\t\t\t2081\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558036\",\n\t\t\t\t\t\t\t\"GEN\": \"Olfen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-346,\n\t\t\t\t\t\t\t\t2082,\n\t\t\t\t\t\t\t\t-861,\n\t\t\t\t\t\t\t\t2083,\n\t\t\t\t\t\t\t\t-1359,\n\t\t\t\t\t\t\t\t2084,\n\t\t\t\t\t\t\t\t-902,\n\t\t\t\t\t\t\t\t2085,\n\t\t\t\t\t\t\t\t-1821,\n\t\t\t\t\t\t\t\t2086\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158008\",\n\t\t\t\t\t\t\t\"GEN\": \"Haan\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2087,\n\t\t\t\t\t\t\t\t2088,\n\t\t\t\t\t\t\t\t2089,\n\t\t\t\t\t\t\t\t2090,\n\t\t\t\t\t\t\t\t2091,\n\t\t\t\t\t\t\t\t2092,\n\t\t\t\t\t\t\t\t2093,\n\t\t\t\t\t\t\t\t2094,\n\t\t\t\t\t\t\t\t2095,\n\t\t\t\t\t\t\t\t2096,\n\t\t\t\t\t\t\t\t2097,\n\t\t\t\t\t\t\t\t2098,\n\t\t\t\t\t\t\t\t2099,\n\t\t\t\t\t\t\t\t-469,\n\t\t\t\t\t\t\t\t2100\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974040\",\n\t\t\t\t\t\t\t\"GEN\": \"Soest\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2101,\n\t\t\t\t\t\t\t\t2102,\n\t\t\t\t\t\t\t\t-796,\n\t\t\t\t\t\t\t\t2103,\n\t\t\t\t\t\t\t\t-794,\n\t\t\t\t\t\t\t\t2104,\n\t\t\t\t\t\t\t\t-1825,\n\t\t\t\t\t\t\t\t2105,\n\t\t\t\t\t\t\t\t-907,\n\t\t\t\t\t\t\t\t2106,\n\t\t\t\t\t\t\t\t2107,\n\t\t\t\t\t\t\t\t-1363,\n\t\t\t\t\t\t\t\t2108,\n\t\t\t\t\t\t\t\t2109,\n\t\t\t\t\t\t\t\t-2016,\n\t\t\t\t\t\t\t\t2110,\n\t\t\t\t\t\t\t\t-2021,\n\t\t\t\t\t\t\t\t2111,\n\t\t\t\t\t\t\t\t-1382,\n\t\t\t\t\t\t\t\t2112,\n\t\t\t\t\t\t\t\t-1380,\n\t\t\t\t\t\t\t\t2113,\n\t\t\t\t\t\t\t\t2114,\n\t\t\t\t\t\t\t\t2115,\n\t\t\t\t\t\t\t\t2116\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05111000\",\n\t\t\t\t\t\t\t\"GEN\": \"Düsseldorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2117,\n\t\t\t\t\t\t\t\t2118,\n\t\t\t\t\t\t\t\t2119,\n\t\t\t\t\t\t\t\t2120,\n\t\t\t\t\t\t\t\t2121,\n\t\t\t\t\t\t\t\t2122,\n\t\t\t\t\t\t\t\t2123,\n\t\t\t\t\t\t\t\t2124,\n\t\t\t\t\t\t\t\t-1460,\n\t\t\t\t\t\t\t\t2125,\n\t\t\t\t\t\t\t\t2126,\n\t\t\t\t\t\t\t\t2127\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754044\",\n\t\t\t\t\t\t\t\"GEN\": \"Verl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2128,\n\t\t\t\t\t\t\t\t2129,\n\t\t\t\t\t\t\t\t-62,\n\t\t\t\t\t\t\t\t2130,\n\t\t\t\t\t\t\t\t2131,\n\t\t\t\t\t\t\t\t2132,\n\t\t\t\t\t\t\t\t2133,\n\t\t\t\t\t\t\t\t2134,\n\t\t\t\t\t\t\t\t2135,\n\t\t\t\t\t\t\t\t2136,\n\t\t\t\t\t\t\t\t2137,\n\t\t\t\t\t\t\t\t2138,\n\t\t\t\t\t\t\t\t2139\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974020\",\n\t\t\t\t\t\t\t\"GEN\": \"Geseke\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2140,\n\t\t\t\t\t\t\t\t2141,\n\t\t\t\t\t\t\t\t-694,\n\t\t\t\t\t\t\t\t2142,\n\t\t\t\t\t\t\t\t-1427,\n\t\t\t\t\t\t\t\t2143,\n\t\t\t\t\t\t\t\t2144,\n\t\t\t\t\t\t\t\t2145,\n\t\t\t\t\t\t\t\t-944,\n\t\t\t\t\t\t\t\t2146,\n\t\t\t\t\t\t\t\t2147,\n\t\t\t\t\t\t\t\t2148,\n\t\t\t\t\t\t\t\t2149\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334008\",\n\t\t\t\t\t\t\t\"GEN\": \"Baesweiler\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2150,\n\t\t\t\t\t\t\t\t2151,\n\t\t\t\t\t\t\t\t-1400,\n\t\t\t\t\t\t\t\t2152,\n\t\t\t\t\t\t\t\t2153,\n\t\t\t\t\t\t\t\t2154,\n\t\t\t\t\t\t\t\t2155,\n\t\t\t\t\t\t\t\t2156,\n\t\t\t\t\t\t\t\t-1446,\n\t\t\t\t\t\t\t\t2157,\n\t\t\t\t\t\t\t\t-1410,\n\t\t\t\t\t\t\t\t2158,\n\t\t\t\t\t\t\t\t-1408,\n\t\t\t\t\t\t\t\t2159,\n\t\t\t\t\t\t\t\t-1425,\n\t\t\t\t\t\t\t\t2160,\n\t\t\t\t\t\t\t\t2161,\n\t\t\t\t\t\t\t\t2162,\n\t\t\t\t\t\t\t\t-927\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358056\",\n\t\t\t\t\t\t\t\"GEN\": \"Titz\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2163,\n\t\t\t\t\t\t\t\t2164,\n\t\t\t\t\t\t\t\t2165,\n\t\t\t\t\t\t\t\t-618,\n\t\t\t\t\t\t\t\t2166,\n\t\t\t\t\t\t\t\t2167,\n\t\t\t\t\t\t\t\t2168,\n\t\t\t\t\t\t\t\t2169,\n\t\t\t\t\t\t\t\t2170,\n\t\t\t\t\t\t\t\t2171,\n\t\t\t\t\t\t\t\t-379,\n\t\t\t\t\t\t\t\t2172\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166016\",\n\t\t\t\t\t\t\t\"GEN\": \"Nettetal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2173,\n\t\t\t\t\t\t\t\t-1610,\n\t\t\t\t\t\t\t\t2174,\n\t\t\t\t\t\t\t\t-1608,\n\t\t\t\t\t\t\t\t-897,\n\t\t\t\t\t\t\t\t2175,\n\t\t\t\t\t\t\t\t2176,\n\t\t\t\t\t\t\t\t2177,\n\t\t\t\t\t\t\t\t2178,\n\t\t\t\t\t\t\t\t2179,\n\t\t\t\t\t\t\t\t2180,\n\t\t\t\t\t\t\t\t2181\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766056\",\n\t\t\t\t\t\t\t\"GEN\": \"Oerlinghausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1898,\n\t\t\t\t\t\t\t\t2182,\n\t\t\t\t\t\t\t\t2183,\n\t\t\t\t\t\t\t\t2184,\n\t\t\t\t\t\t\t\t2185,\n\t\t\t\t\t\t\t\t2186\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570036\",\n\t\t\t\t\t\t\t\"GEN\": \"Sassenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-887,\n\t\t\t\t\t\t\t\t2187,\n\t\t\t\t\t\t\t\t2188,\n\t\t\t\t\t\t\t\t-2036,\n\t\t\t\t\t\t\t\t2189\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566096\",\n\t\t\t\t\t\t\t\"GEN\": \"Wettringen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-633,\n\t\t\t\t\t\t\t\t2190,\n\t\t\t\t\t\t\t\t2191,\n\t\t\t\t\t\t\t\t2192,\n\t\t\t\t\t\t\t\t2193,\n\t\t\t\t\t\t\t\t2194,\n\t\t\t\t\t\t\t\t2195\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166020\",\n\t\t\t\t\t\t\t\"GEN\": \"Niederkrüchten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2196,\n\t\t\t\t\t\t\t\t2197,\n\t\t\t\t\t\t\t\t2198,\n\t\t\t\t\t\t\t\t2199,\n\t\t\t\t\t\t\t\t2200,\n\t\t\t\t\t\t\t\t2201,\n\t\t\t\t\t\t\t\t-979,\n\t\t\t\t\t\t\t\t2202,\n\t\t\t\t\t\t\t\t2203,\n\t\t\t\t\t\t\t\t-993,\n\t\t\t\t\t\t\t\t2204,\n\t\t\t\t\t\t\t\t2205\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554060\",\n\t\t\t\t\t\t\t\"GEN\": \"Südlohn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2206,\n\t\t\t\t\t\t\t\t-1966,\n\t\t\t\t\t\t\t\t2207,\n\t\t\t\t\t\t\t\t2208,\n\t\t\t\t\t\t\t\t2209,\n\t\t\t\t\t\t\t\t2210,\n\t\t\t\t\t\t\t\t2211,\n\t\t\t\t\t\t\t\t2212,\n\t\t\t\t\t\t\t\t2213,\n\t\t\t\t\t\t\t\t-894\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766064\",\n\t\t\t\t\t\t\t\"GEN\": \"Schlangen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1002,\n\t\t\t\t\t\t\t\t2214,\n\t\t\t\t\t\t\t\t-593,\n\t\t\t\t\t\t\t\t2215,\n\t\t\t\t\t\t\t\t2216\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970036\",\n\t\t\t\t\t\t\t\"GEN\": \"Neunkirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2217,\n\t\t\t\t\t\t\t\t2218,\n\t\t\t\t\t\t\t\t2219,\n\t\t\t\t\t\t\t\t2220,\n\t\t\t\t\t\t\t\t-36,\n\t\t\t\t\t\t\t\t2221,\n\t\t\t\t\t\t\t\t-909,\n\t\t\t\t\t\t\t\t2222,\n\t\t\t\t\t\t\t\t-726,\n\t\t\t\t\t\t\t\t2223,\n\t\t\t\t\t\t\t\t2224,\n\t\t\t\t\t\t\t\t2225\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966012\",\n\t\t\t\t\t\t\t\"GEN\": \"Finnentrop\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2226,\n\t\t\t\t\t\t\t\t-359,\n\t\t\t\t\t\t\t\t2227,\n\t\t\t\t\t\t\t\t2228,\n\t\t\t\t\t\t\t\t-373,\n\t\t\t\t\t\t\t\t2229,\n\t\t\t\t\t\t\t\t2230,\n\t\t\t\t\t\t\t\t2231,\n\t\t\t\t\t\t\t\t2232,\n\t\t\t\t\t\t\t\t2233\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770024\",\n\t\t\t\t\t\t\t\"GEN\": \"Minden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2234,\n\t\t\t\t\t\t\t\t2235,\n\t\t\t\t\t\t\t\t2236,\n\t\t\t\t\t\t\t\t2237,\n\t\t\t\t\t\t\t\t2238,\n\t\t\t\t\t\t\t\t2239,\n\t\t\t\t\t\t\t\t2240,\n\t\t\t\t\t\t\t\t2241,\n\t\t\t\t\t\t\t\t-738,\n\t\t\t\t\t\t\t\t2242,\n\t\t\t\t\t\t\t\t2243,\n\t\t\t\t\t\t\t\t2244,\n\t\t\t\t\t\t\t\t2245\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770008\",\n\t\t\t\t\t\t\t\"GEN\": \"Espelkamp\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2246,\n\t\t\t\t\t\t\t\t2247,\n\t\t\t\t\t\t\t\t2248,\n\t\t\t\t\t\t\t\t2249,\n\t\t\t\t\t\t\t\t2250,\n\t\t\t\t\t\t\t\t2251,\n\t\t\t\t\t\t\t\t2252,\n\t\t\t\t\t\t\t\t2253,\n\t\t\t\t\t\t\t\t2254,\n\t\t\t\t\t\t\t\t2255\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166028\",\n\t\t\t\t\t\t\t\"GEN\": \"Tönisvorst\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2256,\n\t\t\t\t\t\t\t\t2257,\n\t\t\t\t\t\t\t\t2258,\n\t\t\t\t\t\t\t\t2259,\n\t\t\t\t\t\t\t\t2260,\n\t\t\t\t\t\t\t\t-781\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334024\",\n\t\t\t\t\t\t\t\"GEN\": \"Roetgen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2263,\n\t\t\t\t\t\t\t\t2264,\n\t\t\t\t\t\t\t\t2265,\n\t\t\t\t\t\t\t\t-103,\n\t\t\t\t\t\t\t\t2266,\n\t\t\t\t\t\t\t\t2267,\n\t\t\t\t\t\t\t\t2268,\n\t\t\t\t\t\t\t\t2269,\n\t\t\t\t\t\t\t\t2270\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Münstereifel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1159,\n\t\t\t\t\t\t\t\t2271,\n\t\t\t\t\t\t\t\t-297,\n\t\t\t\t\t\t\t\t2272,\n\t\t\t\t\t\t\t\t2273,\n\t\t\t\t\t\t\t\t-294,\n\t\t\t\t\t\t\t\t2274,\n\t\t\t\t\t\t\t\t-958,\n\t\t\t\t\t\t\t\t2275,\n\t\t\t\t\t\t\t\t2276,\n\t\t\t\t\t\t\t\t2277,\n\t\t\t\t\t\t\t\t2278,\n\t\t\t\t\t\t\t\t2279,\n\t\t\t\t\t\t\t\t2280,\n\t\t\t\t\t\t\t\t2281,\n\t\t\t\t\t\t\t\t2282,\n\t\t\t\t\t\t\t\t2283,\n\t\t\t\t\t\t\t\t2284,\n\t\t\t\t\t\t\t\t2285,\n\t\t\t\t\t\t\t\t2286,\n\t\t\t\t\t\t\t\t2287\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562012\",\n\t\t\t\t\t\t\t\"GEN\": \"Dorsten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2288,\n\t\t\t\t\t\t\t\t2289,\n\t\t\t\t\t\t\t\t2290,\n\t\t\t\t\t\t\t\t2291,\n\t\t\t\t\t\t\t\t2292,\n\t\t\t\t\t\t\t\t2293,\n\t\t\t\t\t\t\t\t2294,\n\t\t\t\t\t\t\t\t2295,\n\t\t\t\t\t\t\t\t-1370,\n\t\t\t\t\t\t\t\t2296,\n\t\t\t\t\t\t\t\t2297\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170024\",\n\t\t\t\t\t\t\t\"GEN\": \"Moers\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2298,\n\t\t\t\t\t\t\t\t2299,\n\t\t\t\t\t\t\t\t2300,\n\t\t\t\t\t\t\t\t2301,\n\t\t\t\t\t\t\t\t-936,\n\t\t\t\t\t\t\t\t2302,\n\t\t\t\t\t\t\t\t-1597,\n\t\t\t\t\t\t\t\t2303,\n\t\t\t\t\t\t\t\t2304\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370036\",\n\t\t\t\t\t\t\t\"GEN\": \"Wassenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2305,\n\t\t\t\t\t\t\t\t2306,\n\t\t\t\t\t\t\t\t2307,\n\t\t\t\t\t\t\t\t2308,\n\t\t\t\t\t\t\t\t2309,\n\t\t\t\t\t\t\t\t2310,\n\t\t\t\t\t\t\t\t2311,\n\t\t\t\t\t\t\t\t2312,\n\t\t\t\t\t\t\t\t2313,\n\t\t\t\t\t\t\t\t2314,\n\t\t\t\t\t\t\t\t2315\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570012\",\n\t\t\t\t\t\t\t\"GEN\": \"Beelen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2316,\n\t\t\t\t\t\t\t\t2317,\n\t\t\t\t\t\t\t\t2318,\n\t\t\t\t\t\t\t\t2319,\n\t\t\t\t\t\t\t\t2320,\n\t\t\t\t\t\t\t\t2321,\n\t\t\t\t\t\t\t\t2322,\n\t\t\t\t\t\t\t\t2323\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382032\",\n\t\t\t\t\t\t\t\"GEN\": \"Meckenheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2324,\n\t\t\t\t\t\t\t\t2325,\n\t\t\t\t\t\t\t\t2326,\n\t\t\t\t\t\t\t\t2327,\n\t\t\t\t\t\t\t\t2328,\n\t\t\t\t\t\t\t\t2329,\n\t\t\t\t\t\t\t\t2330,\n\t\t\t\t\t\t\t\t2331,\n\t\t\t\t\t\t\t\t2332,\n\t\t\t\t\t\t\t\t2333,\n\t\t\t\t\t\t\t\t2334,\n\t\t\t\t\t\t\t\t2335,\n\t\t\t\t\t\t\t\t2336,\n\t\t\t\t\t\t\t\t-1836,\n\t\t\t\t\t\t\t\t2337,\n\t\t\t\t\t\t\t\t-26,\n\t\t\t\t\t\t\t\t2338,\n\t\t\t\t\t\t\t\t-24,\n\t\t\t\t\t\t\t\t2339,\n\t\t\t\t\t\t\t\t-22,\n\t\t\t\t\t\t\t\t2340,\n\t\t\t\t\t\t\t\t2341,\n\t\t\t\t\t\t\t\t2342,\n\t\t\t\t\t\t\t\t-1211\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958040\",\n\t\t\t\t\t\t\t\"GEN\": \"Schmallenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-478,\n\t\t\t\t\t\t\t\t2343,\n\t\t\t\t\t\t\t\t-1830,\n\t\t\t\t\t\t\t\t2344,\n\t\t\t\t\t\t\t\t2345,\n\t\t\t\t\t\t\t\t2346,\n\t\t\t\t\t\t\t\t2347,\n\t\t\t\t\t\t\t\t2348,\n\t\t\t\t\t\t\t\t-480,\n\t\t\t\t\t\t\t\t2349\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970028\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Laasphe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2350,\n\t\t\t\t\t\t\t\t2351,\n\t\t\t\t\t\t\t\t2352,\n\t\t\t\t\t\t\t\t2353,\n\t\t\t\t\t\t\t\t2354,\n\t\t\t\t\t\t\t\t2355,\n\t\t\t\t\t\t\t\t2356,\n\t\t\t\t\t\t\t\t-1633,\n\t\t\t\t\t\t\t\t2357,\n\t\t\t\t\t\t\t\t-1950\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754024\",\n\t\t\t\t\t\t\t\"GEN\": \"Langenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1894,\n\t\t\t\t\t\t\t\t2358,\n\t\t\t\t\t\t\t\t-2044,\n\t\t\t\t\t\t\t\t2359,\n\t\t\t\t\t\t\t\t-1473,\n\t\t\t\t\t\t\t\t2360,\n\t\t\t\t\t\t\t\t-1471,\n\t\t\t\t\t\t\t\t2361,\n\t\t\t\t\t\t\t\t2362,\n\t\t\t\t\t\t\t\t2363,\n\t\t\t\t\t\t\t\t2364,\n\t\t\t\t\t\t\t\t2365,\n\t\t\t\t\t\t\t\t-2306,\n\t\t\t\t\t\t\t\t-2184,\n\t\t\t\t\t\t\t\t2366,\n\t\t\t\t\t\t\t\t-1896,\n\t\t\t\t\t\t\t\t2367\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754016\",\n\t\t\t\t\t\t\t\"GEN\": \"Harsewinkel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2368,\n\t\t\t\t\t\t\t\t-1984,\n\t\t\t\t\t\t\t\t2369,\n\t\t\t\t\t\t\t\t2370,\n\t\t\t\t\t\t\t\t2371,\n\t\t\t\t\t\t\t\t2372,\n\t\t\t\t\t\t\t\t2373,\n\t\t\t\t\t\t\t\t-1866,\n\t\t\t\t\t\t\t\t-1753,\n\t\t\t\t\t\t\t\t2374,\n\t\t\t\t\t\t\t\t2375,\n\t\t\t\t\t\t\t\t2376,\n\t\t\t\t\t\t\t\t2377,\n\t\t\t\t\t\t\t\t2378,\n\t\t\t\t\t\t\t\t2379\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962004\",\n\t\t\t\t\t\t\t\"GEN\": \"Altena\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2380,\n\t\t\t\t\t\t\t\t2381,\n\t\t\t\t\t\t\t\t2382,\n\t\t\t\t\t\t\t\t2383,\n\t\t\t\t\t\t\t\t2384,\n\t\t\t\t\t\t\t\t2385,\n\t\t\t\t\t\t\t\t2386,\n\t\t\t\t\t\t\t\t2387,\n\t\t\t\t\t\t\t\t2388,\n\t\t\t\t\t\t\t\t2389,\n\t\t\t\t\t\t\t\t2390,\n\t\t\t\t\t\t\t\t2391,\n\t\t\t\t\t\t\t\t2392\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758008\",\n\t\t\t\t\t\t\t\"GEN\": \"Enger\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2393,\n\t\t\t\t\t\t\t\t2394,\n\t\t\t\t\t\t\t\t-227,\n\t\t\t\t\t\t\t\t2395,\n\t\t\t\t\t\t\t\t2396,\n\t\t\t\t\t\t\t\t2397,\n\t\t\t\t\t\t\t\t-2381,\n\t\t\t\t\t\t\t\t2398,\n\t\t\t\t\t\t\t\t2399,\n\t\t\t\t\t\t\t\t2400,\n\t\t\t\t\t\t\t\t2401,\n\t\t\t\t\t\t\t\t2402\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bünde\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2403,\n\t\t\t\t\t\t\t\t2404,\n\t\t\t\t\t\t\t\t2405,\n\t\t\t\t\t\t\t\t2406,\n\t\t\t\t\t\t\t\t2407\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566072\",\n\t\t\t\t\t\t\t\"GEN\": \"Recke\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2408,\n\t\t\t\t\t\t\t\t2409,\n\t\t\t\t\t\t\t\t-2231,\n\t\t\t\t\t\t\t\t2410,\n\t\t\t\t\t\t\t\t2411,\n\t\t\t\t\t\t\t\t2412,\n\t\t\t\t\t\t\t\t2413,\n\t\t\t\t\t\t\t\t-2237,\n\t\t\t\t\t\t\t\t2414\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770012\",\n\t\t\t\t\t\t\t\"GEN\": \"Hille\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2415,\n\t\t\t\t\t\t\t\t2416,\n\t\t\t\t\t\t\t\t-2319,\n\t\t\t\t\t\t\t\t2417,\n\t\t\t\t\t\t\t\t2418\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382072\",\n\t\t\t\t\t\t\t\"GEN\": \"Wachtberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2419,\n\t\t\t\t\t\t\t\t2420,\n\t\t\t\t\t\t\t\t2421,\n\t\t\t\t\t\t\t\t2422,\n\t\t\t\t\t\t\t\t2423,\n\t\t\t\t\t\t\t\t-505,\n\t\t\t\t\t\t\t\t2424,\n\t\t\t\t\t\t\t\t-1128,\n\t\t\t\t\t\t\t\t2425,\n\t\t\t\t\t\t\t\t-1126,\n\t\t\t\t\t\t\t\t2426,\n\t\t\t\t\t\t\t\t2427\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570024\",\n\t\t\t\t\t\t\t\"GEN\": \"Everswinkel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1629,\n\t\t\t\t\t\t\t\t2428,\n\t\t\t\t\t\t\t\t2429,\n\t\t\t\t\t\t\t\t2430,\n\t\t\t\t\t\t\t\t2431,\n\t\t\t\t\t\t\t\t-954,\n\t\t\t\t\t\t\t\t2432,\n\t\t\t\t\t\t\t\t2433\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562020\",\n\t\t\t\t\t\t\t\"GEN\": \"Herten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1576,\n\t\t\t\t\t\t\t\t2434,\n\t\t\t\t\t\t\t\t2435,\n\t\t\t\t\t\t\t\t2436,\n\t\t\t\t\t\t\t\t-170,\n\t\t\t\t\t\t\t\t2437,\n\t\t\t\t\t\t\t\t-168,\n\t\t\t\t\t\t\t\t2438\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554032\",\n\t\t\t\t\t\t\t\"GEN\": \"Isselburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2122,\n\t\t\t\t\t\t\t\t2439,\n\t\t\t\t\t\t\t\t2440,\n\t\t\t\t\t\t\t\t2441,\n\t\t\t\t\t\t\t\t2442,\n\t\t\t\t\t\t\t\t2443,\n\t\t\t\t\t\t\t\t2444,\n\t\t\t\t\t\t\t\t2445,\n\t\t\t\t\t\t\t\t-2353,\n\t\t\t\t\t\t\t\t2446,\n\t\t\t\t\t\t\t\t2447,\n\t\t\t\t\t\t\t\t-1948,\n\t\t\t\t\t\t\t\t2448,\n\t\t\t\t\t\t\t\t2449,\n\t\t\t\t\t\t\t\t2450\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754032\",\n\t\t\t\t\t\t\t\"GEN\": \"Rietberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-972,\n\t\t\t\t\t\t\t\t2451,\n\t\t\t\t\t\t\t\t2452,\n\t\t\t\t\t\t\t\t2453,\n\t\t\t\t\t\t\t\t2454,\n\t\t\t\t\t\t\t\t2455,\n\t\t\t\t\t\t\t\t2456,\n\t\t\t\t\t\t\t\t2457,\n\t\t\t\t\t\t\t\t2458,\n\t\t\t\t\t\t\t\t2459\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154056\",\n\t\t\t\t\t\t\t\"GEN\": \"Uedem\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2407,\n\t\t\t\t\t\t\t\t2460,\n\t\t\t\t\t\t\t\t2461,\n\t\t\t\t\t\t\t\t2462,\n\t\t\t\t\t\t\t\t2463\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566020\",\n\t\t\t\t\t\t\t\"GEN\": \"Hopsten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2464,\n\t\t\t\t\t\t\t\t2465,\n\t\t\t\t\t\t\t\t-1046,\n\t\t\t\t\t\t\t\t2466,\n\t\t\t\t\t\t\t\t-1044,\n\t\t\t\t\t\t\t\t2467,\n\t\t\t\t\t\t\t\t2468,\n\t\t\t\t\t\t\t\t-1041,\n\t\t\t\t\t\t\t\t2469,\n\t\t\t\t\t\t\t\t2470,\n\t\t\t\t\t\t\t\t2471,\n\t\t\t\t\t\t\t\t-1628,\n\t\t\t\t\t\t\t\t2472,\n\t\t\t\t\t\t\t\t2473\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05916000\",\n\t\t\t\t\t\t\t\"GEN\": \"Herne\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2474,\n\t\t\t\t\t\t\t\t2475,\n\t\t\t\t\t\t\t\t2476,\n\t\t\t\t\t\t\t\t2477,\n\t\t\t\t\t\t\t\t-1763,\n\t\t\t\t\t\t\t\t2478,\n\t\t\t\t\t\t\t\t-706,\n\t\t\t\t\t\t\t\t2479,\n\t\t\t\t\t\t\t\t2480,\n\t\t\t\t\t\t\t\t-1924,\n\t\t\t\t\t\t\t\t2481,\n\t\t\t\t\t\t\t\t2482\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962056\",\n\t\t\t\t\t\t\t\"GEN\": \"Schalksmühle\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2483,\n\t\t\t\t\t\t\t\t-1528,\n\t\t\t\t\t\t\t\t2484,\n\t\t\t\t\t\t\t\t-1719,\n\t\t\t\t\t\t\t\t2485,\n\t\t\t\t\t\t\t\t2486,\n\t\t\t\t\t\t\t\t2487\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766028\",\n\t\t\t\t\t\t\t\"GEN\": \"Extertal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2488,\n\t\t\t\t\t\t\t\t-2402,\n\t\t\t\t\t\t\t\t2489\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758028\",\n\t\t\t\t\t\t\t\"GEN\": \"Rödinghausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2490,\n\t\t\t\t\t\t\t\t2491,\n\t\t\t\t\t\t\t\t2492,\n\t\t\t\t\t\t\t\t2493,\n\t\t\t\t\t\t\t\t2494,\n\t\t\t\t\t\t\t\t2495,\n\t\t\t\t\t\t\t\t2496\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382044\",\n\t\t\t\t\t\t\t\"GEN\": \"Niederkassel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2497,\n\t\t\t\t\t\t\t\t2498,\n\t\t\t\t\t\t\t\t-1728,\n\t\t\t\t\t\t\t\t2499,\n\t\t\t\t\t\t\t\t-1726,\n\t\t\t\t\t\t\t\t2500,\n\t\t\t\t\t\t\t\t-1854,\n\t\t\t\t\t\t\t\t2501,\n\t\t\t\t\t\t\t\t-1959,\n\t\t\t\t\t\t\t\t2502,\n\t\t\t\t\t\t\t\t-1970,\n\t\t\t\t\t\t\t\t2503,\n\t\t\t\t\t\t\t\t-1604,\n\t\t\t\t\t\t\t\t2504,\n\t\t\t\t\t\t\t\t2505,\n\t\t\t\t\t\t\t\t2506,\n\t\t\t\t\t\t\t\t2507,\n\t\t\t\t\t\t\t\t2508,\n\t\t\t\t\t\t\t\t2509\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766044\",\n\t\t\t\t\t\t\t\"GEN\": \"Lemgo\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1776,\n\t\t\t\t\t\t\t\t2510,\n\t\t\t\t\t\t\t\t2511,\n\t\t\t\t\t\t\t\t2512,\n\t\t\t\t\t\t\t\t-1689,\n\t\t\t\t\t\t\t\t2513,\n\t\t\t\t\t\t\t\t-1696,\n\t\t\t\t\t\t\t\t2514,\n\t\t\t\t\t\t\t\t-961,\n\t\t\t\t\t\t\t\t2515,\n\t\t\t\t\t\t\t\t2516,\n\t\t\t\t\t\t\t\t-78,\n\t\t\t\t\t\t\t\t2517,\n\t\t\t\t\t\t\t\t2518,\n\t\t\t\t\t\t\t\t2519,\n\t\t\t\t\t\t\t\t-1882,\n\t\t\t\t\t\t\t\t2520,\n\t\t\t\t\t\t\t\t-1880,\n\t\t\t\t\t\t\t\t2521\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978036\",\n\t\t\t\t\t\t\t\"GEN\": \"Unna\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2522,\n\t\t\t\t\t\t\t\t2523,\n\t\t\t\t\t\t\t\t-1886,\n\t\t\t\t\t\t\t\t2524,\n\t\t\t\t\t\t\t\t-1884,\n\t\t\t\t\t\t\t\t2525,\n\t\t\t\t\t\t\t\t-2519,\n\t\t\t\t\t\t\t\t2526,\n\t\t\t\t\t\t\t\t-76,\n\t\t\t\t\t\t\t\t2527,\n\t\t\t\t\t\t\t\t2528,\n\t\t\t\t\t\t\t\t2529,\n\t\t\t\t\t\t\t\t2530,\n\t\t\t\t\t\t\t\t2531,\n\t\t\t\t\t\t\t\t2532\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978020\",\n\t\t\t\t\t\t\t\"GEN\": \"Kamen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-975,\n\t\t\t\t\t\t\t\t2533,\n\t\t\t\t\t\t\t\t2534,\n\t\t\t\t\t\t\t\t2535,\n\t\t\t\t\t\t\t\t2536,\n\t\t\t\t\t\t\t\t2537,\n\t\t\t\t\t\t\t\t2538,\n\t\t\t\t\t\t\t\t2539,\n\t\t\t\t\t\t\t\t-624,\n\t\t\t\t\t\t\t\t2540\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bedburg-Hau\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2364,\n\t\t\t\t\t\t\t\t2541,\n\t\t\t\t\t\t\t\t2542,\n\t\t\t\t\t\t\t\t-1469,\n\t\t\t\t\t\t\t\t2543,\n\t\t\t\t\t\t\t\t2544,\n\t\t\t\t\t\t\t\t2545,\n\t\t\t\t\t\t\t\t-1956,\n\t\t\t\t\t\t\t\t2546,\n\t\t\t\t\t\t\t\t2547,\n\t\t\t\t\t\t\t\t2548,\n\t\t\t\t\t\t\t\t-2309,\n\t\t\t\t\t\t\t\t2549\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754020\",\n\t\t\t\t\t\t\t\"GEN\": \"Herzebrock-Clarholz\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2550,\n\t\t\t\t\t\t\t\t2551,\n\t\t\t\t\t\t\t\t2552,\n\t\t\t\t\t\t\t\t2553,\n\t\t\t\t\t\t\t\t2554,\n\t\t\t\t\t\t\t\t2555,\n\t\t\t\t\t\t\t\t2556,\n\t\t\t\t\t\t\t\t2557,\n\t\t\t\t\t\t\t\t2558\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566036\",\n\t\t\t\t\t\t\t\"GEN\": \"Laer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1259,\n\t\t\t\t\t\t\t\t2559,\n\t\t\t\t\t\t\t\t-1257,\n\t\t\t\t\t\t\t\t2560,\n\t\t\t\t\t\t\t\t-1255,\n\t\t\t\t\t\t\t\t2561,\n\t\t\t\t\t\t\t\t-482,\n\t\t\t\t\t\t\t\t2562,\n\t\t\t\t\t\t\t\t-2348,\n\t\t\t\t\t\t\t\t2563,\n\t\t\t\t\t\t\t\t-2346,\n\t\t\t\t\t\t\t\t2564,\n\t\t\t\t\t\t\t\t-998,\n\t\t\t\t\t\t\t\t2565,\n\t\t\t\t\t\t\t\t-996,\n\t\t\t\t\t\t\t\t2566,\n\t\t\t\t\t\t\t\t-1501,\n\t\t\t\t\t\t\t\t2567,\n\t\t\t\t\t\t\t\t-1499,\n\t\t\t\t\t\t\t\t2568,\n\t\t\t\t\t\t\t\t2569,\n\t\t\t\t\t\t\t\t-642,\n\t\t\t\t\t\t\t\t2570,\n\t\t\t\t\t\t\t\t2571\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970032\",\n\t\t\t\t\t\t\t\"GEN\": \"Netphen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1034,\n\t\t\t\t\t\t\t\t2572,\n\t\t\t\t\t\t\t\t2573,\n\t\t\t\t\t\t\t\t2574,\n\t\t\t\t\t\t\t\t-1912,\n\t\t\t\t\t\t\t\t2575,\n\t\t\t\t\t\t\t\t-1910,\n\t\t\t\t\t\t\t\t2576,\n\t\t\t\t\t\t\t\t2577,\n\t\t\t\t\t\t\t\t2578,\n\t\t\t\t\t\t\t\t2579,\n\t\t\t\t\t\t\t\t2580,\n\t\t\t\t\t\t\t\t2581,\n\t\t\t\t\t\t\t\t2582,\n\t\t\t\t\t\t\t\t2583\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hattingen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2584,\n\t\t\t\t\t\t\t\t2585,\n\t\t\t\t\t\t\t\t2586,\n\t\t\t\t\t\t\t\t2587,\n\t\t\t\t\t\t\t\t2588,\n\t\t\t\t\t\t\t\t2589,\n\t\t\t\t\t\t\t\t2590,\n\t\t\t\t\t\t\t\t-2102,\n\t\t\t\t\t\t\t\t2591,\n\t\t\t\t\t\t\t\t-2116,\n\t\t\t\t\t\t\t\t2592,\n\t\t\t\t\t\t\t\t2593,\n\t\t\t\t\t\t\t\t2594,\n\t\t\t\t\t\t\t\t2595,\n\t\t\t\t\t\t\t\t2596,\n\t\t\t\t\t\t\t\t-2292,\n\t\t\t\t\t\t\t\t2597,\n\t\t\t\t\t\t\t\t-2290,\n\t\t\t\t\t\t\t\t2598,\n\t\t\t\t\t\t\t\t2599,\n\t\t\t\t\t\t\t\t2600,\n\t\t\t\t\t\t\t\t2601\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05112000\",\n\t\t\t\t\t\t\t\"GEN\": \"Duisburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2602,\n\t\t\t\t\t\t\t\t2603,\n\t\t\t\t\t\t\t\t-2378,\n\t\t\t\t\t\t\t\t2604,\n\t\t\t\t\t\t\t\t-2476,\n\t\t\t\t\t\t\t\t2605,\n\t\t\t\t\t\t\t\t2606,\n\t\t\t\t\t\t\t\t2607,\n\t\t\t\t\t\t\t\t2608,\n\t\t\t\t\t\t\t\t2609\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962044\",\n\t\t\t\t\t\t\t\"GEN\": \"Nachrodt-Wiblingwerde\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-991,\n\t\t\t\t\t\t\t\t2610,\n\t\t\t\t\t\t\t\t2611,\n\t\t\t\t\t\t\t\t2612,\n\t\t\t\t\t\t\t\t2613,\n\t\t\t\t\t\t\t\t2614,\n\t\t\t\t\t\t\t\t-1570,\n\t\t\t\t\t\t\t\t2615\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554048\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhede\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2234,\n\t\t\t\t\t\t\t\t2616,\n\t\t\t\t\t\t\t\t2617,\n\t\t\t\t\t\t\t\t-2409,\n\t\t\t\t\t\t\t\t2618\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770028\",\n\t\t\t\t\t\t\t\"GEN\": \"Petershagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-225,\n\t\t\t\t\t\t\t\t2619,\n\t\t\t\t\t\t\t\t2620,\n\t\t\t\t\t\t\t\t2621,\n\t\t\t\t\t\t\t\t-2385,\n\t\t\t\t\t\t\t\t2622,\n\t\t\t\t\t\t\t\t-2383,\n\t\t\t\t\t\t\t\t2623,\n\t\t\t\t\t\t\t\t-2397,\n\t\t\t\t\t\t\t\t2624\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hiddenhausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2462,\n\t\t\t\t\t\t\t\t2625,\n\t\t\t\t\t\t\t\t2626,\n\t\t\t\t\t\t\t\t2627,\n\t\t\t\t\t\t\t\t2628,\n\t\t\t\t\t\t\t\t2629,\n\t\t\t\t\t\t\t\t2630,\n\t\t\t\t\t\t\t\t2631,\n\t\t\t\t\t\t\t\t2632,\n\t\t\t\t\t\t\t\t2633,\n\t\t\t\t\t\t\t\t2634,\n\t\t\t\t\t\t\t\t2635\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hörstel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2548,\n\t\t\t\t\t\t\t\t2636,\n\t\t\t\t\t\t\t\t-1954,\n\t\t\t\t\t\t\t\t2637,\n\t\t\t\t\t\t\t\t-1952,\n\t\t\t\t\t\t\t\t2638,\n\t\t\t\t\t\t\t\t-1645,\n\t\t\t\t\t\t\t\t2639,\n\t\t\t\t\t\t\t\t-1805,\n\t\t\t\t\t\t\t\t2640,\n\t\t\t\t\t\t\t\t2641,\n\t\t\t\t\t\t\t\t2642,\n\t\t\t\t\t\t\t\t2643,\n\t\t\t\t\t\t\t\t2644,\n\t\t\t\t\t\t\t\t-2311,\n\t\t\t\t\t\t\t\t2645\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570028\",\n\t\t\t\t\t\t\t\"GEN\": \"Oelde\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2646,\n\t\t\t\t\t\t\t\t2647,\n\t\t\t\t\t\t\t\t2648,\n\t\t\t\t\t\t\t\t2649,\n\t\t\t\t\t\t\t\t-2551,\n\t\t\t\t\t\t\t\t2650,\n\t\t\t\t\t\t\t\t2651,\n\t\t\t\t\t\t\t\t2652,\n\t\t\t\t\t\t\t\t2653,\n\t\t\t\t\t\t\t\t2654,\n\t\t\t\t\t\t\t\t2655\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566084\",\n\t\t\t\t\t\t\t\"GEN\": \"Steinfurt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-305,\n\t\t\t\t\t\t\t\t2656,\n\t\t\t\t\t\t\t\t2657,\n\t\t\t\t\t\t\t\t2658,\n\t\t\t\t\t\t\t\t2659,\n\t\t\t\t\t\t\t\t2660,\n\t\t\t\t\t\t\t\t2661,\n\t\t\t\t\t\t\t\t2662,\n\t\t\t\t\t\t\t\t2663,\n\t\t\t\t\t\t\t\t2664,\n\t\t\t\t\t\t\t\t-307,\n\t\t\t\t\t\t\t\t2665\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958036\",\n\t\t\t\t\t\t\t\"GEN\": \"Olsberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2666,\n\t\t\t\t\t\t\t\t2667,\n\t\t\t\t\t\t\t\t2668,\n\t\t\t\t\t\t\t\t2669,\n\t\t\t\t\t\t\t\t2670,\n\t\t\t\t\t\t\t\t2671,\n\t\t\t\t\t\t\t\t2672,\n\t\t\t\t\t\t\t\t2673,\n\t\t\t\t\t\t\t\t2674,\n\t\t\t\t\t\t\t\t2675,\n\t\t\t\t\t\t\t\t-2049,\n\t\t\t\t\t\t\t\t2676,\n\t\t\t\t\t\t\t\t2677,\n\t\t\t\t\t\t\t\t2678,\n\t\t\t\t\t\t\t\t-429,\n\t\t\t\t\t\t\t\t2679,\n\t\t\t\t\t\t\t\t-427,\n\t\t\t\t\t\t\t\t2680,\n\t\t\t\t\t\t\t\t-122,\n\t\t\t\t\t\t\t\t2681,\n\t\t\t\t\t\t\t\t2682\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774028\",\n\t\t\t\t\t\t\t\"GEN\": \"Lichtenau\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2683,\n\t\t\t\t\t\t\t\t2684,\n\t\t\t\t\t\t\t\t-1475,\n\t\t\t\t\t\t\t\t2685,\n\t\t\t\t\t\t\t\t-2042,\n\t\t\t\t\t\t\t\t2686,\n\t\t\t\t\t\t\t\t-2040,\n\t\t\t\t\t\t\t\t2687\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754040\",\n\t\t\t\t\t\t\t\"GEN\": \"Steinhagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2688,\n\t\t\t\t\t\t\t\t2689,\n\t\t\t\t\t\t\t\t2690,\n\t\t\t\t\t\t\t\t2691,\n\t\t\t\t\t\t\t\t2692,\n\t\t\t\t\t\t\t\t2693,\n\t\t\t\t\t\t\t\t2694,\n\t\t\t\t\t\t\t\t2695,\n\t\t\t\t\t\t\t\t2696,\n\t\t\t\t\t\t\t\t2697,\n\t\t\t\t\t\t\t\t2698,\n\t\t\t\t\t\t\t\t2699,\n\t\t\t\t\t\t\t\t2700,\n\t\t\t\t\t\t\t\t2701,\n\t\t\t\t\t\t\t\t2702,\n\t\t\t\t\t\t\t\t2703,\n\t\t\t\t\t\t\t\t-1680,\n\t\t\t\t\t\t\t\t2704,\n\t\t\t\t\t\t\t\t2705,\n\t\t\t\t\t\t\t\t-394,\n\t\t\t\t\t\t\t\t2706,\n\t\t\t\t\t\t\t\t2707\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170048\",\n\t\t\t\t\t\t\t\"GEN\": \"Wesel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2708,\n\t\t\t\t\t\t\t\t2709,\n\t\t\t\t\t\t\t\t2710,\n\t\t\t\t\t\t\t\t-1109,\n\t\t\t\t\t\t\t\t2711,\n\t\t\t\t\t\t\t\t-1324,\n\t\t\t\t\t\t\t\t2712,\n\t\t\t\t\t\t\t\t2713,\n\t\t\t\t\t\t\t\t2714,\n\t\t\t\t\t\t\t\t-1514,\n\t\t\t\t\t\t\t\t2715,\n\t\t\t\t\t\t\t\t2716,\n\t\t\t\t\t\t\t\t2717\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362028\",\n\t\t\t\t\t\t\t\"GEN\": \"Hürth\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2718,\n\t\t\t\t\t\t\t\t2719,\n\t\t\t\t\t\t\t\t2720,\n\t\t\t\t\t\t\t\t2721,\n\t\t\t\t\t\t\t\t-2165,\n\t\t\t\t\t\t\t\t2722,\n\t\t\t\t\t\t\t\t2723,\n\t\t\t\t\t\t\t\t2724,\n\t\t\t\t\t\t\t\t2725,\n\t\t\t\t\t\t\t\t2726,\n\t\t\t\t\t\t\t\t2727\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166008\",\n\t\t\t\t\t\t\t\"GEN\": \"Grefrath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2728,\n\t\t\t\t\t\t\t\t2729,\n\t\t\t\t\t\t\t\t2730,\n\t\t\t\t\t\t\t\t2731,\n\t\t\t\t\t\t\t\t2732,\n\t\t\t\t\t\t\t\t-2197,\n\t\t\t\t\t\t\t\t2733,\n\t\t\t\t\t\t\t\t-1600,\n\t\t\t\t\t\t\t\t2734,\n\t\t\t\t\t\t\t\t2735,\n\t\t\t\t\t\t\t\t2736\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554056\",\n\t\t\t\t\t\t\t\"GEN\": \"Stadtlohn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2737,\n\t\t\t\t\t\t\t\t2738,\n\t\t\t\t\t\t\t\t2739,\n\t\t\t\t\t\t\t\t2740,\n\t\t\t\t\t\t\t\t2741,\n\t\t\t\t\t\t\t\t-1558,\n\t\t\t\t\t\t\t\t2742,\n\t\t\t\t\t\t\t\t-1903,\n\t\t\t\t\t\t\t\t2743,\n\t\t\t\t\t\t\t\t2744\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954012\",\n\t\t\t\t\t\t\t\"GEN\": \"Gevelsberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-841,\n\t\t\t\t\t\t\t\t-1985,\n\t\t\t\t\t\t\t\t-2369,\n\t\t\t\t\t\t\t\t2745,\n\t\t\t\t\t\t\t\t2746,\n\t\t\t\t\t\t\t\t-2603,\n\t\t\t\t\t\t\t\t2747,\n\t\t\t\t\t\t\t\t-2609,\n\t\t\t\t\t\t\t\t2748,\n\t\t\t\t\t\t\t\t2749,\n\t\t\t\t\t\t\t\t2750,\n\t\t\t\t\t\t\t\t-1650,\n\t\t\t\t\t\t\t\t2751,\n\t\t\t\t\t\t\t\t-1648,\n\t\t\t\t\t\t\t\t2752,\n\t\t\t\t\t\t\t\t-965,\n\t\t\t\t\t\t\t\t2753\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962024\",\n\t\t\t\t\t\t\t\"GEN\": \"Iserlohn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2754,\n\t\t\t\t\t\t\t\t2755,\n\t\t\t\t\t\t\t\t2756,\n\t\t\t\t\t\t\t\t2757,\n\t\t\t\t\t\t\t\t-146,\n\t\t\t\t\t\t\t\t2758,\n\t\t\t\t\t\t\t\t-144,\n\t\t\t\t\t\t\t\t2759,\n\t\t\t\t\t\t\t\t2760,\n\t\t\t\t\t\t\t\t2761,\n\t\t\t\t\t\t\t\t2762,\n\t\t\t\t\t\t\t\t2763,\n\t\t\t\t\t\t\t\t2764,\n\t\t\t\t\t\t\t\t2765,\n\t\t\t\t\t\t\t\t-2258,\n\t\t\t\t\t\t\t\t2766,\n\t\t\t\t\t\t\t\t2767,\n\t\t\t\t\t\t\t\t2768\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334028\",\n\t\t\t\t\t\t\t\"GEN\": \"Simmerath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2652,\n\t\t\t\t\t\t\t\t2770,\n\t\t\t\t\t\t\t\t-2558,\n\t\t\t\t\t\t\t\t2771,\n\t\t\t\t\t\t\t\t2772,\n\t\t\t\t\t\t\t\t2773,\n\t\t\t\t\t\t\t\t2774,\n\t\t\t\t\t\t\t\t2775,\n\t\t\t\t\t\t\t\t-2654,\n\t\t\t\t\t\t\t\t2776\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566024\",\n\t\t\t\t\t\t\t\"GEN\": \"Horstmar\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2554,\n\t\t\t\t\t\t\t\t2777,\n\t\t\t\t\t\t\t\t2778,\n\t\t\t\t\t\t\t\t2779,\n\t\t\t\t\t\t\t\t2780,\n\t\t\t\t\t\t\t\t2781,\n\t\t\t\t\t\t\t\t2782,\n\t\t\t\t\t\t\t\t2783,\n\t\t\t\t\t\t\t\t2784,\n\t\t\t\t\t\t\t\t2785,\n\t\t\t\t\t\t\t\t2786,\n\t\t\t\t\t\t\t\t2787,\n\t\t\t\t\t\t\t\t2788\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558008\",\n\t\t\t\t\t\t\t\"GEN\": \"Billerbeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2789,\n\t\t\t\t\t\t\t\t2790,\n\t\t\t\t\t\t\t\t-1038,\n\t\t\t\t\t\t\t\t2791,\n\t\t\t\t\t\t\t\t-1036,\n\t\t\t\t\t\t\t\t2792,\n\t\t\t\t\t\t\t\t-2583,\n\t\t\t\t\t\t\t\t2793,\n\t\t\t\t\t\t\t\t2794,\n\t\t\t\t\t\t\t\t2795,\n\t\t\t\t\t\t\t\t2796,\n\t\t\t\t\t\t\t\t2797,\n\t\t\t\t\t\t\t\t-818,\n\t\t\t\t\t\t\t\t2798,\n\t\t\t\t\t\t\t\t-787,\n\t\t\t\t\t\t\t\t2799,\n\t\t\t\t\t\t\t\t2800,\n\t\t\t\t\t\t\t\t2801,\n\t\t\t\t\t\t\t\t2802,\n\t\t\t\t\t\t\t\t2803,\n\t\t\t\t\t\t\t\t2804,\n\t\t\t\t\t\t\t\t2805,\n\t\t\t\t\t\t\t\t2806\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05113000\",\n\t\t\t\t\t\t\t\"GEN\": \"Essen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2807,\n\t\t\t\t\t\t\t\t2808,\n\t\t\t\t\t\t\t\t-1387,\n\t\t\t\t\t\t\t\t2809,\n\t\t\t\t\t\t\t\t-773,\n\t\t\t\t\t\t\t\t2810,\n\t\t\t\t\t\t\t\t-760,\n\t\t\t\t\t\t\t\t2811,\n\t\t\t\t\t\t\t\t-574,\n\t\t\t\t\t\t\t\t2812,\n\t\t\t\t\t\t\t\t2813,\n\t\t\t\t\t\t\t\t2814\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162020\",\n\t\t\t\t\t\t\t\"GEN\": \"Korschenbroich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2815,\n\t\t\t\t\t\t\t\t2816,\n\t\t\t\t\t\t\t\t2817,\n\t\t\t\t\t\t\t\t2818,\n\t\t\t\t\t\t\t\t2819,\n\t\t\t\t\t\t\t\t2820,\n\t\t\t\t\t\t\t\t2821,\n\t\t\t\t\t\t\t\t2822,\n\t\t\t\t\t\t\t\t2823,\n\t\t\t\t\t\t\t\t2824,\n\t\t\t\t\t\t\t\t2825,\n\t\t\t\t\t\t\t\t2826,\n\t\t\t\t\t\t\t\t2827\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558004\",\n\t\t\t\t\t\t\t\"GEN\": \"Ascheberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2828,\n\t\t\t\t\t\t\t\t2829,\n\t\t\t\t\t\t\t\t-2530,\n\t\t\t\t\t\t\t\t2830,\n\t\t\t\t\t\t\t\t2831,\n\t\t\t\t\t\t\t\t2832,\n\t\t\t\t\t\t\t\t2833,\n\t\t\t\t\t\t\t\t2834,\n\t\t\t\t\t\t\t\t2835,\n\t\t\t\t\t\t\t\t2836,\n\t\t\t\t\t\t\t\t2837\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bergkamen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2838,\n\t\t\t\t\t\t\t\t2839,\n\t\t\t\t\t\t\t\t-1614,\n\t\t\t\t\t\t\t\t2840,\n\t\t\t\t\t\t\t\t-1612,\n\t\t\t\t\t\t\t\t2841,\n\t\t\t\t\t\t\t\t2842,\n\t\t\t\t\t\t\t\t2843,\n\t\t\t\t\t\t\t\t-2180,\n\t\t\t\t\t\t\t\t2844,\n\t\t\t\t\t\t\t\t2845,\n\t\t\t\t\t\t\t\t2846,\n\t\t\t\t\t\t\t\t2847,\n\t\t\t\t\t\t\t\t2848\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766048\",\n\t\t\t\t\t\t\t\"GEN\": \"Leopoldshöhe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2487,\n\t\t\t\t\t\t\t\t2849,\n\t\t\t\t\t\t\t\t-1730,\n\t\t\t\t\t\t\t\t2850,\n\t\t\t\t\t\t\t\t-2498,\n\t\t\t\t\t\t\t\t2851,\n\t\t\t\t\t\t\t\t2852,\n\t\t\t\t\t\t\t\t-1742,\n\t\t\t\t\t\t\t\t2853,\n\t\t\t\t\t\t\t\t-363,\n\t\t\t\t\t\t\t\t2854,\n\t\t\t\t\t\t\t\t-361,\n\t\t\t\t\t\t\t\t2855\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766036\",\n\t\t\t\t\t\t\t\"GEN\": \"Kalletal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2856,\n\t\t\t\t\t\t\t\t2857,\n\t\t\t\t\t\t\t\t2858,\n\t\t\t\t\t\t\t\t2859,\n\t\t\t\t\t\t\t\t2860,\n\t\t\t\t\t\t\t\t2861,\n\t\t\t\t\t\t\t\t2862,\n\t\t\t\t\t\t\t\t2863,\n\t\t\t\t\t\t\t\t2864,\n\t\t\t\t\t\t\t\t-884,\n\t\t\t\t\t\t\t\t2865,\n\t\t\t\t\t\t\t\t2866,\n\t\t\t\t\t\t\t\t2867,\n\t\t\t\t\t\t\t\t2868,\n\t\t\t\t\t\t\t\t2869\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566008\",\n\t\t\t\t\t\t\t\"GEN\": \"Emsdetten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-410,\n\t\t\t\t\t\t\t\t2870,\n\t\t\t\t\t\t\t\t-452,\n\t\t\t\t\t\t\t\t2871\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366012\",\n\t\t\t\t\t\t\t\"GEN\": \"Dahlem\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2872,\n\t\t\t\t\t\t\t\t2873,\n\t\t\t\t\t\t\t\t2874,\n\t\t\t\t\t\t\t\t-518,\n\t\t\t\t\t\t\t\t2875,\n\t\t\t\t\t\t\t\t2876,\n\t\t\t\t\t\t\t\t2877,\n\t\t\t\t\t\t\t\t2878,\n\t\t\t\t\t\t\t\t2879,\n\t\t\t\t\t\t\t\t2880,\n\t\t\t\t\t\t\t\t2881,\n\t\t\t\t\t\t\t\t-2781,\n\t\t\t\t\t\t\t\t2882,\n\t\t\t\t\t\t\t\t2883\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558020\",\n\t\t\t\t\t\t\t\"GEN\": \"Havixbeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2884,\n\t\t\t\t\t\t\t\t2885,\n\t\t\t\t\t\t\t\t-1219,\n\t\t\t\t\t\t\t\t2886,\n\t\t\t\t\t\t\t\t2887,\n\t\t\t\t\t\t\t\t2888,\n\t\t\t\t\t\t\t\t-2225,\n\t\t\t\t\t\t\t\t2889,\n\t\t\t\t\t\t\t\t2890,\n\t\t\t\t\t\t\t\t2891,\n\t\t\t\t\t\t\t\t2892,\n\t\t\t\t\t\t\t\t-2069,\n\t\t\t\t\t\t\t\t2893,\n\t\t\t\t\t\t\t\t-2067,\n\t\t\t\t\t\t\t\t2894,\n\t\t\t\t\t\t\t\t2895\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958044\",\n\t\t\t\t\t\t\t\"GEN\": \"Sundern (Sauerland)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2896,\n\t\t\t\t\t\t\t\t-1213,\n\t\t\t\t\t\t\t\t2897,\n\t\t\t\t\t\t\t\t-2342,\n\t\t\t\t\t\t\t\t2898,\n\t\t\t\t\t\t\t\t-20,\n\t\t\t\t\t\t\t\t2899,\n\t\t\t\t\t\t\t\t-2220,\n\t\t\t\t\t\t\t\t2900,\n\t\t\t\t\t\t\t\t-2218,\n\t\t\t\t\t\t\t\t2901,\n\t\t\t\t\t\t\t\t-2888,\n\t\t\t\t\t\t\t\t2902,\n\t\t\t\t\t\t\t\t-1217,\n\t\t\t\t\t\t\t\t2903,\n\t\t\t\t\t\t\t\t-1215\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958016\",\n\t\t\t\t\t\t\t\"GEN\": \"Eslohe (Sauerland)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2904,\n\t\t\t\t\t\t\t\t2905,\n\t\t\t\t\t\t\t\t2906,\n\t\t\t\t\t\t\t\t-2269,\n\t\t\t\t\t\t\t\t2907,\n\t\t\t\t\t\t\t\t-2267,\n\t\t\t\t\t\t\t\t-115,\n\t\t\t\t\t\t\t\t2908,\n\t\t\t\t\t\t\t\t-113,\n\t\t\t\t\t\t\t\t2909,\n\t\t\t\t\t\t\t\t2910,\n\t\t\t\t\t\t\t\t2911,\n\t\t\t\t\t\t\t\t2912,\n\t\t\t\t\t\t\t\t2913,\n\t\t\t\t\t\t\t\t2914,\n\t\t\t\t\t\t\t\t2915,\n\t\t\t\t\t\t\t\t-140,\n\t\t\t\t\t\t\t\t2916,\n\t\t\t\t\t\t\t\t-242\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366028\",\n\t\t\t\t\t\t\t\"GEN\": \"Mechernich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2917,\n\t\t\t\t\t\t\t\t-1372,\n\t\t\t\t\t\t\t\t2918,\n\t\t\t\t\t\t\t\t-2295,\n\t\t\t\t\t\t\t\t2919,\n\t\t\t\t\t\t\t\t2920,\n\t\t\t\t\t\t\t\t2921,\n\t\t\t\t\t\t\t\t2922,\n\t\t\t\t\t\t\t\t2923,\n\t\t\t\t\t\t\t\t2924,\n\t\t\t\t\t\t\t\t2925,\n\t\t\t\t\t\t\t\t2926,\n\t\t\t\t\t\t\t\t2927\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170028\",\n\t\t\t\t\t\t\t\"GEN\": \"Neukirchen-Vluyn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1163,\n\t\t\t\t\t\t\t\t2928,\n\t\t\t\t\t\t\t\t-1161,\n\t\t\t\t\t\t\t\t2929,\n\t\t\t\t\t\t\t\t-2287,\n\t\t\t\t\t\t\t\t2930,\n\t\t\t\t\t\t\t\t-985,\n\t\t\t\t\t\t\t\t2931,\n\t\t\t\t\t\t\t\t2932,\n\t\t\t\t\t\t\t\t2933,\n\t\t\t\t\t\t\t\t2934\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554028\",\n\t\t\t\t\t\t\t\"GEN\": \"Heiden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2935,\n\t\t\t\t\t\t\t\t2936,\n\t\t\t\t\t\t\t\t2937,\n\t\t\t\t\t\t\t\t2938,\n\t\t\t\t\t\t\t\t2939,\n\t\t\t\t\t\t\t\t2940,\n\t\t\t\t\t\t\t\t-1770,\n\t\t\t\t\t\t\t\t2941,\n\t\t\t\t\t\t\t\t-1768,\n\t\t\t\t\t\t\t\t2942,\n\t\t\t\t\t\t\t\t-2098,\n\t\t\t\t\t\t\t\t2943\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974012\",\n\t\t\t\t\t\t\t\"GEN\": \"Ense\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2944,\n\t\t\t\t\t\t\t\t2945,\n\t\t\t\t\t\t\t\t-1389,\n\t\t\t\t\t\t\t\t2946,\n\t\t\t\t\t\t\t\t-2808,\n\t\t\t\t\t\t\t\t2947,\n\t\t\t\t\t\t\t\t2948,\n\t\t\t\t\t\t\t\t2949,\n\t\t\t\t\t\t\t\t2950,\n\t\t\t\t\t\t\t\t2951\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162016\",\n\t\t\t\t\t\t\t\"GEN\": \"Kaarst\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2923,\n\t\t\t\t\t\t\t\t2952,\n\t\t\t\t\t\t\t\t2953,\n\t\t\t\t\t\t\t\t2954,\n\t\t\t\t\t\t\t\t-2255,\n\t\t\t\t\t\t\t\t2955,\n\t\t\t\t\t\t\t\t-2253,\n\t\t\t\t\t\t\t\t2956,\n\t\t\t\t\t\t\t\t2957,\n\t\t\t\t\t\t\t\t2958,\n\t\t\t\t\t\t\t\t2959,\n\t\t\t\t\t\t\t\t2960,\n\t\t\t\t\t\t\t\t-865,\n\t\t\t\t\t\t\t\t2961\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166012\",\n\t\t\t\t\t\t\t\"GEN\": \"Kempen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2825,\n\t\t\t\t\t\t\t\t2962,\n\t\t\t\t\t\t\t\t2963,\n\t\t\t\t\t\t\t\t2964,\n\t\t\t\t\t\t\t\t-266,\n\t\t\t\t\t\t\t\t2965,\n\t\t\t\t\t\t\t\t-264,\n\t\t\t\t\t\t\t\t2966,\n\t\t\t\t\t\t\t\t-1137,\n\t\t\t\t\t\t\t\t2967\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558028\",\n\t\t\t\t\t\t\t\"GEN\": \"Nordkirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2968,\n\t\t\t\t\t\t\t\t2969,\n\t\t\t\t\t\t\t\t2970,\n\t\t\t\t\t\t\t\t2971,\n\t\t\t\t\t\t\t\t2972,\n\t\t\t\t\t\t\t\t2973,\n\t\t\t\t\t\t\t\t2974,\n\t\t\t\t\t\t\t\t-1783,\n\t\t\t\t\t\t\t\t2975,\n\t\t\t\t\t\t\t\t2976,\n\t\t\t\t\t\t\t\t-1780,\n\t\t\t\t\t\t\t\t2977,\n\t\t\t\t\t\t\t\t-821,\n\t\t\t\t\t\t\t\t2978\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762020\",\n\t\t\t\t\t\t\t\"GEN\": \"Höxter\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2979,\n\t\t\t\t\t\t\t\t2980,\n\t\t\t\t\t\t\t\t2981,\n\t\t\t\t\t\t\t\t2982,\n\t\t\t\t\t\t\t\t2983,\n\t\t\t\t\t\t\t\t2984,\n\t\t\t\t\t\t\t\t2985,\n\t\t\t\t\t\t\t\t2986,\n\t\t\t\t\t\t\t\t2987,\n\t\t\t\t\t\t\t\t2988,\n\t\t\t\t\t\t\t\t2989,\n\t\t\t\t\t\t\t\t2990,\n\t\t\t\t\t\t\t\t2991,\n\t\t\t\t\t\t\t\t-1787,\n\t\t\t\t\t\t\t\t2992,\n\t\t\t\t\t\t\t\t-1785,\n\t\t\t\t\t\t\t\t2993\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762012\",\n\t\t\t\t\t\t\t\"GEN\": \"Borgentreich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-462,\n\t\t\t\t\t\t\t\t2994,\n\t\t\t\t\t\t\t\t-460,\n\t\t\t\t\t\t\t\t2995,\n\t\t\t\t\t\t\t\t2996,\n\t\t\t\t\t\t\t\t2997,\n\t\t\t\t\t\t\t\t2998,\n\t\t\t\t\t\t\t\t2999,\n\t\t\t\t\t\t\t\t-1839,\n\t\t\t\t\t\t\t\t3000,\n\t\t\t\t\t\t\t\t-2335,\n\t\t\t\t\t\t\t\t3001,\n\t\t\t\t\t\t\t\t-2333,\n\t\t\t\t\t\t\t\t3002,\n\t\t\t\t\t\t\t\t-2331,\n\t\t\t\t\t\t\t\t3003,\n\t\t\t\t\t\t\t\t-2329,\n\t\t\t\t\t\t\t\t3004,\n\t\t\t\t\t\t\t\t3005,\n\t\t\t\t\t\t\t\t-2660,\n\t\t\t\t\t\t\t\t3006,\n\t\t\t\t\t\t\t\t-2658,\n\t\t\t\t\t\t\t\t3007\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958048\",\n\t\t\t\t\t\t\t\"GEN\": \"Winterberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-2762,\n\t\t\t\t\t\t\t\t\t3008,\n\t\t\t\t\t\t\t\t\t3009,\n\t\t\t\t\t\t\t\t\t3010,\n\t\t\t\t\t\t\t\t\t-454,\n\t\t\t\t\t\t\t\t\t3011,\n\t\t\t\t\t\t\t\t\t-2765,\n\t\t\t\t\t\t\t\t\t3012,\n\t\t\t\t\t\t\t\t\t3013\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t3014\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334020\",\n\t\t\t\t\t\t\t\"GEN\": \"Monschau\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1772,\n\t\t\t\t\t\t\t\t3015,\n\t\t\t\t\t\t\t\t-2940,\n\t\t\t\t\t\t\t\t3016,\n\t\t\t\t\t\t\t\t3017,\n\t\t\t\t\t\t\t\t3018,\n\t\t\t\t\t\t\t\t3019,\n\t\t\t\t\t\t\t\t3020,\n\t\t\t\t\t\t\t\t3021,\n\t\t\t\t\t\t\t\t3022,\n\t\t\t\t\t\t\t\t3023,\n\t\t\t\t\t\t\t\t-1691,\n\t\t\t\t\t\t\t\t3024,\n\t\t\t\t\t\t\t\t3025,\n\t\t\t\t\t\t\t\t3026\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974056\",\n\t\t\t\t\t\t\t\"GEN\": \"Wickede (Ruhr)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3027,\n\t\t\t\t\t\t\t\t-1651,\n\t\t\t\t\t\t\t\t3028,\n\t\t\t\t\t\t\t\t3029,\n\t\t\t\t\t\t\t\t3030,\n\t\t\t\t\t\t\t\t-2607,\n\t\t\t\t\t\t\t\t3031,\n\t\t\t\t\t\t\t\t-2483,\n\t\t\t\t\t\t\t\t3032,\n\t\t\t\t\t\t\t\t-1922,\n\t\t\t\t\t\t\t\t3033,\n\t\t\t\t\t\t\t\t-1939,\n\t\t\t\t\t\t\t\t3034,\n\t\t\t\t\t\t\t\t3035,\n\t\t\t\t\t\t\t\t-1542,\n\t\t\t\t\t\t\t\t3036,\n\t\t\t\t\t\t\t\t-1540,\n\t\t\t\t\t\t\t\t3037,\n\t\t\t\t\t\t\t\t-2741,\n\t\t\t\t\t\t\t\t3038,\n\t\t\t\t\t\t\t\t3039,\n\t\t\t\t\t\t\t\t3040,\n\t\t\t\t\t\t\t\t-1869,\n\t\t\t\t\t\t\t\t3041\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05914000\",\n\t\t\t\t\t\t\t\"GEN\": \"Hagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1574,\n\t\t\t\t\t\t\t\t3042,\n\t\t\t\t\t\t\t\t-1572,\n\t\t\t\t\t\t\t\t3043,\n\t\t\t\t\t\t\t\t3044,\n\t\t\t\t\t\t\t\t-2613,\n\t\t\t\t\t\t\t\t3045,\n\t\t\t\t\t\t\t\t3046,\n\t\t\t\t\t\t\t\t3047,\n\t\t\t\t\t\t\t\t3048,\n\t\t\t\t\t\t\t\t3049,\n\t\t\t\t\t\t\t\t-2689,\n\t\t\t\t\t\t\t\t3050,\n\t\t\t\t\t\t\t\t-172,\n\t\t\t\t\t\t\t\t3051,\n\t\t\t\t\t\t\t\t-2436,\n\t\t\t\t\t\t\t\t3052\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170012\",\n\t\t\t\t\t\t\t\"GEN\": \"Hamminkeln\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2662,\n\t\t\t\t\t\t\t\t3053,\n\t\t\t\t\t\t\t\t3054,\n\t\t\t\t\t\t\t\t-2326,\n\t\t\t\t\t\t\t\t3055,\n\t\t\t\t\t\t\t\t-1209,\n\t\t\t\t\t\t\t\t3056,\n\t\t\t\t\t\t\t\t3057\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bestwig\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3058,\n\t\t\t\t\t\t\t\t-2239,\n\t\t\t\t\t\t\t\t3059,\n\t\t\t\t\t\t\t\t-2413,\n\t\t\t\t\t\t\t\t3060,\n\t\t\t\t\t\t\t\t3061,\n\t\t\t\t\t\t\t\t3062,\n\t\t\t\t\t\t\t\t3063\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770020\",\n\t\t\t\t\t\t\t\"GEN\": \"Lübbecke\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3064,\n\t\t\t\t\t\t\t\t3065,\n\t\t\t\t\t\t\t\t-382,\n\t\t\t\t\t\t\t\t3066\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566048\",\n\t\t\t\t\t\t\t\"GEN\": \"Lotte\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3067,\n\t\t\t\t\t\t\t\t-1309,\n\t\t\t\t\t\t\t\t3068,\n\t\t\t\t\t\t\t\t-1307,\n\t\t\t\t\t\t\t\t3069,\n\t\t\t\t\t\t\t\t3070,\n\t\t\t\t\t\t\t\t3071,\n\t\t\t\t\t\t\t\t3072,\n\t\t\t\t\t\t\t\t3073,\n\t\t\t\t\t\t\t\t-317,\n\t\t\t\t\t\t\t\t3074,\n\t\t\t\t\t\t\t\t-1096\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358028\",\n\t\t\t\t\t\t\t\"GEN\": \"Kreuzau\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2633,\n\t\t\t\t\t\t\t\t3075,\n\t\t\t\t\t\t\t\t-2631,\n\t\t\t\t\t\t\t\t-2869,\n\t\t\t\t\t\t\t\t3076,\n\t\t\t\t\t\t\t\t-2867,\n\t\t\t\t\t\t\t\t3077,\n\t\t\t\t\t\t\t\t-882,\n\t\t\t\t\t\t\t\t3078,\n\t\t\t\t\t\t\t\t3079,\n\t\t\t\t\t\t\t\t3080\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566076\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheine\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2697,\n\t\t\t\t\t\t\t\t3081,\n\t\t\t\t\t\t\t\t3082,\n\t\t\t\t\t\t\t\t3083,\n\t\t\t\t\t\t\t\t3084,\n\t\t\t\t\t\t\t\t3085,\n\t\t\t\t\t\t\t\t3086,\n\t\t\t\t\t\t\t\t3087,\n\t\t\t\t\t\t\t\t3088,\n\t\t\t\t\t\t\t\t-2699,\n\t\t\t\t\t\t\t\t3089\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170044\",\n\t\t\t\t\t\t\t\"GEN\": \"Voerde (Niederrhein)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2071,\n\t\t\t\t\t\t\t\t3090,\n\t\t\t\t\t\t\t\t-2892,\n\t\t\t\t\t\t\t\t3091,\n\t\t\t\t\t\t\t\t-723,\n\t\t\t\t\t\t\t\t3092,\n\t\t\t\t\t\t\t\t-1861,\n\t\t\t\t\t\t\t\t3093,\n\t\t\t\t\t\t\t\t-1859,\n\t\t\t\t\t\t\t\t3094,\n\t\t\t\t\t\t\t\t-1857,\n\t\t\t\t\t\t\t\t3095,\n\t\t\t\t\t\t\t\t-2372,\n\t\t\t\t\t\t\t\t3096,\n\t\t\t\t\t\t\t\t3097,\n\t\t\t\t\t\t\t\t3098\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962048\",\n\t\t\t\t\t\t\t\"GEN\": \"Neuenrade\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2031,\n\t\t\t\t\t\t\t\t3099,\n\t\t\t\t\t\t\t\t-2776,\n\t\t\t\t\t\t\t\t3100,\n\t\t\t\t\t\t\t\t3101,\n\t\t\t\t\t\t\t\t3102,\n\t\t\t\t\t\t\t\t3103,\n\t\t\t\t\t\t\t\t-2033,\n\t\t\t\t\t\t\t\t3104\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566052\",\n\t\t\t\t\t\t\t\"GEN\": \"Metelen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3105,\n\t\t\t\t\t\t\t\t3106,\n\t\t\t\t\t\t\t\t3107,\n\t\t\t\t\t\t\t\t-1814,\n\t\t\t\t\t\t\t\t3108,\n\t\t\t\t\t\t\t\t-1812,\n\t\t\t\t\t\t\t\t3109,\n\t\t\t\t\t\t\t\t3110,\n\t\t\t\t\t\t\t\t3111,\n\t\t\t\t\t\t\t\t3112,\n\t\t\t\t\t\t\t\t3113,\n\t\t\t\t\t\t\t\t3114,\n\t\t\t\t\t\t\t\t3115,\n\t\t\t\t\t\t\t\t3116,\n\t\t\t\t\t\t\t\t3117,\n\t\t\t\t\t\t\t\t3118,\n\t\t\t\t\t\t\t\t3119,\n\t\t\t\t\t\t\t\t3120,\n\t\t\t\t\t\t\t\t3121,\n\t\t\t\t\t\t\t\t3122,\n\t\t\t\t\t\t\t\t3123,\n\t\t\t\t\t\t\t\t3124,\n\t\t\t\t\t\t\t\t3125\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570004\",\n\t\t\t\t\t\t\t\"GEN\": \"Ahlen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3126,\n\t\t\t\t\t\t\t\t3127,\n\t\t\t\t\t\t\t\t3128,\n\t\t\t\t\t\t\t\t-351,\n\t\t\t\t\t\t\t\t3129,\n\t\t\t\t\t\t\t\t3130,\n\t\t\t\t\t\t\t\t-1817,\n\t\t\t\t\t\t\t\t3131,\n\t\t\t\t\t\t\t\t-814,\n\t\t\t\t\t\t\t\t3132\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158036\",\n\t\t\t\t\t\t\t\"GEN\": \"Wülfrath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3133,\n\t\t\t\t\t\t\t\t3134,\n\t\t\t\t\t\t\t\t3135,\n\t\t\t\t\t\t\t\t3136,\n\t\t\t\t\t\t\t\t3137,\n\t\t\t\t\t\t\t\t3138,\n\t\t\t\t\t\t\t\t-2038,\n\t\t\t\t\t\t\t\t3139,\n\t\t\t\t\t\t\t\t3140,\n\t\t\t\t\t\t\t\t-2008,\n\t\t\t\t\t\t\t\t3141\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754052\",\n\t\t\t\t\t\t\t\"GEN\": \"Werther (Westf.)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2969,\n\t\t\t\t\t\t\t\t3142,\n\t\t\t\t\t\t\t\t-2982,\n\t\t\t\t\t\t\t\t3143,\n\t\t\t\t\t\t\t\t-2980,\n\t\t\t\t\t\t\t\t3144,\n\t\t\t\t\t\t\t\t3145,\n\t\t\t\t\t\t\t\t-2973,\n\t\t\t\t\t\t\t\t3146,\n\t\t\t\t\t\t\t\t-2971,\n\t\t\t\t\t\t\t\t3147\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762008\",\n\t\t\t\t\t\t\t\"GEN\": \"Beverungen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-507,\n\t\t\t\t\t\t\t\t3148,\n\t\t\t\t\t\t\t\t-2423,\n\t\t\t\t\t\t\t\t3149,\n\t\t\t\t\t\t\t\t3150,\n\t\t\t\t\t\t\t\t3151,\n\t\t\t\t\t\t\t\t3152,\n\t\t\t\t\t\t\t\t3153,\n\t\t\t\t\t\t\t\t3154,\n\t\t\t\t\t\t\t\t3155,\n\t\t\t\t\t\t\t\t-509,\n\t\t\t\t\t\t\t\t3156\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570040\",\n\t\t\t\t\t\t\t\"GEN\": \"Sendenhorst\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2235,\n\t\t\t\t\t\t\t\t3157,\n\t\t\t\t\t\t\t\t-2245,\n\t\t\t\t\t\t\t\t3158,\n\t\t\t\t\t\t\t\t-735,\n\t\t\t\t\t\t\t\t3159\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770040\",\n\t\t\t\t\t\t\t\"GEN\": \"Rahden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3160,\n\t\t\t\t\t\t\t\t-1516,\n\t\t\t\t\t\t\t\t3161,\n\t\t\t\t\t\t\t\t-2714,\n\t\t\t\t\t\t\t\t3162,\n\t\t\t\t\t\t\t\t-1322,\n\t\t\t\t\t\t\t\t3163,\n\t\t\t\t\t\t\t\t-1331,\n\t\t\t\t\t\t\t\t3164,\n\t\t\t\t\t\t\t\t-1100,\n\t\t\t\t\t\t\t\t3165,\n\t\t\t\t\t\t\t\t-159,\n\t\t\t\t\t\t\t\t3166,\n\t\t\t\t\t\t\t\t3167,\n\t\t\t\t\t\t\t\t3168,\n\t\t\t\t\t\t\t\t3169\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362032\",\n\t\t\t\t\t\t\t\"GEN\": \"Kerpen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1397,\n\t\t\t\t\t\t\t\t3170,\n\t\t\t\t\t\t\t\t3171,\n\t\t\t\t\t\t\t\t3172,\n\t\t\t\t\t\t\t\t-3168,\n\t\t\t\t\t\t\t\t3173,\n\t\t\t\t\t\t\t\t-1436,\n\t\t\t\t\t\t\t\t3174,\n\t\t\t\t\t\t\t\t-2156,\n\t\t\t\t\t\t\t\t3175,\n\t\t\t\t\t\t\t\t3176,\n\t\t\t\t\t\t\t\t3177,\n\t\t\t\t\t\t\t\t3178\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362016\",\n\t\t\t\t\t\t\t\"GEN\": \"Elsdorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3179,\n\t\t\t\t\t\t\t\t-321,\n\t\t\t\t\t\t\t\t3180,\n\t\t\t\t\t\t\t\t3181,\n\t\t\t\t\t\t\t\t3182,\n\t\t\t\t\t\t\t\t-777,\n\t\t\t\t\t\t\t\t3183,\n\t\t\t\t\t\t\t\t3184,\n\t\t\t\t\t\t\t\t3185\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358032\",\n\t\t\t\t\t\t\t\"GEN\": \"Langerwehe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2785,\n\t\t\t\t\t\t\t\t3186,\n\t\t\t\t\t\t\t\t3187,\n\t\t\t\t\t\t\t\t-809,\n\t\t\t\t\t\t\t\t3188,\n\t\t\t\t\t\t\t\t3189,\n\t\t\t\t\t\t\t\t3190,\n\t\t\t\t\t\t\t\t3191,\n\t\t\t\t\t\t\t\t3192,\n\t\t\t\t\t\t\t\t3193,\n\t\t\t\t\t\t\t\t3194\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558012\",\n\t\t\t\t\t\t\t\"GEN\": \"Coesfeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2701,\n\t\t\t\t\t\t\t\t3195,\n\t\t\t\t\t\t\t\t3196,\n\t\t\t\t\t\t\t\t3197,\n\t\t\t\t\t\t\t\t-2600,\n\t\t\t\t\t\t\t\t3198,\n\t\t\t\t\t\t\t\t3199,\n\t\t\t\t\t\t\t\t3200,\n\t\t\t\t\t\t\t\t-1368,\n\t\t\t\t\t\t\t\t3201,\n\t\t\t\t\t\t\t\t-1682,\n\t\t\t\t\t\t\t\t3202,\n\t\t\t\t\t\t\t\t-2703,\n\t\t\t\t\t\t\t\t3203\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170032\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheinberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3204,\n\t\t\t\t\t\t\t\t3205,\n\t\t\t\t\t\t\t\t3206,\n\t\t\t\t\t\t\t\t3207,\n\t\t\t\t\t\t\t\t3208,\n\t\t\t\t\t\t\t\t-2585,\n\t\t\t\t\t\t\t\t3209,\n\t\t\t\t\t\t\t\t3210,\n\t\t\t\t\t\t\t\t-3087,\n\t\t\t\t\t\t\t\t3211,\n\t\t\t\t\t\t\t\t3212,\n\t\t\t\t\t\t\t\t3213\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170008\",\n\t\t\t\t\t\t\t\"GEN\": \"Dinslaken\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3214,\n\t\t\t\t\t\t\t\t-231,\n\t\t\t\t\t\t\t\t-67,\n\t\t\t\t\t\t\t\t3215\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566044\",\n\t\t\t\t\t\t\t\"GEN\": \"Lienen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-955,\n\t\t\t\t\t\t\t\t3216,\n\t\t\t\t\t\t\t\t3217,\n\t\t\t\t\t\t\t\t-2430,\n\t\t\t\t\t\t\t\t3218,\n\t\t\t\t\t\t\t\t-2471,\n\t\t\t\t\t\t\t\t3219,\n\t\t\t\t\t\t\t\t-1039,\n\t\t\t\t\t\t\t\t3220,\n\t\t\t\t\t\t\t\t-2790,\n\t\t\t\t\t\t\t\t3221,\n\t\t\t\t\t\t\t\t-150,\n\t\t\t\t\t\t\t\t3222,\n\t\t\t\t\t\t\t\t3223,\n\t\t\t\t\t\t\t\t-2278,\n\t\t\t\t\t\t\t\t3224\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05513000\",\n\t\t\t\t\t\t\t\"GEN\": \"Gelsenkirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3225,\n\t\t\t\t\t\t\t\t3226,\n\t\t\t\t\t\t\t\t3227,\n\t\t\t\t\t\t\t\t3228,\n\t\t\t\t\t\t\t\t-546,\n\t\t\t\t\t\t\t\t3229,\n\t\t\t\t\t\t\t\t3230,\n\t\t\t\t\t\t\t\t3231,\n\t\t\t\t\t\t\t\t3232,\n\t\t\t\t\t\t\t\t3233,\n\t\t\t\t\t\t\t\t3234,\n\t\t\t\t\t\t\t\t3235,\n\t\t\t\t\t\t\t\t3236\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974004\",\n\t\t\t\t\t\t\t\"GEN\": \"Anröchte\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2556,\n\t\t\t\t\t\t\t\t3237,\n\t\t\t\t\t\t\t\t-2788,\n\t\t\t\t\t\t\t\t3238,\n\t\t\t\t\t\t\t\t3239,\n\t\t\t\t\t\t\t\t-3194,\n\t\t\t\t\t\t\t\t3240,\n\t\t\t\t\t\t\t\t3241,\n\t\t\t\t\t\t\t\t3242,\n\t\t\t\t\t\t\t\t3243,\n\t\t\t\t\t\t\t\t3244,\n\t\t\t\t\t\t\t\t-2773,\n\t\t\t\t\t\t\t\t3245\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558040\",\n\t\t\t\t\t\t\t\"GEN\": \"Rosendahl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3246,\n\t\t\t\t\t\t\t\t3247,\n\t\t\t\t\t\t\t\t3248,\n\t\t\t\t\t\t\t\t3249,\n\t\t\t\t\t\t\t\t3250,\n\t\t\t\t\t\t\t\t3251,\n\t\t\t\t\t\t\t\t3252,\n\t\t\t\t\t\t\t\t3253,\n\t\t\t\t\t\t\t\t3254,\n\t\t\t\t\t\t\t\t-3084,\n\t\t\t\t\t\t\t\t3255,\n\t\t\t\t\t\t\t\t-2694,\n\t\t\t\t\t\t\t\t3256,\n\t\t\t\t\t\t\t\t-2692,\n\t\t\t\t\t\t\t\t3257,\n\t\t\t\t\t\t\t\t3258\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hünxe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3259,\n\t\t\t\t\t\t\t\t3260,\n\t\t\t\t\t\t\t\t-537,\n\t\t\t\t\t\t\t\t3261,\n\t\t\t\t\t\t\t\t-535,\n\t\t\t\t\t\t\t\t3262,\n\t\t\t\t\t\t\t\t3263,\n\t\t\t\t\t\t\t\t3264,\n\t\t\t\t\t\t\t\t-2491,\n\t\t\t\t\t\t\t\t3265,\n\t\t\t\t\t\t\t\t-2496,\n\t\t\t\t\t\t\t\t3266,\n\t\t\t\t\t\t\t\t-492,\n\t\t\t\t\t\t\t\t3267,\n\t\t\t\t\t\t\t\t-499,\n\t\t\t\t\t\t\t\t3268,\n\t\t\t\t\t\t\t\t-2709,\n\t\t\t\t\t\t\t\t3269,\n\t\t\t\t\t\t\t\t-2717,\n\t\t\t\t\t\t\t\t3270,\n\t\t\t\t\t\t\t\t-1512,\n\t\t\t\t\t\t\t\t3271,\n\t\t\t\t\t\t\t\t-11,\n\t\t\t\t\t\t\t\t3272,\n\t\t\t\t\t\t\t\t3273,\n\t\t\t\t\t\t\t\t3274,\n\t\t\t\t\t\t\t\t3275,\n\t\t\t\t\t\t\t\t3276\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05315000\",\n\t\t\t\t\t\t\t\"GEN\": \"Köln\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2801,\n\t\t\t\t\t\t\t\t3277,\n\t\t\t\t\t\t\t\t-800,\n\t\t\t\t\t\t\t\t3278,\n\t\t\t\t\t\t\t\t3279,\n\t\t\t\t\t\t\t\t-2589,\n\t\t\t\t\t\t\t\t3280,\n\t\t\t\t\t\t\t\t3281,\n\t\t\t\t\t\t\t\t3282\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05117000\",\n\t\t\t\t\t\t\t\"GEN\": \"Mülheim an der Ruhr\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2861,\n\t\t\t\t\t\t\t\t3283,\n\t\t\t\t\t\t\t\t-2859,\n\t\t\t\t\t\t\t\t3284,\n\t\t\t\t\t\t\t\t3285,\n\t\t\t\t\t\t\t\t3286,\n\t\t\t\t\t\t\t\t3287,\n\t\t\t\t\t\t\t\t3288,\n\t\t\t\t\t\t\t\t3289,\n\t\t\t\t\t\t\t\t-235,\n\t\t\t\t\t\t\t\t3290,\n\t\t\t\t\t\t\t\t-256,\n\t\t\t\t\t\t\t\t-1131,\n\t\t\t\t\t\t\t\t3291,\n\t\t\t\t\t\t\t\t-501,\n\t\t\t\t\t\t\t\t3292,\n\t\t\t\t\t\t\t\t-524,\n\t\t\t\t\t\t\t\t3293,\n\t\t\t\t\t\t\t\t3294,\n\t\t\t\t\t\t\t\t3295,\n\t\t\t\t\t\t\t\t3296,\n\t\t\t\t\t\t\t\t3297,\n\t\t\t\t\t\t\t\t3298\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566012\",\n\t\t\t\t\t\t\t\"GEN\": \"Greven\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3116,\n\t\t\t\t\t\t\t\t3299,\n\t\t\t\t\t\t\t\t-3114,\n\t\t\t\t\t\t\t\t3300,\n\t\t\t\t\t\t\t\t3301,\n\t\t\t\t\t\t\t\t3302,\n\t\t\t\t\t\t\t\t-474,\n\t\t\t\t\t\t\t\t3303,\n\t\t\t\t\t\t\t\t3304,\n\t\t\t\t\t\t\t\t3305,\n\t\t\t\t\t\t\t\t-1878,\n\t\t\t\t\t\t\t\t3306,\n\t\t\t\t\t\t\t\t-1876,\n\t\t\t\t\t\t\t\t3307,\n\t\t\t\t\t\t\t\t3308,\n\t\t\t\t\t\t\t\t3309,\n\t\t\t\t\t\t\t\t3310,\n\t\t\t\t\t\t\t\t3311,\n\t\t\t\t\t\t\t\t3312,\n\t\t\t\t\t\t\t\t3313,\n\t\t\t\t\t\t\t\t3314,\n\t\t\t\t\t\t\t\t3315,\n\t\t\t\t\t\t\t\t-2819,\n\t\t\t\t\t\t\t\t3316,\n\t\t\t\t\t\t\t\t3317,\n\t\t\t\t\t\t\t\t3318,\n\t\t\t\t\t\t\t\t-3118,\n\t\t\t\t\t\t\t\t3319\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05915000\",\n\t\t\t\t\t\t\t\"GEN\": \"Hamm\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-260,\n\t\t\t\t\t\t\t\t3320,\n\t\t\t\t\t\t\t\t3321,\n\t\t\t\t\t\t\t\t-878,\n\t\t\t\t\t\t\t\t3322,\n\t\t\t\t\t\t\t\t-2729,\n\t\t\t\t\t\t\t\t3323,\n\t\t\t\t\t\t\t\t-2736,\n\t\t\t\t\t\t\t\t3324,\n\t\t\t\t\t\t\t\t-1598,\n\t\t\t\t\t\t\t\t3325,\n\t\t\t\t\t\t\t\t3326\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554004\",\n\t\t\t\t\t\t\t\"GEN\": \"Ahaus\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3327,\n\t\t\t\t\t\t\t\t-18,\n\t\t\t\t\t\t\t\t3328,\n\t\t\t\t\t\t\t\t-16,\n\t\t\t\t\t\t\t\t3329,\n\t\t\t\t\t\t\t\t3330,\n\t\t\t\t\t\t\t\t3331,\n\t\t\t\t\t\t\t\t-766,\n\t\t\t\t\t\t\t\t3332,\n\t\t\t\t\t\t\t\t3333\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162028\",\n\t\t\t\t\t\t\t\"GEN\": \"Rommerskirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3334,\n\t\t\t\t\t\t\t\t-1305,\n\t\t\t\t\t\t\t\t3335,\n\t\t\t\t\t\t\t\t-245,\n\t\t\t\t\t\t\t\t3336,\n\t\t\t\t\t\t\t\t-137,\n\t\t\t\t\t\t\t\t3337,\n\t\t\t\t\t\t\t\t-148,\n\t\t\t\t\t\t\t\t3338,\n\t\t\t\t\t\t\t\t-2757,\n\t\t\t\t\t\t\t\t3339,\n\t\t\t\t\t\t\t\t3340,\n\t\t\t\t\t\t\t\t3341,\n\t\t\t\t\t\t\t\t3342,\n\t\t\t\t\t\t\t\t3343,\n\t\t\t\t\t\t\t\t-3071\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358044\",\n\t\t\t\t\t\t\t\"GEN\": \"Nideggen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3344,\n\t\t\t\t\t\t\t\t-1702,\n\t\t\t\t\t\t\t\t3345,\n\t\t\t\t\t\t\t\t-187,\n\t\t\t\t\t\t\t\t3346,\n\t\t\t\t\t\t\t\t-185,\n\t\t\t\t\t\t\t\t-97,\n\t\t\t\t\t\t\t\t3347,\n\t\t\t\t\t\t\t\t3348,\n\t\t\t\t\t\t\t\t-2465,\n\t\t\t\t\t\t\t\t3349,\n\t\t\t\t\t\t\t\t3350,\n\t\t\t\t\t\t\t\t-1626,\n\t\t\t\t\t\t\t\t3351,\n\t\t\t\t\t\t\t\t-1624,\n\t\t\t\t\t\t\t\t3352\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562004\",\n\t\t\t\t\t\t\t\"GEN\": \"Castrop-Rauxel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3353,\n\t\t\t\t\t\t\t\t3354,\n\t\t\t\t\t\t\t\t-2914,\n\t\t\t\t\t\t\t\t3355,\n\t\t\t\t\t\t\t\t3356,\n\t\t\t\t\t\t\t\t3357,\n\t\t\t\t\t\t\t\t-443,\n\t\t\t\t\t\t\t\t3358,\n\t\t\t\t\t\t\t\t-441,\n\t\t\t\t\t\t\t\t3359,\n\t\t\t\t\t\t\t\t-439,\n\t\t\t\t\t\t\t\t3360,\n\t\t\t\t\t\t\t\t-456,\n\t\t\t\t\t\t\t\t3361,\n\t\t\t\t\t\t\t\t-3010,\n\t\t\t\t\t\t\t\t3362,\n\t\t\t\t\t\t\t\t-2761,\n\t\t\t\t\t\t\t\t3363,\n\t\t\t\t\t\t\t\t-142\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366036\",\n\t\t\t\t\t\t\t\"GEN\": \"Schleiden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1549,\n\t\t\t\t\t\t\t\t3364,\n\t\t\t\t\t\t\t\t-1933,\n\t\t\t\t\t\t\t\t3365,\n\t\t\t\t\t\t\t\t3366,\n\t\t\t\t\t\t\t\t3367,\n\t\t\t\t\t\t\t\t3368,\n\t\t\t\t\t\t\t\t-1928,\n\t\t\t\t\t\t\t\t3369,\n\t\t\t\t\t\t\t\t3370,\n\t\t\t\t\t\t\t\t-718,\n\t\t\t\t\t\t\t\t3371,\n\t\t\t\t\t\t\t\t3372,\n\t\t\t\t\t\t\t\t-1357,\n\t\t\t\t\t\t\t\t3373,\n\t\t\t\t\t\t\t\t3374,\n\t\t\t\t\t\t\t\t-1993,\n\t\t\t\t\t\t\t\t3375,\n\t\t\t\t\t\t\t\t3376,\n\t\t\t\t\t\t\t\t-331,\n\t\t\t\t\t\t\t\t3377,\n\t\t\t\t\t\t\t\t-1551,\n\t\t\t\t\t\t\t\t3378\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374036\",\n\t\t\t\t\t\t\t\"GEN\": \"Radevormwald\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3379,\n\t\t\t\t\t\t\t\t-3315,\n\t\t\t\t\t\t\t\t3380,\n\t\t\t\t\t\t\t\t-3313,\n\t\t\t\t\t\t\t\t3381,\n\t\t\t\t\t\t\t\t3382,\n\t\t\t\t\t\t\t\t-2838,\n\t\t\t\t\t\t\t\t3383,\n\t\t\t\t\t\t\t\t-2836,\n\t\t\t\t\t\t\t\t3384,\n\t\t\t\t\t\t\t\t-2834,\n\t\t\t\t\t\t\t\t3385,\n\t\t\t\t\t\t\t\t3386,\n\t\t\t\t\t\t\t\t3387,\n\t\t\t\t\t\t\t\t3388,\n\t\t\t\t\t\t\t\t-2964,\n\t\t\t\t\t\t\t\t3389,\n\t\t\t\t\t\t\t\t-2823,\n\t\t\t\t\t\t\t\t3390,\n\t\t\t\t\t\t\t\t-2821\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978040\",\n\t\t\t\t\t\t\t\"GEN\": \"Werne\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2094,\n\t\t\t\t\t\t\t\t3391,\n\t\t\t\t\t\t\t\t3392,\n\t\t\t\t\t\t\t\t3393,\n\t\t\t\t\t\t\t\t-552,\n\t\t\t\t\t\t\t\t3394,\n\t\t\t\t\t\t\t\t3395,\n\t\t\t\t\t\t\t\t3396,\n\t\t\t\t\t\t\t\t3397,\n\t\t\t\t\t\t\t\t3398,\n\t\t\t\t\t\t\t\t-2936,\n\t\t\t\t\t\t\t\t-2096,\n\t\t\t\t\t\t\t\t3399\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974032\",\n\t\t\t\t\t\t\t\"GEN\": \"Möhnesee\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2389,\n\t\t\t\t\t\t\t\t3400,\n\t\t\t\t\t\t\t\t3401,\n\t\t\t\t\t\t\t\t3402,\n\t\t\t\t\t\t\t\t-2847,\n\t\t\t\t\t\t\t\t3403,\n\t\t\t\t\t\t\t\t3404,\n\t\t\t\t\t\t\t\t-2178,\n\t\t\t\t\t\t\t\t3405,\n\t\t\t\t\t\t\t\t-2118,\n\t\t\t\t\t\t\t\t3406,\n\t\t\t\t\t\t\t\t-2127,\n\t\t\t\t\t\t\t\t3407,\n\t\t\t\t\t\t\t\t-1458,\n\t\t\t\t\t\t\t\t3408,\n\t\t\t\t\t\t\t\t-2684,\n\t\t\t\t\t\t\t\t3409,\n\t\t\t\t\t\t\t\t-3138,\n\t\t\t\t\t\t\t\t3410,\n\t\t\t\t\t\t\t\t-3136,\n\t\t\t\t\t\t\t\t3411,\n\t\t\t\t\t\t\t\t3412,\n\t\t\t\t\t\t\t\t3413\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05711000\",\n\t\t\t\t\t\t\t\"GEN\": \"Bielefeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-431,\n\t\t\t\t\t\t\t\t3414,\n\t\t\t\t\t\t\t\t-2678,\n\t\t\t\t\t\t\t\t3415,\n\t\t\t\t\t\t\t\t-2058,\n\t\t\t\t\t\t\t\t3416,\n\t\t\t\t\t\t\t\t-2056,\n\t\t\t\t\t\t\t\t3417,\n\t\t\t\t\t\t\t\t-2054,\n\t\t\t\t\t\t\t\t3418,\n\t\t\t\t\t\t\t\t-301,\n\t\t\t\t\t\t\t\t3419,\n\t\t\t\t\t\t\t\t-57,\n\t\t\t\t\t\t\t\t3420\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774040\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Wünnenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3421,\n\t\t\t\t\t\t\t\t-111,\n\t\t\t\t\t\t\t\t3422,\n\t\t\t\t\t\t\t\t-449,\n\t\t\t\t\t\t\t\t3423,\n\t\t\t\t\t\t\t\t-447,\n\t\t\t\t\t\t\t\t3424,\n\t\t\t\t\t\t\t\t-445,\n\t\t\t\t\t\t\t\t3425,\n\t\t\t\t\t\t\t\t-3357,\n\t\t\t\t\t\t\t\t3426,\n\t\t\t\t\t\t\t\t3427,\n\t\t\t\t\t\t\t\t-2911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366024\",\n\t\t\t\t\t\t\t\"GEN\": \"Kall\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3428,\n\t\t\t\t\t\t\t\t3429,\n\t\t\t\t\t\t\t\t3430,\n\t\t\t\t\t\t\t\t3431,\n\t\t\t\t\t\t\t\t3432,\n\t\t\t\t\t\t\t\t-3242,\n\t\t\t\t\t\t\t\t3433,\n\t\t\t\t\t\t\t\t-3323,\n\t\t\t\t\t\t\t\t-877,\n\t\t\t\t\t\t\t\t3434\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554036\",\n\t\t\t\t\t\t\t\"GEN\": \"Legden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3435,\n\t\t\t\t\t\t\t\t3436,\n\t\t\t\t\t\t\t\t-1995,\n\t\t\t\t\t\t\t\t3437,\n\t\t\t\t\t\t\t\t-2006,\n\t\t\t\t\t\t\t\t3438,\n\t\t\t\t\t\t\t\t-219,\n\t\t\t\t\t\t\t\t3439,\n\t\t\t\t\t\t\t\t3440,\n\t\t\t\t\t\t\t\t-2394,\n\t\t\t\t\t\t\t\t3441,\n\t\t\t\t\t\t\t\t3442,\n\t\t\t\t\t\t\t\t3443,\n\t\t\t\t\t\t\t\t-3062,\n\t\t\t\t\t\t\t\t3444\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hüllhorst\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3445,\n\t\t\t\t\t\t\t\t3446,\n\t\t\t\t\t\t\t\t3447,\n\t\t\t\t\t\t\t\t3448,\n\t\t\t\t\t\t\t\t3449,\n\t\t\t\t\t\t\t\t-3226,\n\t\t\t\t\t\t\t\t3450,\n\t\t\t\t\t\t\t\t-3236,\n\t\t\t\t\t\t\t\t3451,\n\t\t\t\t\t\t\t\t-3234,\n\t\t\t\t\t\t\t\t3452,\n\t\t\t\t\t\t\t\t3453,\n\t\t\t\t\t\t\t\t3454,\n\t\t\t\t\t\t\t\t3455,\n\t\t\t\t\t\t\t\t3456,\n\t\t\t\t\t\t\t\t3457,\n\t\t\t\t\t\t\t\t3458\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974016\",\n\t\t\t\t\t\t\t\"GEN\": \"Erwitte\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3459,\n\t\t\t\t\t\t\t\t3460,\n\t\t\t\t\t\t\t\t-1530,\n\t\t\t\t\t\t\t\t3461,\n\t\t\t\t\t\t\t\t-1538,\n\t\t\t\t\t\t\t\t3462,\n\t\t\t\t\t\t\t\t-2120,\n\t\t\t\t\t\t\t\t3463\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754036\",\n\t\t\t\t\t\t\t\"GEN\": \"Schloß Holte-Stukenbrock\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1071,\n\t\t\t\t\t\t\t\t3464,\n\t\t\t\t\t\t\t\t-1170,\n\t\t\t\t\t\t\t\t3465,\n\t\t\t\t\t\t\t\t-1265,\n\t\t\t\t\t\t\t\t3466,\n\t\t\t\t\t\t\t\t3467,\n\t\t\t\t\t\t\t\t-1916,\n\t\t\t\t\t\t\t\t3468,\n\t\t\t\t\t\t\t\t-1198,\n\t\t\t\t\t\t\t\t3469,\n\t\t\t\t\t\t\t\t3470\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374048\",\n\t\t\t\t\t\t\t\"GEN\": \"Wiehl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1151,\n\t\t\t\t\t\t\t\t3471,\n\t\t\t\t\t\t\t\t3472,\n\t\t\t\t\t\t\t\t3473,\n\t\t\t\t\t\t\t\t-2416,\n\t\t\t\t\t\t\t\t3474,\n\t\t\t\t\t\t\t\t3475,\n\t\t\t\t\t\t\t\t-2317,\n\t\t\t\t\t\t\t\t3476,\n\t\t\t\t\t\t\t\t-1671,\n\t\t\t\t\t\t\t\t3477,\n\t\t\t\t\t\t\t\t-1659,\n\t\t\t\t\t\t\t\t3478,\n\t\t\t\t\t\t\t\t3479\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05314000\",\n\t\t\t\t\t\t\t\"GEN\": \"Bonn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2456,\n\t\t\t\t\t\t\t\t3480,\n\t\t\t\t\t\t\t\t3481,\n\t\t\t\t\t\t\t\t3482,\n\t\t\t\t\t\t\t\t-2064,\n\t\t\t\t\t\t\t\t3483,\n\t\t\t\t\t\t\t\t-1318,\n\t\t\t\t\t\t\t\t3484,\n\t\t\t\t\t\t\t\t-1316,\n\t\t\t\t\t\t\t\t3485,\n\t\t\t\t\t\t\t\t-1314,\n\t\t\t\t\t\t\t\t3486,\n\t\t\t\t\t\t\t\t-1312,\n\t\t\t\t\t\t\t\t3487\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154032\",\n\t\t\t\t\t\t\t\"GEN\": \"Kevelaer\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3488,\n\t\t\t\t\t\t\t\t-585,\n\t\t\t\t\t\t\t\t3489,\n\t\t\t\t\t\t\t\t3490,\n\t\t\t\t\t\t\t\t-921,\n\t\t\t\t\t\t\t\t3491,\n\t\t\t\t\t\t\t\t3492,\n\t\t\t\t\t\t\t\t-939,\n\t\t\t\t\t\t\t\t3493,\n\t\t\t\t\t\t\t\t3494,\n\t\t\t\t\t\t\t\t-2301,\n\t\t\t\t\t\t\t\t3495,\n\t\t\t\t\t\t\t\t-2299,\n\t\t\t\t\t\t\t\t3496,\n\t\t\t\t\t\t\t\t3497,\n\t\t\t\t\t\t\t\t-2192,\n\t\t\t\t\t\t\t\t3498\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370040\",\n\t\t\t\t\t\t\t\"GEN\": \"Wegberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3499,\n\t\t\t\t\t\t\t\t-402,\n\t\t\t\t\t\t\t\t3500,\n\t\t\t\t\t\t\t\t-1686,\n\t\t\t\t\t\t\t\t-1739,\n\t\t\t\t\t\t\t\t3501,\n\t\t\t\t\t\t\t\t-3482,\n\t\t\t\t\t\t\t\t3502,\n\t\t\t\t\t\t\t\t-2454,\n\t\t\t\t\t\t\t\t3503,\n\t\t\t\t\t\t\t\t3504\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170040\",\n\t\t\t\t\t\t\t\"GEN\": \"Sonsbeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3505,\n\t\t\t\t\t\t\t\t-3276,\n\t\t\t\t\t\t\t\t3506,\n\t\t\t\t\t\t\t\t-3274,\n\t\t\t\t\t\t\t\t3507,\n\t\t\t\t\t\t\t\t-3328,\n\t\t\t\t\t\t\t\t3508,\n\t\t\t\t\t\t\t\t-763,\n\t\t\t\t\t\t\t\t3509,\n\t\t\t\t\t\t\t\t-1384,\n\t\t\t\t\t\t\t\t3510\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162004\",\n\t\t\t\t\t\t\t\"GEN\": \"Dormagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3511,\n\t\t\t\t\t\t\t\t3512,\n\t\t\t\t\t\t\t\t3513,\n\t\t\t\t\t\t\t\t3514,\n\t\t\t\t\t\t\t\t-2949,\n\t\t\t\t\t\t\t\t3515,\n\t\t\t\t\t\t\t\t-2814,\n\t\t\t\t\t\t\t\t3516,\n\t\t\t\t\t\t\t\t-572,\n\t\t\t\t\t\t\t\t3517,\n\t\t\t\t\t\t\t\t3518,\n\t\t\t\t\t\t\t\t3519\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166036\",\n\t\t\t\t\t\t\t\"GEN\": \"Willich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3520,\n\t\t\t\t\t\t\t\t3521,\n\t\t\t\t\t\t\t\t-3456,\n\t\t\t\t\t\t\t\t3522,\n\t\t\t\t\t\t\t\t-3454,\n\t\t\t\t\t\t\t\t3523,\n\t\t\t\t\t\t\t\t-3232,\n\t\t\t\t\t\t\t\t3524,\n\t\t\t\t\t\t\t\t-3393,\n\t\t\t\t\t\t\t\t3525,\n\t\t\t\t\t\t\t\t-2092,\n\t\t\t\t\t\t\t\t3526,\n\t\t\t\t\t\t\t\t-2090,\n\t\t\t\t\t\t\t\t3527,\n\t\t\t\t\t\t\t\t3528,\n\t\t\t\t\t\t\t\t3529,\n\t\t\t\t\t\t\t\t3530\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Sassendorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3531,\n\t\t\t\t\t\t\t\t3532,\n\t\t\t\t\t\t\t\t-2578,\n\t\t\t\t\t\t\t\t3533,\n\t\t\t\t\t\t\t\t-353,\n\t\t\t\t\t\t\t\t3534,\n\t\t\t\t\t\t\t\t-3129,\n\t\t\t\t\t\t\t\t3535,\n\t\t\t\t\t\t\t\t-3127,\n\t\t\t\t\t\t\t\t3536,\n\t\t\t\t\t\t\t\t-812,\n\t\t\t\t\t\t\t\t3537,\n\t\t\t\t\t\t\t\t-2797,\n\t\t\t\t\t\t\t\t3538,\n\t\t\t\t\t\t\t\t-2795,\n\t\t\t\t\t\t\t\t3539,\n\t\t\t\t\t\t\t\t-2581\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158032\",\n\t\t\t\t\t\t\t\"GEN\": \"Velbert\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3540,\n\t\t\t\t\t\t\t\t3541,\n\t\t\t\t\t\t\t\t-2596,\n\t\t\t\t\t\t\t\t3542,\n\t\t\t\t\t\t\t\t-2594,\n\t\t\t\t\t\t\t\t3543,\n\t\t\t\t\t\t\t\t3544,\n\t\t\t\t\t\t\t\t3545,\n\t\t\t\t\t\t\t\t3546,\n\t\t\t\t\t\t\t\t3547,\n\t\t\t\t\t\t\t\t-3512,\n\t\t\t\t\t\t\t\t3548,\n\t\t\t\t\t\t\t\t-2247,\n\t\t\t\t\t\t\t\t3549,\n\t\t\t\t\t\t\t\t-2954,\n\t\t\t\t\t\t\t\t3550,\n\t\t\t\t\t\t\t\t-2921\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05114000\",\n\t\t\t\t\t\t\t\"GEN\": \"Krefeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3551,\n\t\t\t\t\t\t\t\t-2945,\n\t\t\t\t\t\t\t\t3552,\n\t\t\t\t\t\t\t\t-2951,\n\t\t\t\t\t\t\t\t3553,\n\t\t\t\t\t\t\t\t-3514,\n\t\t\t\t\t\t\t\t3554,\n\t\t\t\t\t\t\t\t-3547,\n\t\t\t\t\t\t\t\t3555,\n\t\t\t\t\t\t\t\t3556,\n\t\t\t\t\t\t\t\t3557\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162022\",\n\t\t\t\t\t\t\t\"GEN\": \"Meerbusch\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1343,\n\t\t\t\t\t\t\t\t3558,\n\t\t\t\t\t\t\t\t-1341,\n\t\t\t\t\t\t\t\t3559,\n\t\t\t\t\t\t\t\t3560,\n\t\t\t\t\t\t\t\t3561,\n\t\t\t\t\t\t\t\t3562,\n\t\t\t\t\t\t\t\t3563,\n\t\t\t\t\t\t\t\t-3264,\n\t\t\t\t\t\t\t\t3564,\n\t\t\t\t\t\t\t\t-533,\n\t\t\t\t\t\t\t\t3565\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378028\",\n\t\t\t\t\t\t\t\"GEN\": \"Rösrath\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-516,\n\t\t\t\t\t\t\t\t3566,\n\t\t\t\t\t\t\t\t-2827,\n\t\t\t\t\t\t\t\t3567,\n\t\t\t\t\t\t\t\t-1135,\n\t\t\t\t\t\t\t\t3568,\n\t\t\t\t\t\t\t\t-1133,\n\t\t\t\t\t\t\t\t3569,\n\t\t\t\t\t\t\t\t3570,\n\t\t\t\t\t\t\t\t3571,\n\t\t\t\t\t\t\t\t3572,\n\t\t\t\t\t\t\t\t3573,\n\t\t\t\t\t\t\t\t-2877,\n\t\t\t\t\t\t\t\t3574\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558044\",\n\t\t\t\t\t\t\t\"GEN\": \"Senden\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-665,\n\t\t\t\t\t\t\t\t3575,\n\t\t\t\t\t\t\t\t3576,\n\t\t\t\t\t\t\t\t3577,\n\t\t\t\t\t\t\t\t3578,\n\t\t\t\t\t\t\t\t-783,\n\t\t\t\t\t\t\t\t3579,\n\t\t\t\t\t\t\t\t-2260,\n\t\t\t\t\t\t\t\t3580\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334002\",\n\t\t\t\t\t\t\t\"GEN\": \"Aachen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3581,\n\t\t\t\t\t\t\t\t3582,\n\t\t\t\t\t\t\t\t-1802,\n\t\t\t\t\t\t\t\t3583,\n\t\t\t\t\t\t\t\t-1495,\n\t\t\t\t\t\t\t\t3584,\n\t\t\t\t\t\t\t\t3585,\n\t\t\t\t\t\t\t\t3586,\n\t\t\t\t\t\t\t\t3587,\n\t\t\t\t\t\t\t\t3588\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762032\",\n\t\t\t\t\t\t\t\"GEN\": \"Steinheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1848,\n\t\t\t\t\t\t\t\t3589,\n\t\t\t\t\t\t\t\t3590,\n\t\t\t\t\t\t\t\t3591,\n\t\t\t\t\t\t\t\t-3586,\n\t\t\t\t\t\t\t\t3592,\n\t\t\t\t\t\t\t\t3593,\n\t\t\t\t\t\t\t\t3594,\n\t\t\t\t\t\t\t\t3595,\n\t\t\t\t\t\t\t\t3596,\n\t\t\t\t\t\t\t\t3597,\n\t\t\t\t\t\t\t\t-2210,\n\t\t\t\t\t\t\t\t3598,\n\t\t\t\t\t\t\t\t3599,\n\t\t\t\t\t\t\t\t-1964,\n\t\t\t\t\t\t\t\t3600,\n\t\t\t\t\t\t\t\t-1962,\n\t\t\t\t\t\t\t\t3601,\n\t\t\t\t\t\t\t\t-1850,\n\t\t\t\t\t\t\t\t3602\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766032\",\n\t\t\t\t\t\t\t\"GEN\": \"Horn-Bad Meinberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-929,\n\t\t\t\t\t\t\t\t3603,\n\t\t\t\t\t\t\t\t-2162,\n\t\t\t\t\t\t\t\t3604,\n\t\t\t\t\t\t\t\t-1423,\n\t\t\t\t\t\t\t\t3605,\n\t\t\t\t\t\t\t\t-1421,\n\t\t\t\t\t\t\t\t3606,\n\t\t\t\t\t\t\t\t3607,\n\t\t\t\t\t\t\t\t-2141,\n\t\t\t\t\t\t\t\t3608,\n\t\t\t\t\t\t\t\t3609,\n\t\t\t\t\t\t\t\t3610,\n\t\t\t\t\t\t\t\t3611,\n\t\t\t\t\t\t\t\t-1592,\n\t\t\t\t\t\t\t\t3612\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358036\",\n\t\t\t\t\t\t\t\"GEN\": \"Linnich\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3613,\n\t\t\t\t\t\t\t\t3614,\n\t\t\t\t\t\t\t\t-1989,\n\t\t\t\t\t\t\t\t3615,\n\t\t\t\t\t\t\t\t3616,\n\t\t\t\t\t\t\t\t3617,\n\t\t\t\t\t\t\t\t3618,\n\t\t\t\t\t\t\t\t3619,\n\t\t\t\t\t\t\t\t3620,\n\t\t\t\t\t\t\t\t3621,\n\t\t\t\t\t\t\t\t3622,\n\t\t\t\t\t\t\t\t3623,\n\t\t\t\t\t\t\t\t-852,\n\t\t\t\t\t\t\t\t3624,\n\t\t\t\t\t\t\t\t3625,\n\t\t\t\t\t\t\t\t3626\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378032\",\n\t\t\t\t\t\t\t\"GEN\": \"Wermelskirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1234,\n\t\t\t\t\t\t\t\t3627,\n\t\t\t\t\t\t\t\t-917,\n\t\t\t\t\t\t\t\t3628,\n\t\t\t\t\t\t\t\t3629,\n\t\t\t\t\t\t\t\t-1249,\n\t\t\t\t\t\t\t\t3630,\n\t\t\t\t\t\t\t\t3631,\n\t\t\t\t\t\t\t\t3632,\n\t\t\t\t\t\t\t\t-1205,\n\t\t\t\t\t\t\t\t3633,\n\t\t\t\t\t\t\t\t-1081,\n\t\t\t\t\t\t\t\t3634,\n\t\t\t\t\t\t\t\t-40,\n\t\t\t\t\t\t\t\t3635,\n\t\t\t\t\t\t\t\t3636\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962036\",\n\t\t\t\t\t\t\t\"GEN\": \"Meinerzhagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3637,\n\t\t\t\t\t\t\t\t-2169,\n\t\t\t\t\t\t\t\t3638,\n\t\t\t\t\t\t\t\t-635,\n\t\t\t\t\t\t\t\t3639,\n\t\t\t\t\t\t\t\t3640,\n\t\t\t\t\t\t\t\t3641,\n\t\t\t\t\t\t\t\t3642\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166004\",\n\t\t\t\t\t\t\t\"GEN\": \"Brüggen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2002,\n\t\t\t\t\t\t\t\t3643,\n\t\t\t\t\t\t\t\t-1747,\n\t\t\t\t\t\t\t\t3644,\n\t\t\t\t\t\t\t\t3645,\n\t\t\t\t\t\t\t\t3646,\n\t\t\t\t\t\t\t\t-3402,\n\t\t\t\t\t\t\t\t3647,\n\t\t\t\t\t\t\t\t-2387,\n\t\t\t\t\t\t\t\t3648,\n\t\t\t\t\t\t\t\t-2621,\n\t\t\t\t\t\t\t\t3649\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758012\",\n\t\t\t\t\t\t\t\"GEN\": \"Herford\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-177,\n\t\t\t\t\t\t\t\t3650\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154008\",\n\t\t\t\t\t\t\t\"GEN\": \"Emmerich am Rhein\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-389,\n\t\t\t\t\t\t\t\t3651,\n\t\t\t\t\t\t\t\t-387,\n\t\t\t\t\t\t\t\t3652,\n\t\t\t\t\t\t\t\t3653,\n\t\t\t\t\t\t\t\t3654,\n\t\t\t\t\t\t\t\t3655,\n\t\t\t\t\t\t\t\t-2404,\n\t\t\t\t\t\t\t\t3656,\n\t\t\t\t\t\t\t\t-391,\n\t\t\t\t\t\t\t\t3657\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566056\",\n\t\t\t\t\t\t\t\"GEN\": \"Mettingen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3658,\n\t\t\t\t\t\t\t\t3659,\n\t\t\t\t\t\t\t\t3660,\n\t\t\t\t\t\t\t\t3661,\n\t\t\t\t\t\t\t\t-2644,\n\t\t\t\t\t\t\t\t3662,\n\t\t\t\t\t\t\t\t3663,\n\t\t\t\t\t\t\t\t-1816,\n\t\t\t\t\t\t\t\t3664,\n\t\t\t\t\t\t\t\t-3107,\n\t\t\t\t\t\t\t\t3665,\n\t\t\t\t\t\t\t\t3666,\n\t\t\t\t\t\t\t\t-3125,\n\t\t\t\t\t\t\t\t3667,\n\t\t\t\t\t\t\t\t3668,\n\t\t\t\t\t\t\t\t3669,\n\t\t\t\t\t\t\t\t3670,\n\t\t\t\t\t\t\t\t3671,\n\t\t\t\t\t\t\t\t3672,\n\t\t\t\t\t\t\t\t3673\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570020\",\n\t\t\t\t\t\t\t\"GEN\": \"Ennigerloh\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-688,\n\t\t\t\t\t\t\t\t3674,\n\t\t\t\t\t\t\t\t-2028,\n\t\t\t\t\t\t\t\t3675,\n\t\t\t\t\t\t\t\t-3185,\n\t\t\t\t\t\t\t\t3676,\n\t\t\t\t\t\t\t\t-775,\n\t\t\t\t\t\t\t\t3677,\n\t\t\t\t\t\t\t\t3678,\n\t\t\t\t\t\t\t\t3679,\n\t\t\t\t\t\t\t\t3680,\n\t\t\t\t\t\t\t\t3681,\n\t\t\t\t\t\t\t\t3682,\n\t\t\t\t\t\t\t\t-690,\n\t\t\t\t\t\t\t\t3683\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334012\",\n\t\t\t\t\t\t\t\"GEN\": \"Eschweiler\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2323,\n\t\t\t\t\t\t\t\t3684,\n\t\t\t\t\t\t\t\t-2321,\n\t\t\t\t\t\t\t\t3685,\n\t\t\t\t\t\t\t\t3686,\n\t\t\t\t\t\t\t\t3687,\n\t\t\t\t\t\t\t\t3688,\n\t\t\t\t\t\t\t\t3689,\n\t\t\t\t\t\t\t\t3690,\n\t\t\t\t\t\t\t\t3691,\n\t\t\t\t\t\t\t\t-214,\n\t\t\t\t\t\t\t\t3692,\n\t\t\t\t\t\t\t\t-1673\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382048\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheinbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1535,\n\t\t\t\t\t\t\t\t3693,\n\t\t\t\t\t\t\t\t-134,\n\t\t\t\t\t\t\t\t3694,\n\t\t\t\t\t\t\t\t3695,\n\t\t\t\t\t\t\t\t3696,\n\t\t\t\t\t\t\t\t3697,\n\t\t\t\t\t\t\t\t3698,\n\t\t\t\t\t\t\t\t3699,\n\t\t\t\t\t\t\t\t3700,\n\t\t\t\t\t\t\t\t3701,\n\t\t\t\t\t\t\t\t-2441,\n\t\t\t\t\t\t\t\t3702,\n\t\t\t\t\t\t\t\t3703\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774020\",\n\t\t\t\t\t\t\t\"GEN\": \"Delbrück\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2212,\n\t\t\t\t\t\t\t\t3704,\n\t\t\t\t\t\t\t\t3705,\n\t\t\t\t\t\t\t\t3706,\n\t\t\t\t\t\t\t\t3707,\n\t\t\t\t\t\t\t\t-117,\n\t\t\t\t\t\t\t\t3708,\n\t\t\t\t\t\t\t\t-1532,\n\t\t\t\t\t\t\t\t3709,\n\t\t\t\t\t\t\t\t3710\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Lippspringe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3711,\n\t\t\t\t\t\t\t\t3712,\n\t\t\t\t\t\t\t\t3713,\n\t\t\t\t\t\t\t\t3714,\n\t\t\t\t\t\t\t\t3715,\n\t\t\t\t\t\t\t\t-1165,\n\t\t\t\t\t\t\t\t3716,\n\t\t\t\t\t\t\t\t3717,\n\t\t\t\t\t\t\t\t-2933,\n\t\t\t\t\t\t\t\t3718,\n\t\t\t\t\t\t\t\t-983,\n\t\t\t\t\t\t\t\t3719,\n\t\t\t\t\t\t\t\t-981,\n\t\t\t\t\t\t\t\t3720,\n\t\t\t\t\t\t\t\t-2201,\n\t\t\t\t\t\t\t\t3721\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554064\",\n\t\t\t\t\t\t\t\"GEN\": \"Velen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3331,\n\t\t\t\t\t\t\t\t3722,\n\t\t\t\t\t\t\t\t-14,\n\t\t\t\t\t\t\t\t-1518,\n\t\t\t\t\t\t\t\t3723,\n\t\t\t\t\t\t\t\t-3170,\n\t\t\t\t\t\t\t\t3724,\n\t\t\t\t\t\t\t\t-3172,\n\t\t\t\t\t\t\t\t3725,\n\t\t\t\t\t\t\t\t-1395,\n\t\t\t\t\t\t\t\t3726,\n\t\t\t\t\t\t\t\t-1393,\n\t\t\t\t\t\t\t\t3727\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bergheim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1594,\n\t\t\t\t\t\t\t\t3728,\n\t\t\t\t\t\t\t\t-3611,\n\t\t\t\t\t\t\t\t3729,\n\t\t\t\t\t\t\t\t-2148,\n\t\t\t\t\t\t\t\t3730,\n\t\t\t\t\t\t\t\t-942,\n\t\t\t\t\t\t\t\t3731,\n\t\t\t\t\t\t\t\t-947,\n\t\t\t\t\t\t\t\t-1974,\n\t\t\t\t\t\t\t\t3732,\n\t\t\t\t\t\t\t\t-675,\n\t\t\t\t\t\t\t\t3733,\n\t\t\t\t\t\t\t\t-673,\n\t\t\t\t\t\t\t\t3734\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370012\",\n\t\t\t\t\t\t\t\"GEN\": \"Geilenkirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2133,\n\t\t\t\t\t\t\t\t3735,\n\t\t\t\t\t\t\t\t3736,\n\t\t\t\t\t\t\t\t-60,\n\t\t\t\t\t\t\t\t3737,\n\t\t\t\t\t\t\t\t3738,\n\t\t\t\t\t\t\t\t-2663,\n\t\t\t\t\t\t\t\t-3058,\n\t\t\t\t\t\t\t\t3739,\n\t\t\t\t\t\t\t\t-548,\n\t\t\t\t\t\t\t\t3740,\n\t\t\t\t\t\t\t\t-3228,\n\t\t\t\t\t\t\t\t3741,\n\t\t\t\t\t\t\t\t-3449,\n\t\t\t\t\t\t\t\t3742\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974036\",\n\t\t\t\t\t\t\t\"GEN\": \"Rüthen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3743,\n\t\t\t\t\t\t\t\t-1810,\n\t\t\t\t\t\t\t\t3744,\n\t\t\t\t\t\t\t\t-1808,\n\t\t\t\t\t\t\t\t3745,\n\t\t\t\t\t\t\t\t3746,\n\t\t\t\t\t\t\t\t-1640,\n\t\t\t\t\t\t\t\t3747,\n\t\t\t\t\t\t\t\t3748,\n\t\t\t\t\t\t\t\t3749,\n\t\t\t\t\t\t\t\t3750,\n\t\t\t\t\t\t\t\t3751,\n\t\t\t\t\t\t\t\t-3529,\n\t\t\t\t\t\t\t\t3752,\n\t\t\t\t\t\t\t\t-2088,\n\t\t\t\t\t\t\t\t3753,\n\t\t\t\t\t\t\t\t-467,\n\t\t\t\t\t\t\t\t3754,\n\t\t\t\t\t\t\t\t-465,\n\t\t\t\t\t\t\t\t3755,\n\t\t\t\t\t\t\t\t3756,\n\t\t\t\t\t\t\t\t3757\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974024\",\n\t\t\t\t\t\t\t\"GEN\": \"Lippetal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2881,\n\t\t\t\t\t\t\t\t3758,\n\t\t\t\t\t\t\t\t-2879,\n\t\t\t\t\t\t\t\t3759,\n\t\t\t\t\t\t\t\t-3573,\n\t\t\t\t\t\t\t\t3760,\n\t\t\t\t\t\t\t\t-801,\n\t\t\t\t\t\t\t\t3761,\n\t\t\t\t\t\t\t\t-810,\n\t\t\t\t\t\t\t\t-3188,\n\t\t\t\t\t\t\t\t3762,\n\t\t\t\t\t\t\t\t-2783,\n\t\t\t\t\t\t\t\t3763\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558032\",\n\t\t\t\t\t\t\t\"GEN\": \"Nottuln\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-335,\n\t\t\t\t\t\t\t\t3764,\n\t\t\t\t\t\t\t\t-333,\n\t\t\t\t\t\t\t\t3765,\n\t\t\t\t\t\t\t\t3766,\n\t\t\t\t\t\t\t\t-1991,\n\t\t\t\t\t\t\t\t3767,\n\t\t\t\t\t\t\t\t-3614,\n\t\t\t\t\t\t\t\t3768,\n\t\t\t\t\t\t\t\t-3626,\n\t\t\t\t\t\t\t\t3769,\n\t\t\t\t\t\t\t\t3770,\n\t\t\t\t\t\t\t\t-849,\n\t\t\t\t\t\t\t\t3771,\n\t\t\t\t\t\t\t\t-340,\n\t\t\t\t\t\t\t\t3772,\n\t\t\t\t\t\t\t\t-338,\n\t\t\t\t\t\t\t\t3773,\n\t\t\t\t\t\t\t\t3774\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05120000\",\n\t\t\t\t\t\t\t\"GEN\": \"Remscheid\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3775,\n\t\t\t\t\t\t\t\t-5,\n\t\t\t\t\t\t\t\t3776,\n\t\t\t\t\t\t\t\t-422,\n\t\t\t\t\t\t\t\t3777,\n\t\t\t\t\t\t\t\t-424,\n\t\t\t\t\t\t\t\t3778,\n\t\t\t\t\t\t\t\t-3473,\n\t\t\t\t\t\t\t\t3779,\n\t\t\t\t\t\t\t\t-1149,\n\t\t\t\t\t\t\t\t3780\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382024\",\n\t\t\t\t\t\t\t\"GEN\": \"Königswinter\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3781,\n\t\t\t\t\t\t\t\t3782,\n\t\t\t\t\t\t\t\t3783,\n\t\t\t\t\t\t\t\t-3289,\n\t\t\t\t\t\t\t\t3784,\n\t\t\t\t\t\t\t\t3785,\n\t\t\t\t\t\t\t\t-3286,\n\t\t\t\t\t\t\t\t3786,\n\t\t\t\t\t\t\t\t-2857,\n\t\t\t\t\t\t\t\t3787,\n\t\t\t\t\t\t\t\t3788\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566080\",\n\t\t\t\t\t\t\t\"GEN\": \"Saerbeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-628,\n\t\t\t\t\t\t\t\t3789,\n\t\t\t\t\t\t\t\t3790\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154040\",\n\t\t\t\t\t\t\t\"GEN\": \"Kranenburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-740,\n\t\t\t\t\t\t\t\t3791,\n\t\t\t\t\t\t\t\t-2241,\n\t\t\t\t\t\t\t\t-3064,\n\t\t\t\t\t\t\t\t3792,\n\t\t\t\t\t\t\t\t-3443,\n\t\t\t\t\t\t\t\t3793,\n\t\t\t\t\t\t\t\t-742,\n\t\t\t\t\t\t\t\t3794\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770036\",\n\t\t\t\t\t\t\t\"GEN\": \"Preußisch Oldendorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1712,\n\t\t\t\t\t\t\t\t3795,\n\t\t\t\t\t\t\t\t-1710,\n\t\t\t\t\t\t\t\t3796,\n\t\t\t\t\t\t\t\t-2284,\n\t\t\t\t\t\t\t\t3797,\n\t\t\t\t\t\t\t\t3798,\n\t\t\t\t\t\t\t\t3799,\n\t\t\t\t\t\t\t\t-3249,\n\t\t\t\t\t\t\t\t3800,\n\t\t\t\t\t\t\t\t-3247,\n\t\t\t\t\t\t\t\t3801,\n\t\t\t\t\t\t\t\t3802,\n\t\t\t\t\t\t\t\t3803\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170036\",\n\t\t\t\t\t\t\t\"GEN\": \"Schermbeck\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1566,\n\t\t\t\t\t\t\t\t3804,\n\t\t\t\t\t\t\t\t-2959,\n\t\t\t\t\t\t\t\t3805,\n\t\t\t\t\t\t\t\t3806,\n\t\t\t\t\t\t\t\t-2725,\n\t\t\t\t\t\t\t\t3807,\n\t\t\t\t\t\t\t\t-377,\n\t\t\t\t\t\t\t\t3808\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154060\",\n\t\t\t\t\t\t\t\"GEN\": \"Wachtendonk\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3102,\n\t\t\t\t\t\t\t\t3809,\n\t\t\t\t\t\t\t\t-2774,\n\t\t\t\t\t\t\t\t3810,\n\t\t\t\t\t\t\t\t-3244,\n\t\t\t\t\t\t\t\t3811,\n\t\t\t\t\t\t\t\t3812,\n\t\t\t\t\t\t\t\t-3431,\n\t\t\t\t\t\t\t\t3813,\n\t\t\t\t\t\t\t\t-3429,\n\t\t\t\t\t\t\t\t3814,\n\t\t\t\t\t\t\t\t3815,\n\t\t\t\t\t\t\t\t-874,\n\t\t\t\t\t\t\t\t3816\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554052\",\n\t\t\t\t\t\t\t\"GEN\": \"Schöppingen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2537,\n\t\t\t\t\t\t\t\t3817,\n\t\t\t\t\t\t\t\t3818,\n\t\t\t\t\t\t\t\t3819,\n\t\t\t\t\t\t\t\t-2458,\n\t\t\t\t\t\t\t\t3820,\n\t\t\t\t\t\t\t\t-1320,\n\t\t\t\t\t\t\t\t3821,\n\t\t\t\t\t\t\t\t3822,\n\t\t\t\t\t\t\t\t-626,\n\t\t\t\t\t\t\t\t3823,\n\t\t\t\t\t\t\t\t-2539,\n\t\t\t\t\t\t\t\t3824\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154016\",\n\t\t\t\t\t\t\t\"GEN\": \"Goch\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1339,\n\t\t\t\t\t\t\t\t3825,\n\t\t\t\t\t\t\t\t-1301,\n\t\t\t\t\t\t\t\t-1120,\n\t\t\t\t\t\t\t\t3826,\n\t\t\t\t\t\t\t\t3827,\n\t\t\t\t\t\t\t\t3828,\n\t\t\t\t\t\t\t\t-3562,\n\t\t\t\t\t\t\t\t3829,\n\t\t\t\t\t\t\t\t3830\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382028\",\n\t\t\t\t\t\t\t\"GEN\": \"Lohmar\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-458,\n\t\t\t\t\t\t\t\t3831,\n\t\t\t\t\t\t\t\t-1828,\n\t\t\t\t\t\t\t\t3832,\n\t\t\t\t\t\t\t\t3833,\n\t\t\t\t\t\t\t\t-2999,\n\t\t\t\t\t\t\t\t3834,\n\t\t\t\t\t\t\t\t-2997,\n\t\t\t\t\t\t\t\t3835\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958020\",\n\t\t\t\t\t\t\t\"GEN\": \"Hallenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3836,\n\t\t\t\t\t\t\t\t3837,\n\t\t\t\t\t\t\t\t3838,\n\t\t\t\t\t\t\t\t3839,\n\t\t\t\t\t\t\t\t-1117,\n\t\t\t\t\t\t\t\t3840,\n\t\t\t\t\t\t\t\t-1153,\n\t\t\t\t\t\t\t\t3841,\n\t\t\t\t\t\t\t\t-2492,\n\t\t\t\t\t\t\t\t3842\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382068\",\n\t\t\t\t\t\t\t\"GEN\": \"Troisdorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3695,\n\t\t\t\t\t\t\t\t3843,\n\t\t\t\t\t\t\t\t-132,\n\t\t\t\t\t\t\t\t3844,\n\t\t\t\t\t\t\t\t-130,\n\t\t\t\t\t\t\t\t3845,\n\t\t\t\t\t\t\t\t3846,\n\t\t\t\t\t\t\t\t-435,\n\t\t\t\t\t\t\t\t3847,\n\t\t\t\t\t\t\t\t-433,\n\t\t\t\t\t\t\t\t3848,\n\t\t\t\t\t\t\t\t-55,\n\t\t\t\t\t\t\t\t3849,\n\t\t\t\t\t\t\t\t-64,\n\t\t\t\t\t\t\t\t3850,\n\t\t\t\t\t\t\t\t-2129,\n\t\t\t\t\t\t\t\t3851,\n\t\t\t\t\t\t\t\t3852,\n\t\t\t\t\t\t\t\t3853,\n\t\t\t\t\t\t\t\t3854,\n\t\t\t\t\t\t\t\t3855,\n\t\t\t\t\t\t\t\t3856,\n\t\t\t\t\t\t\t\t-3697,\n\t\t\t\t\t\t\t\t3857\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774036\",\n\t\t\t\t\t\t\t\"GEN\": \"Salzkotten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1844,\n\t\t\t\t\t\t\t\t3858,\n\t\t\t\t\t\t\t\t3859,\n\t\t\t\t\t\t\t\t-607,\n\t\t\t\t\t\t\t\t3860,\n\t\t\t\t\t\t\t\t-605,\n\t\t\t\t\t\t\t\t3861,\n\t\t\t\t\t\t\t\t-829,\n\t\t\t\t\t\t\t\t3862,\n\t\t\t\t\t\t\t\t-3582,\n\t\t\t\t\t\t\t\t3863,\n\t\t\t\t\t\t\t\t-3588,\n\t\t\t\t\t\t\t\t3864,\n\t\t\t\t\t\t\t\t-3591,\n\t\t\t\t\t\t\t\t3865,\n\t\t\t\t\t\t\t\t-1846,\n\t\t\t\t\t\t\t\t3866\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766060\",\n\t\t\t\t\t\t\t\"GEN\": \"Schieder-Schwalenberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2405,\n\t\t\t\t\t\t\t\t-3656,\n\t\t\t\t\t\t\t\t3867,\n\t\t\t\t\t\t\t\t-3654,\n\t\t\t\t\t\t\t\t3868,\n\t\t\t\t\t\t\t\t-385,\n\t\t\t\t\t\t\t\t3869,\n\t\t\t\t\t\t\t\t3870,\n\t\t\t\t\t\t\t\t-3783,\n\t\t\t\t\t\t\t\t3871,\n\t\t\t\t\t\t\t\t-2627,\n\t\t\t\t\t\t\t\t3872\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566028\",\n\t\t\t\t\t\t\t\"GEN\": \"Ibbenbüren\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3873,\n\t\t\t\t\t\t\t\t3874,\n\t\t\t\t\t\t\t\t-2508,\n\t\t\t\t\t\t\t\t3875,\n\t\t\t\t\t\t\t\t-2506,\n\t\t\t\t\t\t\t\t3876,\n\t\t\t\t\t\t\t\t-1618,\n\t\t\t\t\t\t\t\t3877,\n\t\t\t\t\t\t\t\t-1616,\n\t\t\t\t\t\t\t\t3878,\n\t\t\t\t\t\t\t\t-2839,\n\t\t\t\t\t\t\t\t3879,\n\t\t\t\t\t\t\t\t3880,\n\t\t\t\t\t\t\t\t-3646,\n\t\t\t\t\t\t\t\t3881,\n\t\t\t\t\t\t\t\t-1745\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766008\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Salzuflen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3882,\n\t\t\t\t\t\t\t\t3883,\n\t\t\t\t\t\t\t\t-3154,\n\t\t\t\t\t\t\t\t3884,\n\t\t\t\t\t\t\t\t3885,\n\t\t\t\t\t\t\t\t-3120,\n\t\t\t\t\t\t\t\t3886,\n\t\t\t\t\t\t\t\t-3318,\n\t\t\t\t\t\t\t\t3887,\n\t\t\t\t\t\t\t\t3888,\n\t\t\t\t\t\t\t\t-2816,\n\t\t\t\t\t\t\t\t3889,\n\t\t\t\t\t\t\t\t-514,\n\t\t\t\t\t\t\t\t3890,\n\t\t\t\t\t\t\t\t-512,\n\t\t\t\t\t\t\t\t3891\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570016\",\n\t\t\t\t\t\t\t\"GEN\": \"Drensteinfurt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3065,\n\t\t\t\t\t\t\t\t3892,\n\t\t\t\t\t\t\t\t-65,\n\t\t\t\t\t\t\t\t3893,\n\t\t\t\t\t\t\t\t-72,\n\t\t\t\t\t\t\t\t3894,\n\t\t\t\t\t\t\t\t3895,\n\t\t\t\t\t\t\t\t-3870,\n\t\t\t\t\t\t\t\t-384\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566088\",\n\t\t\t\t\t\t\t\"GEN\": \"Tecklenburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3596,\n\t\t\t\t\t\t\t\t3896,\n\t\t\t\t\t\t\t\t-3594,\n\t\t\t\t\t\t\t\t3897,\n\t\t\t\t\t\t\t\t-1493,\n\t\t\t\t\t\t\t\t3898,\n\t\t\t\t\t\t\t\t-1491,\n\t\t\t\t\t\t\t\t-2683,\n\t\t\t\t\t\t\t\t3899,\n\t\t\t\t\t\t\t\t-120,\n\t\t\t\t\t\t\t\t3900,\n\t\t\t\t\t\t\t\t3901,\n\t\t\t\t\t\t\t\t-3707,\n\t\t\t\t\t\t\t\t3902\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774004\",\n\t\t\t\t\t\t\t\"GEN\": \"Altenbeken\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2186,\n\t\t\t\t\t\t\t\t3903,\n\t\t\t\t\t\t\t\t-2315,\n\t\t\t\t\t\t\t\t3904,\n\t\t\t\t\t\t\t\t-3659,\n\t\t\t\t\t\t\t\t3905,\n\t\t\t\t\t\t\t\t3906,\n\t\t\t\t\t\t\t\t-3672,\n\t\t\t\t\t\t\t\t3907,\n\t\t\t\t\t\t\t\t-3670,\n\t\t\t\t\t\t\t\t3908,\n\t\t\t\t\t\t\t\t-2421,\n\t\t\t\t\t\t\t\t3909,\n\t\t\t\t\t\t\t\t3910,\n\t\t\t\t\t\t\t\t-1123,\n\t\t\t\t\t\t\t\t3911,\n\t\t\t\t\t\t\t\t-252,\n\t\t\t\t\t\t\t\t3912\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570052\",\n\t\t\t\t\t\t\t\"GEN\": \"Warendorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3619,\n\t\t\t\t\t\t\t\t3913,\n\t\t\t\t\t\t\t\t-703,\n\t\t\t\t\t\t\t\t-528,\n\t\t\t\t\t\t\t\t3914,\n\t\t\t\t\t\t\t\t-526,\n\t\t\t\t\t\t\t\t3915,\n\t\t\t\t\t\t\t\t3916,\n\t\t\t\t\t\t\t\t3917,\n\t\t\t\t\t\t\t\t3918\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378020\",\n\t\t\t\t\t\t\t\"GEN\": \"Odenthal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3919,\n\t\t\t\t\t\t\t\t-201,\n\t\t\t\t\t\t\t\t3920,\n\t\t\t\t\t\t\t\t-199,\n\t\t\t\t\t\t\t\t3921,\n\t\t\t\t\t\t\t\t-216,\n\t\t\t\t\t\t\t\t3922,\n\t\t\t\t\t\t\t\t-3692,\n\t\t\t\t\t\t\t\t3923,\n\t\t\t\t\t\t\t\t-3690,\n\t\t\t\t\t\t\t\t3924,\n\t\t\t\t\t\t\t\t-3688,\n\t\t\t\t\t\t\t\t3925,\n\t\t\t\t\t\t\t\t-2264,\n\t\t\t\t\t\t\t\t3926,\n\t\t\t\t\t\t\t\t-2270,\n\t\t\t\t\t\t\t\t3927,\n\t\t\t\t\t\t\t\t-2906,\n\t\t\t\t\t\t\t\t3928,\n\t\t\t\t\t\t\t\t-240,\n\t\t\t\t\t\t\t\t3929\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366016\",\n\t\t\t\t\t\t\t\"GEN\": \"Euskirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-659,\n\t\t\t\t\t\t\t\t3930,\n\t\t\t\t\t\t\t\t-1431,\n\t\t\t\t\t\t\t\t3931,\n\t\t\t\t\t\t\t\t-3681,\n\t\t\t\t\t\t\t\t3932,\n\t\t\t\t\t\t\t\t-3577,\n\t\t\t\t\t\t\t\t3933,\n\t\t\t\t\t\t\t\t3934,\n\t\t\t\t\t\t\t\t-662,\n\t\t\t\t\t\t\t\t3935,\n\t\t\t\t\t\t\t\t3936\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334036\",\n\t\t\t\t\t\t\t\"GEN\": \"Würselen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3937,\n\t\t\t\t\t\t\t\t-2803,\n\t\t\t\t\t\t\t\t3938,\n\t\t\t\t\t\t\t\t-3282,\n\t\t\t\t\t\t\t\t3939,\n\t\t\t\t\t\t\t\t-2587,\n\t\t\t\t\t\t\t\t3940,\n\t\t\t\t\t\t\t\t-3208,\n\t\t\t\t\t\t\t\t3941,\n\t\t\t\t\t\t\t\t-3206,\n\t\t\t\t\t\t\t\t3942,\n\t\t\t\t\t\t\t\t3943\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05119000\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberhausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1487,\n\t\t\t\t\t\t\t\t3944,\n\t\t\t\t\t\t\t\t-1788,\n\t\t\t\t\t\t\t\t-2992,\n\t\t\t\t\t\t\t\t3945,\n\t\t\t\t\t\t\t\t-2990,\n\t\t\t\t\t\t\t\t3946,\n\t\t\t\t\t\t\t\t-2988,\n\t\t\t\t\t\t\t\t3947,\n\t\t\t\t\t\t\t\t-2986,\n\t\t\t\t\t\t\t\t3948,\n\t\t\t\t\t\t\t\t3949,\n\t\t\t\t\t\t\t\t3950,\n\t\t\t\t\t\t\t\t-2670,\n\t\t\t\t\t\t\t\t3951,\n\t\t\t\t\t\t\t\t-2668,\n\t\t\t\t\t\t\t\t-1489,\n\t\t\t\t\t\t\t\t3952\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762040\",\n\t\t\t\t\t\t\t\"GEN\": \"Willebadessen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3950,\n\t\t\t\t\t\t\t\t3953,\n\t\t\t\t\t\t\t\t-2984,\n\t\t\t\t\t\t\t\t3954,\n\t\t\t\t\t\t\t\t-2051,\n\t\t\t\t\t\t\t\t3955,\n\t\t\t\t\t\t\t\t-2675,\n\t\t\t\t\t\t\t\t3956,\n\t\t\t\t\t\t\t\t3957,\n\t\t\t\t\t\t\t\t-2672,\n\t\t\t\t\t\t\t\t3958\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762036\",\n\t\t\t\t\t\t\t\"GEN\": \"Warburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2938,\n\t\t\t\t\t\t\t\t3959,\n\t\t\t\t\t\t\t\t-3398,\n\t\t\t\t\t\t\t\t3960,\n\t\t\t\t\t\t\t\t-3396,\n\t\t\t\t\t\t\t\t3961,\n\t\t\t\t\t\t\t\t-1224,\n\t\t\t\t\t\t\t\t3962,\n\t\t\t\t\t\t\t\t-1222,\n\t\t\t\t\t\t\t\t3963,\n\t\t\t\t\t\t\t\t-2896,\n\t\t\t\t\t\t\t\t3964,\n\t\t\t\t\t\t\t\t3965,\n\t\t\t\t\t\t\t\t-833,\n\t\t\t\t\t\t\t\t3966,\n\t\t\t\t\t\t\t\t-3021,\n\t\t\t\t\t\t\t\t3967,\n\t\t\t\t\t\t\t\t3968,\n\t\t\t\t\t\t\t\t-3018,\n\t\t\t\t\t\t\t\t3969\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958004\",\n\t\t\t\t\t\t\t\"GEN\": \"Arnsberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2400,\n\t\t\t\t\t\t\t\t3970,\n\t\t\t\t\t\t\t\t-2392,\n\t\t\t\t\t\t\t\t3971,\n\t\t\t\t\t\t\t\t3972,\n\t\t\t\t\t\t\t\t3973,\n\t\t\t\t\t\t\t\t3974,\n\t\t\t\t\t\t\t\t-3134,\n\t\t\t\t\t\t\t\t3975\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758032\",\n\t\t\t\t\t\t\t\"GEN\": \"Spenge\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3976,\n\t\t\t\t\t\t\t\t-1556,\n\t\t\t\t\t\t\t\t3977,\n\t\t\t\t\t\t\t\t-1554,\n\t\t\t\t\t\t\t\t3978,\n\t\t\t\t\t\t\t\t-328,\n\t\t\t\t\t\t\t\t3979,\n\t\t\t\t\t\t\t\t-326,\n\t\t\t\t\t\t\t\t3980,\n\t\t\t\t\t\t\t\t-1905\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954024\",\n\t\t\t\t\t\t\t\"GEN\": \"Schwelm\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-92,\n\t\t\t\t\t\t\t\t3981,\n\t\t\t\t\t\t\t\t-1874,\n\t\t\t\t\t\t\t\t3982,\n\t\t\t\t\t\t\t\t3983,\n\t\t\t\t\t\t\t\t3984,\n\t\t\t\t\t\t\t\t-1901,\n\t\t\t\t\t\t\t\t3985,\n\t\t\t\t\t\t\t\t3986,\n\t\t\t\t\t\t\t\t-2574,\n\t\t\t\t\t\t\t\t-1032,\n\t\t\t\t\t\t\t\t3987,\n\t\t\t\t\t\t\t\t-1030,\n\t\t\t\t\t\t\t\t3988\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954036\",\n\t\t\t\t\t\t\t\"GEN\": \"Witten\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3989,\n\t\t\t\t\t\t\t\t3990,\n\t\t\t\t\t\t\t\t-1871,\n\t\t\t\t\t\t\t\t3991,\n\t\t\t\t\t\t\t\t-3040,\n\t\t\t\t\t\t\t\t3992,\n\t\t\t\t\t\t\t\t-2739,\n\t\t\t\t\t\t\t\t3993,\n\t\t\t\t\t\t\t\t3994,\n\t\t\t\t\t\t\t\t-2744,\n\t\t\t\t\t\t\t\t-1902,\n\t\t\t\t\t\t\t\t-3985,\n\t\t\t\t\t\t\t\t3995\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954032\",\n\t\t\t\t\t\t\t\"GEN\": \"Wetter (Ruhr)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-543,\n\t\t\t\t\t\t\t\t3996,\n\t\t\t\t\t\t\t\t-541,\n\t\t\t\t\t\t\t\t3997,\n\t\t\t\t\t\t\t\t-3917,\n\t\t\t\t\t\t\t\t3998,\n\t\t\t\t\t\t\t\t-3260,\n\t\t\t\t\t\t\t\t3999,\n\t\t\t\t\t\t\t\t4000,\n\t\t\t\t\t\t\t\t-415,\n\t\t\t\t\t\t\t\t4001,\n\t\t\t\t\t\t\t\t4002,\n\t\t\t\t\t\t\t\t4003\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05316000\",\n\t\t\t\t\t\t\t\"GEN\": \"Leverkusen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-3192,\n\t\t\t\t\t\t\t\t4004,\n\t\t\t\t\t\t\t\t4005,\n\t\t\t\t\t\t\t\t-3714,\n\t\t\t\t\t\t\t\t4006,\n\t\t\t\t\t\t\t\t-3712,\n\t\t\t\t\t\t\t\t4007,\n\t\t\t\t\t\t\t\t4008,\n\t\t\t\t\t\t\t\t-2731,\n\t\t\t\t\t\t\t\t4009\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554016\",\n\t\t\t\t\t\t\t\"GEN\": \"Gescher\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2863,\n\t\t\t\t\t\t\t\t4010,\n\t\t\t\t\t\t\t\t-3298,\n\t\t\t\t\t\t\t\t4011,\n\t\t\t\t\t\t\t\t4012,\n\t\t\t\t\t\t\t\t4013,\n\t\t\t\t\t\t\t\t4014,\n\t\t\t\t\t\t\t\t4015,\n\t\t\t\t\t\t\t\t4016,\n\t\t\t\t\t\t\t\t4017,\n\t\t\t\t\t\t\t\t4018,\n\t\t\t\t\t\t\t\t4019\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566064\",\n\t\t\t\t\t\t\t\"GEN\": \"Nordwalde\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t4020,\n\t\t\t\t\t\t\t\t-3699,\n\t\t\t\t\t\t\t\t4021,\n\t\t\t\t\t\t\t\t-3856,\n\t\t\t\t\t\t\t\t4022,\n\t\t\t\t\t\t\t\t-3854,\n\t\t\t\t\t\t\t\t4023,\n\t\t\t\t\t\t\t\t-2138,\n\t\t\t\t\t\t\t\t4024,\n\t\t\t\t\t\t\t\t4025,\n\t\t\t\t\t\t\t\t4026,\n\t\t\t\t\t\t\t\t4027,\n\t\t\t\t\t\t\t\t-3446,\n\t\t\t\t\t\t\t\t4028,\n\t\t\t\t\t\t\t\t-3458,\n\t\t\t\t\t\t\t\t4029,\n\t\t\t\t\t\t\t\t-3521,\n\t\t\t\t\t\t\t\t4030,\n\t\t\t\t\t\t\t\t-3750,\n\t\t\t\t\t\t\t\t4031,\n\t\t\t\t\t\t\t\t4032,\n\t\t\t\t\t\t\t\t4033,\n\t\t\t\t\t\t\t\t-1637,\n\t\t\t\t\t\t\t\t4034,\n\t\t\t\t\t\t\t\t-1635,\n\t\t\t\t\t\t\t\t4035,\n\t\t\t\t\t\t\t\t-2356,\n\t\t\t\t\t\t\t\t4036\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974028\",\n\t\t\t\t\t\t\t\"GEN\": \"Lippstadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2281,\n\t\t\t\t\t\t\t\t4037,\n\t\t\t\t\t\t\t\t-155,\n\t\t\t\t\t\t\t\t4038,\n\t\t\t\t\t\t\t\t-153,\n\t\t\t\t\t\t\t\t4039,\n\t\t\t\t\t\t\t\t-2805,\n\t\t\t\t\t\t\t\t4040,\n\t\t\t\t\t\t\t\t-3944,\n\t\t\t\t\t\t\t\t4041,\n\t\t\t\t\t\t\t\t4042,\n\t\t\t\t\t\t\t\t4043,\n\t\t\t\t\t\t\t\t4044,\n\t\t\t\t\t\t\t\t4045\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05512000\",\n\t\t\t\t\t\t\t\"GEN\": \"Bottrop\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t4046,\n\t\t\t\t\t\t\t\t4047,\n\t\t\t\t\t\t\t\t-4014,\n\t\t\t\t\t\t\t\t4048,\n\t\t\t\t\t\t\t\t-3295,\n\t\t\t\t\t\t\t\t4049,\n\t\t\t\t\t\t\t\t4050,\n\t\t\t\t\t\t\t\t-521,\n\t\t\t\t\t\t\t\t4051,\n\t\t\t\t\t\t\t\t-2873,\n\t\t\t\t\t\t\t\t4052,\n\t\t\t\t\t\t\t\t4053,\n\t\t\t\t\t\t\t\t-2779,\n\t\t\t\t\t\t\t\t4054,\n\t\t\t\t\t\t\t\t-2552,\n\t\t\t\t\t\t\t\t4055,\n\t\t\t\t\t\t\t\t-4017\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566004\",\n\t\t\t\t\t\t\t\"GEN\": \"Altenberge\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-319,\n\t\t\t\t\t\t\t\t4056,\n\t\t\t\t\t\t\t\t-3073,\n\t\t\t\t\t\t\t\t4057,\n\t\t\t\t\t\t\t\t-3343,\n\t\t\t\t\t\t\t\t4058,\n\t\t\t\t\t\t\t\t4059,\n\t\t\t\t\t\t\t\t4060,\n\t\t\t\t\t\t\t\t-2755,\n\t\t\t\t\t\t\t\t4061,\n\t\t\t\t\t\t\t\t-2768,\n\t\t\t\t\t\t\t\t4062,\n\t\t\t\t\t\t\t\t-779,\n\t\t\t\t\t\t\t\t4063,\n\t\t\t\t\t\t\t\t-3182,\n\t\t\t\t\t\t\t\t4064\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358016\",\n\t\t\t\t\t\t\t\"GEN\": \"Hürtgenwald\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t4065,\n\t\t\t\t\t\t\t\t-371,\n\t\t\t\t\t\t\t\t4066,\n\t\t\t\t\t\t\t\t-1750,\n\t\t\t\t\t\t\t\t4067,\n\t\t\t\t\t\t\t\t4068,\n\t\t\t\t\t\t\t\t-1998,\n\t\t\t\t\t\t\t\t4069,\n\t\t\t\t\t\t\t\t4070,\n\t\t\t\t\t\t\t\t-3436,\n\t\t\t\t\t\t\t\t4071\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770004\",\n\t\t\t\t\t\t\t\"GEN\": \"Bad Oeynhausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"crs\": {\n\t\t\t\"type\": \"name\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n\t\t\t}\n\t\t}\n\t};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"ags,t,m,f,plz,ags,pwi,pwa,pwn,pan,paa,ai,aa,an,wi,wa,wn,pai,pwi_h,pwa_h,pwn_h,search\\n05111000,612178,295896,316282,40213,05111000,8.9,5.8,3.1,4.0,7.8,72031,47574,24457,54669,35525,19144,11.8,\\\"6.7,8.5,8.6,8.9,9.1,9.2,9.3,9.3,9.4,9.4,9.2,9.1,8.9\\\",\\\"5.0,5.9,5.9,6.0,6.0,6.0,6.1,6.0,6.0,5.9,6.1,6.0,5.8\\\",\\\"1.7,2.6,2.7,2.9,3.1,3.2,3.3,3.3,3.4,3.4,3.1,3.1,3.1\\\",\\\"düsseldorf, stadt\\\"\\n05112000,491231,241417,249814,47051,05112000,8.5,6.3,2.2,1.9,5.5,36694,27259,9435,41813,31151,10662,7.5,\\\"6.7,7.9,8.1,8.3,8.6,8.7,8.8,8.8,8.9,8.9,8.7,8.8,8.5\\\",\\\"5.7,6.3,6.3,6.5,6.5,6.5,6.6,6.5,6.5,6.5,6.6,6.7,6.3\\\",\\\"1.0,1.6,1.7,1.8,2.0,2.2,2.3,2.3,2.4,2.4,2.1,2.2,2.2\\\",\\\"duisburg, stadt\\\"\\n05113000,582624,282565,300059,45127,05113000,8.7,6.4,2.3,2.8,7.6,60185,44104,16081,50674,37211,13463,10.3,\\\"6.5,7.8,7.8,8.1,8.3,8.5,8.8,8.9,9.0,9.1,8.9,9.0,8.7\\\",\\\"5.4,6.0,6.0,6.2,6.2,6.3,6.4,6.5,6.5,6.5,6.7,6.7,6.4\\\",\\\"1.1,1.8,1.8,2.0,2.1,2.3,2.4,2.5,2.6,2.6,2.2,2.3,2.3\\\",\\\"essen, stadt\\\"\\n05114000,225144,109487,115657,47803,05114000,9.7,6.8,2.9,2.8,6.3,20602,14291,6311,21928,15373,6555,9.2,\\\"6.9,8.4,8.4,8.8,9.1,9.4,9.5,9.6,9.6,10.1,9.9,9.9,9.7\\\",\\\"5.5,6.3,6.3,6.4,6.6,6.7,6.7,6.7,6.6,6.9,7.1,7.0,6.8\\\",\\\"1.3,2.0,2.2,2.4,2.5,2.7,2.7,2.8,2.9,3.2,2.8,2.9,2.9\\\",\\\"krefeld, stadt\\\"\\n05116000,259996,127512,132484,41061,05116000,10.3,7.1,3.2,3.2,7.6,28082,19638,8444,26669,18472,8197,10.8,\\\"7.4,9.0,9.0,9.4,9.7,9.9,10.1,10.2,10.5,10.5,10.5,10.4,10.3\\\",\\\"6.0,6.9,6.8,7.0,7.1,7.1,7.2,7.2,7.3,7.2,7.5,7.3,7.1\\\",\\\"1.4,2.1,2.3,2.4,2.6,2.9,2.9,3.0,3.3,3.3,3.0,3.1,3.2\\\",\\\"mönchengladbach, stadt\\\"\\n05117000,169278,81461,87817,45468,05117000,8.7,6.2,2.5,2.5,6.7,15589,11307,4282,14694,10465,4229,9.2,\\\"6.9,8.2,8.3,8.6,8.8,9.0,9.3,9.4,9.3,9.3,9.1,9.0,8.7\\\",\\\"5.6,6.3,6.3,6.5,6.5,6.5,6.7,6.7,6.6,6.5,6.6,6.5,6.2\\\",\\\"1.2,1.9,1.9,2.1,2.3,2.5,2.6,2.7,2.8,2.8,2.5,2.5,2.5\\\",\\\"mülheim an der ruhr, stadt\\\"\\n05119000,210934,103284,107650,46045,05119000,9.0,6.7,2.2,2.4,7.1,20051,15028,5023,18889,14196,4693,9.5,\\\"6.9,8.2,8.2,8.5,8.7,8.9,9.2,9.3,9.4,9.3,9.3,9.3,9.0\\\",\\\"5.9,6.5,6.5,6.6,6.6,6.7,6.9,6.9,6.9,6.9,7.1,7.1,6.7\\\",\\\"1.1,1.6,1.7,1.9,2.1,2.2,2.3,2.4,2.5,2.5,2.2,2.2,2.2\\\",\\\"oberhausen, stadt\\\"\\n05120000,109499,53725,55774,42853,05120000,10.5,6.9,3.5,3.6,7.2,11750,7852,3898,11448,7570,3878,10.7,\\\"8.3,9.8,9.7,10.3,10.6,10.8,10.4,10.9,11.0,10.8,10.6,10.7,10.5\\\",\\\"6.3,7.0,6.9,7.1,7.2,7.3,7.1,7.4,7.3,7.0,7.1,7.1,6.9\\\",\\\"2.0,2.8,2.9,3.2,3.4,3.6,3.4,3.4,3.8,3.8,3.5,3.6,3.5\\\",\\\"remscheid, stadt\\\"\\n05122000,158726,76948,81778,42651,05122000,9.8,6.4,3.4,3.1,5.7,13891,9044,4847,15546,10121,5425,8.8,\\\"7.5,9.0,8.9,9.3,9.7,10.0,9.6,9.8,10.0,10.1,10.0,10.2,9.8\\\",\\\"5.8,6.5,6.3,6.5,6.6,6.7,6.5,6.6,6.5,6.5,6.7,6.8,6.4\\\",\\\"1.7,2.5,2.6,2.8,3.0,3.3,3.1,3.2,3.4,3.6,3.3,3.4,3.4\\\",\\\"solingen, klingenstadt\\\"\\n05124000,350046,170822,179224,42275,05124000,9.5,6.6,2.9,2.8,6.6,32897,22974,9923,33360,23110,10250,9.4,\\\"7.3,8.6,8.7,9.1,9.4,9.6,9.7,9.7,9.8,10.0,9.8,9.8,9.5\\\",\\\"5.7,6.3,6.4,6.5,6.6,6.7,6.8,6.7,6.6,6.7,7.0,6.9,6.6\\\",\\\"1.6,2.3,2.4,2.6,2.8,3.0,2.9,3.1,3.2,3.2,2.8,2.9,2.9\\\",\\\"wuppertal, stadt\\\"\\n05154004,13033,6701,6332,47551,05154004,9.9,6.7,3.2,2.3,5.4,1001,700,301,1292,870,422,7.7,\\\"7.2,9.1,9.3,9.6,10.2,10.1,10.2,10.0,10.1,10.7,10.4,10.3,9.9\\\",\\\"5.9,7.0,7.0,7.2,7.5,7.3,7.2,7.0,7.1,7.4,7.3,7.1,6.7\\\",\\\"1.3,2.1,2.3,2.4,2.7,2.9,3.1,3.1,3.0,3.3,3.1,3.2,3.2\\\",bedburg-hau\\n05154008,30968,15705,15263,46446,05154008,9.7,7.3,2.5,2.4,7.3,2999,2271,728,3011,2250,761,9.7,\\\"8.8,9.9,10.2,10.7,10.8,10.8,10.8,10.5,10.6,10.4,10.4,10.5,9.7\\\",\\\"7.4,7.9,8.1,8.3,8.3,8.1,8.0,7.8,7.8,7.6,8.0,8.0,7.3\\\",\\\"1.4,2.0,2.1,2.4,2.6,2.7,2.8,2.7,2.7,2.8,2.4,2.5,2.5\\\",\\\"emmerich am rhein, stadt\\\"\\n05154012,33841,17037,16804,47608,05154012,11.1,7.8,3.3,4.1,10.5,4960,3569,1391,3770,2648,1122,14.7,\\\"9.2,10.7,10.7,11.6,11.6,12.0,12.3,12.3,12.3,12.5,12.3,12.1,11.1\\\",\\\"7.6,8.4,8.2,8.7,8.5,8.7,8.7,8.7,8.7,8.7,9.0,8.6,7.8\\\",\\\"1.5,2.3,2.5,3.0,3.1,3.3,3.6,3.6,3.6,3.8,3.3,3.4,3.3\\\",\\\"geldern, stadt\\\"\\n05154016,33889,16990,16899,47574,05154016,11.1,7.7,3.3,3.0,7.0,3422,2389,1033,3745,2626,1119,10.1,\\\"8.7,10.0,10.1,10.4,10.8,11.1,11.4,11.4,11.3,11.7,11.8,11.7,11.1\\\",\\\"7.3,8.0,8.0,8.0,8.2,8.3,8.4,8.3,8.2,8.3,8.6,8.4,7.7\\\",\\\"1.4,2.0,2.2,2.4,2.6,2.8,3.0,3.1,3.1,3.4,3.2,3.3,3.3\\\",\\\"goch, stadt\\\"\\n05154020,12037,5896,6141,47661,05154020,11.0,7.9,3.1,2.0,5.9,960,715,245,1321,953,368,8.0,\\\"8.4,10.2,10.0,10.6,10.8,11.1,11.4,11.5,11.7,11.4,11.3,11.4,11.0\\\",\\\"7.0,8.1,8.0,8.2,8.3,8.4,8.5,8.5,8.4,8.2,8.6,8.6,7.9\\\",\\\"1.3,2.1,2.0,2.4,2.5,2.6,2.8,3.0,3.3,3.2,2.7,2.8,3.1\\\",issum\\n05154024,13854,6884,6970,47546,05154024,12.8,9.3,3.5,4.0,9.0,1793,1243,550,1775,1291,484,12.9,\\\"9.5,10.9,11.0,11.3,12.0,12.0,12.8,12.8,13.2,13.2,13.2,13.4,12.8\\\",\\\"8.0,8.7,8.6,8.6,9.1,9.0,9.6,9.3,9.4,9.3,9.8,10.0,9.3\\\",\\\"1.6,2.2,2.3,2.7,2.9,3.0,3.2,3.5,3.8,3.9,3.4,3.4,3.5\\\",\\\"kalkar, stadt\\\"\\n05154028,13262,6670,6592,47647,05154028,10.1,7.2,2.9,2.2,5.8,1069,774,295,1338,957,381,8.1,\\\"8.3,9.9,10.0,10.3,10.7,11.0,11.2,11.8,11.3,11.3,10.9,11.3,10.1\\\",\\\"7.0,7.7,7.8,7.9,8.1,8.3,8.4,8.5,8.2,8.3,8.0,8.3,7.2\\\",\\\"1.4,2.1,2.3,2.4,2.6,2.7,2.8,3.2,3.1,3.0,3.0,3.0,2.9\\\",kerken\\n05154032,28311,13925,14386,47623,05154032,11.8,8.5,3.3,3.2,8.1,3183,2291,892,3334,2394,940,11.2,\\\"9.3,10.9,11.1,11.6,12.0,12.5,12.8,12.9,12.7,12.9,12.9,12.9,11.8\\\",\\\"7.8,8.8,8.8,9.0,9.1,9.4,9.7,9.5,9.5,9.3,9.5,9.4,8.5\\\",\\\"1.5,2.1,2.3,2.6,2.9,3.1,3.2,3.4,3.3,3.6,3.4,3.6,3.3\\\",\\\"kevelaer, stadt\\\"\\n05154036,49729,24457,25272,47533,05154036,10.8,7.7,3.1,3.9,9.3,6561,4641,1920,5385,3849,1536,13.2,\\\"8.4,9.9,10.0,10.4,10.6,10.9,10.7,10.6,10.8,11.2,11.2,11.2,10.8\\\",\\\"6.9,7.7,7.7,7.9,8.0,8.0,7.8,7.7,7.7,7.9,8.2,8.1,7.7\\\",\\\"1.5,2.2,2.3,2.5,2.6,2.9,2.9,2.9,3.1,3.3,3.0,3.1,3.1\\\",\\\"kleve, stadt\\\"\\n05154040,10648,5444,5204,47559,05154040,10.0,6.9,3.0,3.1,5.6,923,594,329,1061,740,321,8.7,\\\"7.6,9.1,9.1,9.7,9.6,9.9,9.7,9.9,10.1,10.4,10.3,10.5,10.0\\\",\\\"6.6,7.2,7.1,7.2,7.2,7.3,7.0,6.9,7.0,7.0,7.1,7.2,6.9\\\",\\\"1.0,1.9,2.0,2.5,2.4,2.5,2.7,2.9,3.1,3.4,3.2,3.2,3.0\\\",kranenburg\\n05154044,21349,10608,10741,46459,05154044,12.1,8.9,3.2,2.3,6.5,1875,1390,485,2581,1895,686,8.8,\\\"8.9,10.0,9.9,10.5,11.0,11.1,11.3,11.5,11.9,12.1,12.2,12.2,12.1\\\",\\\"7.5,7.9,7.9,8.2,8.6,8.5,8.5,8.5,8.7,8.9,9.2,9.1,8.9\\\",\\\"1.5,2.1,2.0,2.3,2.4,2.7,2.8,3.0,3.2,3.2,3.0,3.0,3.2\\\",\\\"rees, stadt\\\"\\n05154048,6709,3327,3382,47509,05154048,9.5,7.0,2.5,1.4,4.5,394,299,95,636,467,169,5.9,\\\"6.6,8.5,9.1,9.4,9.5,9.0,9.2,9.5,9.7,9.6,9.8,9.8,9.5\\\",\\\"5.6,6.7,7.2,7.2,7.0,6.6,7.0,7.1,7.2,7.1,7.5,7.3,7.0\\\",\\\"1.1,1.8,1.9,2.2,2.5,2.4,2.2,2.4,2.5,2.6,2.3,2.5,2.5\\\",rheurdt\\n05154052,15641,7768,7873,47638,05154052,12.7,8.6,4.2,4.2,8.6,2012,1351,661,1993,1341,652,12.9,\\\"10.5,12.8,12.6,13.1,13.1,13.2,13.8,13.9,14.5,14.0,14.0,13.8,12.7\\\",\\\"8.5,9.7,9.5,9.5,9.5,9.4,9.7,9.7,9.9,9.3,9.4,9.2,8.6\\\",\\\"2.0,3.1,3.1,3.6,3.6,3.8,4.1,4.3,4.6,4.7,4.6,4.6,4.2\\\",\\\"straelen, stadt\\\"\\n05154056,8266,4111,4155,47589,05154056,11.5,7.9,3.6,2.6,6.3,730,517,213,950,649,301,8.8,\\\"8.2,9.9,10.3,10.5,10.7,11.2,11.7,12.4,12.7,12.3,12.3,12.3,11.5\\\",\\\"7.1,8.0,8.0,7.9,7.7,8.3,8.4,8.9,8.8,8.4,8.8,8.7,7.9\\\",\\\"1.1,1.9,2.3,2.5,2.9,2.9,3.3,3.6,3.9,3.9,3.5,3.6,3.6\\\",uedem\\n05154060,8189,4115,4074,47669,05154060,11.1,7.7,3.4,3.2,7.5,876,613,263,913,632,281,10.7,\\\"8.5,9.8,10.3,11.1,11.1,12.0,12.5,11.9,11.4,11.6,11.8,11.7,11.1\\\",\\\"7.3,7.9,7.9,8.5,7.9,8.4,9.1,8.5,7.9,7.9,8.4,8.3,7.7\\\",\\\"1.3,1.9,2.4,2.6,3.2,3.6,3.4,3.4,3.5,3.7,3.5,3.4,3.4\\\",wachtendonk\\n05154064,10611,5350,5261,47652,05154064,10.9,8.1,2.8,2.9,5.8,918,615,303,1159,861,298,8.7,\\\"9.3,10.8,11.4,11.6,11.3,11.5,11.8,11.8,11.1,11.7,11.9,11.8,10.9\\\",\\\"8.1,8.8,9.5,9.5,9.0,8.8,8.9,8.8,8.1,8.8,9.0,8.8,8.1\\\",\\\"1.2,2.0,2.0,2.1,2.3,2.7,3.0,3.0,3.0,3.0,2.9,3.0,2.8\\\",weeze\\n05158004,44086,21054,23032,40699,05158004,9.9,6.7,3.2,3.2,6.5,4252,2849,1403,4349,2959,1390,9.6,\\\"6.8,8.2,8.4,8.7,9.0,9.5,9.8,9.7,9.8,10.4,10.0,10.0,9.9\\\",\\\"5.3,6.1,6.1,6.2,6.3,6.5,6.9,6.8,6.7,6.9,6.9,6.9,6.7\\\",\\\"1.5,2.2,2.4,2.5,2.7,3.0,2.9,3.0,3.2,3.5,3.1,3.1,3.2\\\",\\\"erkrath, fundort des neanderthalers, stadt\\\"\\n05158008,30410,14579,15831,42781,05158008,9.3,6.3,3.0,3.4,6.0,2849,1829,1020,2817,1910,907,9.4,\\\"7.4,8.9,8.8,9.1,9.4,9.8,9.8,9.7,10.0,9.8,9.5,9.7,9.3\\\",\\\"5.9,6.6,6.3,6.6,6.5,6.6,6.5,6.6,6.8,6.5,6.4,6.6,6.3\\\",\\\"1.5,2.4,2.5,2.5,2.9,3.2,3.2,3.1,3.2,3.3,3.1,3.2,3.0\\\",\\\"haan, stadt\\\"\\n05158012,25793,12654,13139,42579,05158012,10.1,6.5,3.6,2.8,5.4,2108,1394,714,2610,1677,933,8.2,\\\"8.0,9.4,9.5,10.0,10.5,10.8,10.0,10.6,10.5,10.6,10.7,10.5,10.1\\\",\\\"6.2,6.7,6.8,6.9,7.1,7.2,6.9,7.1,6.8,6.8,7.0,7.0,6.5\\\",\\\"1.9,2.7,2.7,3.1,3.5,3.7,3.2,3.5,3.7,3.8,3.6,3.6,3.6\\\",\\\"heiligenhaus, stadt\\\"\\n05158016,55185,26620,28565,40721,05158016,9.8,6.4,3.5,3.6,6.8,5777,3774,2003,5435,3506,1929,10.5,\\\"7.4,8.6,9.1,9.2,9.6,9.9,10.0,10.1,10.2,10.4,10.3,10.3,9.8\\\",\\\"5.6,6.1,6.3,6.2,6.3,6.4,6.5,6.6,6.5,6.5,6.8,6.7,6.4\\\",\\\"1.8,2.5,2.8,3.0,3.3,3.5,3.5,3.6,3.6,3.9,3.6,3.6,3.5\\\",\\\"hilden, stadt\\\"\\n05158020,58033,28239,29794,40764,05158020,9.3,6.1,3.1,3.9,7.3,6525,4264,2261,5384,3567,1817,11.2,\\\"6.7,8.1,8.3,8.7,9.0,9.1,9.2,9.4,9.5,9.8,9.7,9.8,9.3\\\",\\\"5.4,6.0,6.0,6.2,6.3,6.3,6.3,6.4,6.3,6.4,6.6,6.6,6.1\\\",\\\"1.3,2.1,2.3,2.5,2.7,2.8,2.8,3.0,3.2,3.4,3.1,3.1,3.1\\\",\\\"langenfeld (rheinland), stadt\\\"\\n05158024,38291,18413,19878,40822,05158024,9.0,6.2,2.8,2.6,5.6,3124,2132,992,3460,2376,1084,8.2,\\\"6.4,7.8,7.9,8.3,8.4,8.6,8.6,8.9,9.1,9.5,9.4,9.4,9.0\\\",\\\"5.1,5.9,5.8,6.1,6.1,6.0,5.9,6.0,6.0,6.4,6.4,6.4,6.2\\\",\\\"1.2,1.9,2.1,2.2,2.3,2.7,2.8,2.8,3.0,3.1,2.9,3.0,2.8\\\",\\\"mettmann, stadt\\\"\\n05158026,40885,19650,21235,40789,05158026,9.8,6.7,3.2,2.1,4.4,2673,1805,868,4026,2736,1290,6.5,\\\"7.2,8.6,8.6,9.2,9.4,9.8,9.8,9.6,10.0,10.8,10.3,10.3,9.8\\\",\\\"5.8,6.4,6.3,6.6,6.6,6.6,6.7,6.4,6.6,7.0,7.1,7.1,6.7\\\",\\\"1.4,2.2,2.3,2.6,2.8,3.1,3.2,3.2,3.4,3.8,3.2,3.2,3.2\\\",\\\"monheim am rhein, stadt\\\"\\n05158028,87943,42217,45726,40878,05158028,9.7,6.4,3.3,3.3,6.5,8656,5720,2936,8521,5644,2877,9.8,\\\"7.0,8.3,8.7,9.1,9.4,9.6,9.6,9.6,9.6,10.1,10.1,10.0,9.7\\\",\\\"5.5,6.0,6.2,6.3,6.4,6.4,6.5,6.4,6.4,6.7,6.8,6.8,6.4\\\",\\\"1.6,2.3,2.5,2.8,2.9,3.2,3.1,3.2,3.2,3.5,3.2,3.2,3.3\\\",\\\"ratingen, stadt\\\"\\n05158032,81430,39660,41770,42551,05158032,10.1,6.6,3.4,3.2,6.7,8060,5420,2640,8202,5400,2802,9.9,\\\"7.7,9.3,9.4,9.9,10.4,10.5,10.1,10.3,10.4,10.6,10.7,10.7,10.1\\\",\\\"5.9,6.7,6.6,6.7,7.0,7.1,6.9,6.9,6.8,6.9,7.3,7.3,6.6\\\",\\\"1.8,2.6,2.7,3.1,3.4,3.5,3.2,3.4,3.6,3.7,3.4,3.5,3.4\\\",\\\"velbert, stadt\\\"\\n05158036,21223,10362,10861,42489,05158036,9.7,6.6,3.1,2.6,5.9,1798,1248,550,2064,1399,665,8.5,\\\"7.3,8.5,8.9,9.3,9.7,9.9,9.8,10.0,10.2,10.3,10.1,10.1,9.7\\\",\\\"5.7,6.2,6.5,6.6,6.8,6.9,6.8,7.0,7.0,7.0,7.0,6.9,6.6\\\",\\\"1.5,2.3,2.4,2.7,2.9,3.0,2.9,3.0,3.2,3.3,3.1,3.3,3.1\\\",\\\"wülfrath, stadt\\\"\\n05162004,64064,31816,32248,41539,05162004,8.9,6.1,2.8,2.2,4.8,4487,3094,1393,5692,3926,1766,7.0,\\\"7.1,8.1,8.2,8.5,8.7,8.8,9.0,9.2,9.3,9.3,9.2,9.1,8.9\\\",\\\"5.8,6.2,6.2,6.3,6.3,6.3,6.4,6.5,6.4,6.3,6.5,6.4,6.1\\\",\\\"1.3,1.9,2.0,2.1,2.4,2.5,2.6,2.7,2.9,3.0,2.7,2.8,2.8\\\",\\\"dormagen, stadt\\\"\\n05162008,63051,30723,32328,41515,05162008,9.5,6.6,2.9,2.4,5.4,4941,3432,1509,6007,4147,1860,7.8,\\\"7.0,8.3,8.6,8.8,9.0,9.4,9.6,9.7,10.1,10.3,10.1,10.0,9.5\\\",\\\"5.6,6.2,6.3,6.4,6.5,6.7,6.9,6.9,7.0,7.1,7.1,7.1,6.6\\\",\\\"1.4,2.1,2.2,2.4,2.5,2.7,2.7,2.9,3.1,3.2,3.0,2.9,2.9\\\",\\\"grevenbroich, stadt\\\"\\n05162012,23260,11590,11670,41363,05162012,9.3,6.5,2.8,2.9,6.3,2123,1455,668,2172,1519,653,9.1,\\\"7.2,8.2,8.2,8.3,8.5,8.9,9.2,9.3,9.3,9.5,9.6,9.6,9.3\\\",\\\"6.0,6.4,6.4,6.4,6.5,6.6,6.8,6.8,6.6,6.7,6.8,6.8,6.5\\\",\\\"1.2,1.8,1.8,1.9,2.0,2.2,2.4,2.5,2.7,2.8,2.8,2.7,2.8\\\",jüchen\\n05162016,43286,20812,22474,41564,05162016,8.6,5.8,2.8,2.3,5.1,3180,2195,985,3729,2531,1198,7.3,\\\"6.9,8.4,8.4,8.6,9.0,9.2,9.4,9.1,9.3,9.2,9.2,8.9,8.6\\\",\\\"5.5,6.2,6.2,6.2,6.3,6.4,6.5,6.3,6.3,6.1,6.3,6.1,5.8\\\",\\\"1.3,2.2,2.2,2.4,2.6,2.8,2.9,2.8,3.1,3.1,2.8,2.8,2.8\\\",\\\"kaarst, stadt\\\"\\n05162020,32922,16085,16837,41352,05162020,9.0,6.3,2.7,2.6,5.7,2709,1868,841,2953,2067,886,8.2,\\\"6.5,7.7,8.0,8.3,8.7,8.8,9.0,8.8,9.2,9.6,9.4,9.5,9.0\\\",\\\"5.2,5.8,6.0,6.1,6.3,6.2,6.3,6.1,6.2,6.5,6.4,6.5,6.3\\\",\\\"1.2,1.8,2.0,2.3,2.5,2.6,2.7,2.7,3.0,3.1,2.9,3.0,2.7\\\",\\\"korschenbroich, stadt\\\"\\n05162022,54892,26183,28709,40667,05162022,8.5,5.8,2.7,2.7,5.6,4570,3066,1504,4692,3199,1493,8.3,\\\"6.1,7.4,7.6,8.1,8.4,8.6,8.6,8.8,8.9,8.9,8.8,8.8,8.5\\\",\\\"4.8,5.6,5.6,5.8,6.0,6.0,6.0,6.1,6.1,6.0,6.1,6.1,5.8\\\",\\\"1.2,1.8,2.1,2.2,2.4,2.6,2.6,2.7,2.8,2.8,2.6,2.7,2.7\\\",\\\"meerbusch, stadt\\\"\\n05162024,155414,75929,79485,41460,05162024,9.8,6.4,3.3,3.0,6.1,14161,9535,4626,15158,10019,5139,9.1,\\\"7.7,9.1,9.4,9.7,10.0,10.0,10.1,10.1,10.2,10.3,10.1,10.1,9.8\\\",\\\"6.1,6.7,6.8,6.9,6.9,6.8,6.8,6.7,6.7,6.7,6.8,6.7,6.4\\\",\\\"1.6,2.4,2.6,2.8,3.0,3.2,3.2,3.3,3.5,3.6,3.3,3.4,3.3\\\",\\\"neuss, stadt\\\"\\n05162028,13137,6512,6625,41569,05162028,8.6,6.0,2.6,2.0,4.0,790,529,261,1131,785,346,6.0,\\\"6.7,7.7,8.0,8.5,8.5,8.6,8.7,8.9,9.3,9.5,9.4,8.9,8.6\\\",\\\"5.6,6.1,6.2,6.4,6.4,6.4,6.4,6.5,6.6,6.6,6.6,6.3,6.0\\\",\\\"1.1,1.6,1.8,2.1,2.1,2.2,2.3,2.4,2.7,2.9,2.7,2.7,2.6\\\",rommerskirchen\\n05166004,15648,7677,7971,41379,05166004,11.3,7.6,3.7,3.6,7.0,1657,1098,559,1765,1192,573,10.6,\\\"8.3,9.8,9.8,10.5,11.0,11.2,11.5,11.5,11.6,11.9,11.6,11.8,11.3\\\",\\\"6.8,7.6,7.5,7.9,8.0,8.0,8.2,8.2,8.1,8.2,8.1,8.3,7.6\\\",\\\"1.5,2.3,2.3,2.6,2.9,3.2,3.3,3.3,3.5,3.7,3.5,3.5,3.7\\\",\\\"brüggen, burggemeinde\\\"\\n05166008,14914,7342,7572,47929,05166008,10.1,6.8,3.3,2.0,5.0,1041,743,298,1509,1016,493,7.0,\\\"7.1,8.4,8.6,9.2,9.3,9.4,10.0,10.0,10.0,10.6,10.6,10.5,10.1\\\",\\\"5.7,6.4,6.2,6.6,6.8,6.7,6.9,6.9,6.8,7.0,7.2,7.1,6.8\\\",\\\"1.3,2.1,2.4,2.6,2.4,2.8,3.1,3.0,3.2,3.5,3.3,3.4,3.3\\\",\\\"grefrath, sport- und freizeitgemeinde\\\"\\n05166012,34837,16911,17926,47906,05166012,10.2,6.9,3.3,3.8,8.2,4161,2842,1319,3555,2419,1136,11.9,\\\"7.8,9.3,9.5,9.7,9.9,10.3,10.3,10.3,10.5,10.7,10.6,10.5,10.2\\\",\\\"6.4,7.0,7.0,7.1,7.2,7.3,7.3,7.1,7.2,7.3,7.4,7.3,6.9\\\",\\\"1.4,2.3,2.5,2.7,2.7,3.1,3.0,3.2,3.3,3.4,3.2,3.2,3.3\\\",\\\"kempen, stadt\\\"\\n05166016,41964,20769,21195,41334,05166016,10.6,7.5,3.1,2.7,6.9,4026,2881,1145,4447,3133,1314,9.6,\\\"8.1,9.3,9.6,10.2,10.7,10.9,11.0,11.2,11.3,11.0,11.2,11.3,10.6\\\",\\\"6.5,7.0,7.1,7.5,7.8,7.8,7.8,7.8,7.8,7.7,8.0,8.0,7.5\\\",\\\"1.6,2.3,2.5,2.8,2.9,3.1,3.2,3.4,3.5,3.3,3.2,3.3,3.1\\\",\\\"nettetal, stadt\\\"\\n05166020,15184,7487,7697,41372,05166020,9.6,6.4,3.2,2.4,4.9,1106,742,364,1454,974,480,7.3,\\\"6.8,8.4,8.6,9.4,9.4,9.8,9.8,9.8,9.9,10.2,10.0,10.1,9.6\\\",\\\"5.6,6.4,6.5,6.8,6.7,6.8,6.8,6.6,6.7,6.8,6.9,7.0,6.4\\\",\\\"1.2,2.0,2.1,2.5,2.7,3.0,3.0,3.2,3.2,3.3,3.1,3.2,3.2\\\",niederkrüchten\\n05166024,19139,9441,9698,41366,05166024,9.9,6.8,3.1,3.0,5.5,1637,1059,578,1893,1298,595,8.6,\\\"7.6,9.1,9.5,9.8,10.2,10.5,10.7,10.7,11.0,10.4,10.6,10.7,9.9\\\",\\\"6.2,6.9,7.0,7.3,7.6,7.6,7.5,7.4,7.4,7.0,7.3,7.4,6.8\\\",\\\"1.4,2.2,2.5,2.5,2.7,3.0,3.2,3.3,3.6,3.4,3.3,3.3,3.1\\\",schwalmtal\\n05166028,29296,14301,14995,47918,05166028,9.7,6.4,3.3,3.2,6.7,2901,1968,933,2847,1879,968,9.9,\\\"7.1,8.5,8.7,9.0,9.2,9.8,9.8,9.9,9.9,10.0,9.9,10.0,9.7\\\",\\\"5.7,6.3,6.2,6.5,6.4,7.0,6.8,6.7,6.6,6.6,6.8,6.7,6.4\\\",\\\"1.4,2.2,2.5,2.5,2.7,2.9,3.0,3.2,3.3,3.4,3.1,3.3,3.3\\\",\\\"tönisvorst, stadt\\\"\\n05166032,75931,36727,39204,41747,05166032,9.8,6.8,3.0,2.8,6.3,6864,4758,2106,7412,5132,2280,9.0,\\\"7.4,8.7,8.7,9.2,9.4,9.7,9.8,9.9,9.9,10.0,10.2,10.2,9.8\\\",\\\"6.0,6.7,6.6,6.8,6.9,6.9,6.9,7.0,6.9,6.9,7.3,7.1,6.8\\\",\\\"1.3,2.1,2.1,2.4,2.5,2.7,2.9,2.9,3.0,3.2,3.0,3.1,3.0\\\",\\\"viersen, stadt\\\"\\n05166036,50748,24815,25933,47877,05166036,9.7,6.5,3.3,3.4,6.5,5002,3277,1725,4947,3286,1661,9.9,\\\"6.7,8.0,8.2,8.5,8.8,8.9,9.4,9.6,9.8,10.0,9.9,10.1,9.7\\\",\\\"5.4,6.0,6.1,6.2,6.4,6.2,6.6,6.6,6.6,6.6,6.8,6.8,6.5\\\",\\\"1.2,2.0,2.1,2.3,2.4,2.8,2.8,3.0,3.2,3.4,3.1,3.3,3.3\\\",\\\"willich, stadt\\\"\\n05170004,12798,6375,6423,46519,05170004,10.3,7.5,2.9,2.3,6.2,1089,792,297,1321,955,366,8.5,\\\"7.9,9.4,9.1,9.6,10.0,10.2,10.7,10.5,10.8,10.8,10.6,10.4,10.3\\\",\\\"6.6,7.4,7.2,7.5,7.6,7.7,7.9,7.7,7.7,7.7,7.7,7.5,7.5\\\",\\\"1.3,2.0,1.9,2.1,2.5,2.5,2.7,2.8,3.0,3.1,2.8,2.8,2.9\\\",alpen\\n05170008,67452,32635,34817,46535,05170008,9.4,7.0,2.4,3.1,9.1,8264,6142,2122,6363,4741,1622,12.3,\\\"6.9,8.1,8.1,8.5,8.7,8.9,9.1,9.2,9.3,9.5,9.5,9.6,9.4\\\",\\\"5.8,6.4,6.3,6.6,6.6,6.7,6.8,6.9,6.8,6.9,7.1,7.2,7.0\\\",\\\"1.1,1.7,1.8,1.9,2.1,2.2,2.3,2.3,2.5,2.5,2.4,2.5,2.4\\\",\\\"dinslaken, stadt\\\"\\n05170012,26996,13477,13519,46499,05170012,11.3,8.2,3.2,2.8,6.8,2594,1834,760,3060,2206,854,9.6,\\\"8.3,9.6,9.9,10.2,10.5,10.9,11.1,11.0,11.2,11.6,12.0,11.9,11.3\\\",\\\"6.9,7.6,7.6,7.9,8.0,8.1,8.2,8.1,8.1,8.4,8.8,8.7,8.2\\\",\\\"1.4,2.0,2.3,2.4,2.5,2.7,2.9,3.0,3.1,3.1,3.2,3.1,3.2\\\",\\\"hamminkeln, stadt\\\"\\n05170016,13771,6767,7004,46569,05170016,9.3,6.8,2.5,2.4,6.7,1253,916,337,1275,934,341,9.1,\\\"7.3,8.0,8.1,8.7,9.0,9.4,9.1,9.4,9.7,9.7,9.7,9.6,9.3\\\",\\\"6.2,6.5,6.3,6.8,6.7,7.0,6.8,6.9,7.0,7.1,7.1,7.0,6.8\\\",\\\"1.1,1.5,1.8,1.9,2.2,2.4,2.3,2.5,2.7,2.6,2.7,2.5,2.5\\\",hünxe\\n05170020,37683,18588,19095,47475,05170020,10.5,8.2,2.3,2.8,8.2,4131,3085,1046,3965,3084,881,11.0,\\\"7.8,8.9,8.9,9.2,9.5,9.8,10.0,10.3,10.4,10.7,10.7,10.8,10.5\\\",\\\"6.6,7.3,7.1,7.3,7.4,7.7,7.8,8.0,8.1,8.1,8.4,8.5,8.2\\\",\\\"1.1,1.6,1.7,1.9,2.1,2.1,2.2,2.2,2.3,2.6,2.2,2.3,2.3\\\",\\\"kamp-lintfort, stadt\\\"\\n05170024,104529,50973,53556,47441,05170024,9.1,6.8,2.3,2.3,7.2,9964,7550,2414,9546,7138,2408,9.5,\\\"6.6,7.8,8.0,8.3,8.5,8.6,8.9,9.2,9.2,9.4,9.5,9.6,9.1\\\",\\\"5.6,6.2,6.3,6.5,6.6,6.5,6.7,6.9,6.8,6.9,7.3,7.2,6.8\\\",\\\"1.0,1.6,1.7,1.8,1.9,2.1,2.2,2.3,2.4,2.5,2.2,2.3,2.3\\\",\\\"moers, stadt\\\"\\n05170028,27178,13184,13994,47506,05170028,9.6,7.2,2.4,2.5,6.8,2509,1838,671,2614,1968,646,9.2,\\\"7.0,8.3,8.3,8.6,8.9,9.1,9.6,9.6,9.6,9.9,10.0,10.0,9.6\\\",\\\"5.9,6.5,6.4,6.5,6.8,6.9,7.2,7.0,6.8,7.1,7.5,7.5,7.2\\\",\\\"1.1,1.8,1.9,2.1,2.2,2.2,2.4,2.6,2.7,2.8,2.5,2.5,2.4\\\",\\\"neukirchen-vluyn, stadt\\\"\\n05170032,31023,15140,15883,47495,05170032,9.5,6.9,2.6,1.8,5.3,2203,1634,569,2950,2142,808,7.1,\\\"6.9,8.2,8.4,8.8,9.0,9.3,9.5,9.6,9.5,9.8,9.5,9.8,9.5\\\",\\\"5.7,6.5,6.5,6.7,6.8,6.7,6.9,6.9,6.9,7.0,7.0,7.2,6.9\\\",\\\"1.2,1.7,2.0,2.1,2.2,2.6,2.6,2.6,2.6,2.8,2.4,2.6,2.6\\\",\\\"rheinberg, stadt\\\"\\n05170036,13635,6750,6885,46514,05170036,11.0,7.9,3.1,3.3,8.0,1542,1094,448,1498,1080,418,11.3,\\\"8.0,9.4,9.5,9.9,10.2,10.7,10.8,10.9,11.0,11.2,11.1,11.1,11.0\\\",\\\"6.9,7.6,7.6,7.8,8.1,8.5,8.2,8.1,8.0,8.1,8.2,8.1,7.9\\\",\\\"1.1,1.8,1.9,2.1,2.1,2.3,2.6,2.8,3.0,3.2,2.8,3.1,3.1\\\",schermbeck\\n05170040,8819,4363,4456,47665,05170040,11.3,7.8,3.5,4.7,11.3,1409,994,415,997,691,306,16.0,\\\"8.7,9.9,9.8,10.0,10.3,10.8,11.4,11.2,11.4,11.3,10.8,11.5,11.3\\\",\\\"7.3,7.9,7.6,7.4,7.6,8.0,8.3,8.0,8.0,8.0,7.8,8.1,7.8\\\",\\\"1.4,2.1,2.2,2.6,2.7,2.8,3.1,3.2,3.4,3.3,3.0,3.4,3.5\\\",sonsbeck\\n05170044,36675,18073,18602,46562,05170044,9.5,7.2,2.3,1.6,4.9,2362,1789,573,3478,2625,853,6.4,\\\"7.5,8.7,8.9,9.2,9.5,10.0,10.2,10.1,10.2,10.2,9.9,10.0,9.5\\\",\\\"6.2,6.9,7.1,7.2,7.4,7.6,7.7,7.5,7.5,7.4,7.6,7.5,7.2\\\",\\\"1.2,1.9,1.8,2.0,2.1,2.4,2.5,2.6,2.7,2.7,2.3,2.4,2.3\\\",\\\"voerde (niederrhein), stadt\\\"\\n05170048,60595,29522,31073,46483,05170048,10.0,7.3,2.7,2.8,8.1,6595,4909,1686,6048,4435,1613,10.9,\\\"7.9,9.2,9.3,9.5,9.8,10.1,10.3,10.4,10.6,10.6,10.5,10.5,10.0\\\",\\\"6.6,7.3,7.3,7.4,7.6,7.6,7.6,7.6,7.6,7.6,7.9,7.8,7.3\\\",\\\"1.3,1.9,2.0,2.1,2.3,2.5,2.6,2.8,3.0,2.9,2.7,2.7,2.7\\\",\\\"wesel, stadt\\\"\\n05170052,21510,10549,10961,46509,05170052,10.9,7.9,3.0,2.5,7.1,2055,1528,527,2339,1695,644,9.6,\\\"8.2,9.7,9.7,10.0,10.5,10.8,11.0,11.1,11.1,10.9,10.9,10.8,10.9\\\",\\\"6.9,7.8,7.7,7.8,7.8,8.1,8.1,8.1,8.1,7.9,8.2,7.9,7.9\\\",\\\"1.2,1.9,2.0,2.1,2.6,2.7,2.9,3.0,2.9,3.0,2.8,2.9,3.0\\\",\\\"xanten, stadt\\\"\\n05314000,318809,151954,166855,53111,05314000,9.2,6.3,3.0,3.7,8.1,37808,25881,11927,29483,19926,9557,11.9,\\\"6.4,7.8,7.9,8.2,8.4,8.6,8.9,8.8,8.9,9.6,9.3,9.4,9.2\\\",\\\"4.8,5.5,5.5,5.6,5.6,5.7,5.8,5.7,5.7,6.1,6.4,6.4,6.3\\\",\\\"1.6,2.3,2.4,2.6,2.7,2.9,3.0,3.1,3.2,3.4,2.9,3.0,3.0\\\",\\\"bonn, stadt\\\"\\n05315000,1060582,516976,543606,50667,05315000,9.3,6.2,3.1,3.5,7.1,112571,75417,37154,98699,66046,32653,10.6,\\\"6.6,8.1,8.2,8.6,8.8,9.1,9.3,9.4,9.6,9.6,9.4,9.5,9.3\\\",\\\"5.1,5.9,5.8,6.0,6.1,6.1,6.2,6.2,6.2,6.2,6.4,6.4,6.2\\\",\\\"1.5,2.3,2.4,2.6,2.7,3.0,3.1,3.2,3.3,3.4,2.9,3.0,3.1\\\",\\\"köln, stadt\\\"\\n05316000,163487,79590,83897,51373,05316000,8.6,6.0,2.7,2.4,5.4,12744,8877,3867,14107,9741,4366,7.8,\\\"6.6,7.8,8.0,8.2,8.5,8.6,8.9,9.0,9.1,9.1,8.8,8.8,8.6\\\",\\\"5.3,5.8,5.8,6.0,6.1,6.0,6.2,6.2,6.2,6.1,6.1,6.1,6.0\\\",\\\"1.3,2.0,2.1,2.2,2.4,2.6,2.7,2.8,2.9,3.0,2.6,2.7,2.7\\\",\\\"leverkusen, stadt\\\"\\n05334002,245885,127613,118272,52062,05334002,11.4,8.7,2.7,3.6,10.6,34989,26111,8878,28020,21347,6673,14.2,\\\"*,*,*,*,*,*,*,10.5,10.8,11.8,11.6,11.7,11.4\\\",\\\"*,*,*,*,*,*,*,7.6,7.7,8.4,8.9,9.0,8.7\\\",\\\"*,*,*,*,*,*,*,2.9,3.1,3.4,2.7,2.8,2.7\\\",\\\"aachen, stadt\\\"\\n05334004,46880,23281,23599,52477,05334004,10.3,7.4,2.9,2.0,5.3,3440,2488,952,4831,3460,1371,7.3,\\\"*,*,*,*,*,*,*,11.2,11.2,10.9,10.9,10.7,10.3\\\",\\\"*,*,*,*,*,*,*,8.3,8.1,7.8,7.9,7.8,7.4\\\",\\\"*,*,*,*,*,*,*,2.9,3.1,3.1,2.9,2.9,2.9\\\",\\\"alsdorf, stadt\\\"\\n05334008,26819,13120,13699,52499,05334008,10.5,7.4,3.1,2.2,5.8,2162,1566,596,2807,1985,822,8.1,\\\"*,*,*,*,*,*,*,10.2,10.5,10.9,11.1,10.9,10.5\\\",\\\"*,*,*,*,*,*,*,7.5,7.6,7.7,8.1,7.9,7.4\\\",\\\"*,*,*,*,*,*,*,2.7,2.9,3.1,2.9,3.1,3.1\\\",\\\"baesweiler, stadt\\\"\\n05334012,55909,27322,28587,52249,05334012,10.1,7.3,2.8,2.6,6.7,5155,3727,1428,5674,4102,1572,9.2,\\\"*,*,*,*,*,*,*,10.4,10.5,10.5,10.2,10.4,10.1\\\",\\\"*,*,*,*,*,*,*,7.7,7.5,7.5,7.6,7.6,7.3\\\",\\\"*,*,*,*,*,*,*,2.8,3.0,3.0,2.6,2.8,2.8\\\",\\\"eschweiler, stadt\\\"\\n05334016,46583,22665,23918,52134,05334016,9.5,6.7,2.8,1.8,4.7,3029,2190,839,4447,3123,1324,6.5,\\\"*,*,*,*,*,*,*,10.3,10.1,9.9,9.7,10.1,9.5\\\",\\\"*,*,*,*,*,*,*,7.3,7.1,6.9,7.0,7.1,6.7\\\",\\\"*,*,*,*,*,*,*,3.0,3.0,3.0,2.8,3.0,2.8\\\",\\\"herzogenrath, stadt\\\"\\n05334020,12352,6234,6118,52156,05334020,13.1,8.7,4.4,5.1,11.9,2098,1474,624,1613,1071,542,17.0,\\\"*,*,*,*,*,*,*,13.2,13.3,13.9,13.7,14.1,13.1\\\",\\\"*,*,*,*,*,*,*,9.1,9.1,9.3,9.7,9.8,8.7\\\",\\\"*,*,*,*,*,*,*,4.2,4.2,4.6,4.0,4.3,4.4\\\",\\\"monschau, stadt\\\"\\n05334024,8527,4214,4313,52159,05334024,9.4,6.5,2.9,2.5,5.6,691,475,216,804,554,250,8.1,\\\"*,*,*,*,*,*,*,9.6,9.6,9.3,9.4,9.2,9.4\\\",\\\"*,*,*,*,*,*,*,6.9,6.8,6.5,7.0,6.5,6.5\\\",\\\"*,*,*,*,*,*,*,2.7,2.8,2.8,2.5,2.7,2.9\\\",\\\"roetgen, tor zur eifel\\\"\\n05334028,15266,7583,7683,52152,05334028,13.2,8.7,4.4,3.7,7.3,1677,1114,563,2008,1332,676,11.0,\\\"*,*,*,*,*,*,*,13.5,13.2,13.5,13.5,13.8,13.2\\\",\\\"*,*,*,*,*,*,*,9.5,9.1,9.1,9.2,9.2,8.7\\\",\\\"*,*,*,*,*,*,*,3.9,4.0,4.4,4.3,4.6,4.4\\\",simmerath\\n05334032,56739,28112,28627,52222,05334032,10.3,7.2,3.1,2.5,5.8,4677,3281,1396,5872,4098,1774,8.2,\\\"*,*,*,*,*,*,*,10.6,10.6,10.9,10.7,10.7,10.3\\\",\\\"*,*,*,*,*,*,*,7.5,7.3,7.5,7.7,7.7,7.2\\\",\\\"*,*,*,*,*,*,*,3.1,3.2,3.4,3.1,3.1,3.1\\\",\\\"stolberg (rhld.), kupferstadt\\\"\\n05334036,38962,19116,19846,52146,05334036,9.4,6.5,3.0,3.0,6.4,3646,2476,1170,3679,2515,1164,9.4,\\\"*,*,*,*,*,*,*,10.0,10.2,9.9,9.8,9.8,9.4\\\",\\\"*,*,*,*,*,*,*,7.0,6.9,6.6,6.7,6.8,6.5\\\",\\\"*,*,*,*,*,*,*,3.0,3.3,3.3,3.1,3.1,3.0\\\",\\\"würselen, stadt\\\"\\n05358004,13932,6995,6937,52457,05358004,10.8,7.9,2.9,2.2,5.7,1097,794,303,1509,1101,408,7.9,\\\"8.0,9.4,9.7,10.7,10.8,10.9,11.0,11.1,11.4,11.2,11.1,11.2,10.8\\\",\\\"6.8,7.4,7.4,8.2,8.0,8.0,8.0,8.0,8.2,8.1,8.0,8.1,7.9\\\",\\\"1.2,2.0,2.3,2.5,2.7,2.9,3.0,3.1,3.2,3.1,3.1,3.1,2.9\\\",aldenhoven\\n05358008,90244,44599,45645,52349,05358008,10.1,7.3,2.8,3.9,10.0,12583,9042,3541,9134,6590,2544,13.9,\\\"7.2,8.5,8.7,9.3,9.4,9.6,9.7,9.9,10.0,10.4,10.4,10.4,10.1\\\",\\\"5.8,6.6,6.6,7.0,6.9,6.9,7.1,7.1,7.2,7.4,7.7,7.5,7.3\\\",\\\"1.3,1.9,2.2,2.3,2.4,2.6,2.6,2.7,2.8,3.0,2.7,2.9,2.8\\\",\\\"düren, stadt\\\"\\n05358012,4366,2203,2163,52396,05358012,11.9,8.7,3.2,3.2,7.6,473,332,141,518,379,139,10.8,\\\"9.2,10.0,9.9,10.8,10.5,11.4,11.5,11.2,11.9,11.7,11.5,12.1,11.9\\\",\\\"7.4,7.9,7.8,8.3,8.2,8.6,8.4,8.2,8.3,8.1,8.7,8.9,8.7\\\",\\\"1.9,2.1,2.0,2.6,2.3,2.8,3.1,3.0,3.5,3.6,2.8,3.2,3.2\\\",\\\"heimbach, stadt\\\"\\n05358016,8780,4426,4354,52393,05358016,10.3,6.8,3.4,2.3,4.3,577,378,199,902,600,302,6.6,\\\"6.5,8.0,7.8,8.7,9.3,9.4,10.0,10.0,10.0,10.8,10.9,10.8,10.3\\\",\\\"5.4,6.0,5.9,6.4,6.8,6.6,6.9,7.1,6.7,7.1,7.5,7.1,6.8\\\",\\\"1.1,2.0,2.0,2.3,2.6,2.8,3.0,2.8,3.3,3.7,3.4,3.7,3.4\\\",hürtgenwald\\n05358020,7272,3579,3693,52459,05358020,9.5,6.4,3.2,1.9,4.9,496,356,140,694,463,231,6.8,\\\"7.6,9.1,9.3,9.5,9.6,10.3,11.0,11.2,11.2,10.4,10.5,10.6,9.5\\\",\\\"6.1,6.9,7.0,7.3,7.1,7.4,7.9,7.8,7.7,6.9,7.2,7.0,6.4\\\",\\\"1.4,2.2,2.3,2.3,2.5,2.9,3.2,3.4,3.4,3.5,3.2,3.5,3.2\\\",inden\\n05358024,32601,16318,16283,52428,05358024,9.8,7.1,2.7,2.7,7.3,3258,2389,869,3189,2322,867,10.0,\\\"7.4,8.7,8.8,9.1,9.6,9.9,10.0,9.9,10.0,10.2,10.3,10.3,9.8\\\",\\\"6.2,6.7,6.8,7.0,7.3,7.3,7.4,7.3,7.3,7.3,7.6,7.5,7.1\\\",\\\"1.2,2.0,2.0,2.1,2.3,2.6,2.6,2.6,2.7,2.9,2.6,2.7,2.7\\\",\\\"jülich, stadt\\\"\\n05358028,17441,8579,8862,52372,05358028,10.7,7.5,3.3,2.1,5.2,1265,903,362,1869,1300,569,7.3,\\\"7.2,8.7,8.9,9.4,9.7,9.8,9.8,10.1,10.4,10.9,11.1,11.0,10.7\\\",\\\"6.1,6.9,6.9,7.1,7.2,7.3,7.1,7.5,7.6,7.7,8.0,7.8,7.5\\\",\\\"1.1,1.9,2.0,2.3,2.5,2.5,2.7,2.7,2.8,3.1,3.1,3.2,3.3\\\",kreuzau\\n05358032,13791,6871,6920,52379,05358032,10.3,7.4,2.9,1.8,5.0,937,685,252,1419,1018,401,6.8,\\\"6.4,7.9,8.1,9.0,9.2,9.4,9.7,10.2,10.2,10.5,10.4,10.4,10.3\\\",\\\"5.4,6.2,6.1,6.8,6.9,6.8,7.2,7.4,7.3,7.4,7.4,7.4,7.4\\\",\\\"1.0,1.7,2.0,2.2,2.2,2.6,2.5,2.8,2.9,3.1,2.9,3.0,2.9\\\",langerwehe\\n05358036,12591,6253,6338,52441,05358036,10.5,7.5,3.0,2.1,4.6,843,577,266,1323,943,380,6.7,\\\"7.2,8.7,8.4,8.9,9.1,9.2,9.3,9.1,9.6,10.3,10.3,10.4,10.5\\\",\\\"6.1,6.8,6.6,6.8,6.8,6.7,6.6,6.6,6.9,7.3,7.6,7.6,7.5\\\",\\\"1.1,1.9,1.8,2.1,2.3,2.5,2.7,2.5,2.7,3.0,2.7,2.8,3.0\\\",\\\"linnich, stadt\\\"\\n05358040,9950,4948,5002,52399,05358040,9.9,7.0,2.9,7.7,13.7,2130,1359,771,986,693,293,21.4,\\\"7.3,8.8,8.9,9.7,10.0,10.0,10.5,10.3,10.3,10.1,9.5,10.2,9.9\\\",\\\"6.1,6.9,6.6,7.0,7.4,7.1,7.5,7.2,7.0,6.8,6.7,7.1,7.0\\\",\\\"1.2,1.9,2.3,2.6,2.6,2.9,3.1,3.1,3.3,3.2,2.8,3.1,2.9\\\",merzenich\\n05358044,9893,4832,5061,52385,05358044,11.5,8.2,3.3,2.5,6.1,845,601,244,1135,808,327,8.5,\\\"7.2,8.5,8.9,9.3,9.8,9.8,10.1,10.2,10.5,11.3,11.4,11.6,11.5\\\",\\\"6.0,6.7,6.9,7.2,7.5,7.4,7.6,7.5,7.7,8.1,8.3,8.3,8.2\\\",\\\"1.2,1.8,1.9,2.1,2.3,2.5,2.5,2.7,2.8,3.3,3.1,3.4,3.3\\\",\\\"nideggen, stadt\\\"\\n05358048,13915,6876,7039,52382,05358048,10.5,7.4,3.1,2.2,5.4,1060,754,306,1466,1028,438,7.6,\\\"7.6,9.0,9.1,9.7,10.0,10.1,10.3,10.6,10.9,10.9,10.7,10.6,10.5\\\",\\\"6.3,7.0,7.1,7.2,7.4,7.5,7.5,7.8,7.7,7.5,7.5,7.4,7.4\\\",\\\"1.3,2.0,2.0,2.5,2.6,2.7,2.7,2.8,3.2,3.4,3.3,3.3,3.1\\\",niederzier\\n05358052,10552,5249,5303,52388,05358052,10.5,7.2,3.3,1.5,3.9,565,407,158,1104,760,344,5.4,\\\"7.1,8.4,8.5,9.2,9.6,9.6,9.8,9.7,9.8,10.6,10.4,10.5,10.5\\\",\\\"6.0,6.7,6.6,6.9,7.2,6.8,6.9,7.0,6.6,7.0,7.2,7.3,7.2\\\",\\\"1.0,1.7,1.9,2.3,2.4,2.8,2.8,2.7,3.2,3.6,3.2,3.1,3.3\\\",nörvenich\\n05358056,8277,4150,4127,52445,05358056,9.0,6.2,2.8,1.6,4.1,477,341,136,749,516,233,5.8,\\\"7.4,8.4,8.6,9.1,9.2,9.9,10.0,9.9,9.6,9.5,9.5,9.6,9.0\\\",\\\"6.2,6.6,6.6,6.8,6.7,7.1,7.0,7.1,6.8,6.4,6.8,6.6,6.2\\\",\\\"1.2,1.8,2.0,2.2,2.5,2.8,2.9,2.7,2.9,3.2,2.7,3.0,2.8\\\",titz\\n05358060,9223,4644,4579,52391,05358060,10.5,7.6,3.0,1.7,3.7,492,337,155,971,698,273,5.3,\\\"7.3,8.8,9.2,9.7,10.4,10.9,10.6,10.9,11.3,11.4,11.0,11.1,10.5\\\",\\\"6.2,6.9,7.0,7.6,7.9,8.1,8.0,8.1,8.2,7.9,8.0,8.1,7.6\\\",\\\"1.1,1.9,2.2,2.1,2.5,2.8,2.6,2.8,3.1,3.5,3.0,3.0,3.0\\\",vettweiß\\n05362004,23334,11676,11658,50181,05362004,9.7,6.8,2.9,2.5,5.8,1922,1348,574,2266,1590,676,8.2,\\\"6.7,7.9,8.1,8.1,8.5,8.7,9.2,9.6,9.8,10.3,10.2,10.1,9.7\\\",\\\"5.6,6.3,6.4,6.2,6.5,6.6,7.0,7.2,7.1,7.4,7.5,7.4,6.8\\\",\\\"1.1,1.6,1.7,1.9,2.0,2.0,2.2,2.3,2.7,2.9,2.6,2.7,2.9\\\",\\\"bedburg, stadt\\\"\\n05362008,60390,29779,30611,50126,05362008,9.8,6.8,3.0,2.8,6.1,5382,3701,1681,5892,4090,1802,8.9,\\\"6.9,8.4,8.5,8.6,9.0,9.2,9.6,9.6,9.8,10.0,10.0,10.0,9.8\\\",\\\"5.6,6.4,6.4,6.4,6.6,6.6,6.9,6.8,6.9,6.9,7.2,7.1,6.8\\\",\\\"1.3,2.0,2.0,2.2,2.4,2.6,2.7,2.8,2.9,3.1,2.8,2.9,3.0\\\",\\\"bergheim, stadt\\\"\\n05362012,44768,21443,23325,50321,05362012,9.0,6.1,2.9,2.8,5.6,3764,2502,1262,4048,2732,1316,8.4,\\\"6.6,7.6,7.7,8.2,8.3,8.5,8.8,8.9,8.9,8.9,9.0,9.0,9.0\\\",\\\"5.3,5.7,5.6,5.8,5.7,5.9,6.0,5.9,5.9,5.9,6.2,6.2,6.1\\\",\\\"1.3,1.9,2.0,2.3,2.6,2.6,2.7,3.1,3.1,3.0,2.7,2.8,2.9\\\",\\\"brühl, stadt\\\"\\n05362016,21232,10453,10779,50189,05362016,9.1,6.3,2.9,2.3,5.0,1551,1071,480,1942,1329,613,7.3,\\\"6.7,7.9,7.6,8.2,8.5,8.8,9.1,9.2,9.2,9.4,9.6,9.5,9.1\\\",\\\"5.5,6.0,5.7,6.0,6.0,6.3,6.4,6.4,6.3,6.3,6.8,6.7,6.3\\\",\\\"1.3,1.9,2.0,2.2,2.5,2.6,2.7,2.8,2.9,3.1,2.8,2.9,2.9\\\",\\\"elsdorf, stadt\\\"\\n05362020,49786,24168,25618,50374,05362020,8.6,6.0,2.6,2.3,5.2,3723,2602,1121,4273,2966,1307,7.5,\\\"6.1,7.4,7.4,7.6,8.0,8.2,8.6,8.9,8.9,8.9,8.8,8.8,8.6\\\",\\\"5.0,5.6,5.6,5.6,5.9,5.8,6.2,6.3,6.2,6.1,6.2,6.1,6.0\\\",\\\"1.1,1.7,1.8,2.0,2.1,2.4,2.5,2.6,2.7,2.8,2.6,2.6,2.6\\\",\\\"erftstadt, stadt\\\"\\n05362024,51999,25311,26688,50226,05362024,9.4,6.2,3.2,3.4,6.2,4984,3215,1769,4883,3207,1676,9.6,\\\"7.2,8.5,8.6,9.0,9.2,9.4,9.9,9.8,9.7,9.9,9.7,9.6,9.4\\\",\\\"5.7,6.3,6.2,6.4,6.3,6.4,6.6,6.5,6.4,6.5,6.5,6.5,6.2\\\",\\\"1.5,2.2,2.4,2.6,2.9,3.0,3.2,3.3,3.3,3.4,3.1,3.1,3.2\\\",\\\"frechen, stadt\\\"\\n05362028,59496,29173,30323,50354,05362028,9.6,6.3,3.3,3.3,6.3,5744,3764,1980,5691,3729,1962,9.7,\\\"7.2,8.6,8.8,8.9,9.2,9.4,9.6,9.7,9.7,10.2,9.7,9.9,9.6\\\",\\\"5.8,6.5,6.4,6.4,6.4,6.5,6.4,6.5,6.3,6.6,6.6,6.5,6.3\\\",\\\"1.4,2.1,2.3,2.5,2.7,3.0,3.2,3.2,3.5,3.7,3.1,3.3,3.3\\\",\\\"hürth, stadt\\\"\\n05362032,65477,32337,33140,50171,05362032,9.8,6.6,3.2,3.9,6.3,6680,4154,2526,6388,4289,2099,10.2,\\\"7.2,8.6,8.7,9.0,9.4,9.7,9.8,9.8,10.0,10.3,10.1,10.0,9.8\\\",\\\"5.8,6.6,6.5,6.6,6.8,6.7,6.8,6.7,6.8,6.9,7.0,6.9,6.6\\\",\\\"1.3,2.0,2.2,2.4,2.7,3.0,3.0,3.0,3.2,3.4,3.1,3.1,3.2\\\",\\\"kerpen, kolpingstadt\\\"\\n05362036,54200,26267,27933,50259,05362036,8.4,5.6,2.8,3.5,6.7,5525,3643,1882,4563,3058,1505,10.2,\\\"6.3,7.3,7.6,7.8,7.9,8.1,8.5,8.6,8.5,8.7,8.5,8.7,8.4\\\",\\\"5.1,5.6,5.6,5.7,5.7,5.7,5.9,6.0,5.8,6.0,5.9,6.0,5.6\\\",\\\"1.2,1.7,2.0,2.2,2.2,2.4,2.6,2.6,2.7,2.8,2.7,2.7,2.8\\\",\\\"pulheim, stadt\\\"\\n05362040,35975,17843,18132,50389,05362040,9.9,6.7,3.1,2.6,5.2,2797,1856,941,3544,2428,1116,7.8,\\\"7.3,8.5,8.6,9.4,10.0,10.2,10.5,10.4,10.5,10.5,10.2,10.1,9.9\\\",\\\"5.8,6.2,6.3,6.6,6.9,7.0,7.0,7.0,6.9,7.0,7.0,7.0,6.7\\\",\\\"1.5,2.3,2.4,2.8,3.1,3.3,3.4,3.4,3.6,3.5,3.2,3.1,3.1\\\",\\\"wesseling, stadt\\\"\\n05366004,17367,8536,8831,53902,05366004,10.5,7.2,3.3,2.6,5.8,1447,1000,447,1825,1248,577,8.3,\\\"6.8,8.0,8.7,8.9,9.1,9.4,9.6,10.0,10.1,10.3,10.4,10.8,10.5\\\",\\\"5.7,6.3,6.7,6.9,6.8,6.9,6.8,7.0,7.0,7.1,7.3,7.4,7.2\\\",\\\"1.1,1.7,2.0,2.1,2.3,2.6,2.8,3.0,3.0,3.2,3.1,3.4,3.3\\\",\\\"bad münstereifel, stadt\\\"\\n05366008,8471,4343,4128,53945,05366008,10.1,6.9,3.2,3.0,5.8,752,494,258,856,587,269,8.9,\\\"7.5,8.7,9.0,9.2,9.5,9.9,10.0,10.0,10.2,10.0,10.2,10.1,10.1\\\",\\\"6.3,6.9,7.0,7.0,7.3,7.4,7.4,7.0,7.1,7.0,7.1,6.9,6.9\\\",\\\"1.2,1.8,2.0,2.2,2.2,2.5,2.6,3.0,3.0,3.0,3.1,3.1,3.2\\\",blankenheim\\n05366012,4236,2085,2151,53949,05366012,11.9,8.4,3.5,1.9,5.4,311,229,82,502,354,148,7.3,\\\"8.5,9.3,9.3,10.0,10.5,10.2,11.0,11.4,11.7,11.2,11.7,11.9,11.9\\\",\\\"6.7,7.4,7.3,8.1,8.1,7.8,8.1,8.3,8.5,7.7,8.4,8.4,8.4\\\",\\\"1.8,1.9,2.0,1.9,2.4,2.5,2.9,3.1,3.2,3.5,3.4,3.5,3.5\\\",dahlem\\n05366016,56769,27854,28915,53879,05366016,9.8,6.7,3.1,3.0,6.7,5497,3783,1714,5587,3803,1784,9.7,\\\"7.4,8.6,8.9,9.5,9.8,10.0,10.0,10.1,10.2,10.0,9.9,10.1,9.8\\\",\\\"6.0,6.5,6.6,6.9,7.0,7.1,6.9,6.9,7.0,6.7,6.9,6.9,6.7\\\",\\\"1.4,2.1,2.2,2.5,2.7,2.9,3.1,3.2,3.2,3.3,3.0,3.2,3.1\\\",\\\"euskirchen, stadt\\\"\\n05366020,8094,4125,3969,53940,05366020,11.5,7.6,3.9,2.4,4.5,565,367,198,929,615,314,7.0,\\\"8.0,9.5,9.9,10.2,10.8,11.0,11.0,11.5,11.9,12.0,11.9,11.8,11.5\\\",\\\"6.4,6.9,7.3,7.4,8.1,7.9,7.8,8.1,8.3,7.9,8.2,7.7,7.6\\\",\\\"1.6,2.5,2.5,2.9,2.7,3.1,3.3,3.4,3.6,4.2,3.7,4.0,3.9\\\",hellenthal\\n05366024,11229,5606,5623,53925,05366024,10.8,7.3,3.5,6.1,9.7,1768,1085,683,1216,822,394,15.7,\\\"7.6,9.0,9.0,9.4,9.7,10.0,10.0,10.0,10.4,10.8,11.1,11.1,10.8\\\",\\\"6.3,7.1,7.1,7.3,7.4,7.3,7.3,7.3,7.2,7.5,7.9,7.6,7.3\\\",\\\"1.3,1.9,2.0,2.1,2.4,2.7,2.7,2.8,3.1,3.2,3.2,3.5,3.5\\\",kall\\n05366028,27170,13551,13619,53894,05366028,10.0,6.9,3.1,2.7,5.5,2205,1482,723,2729,1880,849,8.1,\\\"7.6,8.6,8.7,9.1,9.3,9.6,9.7,10.0,10.3,10.6,10.3,10.3,10.0\\\",\\\"6.1,6.5,6.6,6.8,6.8,7.0,7.0,7.1,7.1,7.3,7.4,7.3,6.9\\\",\\\"1.5,2.1,2.2,2.3,2.5,2.6,2.7,2.9,3.2,3.3,2.9,3.0,3.1\\\",\\\"mechernich, stadt\\\"\\n05366032,7469,3713,3756,53947,05366032,11.2,7.2,4.0,2.8,5.2,598,392,206,839,541,298,8.0,\\\"7.6,8.9,8.8,8.9,9.2,10.3,9.9,10.2,10.4,10.7,11.2,11.1,11.2\\\",\\\"6.2,6.9,6.8,6.7,6.9,7.4,6.9,7.0,7.1,7.3,7.5,7.5,7.2\\\",\\\"1.4,2.0,2.1,2.2,2.3,2.9,3.0,3.2,3.4,3.4,3.6,3.6,4.0\\\",nettersheim\\n05366036,13272,6623,6649,53937,05366036,11.4,7.7,3.7,3.5,7.7,1496,1028,468,1513,1021,492,11.3,\\\"8.5,10.0,10.2,10.9,11.0,11.1,11.5,12.0,11.9,12.3,11.8,12.1,11.4\\\",\\\"6.8,7.5,7.7,8.1,7.8,7.8,8.0,8.6,8.4,8.3,8.2,8.3,7.7\\\",\\\"1.7,2.4,2.5,2.8,3.2,3.3,3.4,3.4,3.6,4.1,3.7,3.7,3.7\\\",\\\"schleiden, stadt\\\"\\n05366040,16997,8404,8593,53919,05366040,9.2,6.0,3.2,1.9,4.0,998,683,315,1571,1027,544,5.9,\\\"6.4,7.7,7.7,8.3,8.5,8.8,9.2,9.2,9.1,9.3,9.2,9.5,9.2\\\",\\\"5.3,6.0,5.7,6.0,6.0,6.1,6.2,6.2,6.0,6.2,6.1,6.4,6.0\\\",\\\"1.1,1.8,2.1,2.3,2.6,2.8,3.0,3.0,3.1,3.1,3.0,3.1,3.2\\\",weilerswist\\n05366044,20091,9919,10172,53909,05366044,10.3,7.0,3.3,3.1,6.1,1853,1231,622,2079,1415,664,9.2,\\\"7.7,8.7,9.1,9.6,9.6,10.2,10.2,10.1,10.3,10.5,10.5,10.9,10.3\\\",\\\"6.3,6.7,6.8,7.1,7.1,7.3,7.3,7.1,7.2,7.0,7.3,7.5,7.0\\\",\\\"1.3,2.0,2.2,2.4,2.5,2.9,2.9,3.0,3.1,3.4,3.2,3.4,3.3\\\",\\\"zülpich, stadt\\\"\\n05370004,43350,21170,22180,41812,05370004,10.1,7.1,3.1,3.0,7.7,4665,3352,1313,4386,3058,1328,10.8,\\\"8.2,9.3,9.2,9.5,9.8,9.9,9.9,10.1,10.3,10.6,10.6,10.6,10.1\\\",\\\"6.9,7.4,7.3,7.4,7.5,7.4,7.3,7.4,7.4,7.4,7.7,7.6,7.1\\\",\\\"1.3,1.9,2.0,2.1,2.3,2.5,2.7,2.7,2.9,3.1,2.9,3.1,3.1\\\",\\\"erkelenz, stadt\\\"\\n05370008,12015,6002,6013,52538,05370008,9.9,7.0,2.8,2.5,7.4,1190,885,305,1187,847,340,9.9,\\\"7.9,9.0,9.2,9.4,9.6,10.0,10.1,10.6,10.5,10.1,10.2,10.3,9.9\\\",\\\"6.8,7.5,7.5,7.8,7.6,7.7,7.8,7.9,7.8,7.5,7.7,7.6,7.0\\\",\\\"1.1,1.5,1.6,1.6,2.1,2.3,2.3,2.7,2.7,2.6,2.5,2.7,2.8\\\",gangelt\\n05370012,26963,13424,13539,52511,05370012,11.1,7.9,3.2,3.1,7.8,2941,2096,845,3006,2135,871,10.9,\\\"8.0,9.1,8.9,9.2,9.7,9.9,10.2,10.0,10.5,11.2,11.2,11.2,11.1\\\",\\\"6.9,7.4,7.1,7.3,7.4,7.4,7.6,7.2,7.5,7.8,8.0,7.9,7.9\\\",\\\"1.1,1.8,1.8,2.0,2.3,2.6,2.6,2.9,3.0,3.3,3.2,3.3,3.2\\\",\\\"geilenkirchen, stadt\\\"\\n05370016,41538,20387,21151,52525,05370016,10.4,7.6,2.9,3.4,9.6,5378,3980,1398,4323,3139,1184,12.9,\\\"9.3,10.6,10.6,10.7,10.7,10.8,11.0,11.2,11.1,10.9,10.8,10.7,10.4\\\",\\\"8.1,8.9,8.7,8.7,8.5,8.5,8.4,8.5,8.3,8.1,8.2,8.0,7.6\\\",\\\"1.3,1.7,1.8,2.0,2.2,2.3,2.6,2.7,2.8,2.8,2.6,2.7,2.9\\\",\\\"heinsberg, stadt\\\"\\n05370020,39531,19537,19994,41836,05370020,10.0,7.3,2.7,2.0,5.9,3134,2324,810,3967,2903,1064,7.9,\\\"8.1,9.5,9.6,10.0,10.3,10.6,10.4,10.6,10.7,10.7,10.7,10.6,10.0\\\",\\\"7.1,7.9,7.9,7.9,8.1,8.2,8.0,8.0,8.0,7.8,8.0,7.8,7.3\\\",\\\"1.1,1.7,1.8,2.1,2.1,2.4,2.4,2.6,2.7,2.9,2.7,2.7,2.7\\\",\\\"hückelhoven, stadt\\\"\\n05370024,10167,5173,4994,52538,05370024,7.8,6.1,1.7,1.5,5.7,730,577,153,794,623,171,7.2,\\\"6.0,7.1,7.1,7.4,7.7,7.9,8.2,8.3,8.4,8.1,8.0,7.9,7.8\\\",\\\"5.1,6.0,5.8,6.2,6.2,6.4,6.5,6.6,6.6,6.4,6.4,6.2,6.1\\\",\\\"0.9,1.1,1.3,1.2,1.4,1.5,1.7,1.6,1.9,1.7,1.6,1.7,1.7\\\",selfkant\\n05370028,24377,12270,12107,52531,05370028,10.6,7.9,2.7,2.3,6.8,2215,1650,565,2594,1932,662,9.1,\\\"9.0,10.2,10.1,10.7,10.8,11.3,11.4,11.0,11.1,11.2,11.6,11.5,10.6\\\",\\\"7.8,8.3,8.2,8.6,8.5,9.0,8.9,8.2,8.2,8.4,8.8,8.7,7.9\\\",\\\"1.2,1.8,1.9,2.1,2.2,2.3,2.5,2.8,2.9,2.8,2.8,2.7,2.7\\\",\\\"übach-palenberg, stadt\\\"\\n05370032,8861,4447,4414,52525,05370032,9.9,7.5,2.4,1.8,6.2,709,553,156,876,665,211,8.0,\\\"7.8,8.4,8.8,8.9,9.1,9.7,9.7,10.2,10.5,10.7,10.3,10.3,9.9\\\",\\\"6.8,7.0,7.2,7.2,7.3,7.4,7.4,7.8,7.9,7.9,7.9,8.0,7.5\\\",\\\"1.0,1.4,1.6,1.7,1.8,2.2,2.2,2.4,2.6,2.7,2.3,2.3,2.4\\\",waldfeucht\\n05370036,17898,8889,9009,41849,05370036,9.7,6.9,2.8,2.1,5.4,1347,975,372,1734,1233,501,7.5,\\\"8.5,9.3,9.6,9.9,9.9,10.0,9.9,10.2,10.3,10.5,10.3,10.3,9.7\\\",\\\"7.5,7.8,7.9,8.0,7.9,7.5,7.5,7.7,7.6,7.5,7.5,7.4,6.9\\\",\\\"1.0,1.5,1.7,1.9,2.0,2.5,2.3,2.5,2.7,2.9,2.8,2.9,2.8\\\",\\\"wassenberg, stadt\\\"\\n05370040,27827,13657,14170,41844,05370040,10.1,7.1,3.1,2.6,6.1,2412,1695,717,2816,1962,854,8.7,\\\"7.5,8.8,8.8,9.1,9.3,9.6,10.0,10.3,10.3,10.5,10.5,10.6,10.1\\\",\\\"6.2,7.0,6.8,7.0,7.0,7.1,7.3,7.5,7.3,7.4,7.5,7.6,7.1\\\",\\\"1.3,1.8,2.0,2.2,2.3,2.5,2.7,2.8,2.9,3.0,3.0,3.1,3.1\\\",\\\"wegberg, stadt\\\"\\n05374004,18940,9294,9646,51702,05374004,10.1,7.2,2.9,2.0,4.9,1315,937,378,1911,1365,546,6.9,\\\"7.0,8.1,8.3,8.8,9.0,9.5,9.1,9.2,9.5,10.0,10.0,10.0,10.1\\\",\\\"5.7,6.0,6.1,6.3,6.6,6.6,6.5,6.7,6.7,7.0,7.2,7.2,7.2\\\",\\\"1.4,2.0,2.2,2.5,2.5,2.9,2.6,2.5,2.8,3.0,2.7,2.9,2.9\\\",\\\"bergneustadt, stadt\\\"\\n05374008,19307,9395,9912,51766,05374008,10.6,6.7,3.8,3.6,6.3,1902,1215,687,2043,1300,743,9.9,\\\"7.8,9.3,9.2,9.5,9.7,10.1,10.0,10.2,10.6,10.7,10.7,10.6,10.6\\\",\\\"6.2,7.0,6.6,6.8,6.8,6.8,6.7,6.8,7.0,6.8,7.2,7.0,6.7\\\",\\\"1.6,2.4,2.5,2.7,2.9,3.3,3.2,3.4,3.6,3.9,3.5,3.6,3.8\\\",engelskirchen\\n05374012,50412,24870,25542,51643,05374012,10.9,7.2,3.6,3.9,8.0,5957,4008,1949,5477,3648,1829,11.8,\\\"7.9,8.9,9.0,9.4,9.7,10.1,10.0,10.3,10.3,10.5,10.8,10.9,10.9\\\",\\\"6.2,6.6,6.4,6.7,6.8,6.9,7.0,7.0,6.8,6.8,7.4,7.5,7.2\\\",\\\"1.7,2.4,2.6,2.7,2.9,3.1,3.0,3.3,3.4,3.7,3.4,3.5,3.6\\\",\\\"gummersbach, stadt\\\"\\n05374016,15275,7620,7655,42499,05374016,10.7,7.2,3.5,3.0,5.9,1354,901,453,1629,1099,530,8.9,\\\"8.5,9.7,10.1,10.3,10.6,10.9,10.6,10.6,10.6,11.0,11.1,11.0,10.7\\\",\\\"6.7,7.2,7.4,7.3,7.4,7.7,7.5,7.5,7.2,7.6,7.7,7.6,7.2\\\",\\\"1.8,2.4,2.7,3.0,3.2,3.2,3.1,3.2,3.4,3.4,3.4,3.4,3.5\\\",\\\"hückeswagen, schloss-stadt\\\"\\n05374020,21382,10491,10891,51789,05374020,11.9,7.9,3.9,3.4,6.9,2188,1469,719,2536,1695,841,10.2,\\\"8.3,9.5,10.1,10.4,10.9,11.4,11.3,11.7,11.8,12.3,12.1,12.0,11.9\\\",\\\"6.8,7.3,7.6,7.6,7.8,7.9,7.8,8.1,8.1,8.3,8.4,8.1,7.9\\\",\\\"1.5,2.2,2.5,2.8,3.0,3.5,3.5,3.6,3.7,4.0,3.7,3.9,3.9\\\",lindlar\\n05374024,13560,6750,6810,51709,05374024,10.5,6.8,3.7,2.7,4.8,1017,647,370,1423,924,499,7.5,\\\"7.6,9.2,9.3,9.4,9.9,10.1,9.3,10.0,10.3,10.4,10.6,10.7,10.5\\\",\\\"6.2,6.9,6.8,6.6,7.0,6.8,6.5,6.7,6.7,6.8,7.1,7.0,6.8\\\",\\\"1.4,2.3,2.5,2.7,2.9,3.3,2.8,3.3,3.6,3.6,3.6,3.7,3.7\\\",marienheide\\n05374028,10402,5228,5174,51597,05374028,11.7,8.1,3.6,3.4,6.2,998,649,349,1214,844,370,9.6,\\\"8.5,9.7,9.2,9.7,10.5,10.3,10.5,10.4,11.1,11.5,11.5,11.3,11.7\\\",\\\"7.1,7.5,7.1,7.2,7.9,7.3,7.7,7.8,7.9,7.9,8.2,7.7,8.1\\\",\\\"1.5,2.2,2.1,2.4,2.6,3.0,2.8,2.7,3.1,3.5,3.3,3.6,3.6\\\",morsbach\\n05374032,17002,8310,8692,51588,05374032,9.9,6.5,3.4,2.7,5.1,1335,871,464,1690,1104,586,7.9,\\\"7.8,8.7,8.7,8.9,9.4,9.7,9.7,10.0,10.0,10.0,10.3,10.4,9.9\\\",\\\"6.5,6.6,6.6,6.5,6.7,6.7,6.7,7.0,6.7,6.5,7.0,7.0,6.5\\\",\\\"1.3,2.1,2.1,2.4,2.7,3.0,3.0,3.0,3.3,3.4,3.3,3.4,3.4\\\",nümbrecht\\n05374036,22386,10916,11470,42477,05374036,10.7,7.1,3.6,3.7,6.6,2310,1488,822,2397,1587,810,10.3,\\\"8.7,10.3,10.3,10.6,11.2,11.3,10.7,11.3,11.6,11.2,10.9,10.9,10.7\\\",\\\"6.5,7.3,7.2,7.6,7.7,7.5,7.3,7.5,7.5,7.2,7.3,7.2,7.1\\\",\\\"2.2,3.0,3.1,3.1,3.5,3.8,3.4,3.8,4.1,4.0,3.7,3.7,3.6\\\",\\\"radevormwald, stadt auf der höhe\\\"\\n05374040,18837,9499,9338,51580,05374040,10.5,7.0,3.5,4.7,8.1,2413,1531,882,1971,1319,652,12.8,\\\"7.9,8.9,9.0,9.1,9.3,9.8,9.7,9.7,10.0,10.5,10.7,10.8,10.5\\\",\\\"6.4,6.8,6.7,6.7,6.7,6.9,6.8,6.7,6.8,7.1,7.6,7.4,7.0\\\",\\\"1.5,2.1,2.3,2.4,2.7,3.0,2.9,2.9,3.2,3.4,3.1,3.4,3.5\\\",reichshof\\n05374044,19194,9389,9805,51545,05374044,10.1,6.6,3.5,2.8,6.2,1738,1191,547,1941,1275,666,9.1,\\\"8.4,9.4,8.8,9.1,9.2,9.2,9.2,9.2,9.8,9.9,10.1,10.6,10.1\\\",\\\"6.9,6.9,6.4,6.5,6.4,6.6,6.5,6.6,6.4,6.6,7.0,7.2,6.6\\\",\\\"1.5,2.5,2.4,2.5,2.8,2.6,2.7,2.7,3.4,3.3,3.1,3.4,3.5\\\",\\\"waldbröl, stadt\\\"\\n05374048,25274,12253,13021,51674,05374048,10.5,6.9,3.6,5.1,9.3,3628,2346,1282,2653,1734,919,14.4,\\\"8.1,9.0,9.0,9.2,9.5,10.1,9.7,9.7,10.1,10.2,10.5,10.5,10.5\\\",\\\"6.4,6.9,6.6,6.6,6.8,6.9,6.6,6.6,6.7,6.7,7.0,7.0,6.9\\\",\\\"1.7,2.2,2.3,2.7,2.8,3.2,3.0,3.1,3.4,3.6,3.5,3.5,3.6\\\",\\\"wiehl, stadt\\\"\\n05374052,21481,10655,10826,51688,05374052,12.7,8.3,4.3,3.9,7.7,2490,1646,844,2721,1791,930,11.6,\\\"9.4,10.9,11.1,11.3,11.6,12.1,11.5,11.5,11.9,12.9,12.8,12.7,12.7\\\",\\\"7.4,8.1,8.2,7.9,8.1,8.4,8.0,8.0,8.0,8.5,8.6,8.4,8.3\\\",\\\"2.0,2.9,2.9,3.3,3.5,3.7,3.5,3.5,3.8,4.5,4.2,4.2,4.3\\\",\\\"wipperfürth, hansestadt\\\"\\n05378004,111366,53479,57887,51465,05378004,9.3,6.2,3.0,3.2,6.5,10797,7252,3545,10327,6960,3367,9.7,\\\"6.9,8.2,8.4,8.8,9.1,9.3,9.8,9.7,9.9,9.7,9.6,9.5,9.3\\\",\\\"5.5,6.1,6.1,6.3,6.4,6.5,6.8,6.6,6.7,6.5,6.7,6.5,6.2\\\",\\\"1.4,2.1,2.3,2.5,2.6,2.8,3.0,3.0,3.2,3.2,2.9,3.0,3.0\\\",\\\"bergisch gladbach, stadt\\\"\\n05378008,18256,9037,9219,51399,05378008,10.0,6.8,3.2,2.7,6.0,1594,1099,495,1826,1241,585,8.7,\\\"6.9,8.2,8.1,8.6,9.1,9.2,9.5,9.9,10.1,10.3,10.1,10.1,10.0\\\",\\\"5.5,5.9,5.7,6.1,6.5,6.3,6.7,6.9,6.9,6.9,7.0,7.0,6.8\\\",\\\"1.5,2.3,2.3,2.5,2.6,2.9,2.8,3.0,3.2,3.4,3.0,3.1,3.2\\\",\\\"burscheid, stadt\\\"\\n05378012,19893,9823,10070,51515,05378012,11.1,7.6,3.6,3.9,6.5,2083,1299,784,2213,1505,708,10.5,\\\"9.0,10.3,10.6,11.0,11.0,11.4,11.4,11.2,11.6,11.9,11.7,11.7,11.1\\\",\\\"7.2,7.8,7.9,7.9,7.9,7.9,8.0,7.8,7.9,8.1,8.1,8.0,7.6\\\",\\\"1.8,2.6,2.7,3.1,3.1,3.5,3.4,3.4,3.7,3.8,3.6,3.7,3.6\\\",kürten\\n05378016,27937,13468,14469,42799,05378016,8.5,5.9,2.6,2.5,5.4,2223,1521,702,2378,1662,716,8.0,\\\"6.4,7.3,7.5,8.1,8.3,8.5,8.3,8.5,8.8,8.7,8.6,8.9,8.5\\\",\\\"5.3,5.6,5.6,6.0,6.0,6.0,5.9,6.1,6.2,6.0,6.2,6.3,5.9\\\",\\\"1.1,1.6,1.9,2.1,2.3,2.5,2.4,2.4,2.7,2.7,2.5,2.6,2.6\\\",\\\"leichlingen (rheinland), blütenstadt\\\"\\n05378020,15123,7456,7667,51519,05378020,8.8,5.8,3.0,2.0,3.7,867,561,306,1332,875,457,5.7,\\\"6.2,7.3,7.1,7.4,8.0,8.4,8.5,8.6,8.8,9.4,9.4,9.3,8.8\\\",\\\"5.2,5.6,5.4,5.5,5.8,5.9,5.9,5.9,6.0,6.5,6.5,6.2,5.8\\\",\\\"1.0,1.7,1.7,1.9,2.2,2.5,2.6,2.7,2.8,2.9,2.9,3.1,3.0\\\",odenthal\\n05378024,27264,13439,13825,51491,05378024,10.5,7.0,3.5,3.2,6.3,2574,1711,863,2870,1911,959,9.4,\\\"7.6,9.4,9.5,9.9,10.2,10.6,10.5,10.5,10.7,10.8,10.5,10.7,10.5\\\",\\\"6.0,6.9,6.9,7.1,7.3,7.5,7.2,7.2,7.2,7.2,7.1,7.2,7.0\\\",\\\"1.6,2.5,2.5,2.8,2.9,3.2,3.3,3.3,3.5,3.6,3.4,3.5,3.5\\\",\\\"overath, stadt\\\"\\n05378028,28386,13934,14452,51503,05378028,9.2,6.1,3.1,2.4,5.2,2178,1485,693,2624,1735,889,7.7,\\\"6.4,7.8,7.8,8.1,8.4,8.9,9.0,9.0,9.3,9.3,9.2,9.5,9.2\\\",\\\"5.1,5.7,5.6,5.8,5.9,6.1,6.1,6.0,6.1,6.1,6.3,6.3,6.1\\\",\\\"1.4,2.0,2.2,2.3,2.4,2.8,2.9,3.0,3.2,3.2,2.9,3.2,3.1\\\",\\\"rösrath, stadt\\\"\\n05378032,34504,16802,17702,42929,05378032,10.5,7.0,3.5,3.6,7.0,3666,2422,1244,3619,2403,1216,10.6,\\\"8.1,9.5,9.5,9.8,10.2,10.6,10.3,10.5,10.6,10.5,10.4,10.8,10.5\\\",\\\"6.3,7.1,6.9,7.1,7.3,7.3,7.2,7.2,7.1,7.0,7.0,7.2,7.0\\\",\\\"1.8,2.4,2.7,2.7,3.0,3.2,3.1,3.3,3.5,3.5,3.4,3.6,3.5\\\",\\\"wermelskirchen, stadt\\\"\\n05382004,23435,11515,11920,53347,05382004,9.9,6.3,3.7,2.0,3.6,1296,836,460,2324,1467,857,5.5,\\\"6.8,8.1,8.3,8.6,9.2,9.6,9.7,9.8,10.0,10.0,9.8,9.9,9.9\\\",\\\"5.1,5.6,5.6,5.9,6.0,6.2,6.2,6.4,6.5,6.3,6.3,6.6,6.3\\\",\\\"1.8,2.4,2.7,2.7,3.2,3.3,3.5,3.4,3.5,3.7,3.5,3.4,3.7\\\",alfter\\n05382008,25654,12337,13317,53604,05382008,9.7,6.4,3.3,4.3,8.6,3307,2216,1091,2495,1640,855,12.9,\\\"6.8,8.0,8.3,8.6,8.8,9.6,9.6,9.6,9.8,9.7,9.8,9.8,9.7\\\",\\\"5.2,5.7,5.9,5.9,6.0,6.5,6.3,6.3,6.4,6.4,6.6,6.4,6.4\\\",\\\"1.6,2.3,2.4,2.7,2.8,3.1,3.3,3.3,3.3,3.3,3.2,3.4,3.3\\\",\\\"bad honnef, stadt\\\"\\n05382012,47636,23280,24356,53332,05382012,9.6,6.1,3.4,3.1,5.8,4240,2743,1497,4553,2912,1641,8.9,\\\"6.7,8.1,8.0,8.4,8.6,8.9,9.0,9.3,9.6,10.0,10.0,10.0,9.6\\\",\\\"5.1,5.8,5.6,5.7,5.8,5.9,6.0,6.1,6.1,6.3,6.6,6.5,6.1\\\",\\\"1.6,2.3,2.4,2.7,2.8,3.0,3.1,3.2,3.5,3.7,3.4,3.5,3.4\\\",\\\"bornheim, stadt\\\"\\n05382016,18864,9428,9436,53783,05382016,9.7,6.8,2.9,2.4,5.7,1538,1082,456,1827,1285,542,8.2,\\\"7.5,8.4,8.6,8.6,8.8,9.0,9.2,9.1,9.6,10.3,9.9,10.0,9.7\\\",\\\"6.3,6.5,6.5,6.4,6.5,6.5,6.6,6.4,6.7,7.1,7.2,7.2,6.8\\\",\\\"1.3,1.9,2.2,2.1,2.3,2.6,2.6,2.7,2.9,3.2,2.7,2.9,2.9\\\",eitorf\\n05382020,46902,22868,24034,53773,05382020,10.0,6.5,3.4,3.1,5.9,4184,2745,1439,4673,3072,1601,8.9,\\\"7.2,8.7,8.6,9.0,9.3,9.7,9.7,9.8,9.9,10.2,10.3,10.2,10.0\\\",\\\"5.8,6.6,6.3,6.6,6.6,6.7,6.7,6.6,6.7,6.7,7.0,6.9,6.5\\\",\\\"1.4,2.1,2.3,2.5,2.7,3.0,3.0,3.2,3.3,3.5,3.3,3.3,3.4\\\",\\\"hennef (sieg), stadt\\\"\\n05382024,40702,19858,20844,53639,05382024,9.2,6.1,3.1,2.3,4.9,2943,1990,953,3754,2487,1267,7.2,\\\"6.8,8.3,8.4,8.6,8.9,9.1,9.4,9.4,9.4,9.5,9.4,9.4,9.2\\\",\\\"5.4,6.1,6.1,6.2,6.3,6.3,6.5,6.4,6.2,6.3,6.4,6.4,6.1\\\",\\\"1.4,2.2,2.3,2.4,2.6,2.8,2.9,3.0,3.2,3.3,3.0,3.0,3.1\\\",\\\"königswinter, stadt\\\"\\n05382028,30348,14915,15433,53797,05382028,9.0,6.1,2.9,5.5,14.3,5995,4330,1665,2718,1837,881,19.8,\\\"6.7,7.6,7.7,8.2,8.4,8.5,8.5,8.7,8.6,9.3,9.1,9.2,9.0\\\",\\\"5.5,5.7,5.7,6.0,5.9,6.0,6.0,6.0,5.7,6.2,6.2,6.4,6.1\\\",\\\"1.2,1.9,1.9,2.2,2.5,2.5,2.5,2.7,2.9,3.1,2.9,2.9,2.9\\\",\\\"lohmar, stadt\\\"\\n05382032,24357,11905,12452,53340,05382032,9.2,6.3,2.9,3.6,6.6,2468,1600,868,2229,1526,703,10.1,\\\"7.3,8.6,8.5,9.0,9.4,9.7,9.9,9.9,9.9,10.0,9.7,9.6,9.2\\\",\\\"5.9,6.4,6.4,6.6,6.9,7.0,7.0,6.7,6.8,6.6,6.8,6.6,6.3\\\",\\\"1.4,2.1,2.1,2.4,2.5,2.7,2.8,3.3,3.1,3.4,2.9,3.0,2.9\\\",\\\"meckenheim, stadt\\\"\\n05382036,14468,7078,7390,53804,05382036,10.1,6.8,3.3,2.7,4.8,1086,692,394,1459,977,482,7.5,\\\"7.0,8.3,8.3,8.6,9.0,9.3,9.5,9.6,10.0,10.4,10.5,10.5,10.1\\\",\\\"5.9,6.4,6.2,6.5,6.6,6.6,6.8,6.6,6.8,6.8,7.2,7.2,6.8\\\",\\\"1.2,1.9,2.0,2.1,2.4,2.7,2.8,3.0,3.2,3.6,3.3,3.4,3.3\\\",much\\n05382040,19862,9811,10051,53819,05382040,9.3,6.1,3.2,2.2,5.0,1425,984,441,1848,1217,631,7.2,\\\"6.8,7.9,8.3,8.9,8.9,9.3,9.4,9.3,9.3,10.1,10.1,9.8,9.3\\\",\\\"5.4,5.9,6.0,6.4,6.4,6.5,6.6,6.4,6.3,6.8,6.9,6.7,6.1\\\",\\\"1.4,2.0,2.3,2.5,2.5,2.8,2.9,2.9,3.0,3.3,3.2,3.1,3.2\\\",neunkirchen-seelscheid\\n05382044,37583,18543,19040,53859,05382044,9.2,5.9,3.3,2.0,4.0,2234,1494,740,3447,2201,1246,5.9,\\\"7.0,8.1,8.2,8.6,8.8,9.1,9.2,9.1,9.4,9.5,9.4,9.3,9.2\\\",\\\"5.6,5.9,5.8,6.0,6.0,6.1,5.9,5.9,6.0,6.0,6.1,6.0,5.9\\\",\\\"1.4,2.2,2.4,2.6,2.8,3.0,3.3,3.2,3.3,3.5,3.2,3.2,3.3\\\",\\\"niederkassel, stadt\\\"\\n05382048,27224,13508,13716,53359,05382048,10.0,6.8,3.2,3.3,7.2,2839,1947,892,2728,1848,880,10.4,\\\"7.3,8.4,8.6,8.7,9.2,9.5,9.7,9.8,9.9,10.3,9.9,10.1,10.0\\\",\\\"5.8,6.4,6.4,6.4,6.5,6.7,6.9,6.8,6.7,6.9,6.8,6.9,6.8\\\",\\\"1.5,2.0,2.2,2.3,2.7,2.8,2.8,3.0,3.2,3.4,3.1,3.2,3.2\\\",\\\"rheinbach, stadt\\\"\\n05382052,10461,5126,5335,53809,05382052,9.3,6.5,2.8,1.7,3.7,558,382,176,971,680,291,5.3,\\\"6.3,7.8,7.4,8.0,8.5,8.7,9.0,9.3,8.9,9.4,9.1,9.4,9.3\\\",\\\"5.1,5.9,5.6,6.0,6.2,6.1,6.3,6.8,6.3,6.5,6.7,6.8,6.5\\\",\\\"1.2,1.9,1.8,2.0,2.3,2.5,2.7,2.5,2.6,2.9,2.5,2.6,2.8\\\",ruppichteroth\\n05382056,55709,27246,28463,53757,05382056,8.8,5.8,3.0,2.5,4.7,3966,2593,1373,4891,3205,1686,7.1,\\\"6.6,7.8,8.1,8.5,8.7,9.0,9.3,9.1,9.0,9.3,9.2,9.1,8.8\\\",\\\"5.3,5.7,5.8,6.0,6.0,6.0,6.1,6.0,5.8,6.0,6.2,6.1,5.8\\\",\\\"1.4,2.1,2.4,2.6,2.7,3.0,3.2,3.1,3.2,3.4,3.0,3.0,3.0\\\",\\\"sankt augustin, stadt\\\"\\n05382060,41016,20169,20847,53721,05382060,9.4,6.0,3.4,4.0,7.6,4763,3137,1626,3846,2469,1377,11.6,\\\"7.5,8.6,8.8,9.2,9.5,9.7,9.8,9.7,9.7,9.8,9.8,9.8,9.4\\\",\\\"5.9,6.3,6.3,6.5,6.5,6.5,6.5,6.4,6.2,6.2,6.5,6.4,6.0\\\",\\\"1.6,2.3,2.5,2.8,3.0,3.3,3.3,3.3,3.5,3.6,3.3,3.3,3.4\\\",\\\"siegburg, stadt\\\"\\n05382064,18204,8995,9209,53913,05382064,9.0,5.9,3.1,1.9,3.9,1053,704,349,1631,1072,559,5.8,\\\"6.7,8.0,8.0,8.1,8.5,8.8,9.1,9.1,9.0,9.4,9.5,9.3,9.0\\\",\\\"5.5,6.1,5.8,5.8,6.0,6.1,6.3,6.3,6.0,6.2,6.4,6.2,5.9\\\",\\\"1.2,1.8,2.1,2.2,2.5,2.7,2.8,2.9,3.0,3.2,3.1,3.1,3.1\\\",swisttal\\n05382068,74400,36404,37996,53840,05382068,9.9,6.3,3.6,3.5,6.4,7330,4747,2583,7369,4680,2689,9.9,\\\"7.1,8.5,8.6,8.8,9.1,9.4,9.5,9.7,9.9,10.3,10.2,10.2,9.9\\\",\\\"5.5,6.1,6.1,6.0,6.1,6.2,6.4,6.4,6.3,6.5,6.6,6.5,6.3\\\",\\\"1.6,2.4,2.5,2.8,3.0,3.2,3.1,3.4,3.6,3.8,3.6,3.7,3.6\\\",\\\"troisdorf, stadt\\\"\\n05382072,20457,10090,10367,53343,05382072,8.9,5.6,3.3,2.2,4.4,1340,891,449,1822,1151,671,6.6,\\\"6.0,7.4,7.7,7.8,8.2,8.6,8.6,8.7,8.8,9.1,9.1,9.0,8.9\\\",\\\"4.7,5.4,5.6,5.6,5.6,5.7,5.6,5.6,5.5,5.6,5.9,5.6,5.6\\\",\\\"1.3,2.0,2.1,2.3,2.7,2.9,3.0,3.1,3.4,3.5,3.2,3.4,3.3\\\",wachtberg\\n05382076,18931,9479,9452,51570,05382076,9.2,6.6,2.6,1.8,4.6,1211,863,348,1738,1251,487,6.4,\\\"6.4,7.1,7.2,7.1,7.4,7.8,7.8,7.9,8.1,8.9,9.2,9.2,9.2\\\",\\\"5.4,5.8,5.8,5.5,5.7,5.8,5.7,5.9,5.9,6.4,6.8,6.8,6.6\\\",\\\"1.0,1.4,1.4,1.6,1.8,2.0,2.0,2.0,2.2,2.4,2.3,2.3,2.6\\\",windeck\\n05512000,117143,57004,60139,46236,05512000,9.4,7.2,2.2,2.0,6.6,10060,7727,2333,10999,8402,2597,8.6,\\\"7.3,8.5,8.4,8.9,9.1,9.3,9.5,9.8,9.9,9.8,9.9,9.8,9.4\\\",\\\"6.3,6.9,6.9,7.2,7.2,7.2,7.4,7.5,7.6,7.4,7.7,7.6,7.2\\\",\\\"1.0,1.5,1.6,1.7,1.9,2.1,2.1,2.3,2.3,2.4,2.2,2.2,2.2\\\",\\\"bottrop, stadt\\\"\\n05513000,260368,129267,131101,45879,05513000,8.7,6.7,2.0,2.3,6.9,23828,17963,5865,22552,17336,5216,9.2,\\\"6.8,8.0,7.8,8.1,8.3,8.5,8.9,9.0,9.0,8.7,8.9,8.9,8.7\\\",\\\"5.8,6.5,6.3,6.5,6.5,6.5,6.8,6.9,6.9,6.6,7.0,6.9,6.7\\\",\\\"1.0,1.5,1.5,1.6,1.8,1.9,2.0,2.1,2.1,2.1,2.0,2.0,2.0\\\",\\\"gelsenkirchen, stadt\\\"\\n05515000,310039,148447,161592,48143,05515000,11.1,7.7,3.3,3.7,8.8,38622,27137,11485,34282,24009,10273,12.5,\\\"8.1,9.8,10.1,10.3,10.6,10.9,11.2,11.0,11.2,11.3,11.1,11.3,11.1\\\",\\\"6.1,7.0,7.1,7.3,7.4,7.4,7.5,7.3,7.4,7.4,7.8,8.0,7.7\\\",\\\"2.0,2.8,3.0,3.0,3.2,3.5,3.7,3.7,3.8,3.9,3.3,3.4,3.3\\\",\\\"münster, stadt\\\"\\n05554004,39277,19613,19664,48683,05554004,15.3,10.4,4.9,5.5,12.1,6940,4767,2173,6013,4092,1921,17.7,\\\"10.9,12.2,12.4,12.8,13.5,14.1,14.5,14.7,15.2,15.4,15.7,15.6,15.3\\\",\\\"9.1,9.7,9.6,9.7,10.1,10.2,10.5,10.5,10.5,10.5,10.9,10.8,10.4\\\",\\\"1.8,2.5,2.8,3.1,3.4,3.9,4.0,4.2,4.6,4.9,4.8,4.9,4.9\\\",\\\"ahaus, stadt\\\"\\n05554008,71443,35039,36404,46395,05554008,12.7,9.0,3.7,3.9,9.9,9831,7058,2773,9043,6411,2632,13.8,\\\"9.6,10.9,10.8,11.1,11.5,11.8,12.3,12.4,12.6,13.0,12.9,12.9,12.7\\\",\\\"7.7,8.3,8.2,8.4,8.5,8.7,9.1,9.1,8.9,9.2,9.4,9.3,9.0\\\",\\\"1.9,2.6,2.6,2.7,2.9,3.1,3.2,3.4,3.6,3.8,3.5,3.6,3.7\\\",\\\"bocholt, stadt\\\"\\n05554012,42272,20803,21469,46325,05554012,12.6,8.7,3.9,4.0,10.0,5896,4210,1686,5319,3659,1660,13.9,\\\"9.5,10.7,11.2,11.7,11.9,12.2,12.4,12.4,12.9,12.7,12.7,13.0,12.6\\\",\\\"7.9,8.4,8.6,8.9,8.9,9.0,9.1,9.1,9.0,8.8,9.1,9.1,8.7\\\",\\\"1.7,2.3,2.6,2.8,3.0,3.2,3.3,3.4,3.8,3.9,3.6,3.9,3.9\\\",\\\"borken, stadt\\\"\\n05554016,17118,8644,8474,48712,05554016,12.8,9.0,3.7,3.2,8.2,1962,1408,554,2184,1544,640,11.5,\\\"9.5,10.6,10.5,11.0,11.4,11.7,11.8,12.0,12.5,12.8,13.1,12.9,12.8\\\",\\\"7.8,8.5,8.2,8.7,8.7,8.8,8.8,8.9,9.1,9.0,9.6,9.2,9.0\\\",\\\"1.6,2.2,2.3,2.3,2.8,2.9,3.1,3.1,3.4,3.8,3.5,3.7,3.7\\\",\\\"gescher, glockenstadt\\\"\\n05554020,47010,23468,23542,48599,05554020,12.0,8.7,3.3,2.9,8.4,5339,3972,1367,5623,4084,1539,11.4,\\\"9.7,10.5,10.3,10.9,11.3,11.6,11.8,11.9,12.3,12.7,12.6,12.5,12.0\\\",\\\"8.4,8.8,8.4,8.6,8.9,8.9,9.0,8.9,9.0,9.2,9.4,9.1,8.7\\\",\\\"1.3,1.7,2.0,2.3,2.4,2.7,2.8,3.0,3.3,3.5,3.2,3.3,3.3\\\",\\\"gronau (westf.), stadt\\\"\\n05554024,8505,4315,4190,48619,05554024,14.3,10.1,4.3,3.8,8.7,1057,737,320,1218,856,362,12.4,\\\"9.9,10.6,10.6,11.1,11.5,12.7,13.5,13.8,13.9,15.0,15.4,15.0,14.3\\\",\\\"8.1,8.3,8.2,8.4,8.4,9.2,10.1,9.7,9.7,10.4,10.9,10.7,10.1\\\",\\\"1.8,2.4,2.4,2.7,3.1,3.5,3.4,4.1,4.2,4.5,4.5,4.4,4.3\\\",heek\\n05554028,8152,4127,4025,46359,05554028,12.8,8.9,3.9,3.2,7.9,905,643,262,1041,727,314,11.1,\\\"9.5,11.4,12.0,11.5,11.8,12.6,12.9,13.0,13.0,12.8,13.1,13.0,12.8\\\",\\\"7.8,8.9,9.4,8.9,9.0,9.6,9.7,9.7,9.5,9.4,9.5,9.4,8.9\\\",\\\"1.6,2.5,2.6,2.5,2.8,3.0,3.2,3.3,3.5,3.4,3.5,3.5,3.9\\\",heiden\\n05554032,10736,5387,5349,46419,05554032,13.4,9.5,3.9,2.9,7.5,1119,803,316,1437,1021,416,10.4,\\\"10.1,11.2,11.1,11.7,12.1,12.6,13.3,13.1,13.5,14.1,13.6,13.4,13.4\\\",\\\"8.3,8.8,8.4,8.9,8.9,9.2,9.8,9.6,9.6,10.0,9.8,9.7,9.5\\\",\\\"1.7,2.4,2.7,2.8,3.2,3.3,3.5,3.5,3.9,4.0,3.8,3.7,3.9\\\",\\\"isselburg, stadt\\\"\\n05554036,7254,3794,3460,48739,05554036,13.7,9.5,4.2,5.0,9.4,1046,680,366,997,689,308,14.4,\\\"10.7,11.7,12.5,12.7,13.1,13.9,14.2,14.4,14.9,14.5,14.8,14.1,13.7\\\",\\\"8.7,9.1,9.6,9.7,9.7,9.9,10.2,10.2,10.5,9.9,10.5,10.0,9.5\\\",\\\"2.0,2.6,2.9,3.0,3.4,4.0,4.0,4.2,4.4,4.5,4.2,4.1,4.2\\\",legden\\n05554040,11378,5735,5643,46348,05554040,12.8,9.0,3.8,3.8,8.4,1382,953,429,1454,1024,430,12.1,\\\"8.5,9.8,10.3,11.2,11.9,12.2,12.9,13.0,13.4,13.3,13.1,13.0,12.8\\\",\\\"7.3,7.8,8.1,8.8,9.2,9.4,9.7,9.4,9.7,9.3,9.5,9.2,9.0\\\",\\\"1.2,2.0,2.2,2.4,2.8,2.8,3.3,3.5,3.7,4.0,3.6,3.7,3.8\\\",raesfeld\\n05554044,14532,7398,7134,48734,05554044,12.0,8.3,3.6,3.0,7.0,1452,1011,441,1741,1212,529,10.0,\\\"8.8,10.3,10.4,11.1,11.4,11.6,11.9,12.1,12.5,12.0,12.0,12.0,12.0\\\",\\\"7.3,8.1,8.2,8.6,8.6,8.5,8.8,8.7,9.0,8.6,8.7,8.4,8.3\\\",\\\"1.5,2.2,2.2,2.5,2.8,3.1,3.1,3.4,3.6,3.4,3.3,3.6,3.6\\\",reken\\n05554048,19284,9622,9662,46414,05554048,12.3,8.8,3.5,3.4,7.1,2031,1374,657,2370,1693,677,10.5,\\\"9.2,10.6,11.0,11.5,11.8,11.7,12.3,12.6,12.6,12.7,13.0,12.9,12.3\\\",\\\"7.5,8.3,8.5,8.9,9.0,8.8,9.1,9.3,9.2,9.1,9.5,9.4,8.8\\\",\\\"1.7,2.3,2.5,2.7,2.8,2.9,3.1,3.3,3.4,3.6,3.5,3.5,3.5\\\",\\\"rhede, stadt\\\"\\n05554052,7280,3895,3385,48624,05554052,12.7,8.7,4.0,4.1,8.2,892,597,295,921,633,288,12.3,\\\"8.8,10.4,10.2,9.8,9.8,10.0,10.5,10.8,10.4,12.8,12.6,12.9,12.7\\\",\\\"7.1,8.1,7.9,7.5,7.4,6.9,7.3,7.6,7.2,8.8,8.9,9.0,8.7\\\",\\\"1.7,2.3,2.3,2.2,2.5,3.0,3.2,3.2,3.2,4.0,3.7,3.9,4.0\\\",schöppingen\\n05554056,20411,10267,10144,48703,05554056,15.3,10.0,5.2,5.3,10.2,3157,2072,1085,3119,2048,1071,15.5,\\\"11.6,13.3,13.1,13.8,14.3,14.6,15.1,15.0,15.5,16.0,15.9,16.0,15.3\\\",\\\"9.5,10.3,10.2,10.4,10.6,10.6,10.8,10.5,10.8,10.8,10.6,10.7,10.0\\\",\\\"2.1,3.0,2.9,3.4,3.7,4.1,4.3,4.5,4.7,5.2,5.2,5.3,5.2\\\",\\\"stadtlohn, stadt\\\"\\n05554060,9134,4542,4592,46354,05554060,13.9,9.5,4.4,4.4,9.1,1229,831,398,1271,869,402,13.5,\\\"11.0,12.3,12.6,13.6,13.4,13.7,14.0,13.9,14.4,14.6,14.8,14.6,13.9\\\",\\\"9.2,9.8,9.7,10.2,9.9,9.9,9.8,9.8,9.8,10.0,10.6,10.3,9.5\\\",\\\"1.8,2.5,3.0,3.3,3.5,3.8,4.2,4.1,4.7,4.5,4.1,4.3,4.4\\\",südlohn\\n05554064,13192,6737,6455,46342,05554064,13.1,9.3,3.8,3.3,7.2,1388,948,440,1725,1225,500,10.5,\\\"9.2,10.6,10.8,11.2,11.5,11.9,12.2,12.2,12.9,12.9,13.0,13.4,13.1\\\",\\\"7.7,8.5,8.5,8.4,8.5,8.7,9.0,8.9,9.3,9.3,9.6,9.5,9.3\\\",\\\"1.5,2.1,2.3,2.8,3.0,3.1,3.2,3.3,3.6,3.7,3.4,3.8,3.8\\\",\\\"velen, stadt\\\"\\n05554068,22688,11587,11101,48691,05554068,16.4,10.9,5.5,5.2,9.8,3395,2223,1172,3720,2482,1238,15.0,\\\"11.1,12.7,13.0,13.6,14.5,14.9,15.5,15.5,15.9,16.2,16.6,16.9,16.4\\\",\\\"8.8,9.5,9.6,10.0,10.4,10.6,11.1,11.1,11.0,11.0,11.3,11.4,10.9\\\",\\\"2.3,3.2,3.4,3.6,4.1,4.3,4.4,4.4,4.9,5.2,5.3,5.5,5.5\\\",\\\"vreden, stadt\\\"\\n05558004,15253,7618,7635,59387,05558004,10.5,7.4,3.1,3.1,8.1,1707,1228,479,1600,1128,472,11.2,\\\"7.5,8.8,9.1,9.5,10.0,10.2,10.6,10.7,10.9,11.0,10.9,10.9,10.5\\\",\\\"6.2,6.9,7.0,7.2,7.5,7.4,7.8,7.6,7.7,7.6,7.7,7.7,7.4\\\",\\\"1.3,2.0,2.1,2.4,2.5,2.8,2.9,3.1,3.2,3.4,3.2,3.2,3.1\\\",ascheberg\\n05558008,11593,5812,5781,48727,05558008,11.6,7.8,3.8,3.4,7.5,1267,875,392,1342,904,438,10.9,\\\"8.3,9.5,9.4,9.6,10.0,10.7,11.1,11.1,11.1,11.3,11.6,11.2,11.6\\\",\\\"6.9,7.3,7.3,7.2,7.5,7.9,7.9,7.6,7.7,7.7,8.1,7.6,7.8\\\",\\\"1.3,2.1,2.1,2.4,2.5,2.8,3.2,3.4,3.5,3.6,3.5,3.7,3.8\\\",\\\"billerbeck, stadt\\\"\\n05558012,36116,17738,18378,48653,05558012,11.9,8.0,3.8,4.0,9.0,4696,3268,1428,4286,2904,1382,13.0,\\\"9.3,10.5,10.4,10.8,11.1,11.3,11.6,11.9,12.2,12.3,12.2,12.4,11.9\\\",\\\"7.5,8.1,8.1,8.2,8.2,8.1,8.2,8.4,8.5,8.5,8.6,8.6,8.0\\\",\\\"1.8,2.4,2.3,2.7,3.0,3.2,3.4,3.6,3.7,3.8,3.6,3.8,3.8\\\",\\\"coesfeld, stadt\\\"\\n05558016,46613,22685,23928,48249,05558016,10.7,7.6,3.2,2.7,6.3,4214,2939,1275,5004,3522,1482,9.0,\\\"8.1,9.3,9.5,9.9,10.2,10.7,10.7,10.9,11.1,11.1,11.3,11.1,10.7\\\",\\\"6.7,7.3,7.4,7.5,7.7,7.9,7.9,7.9,7.8,7.8,8.1,8.0,7.6\\\",\\\"1.4,2.0,2.2,2.4,2.5,2.8,2.8,2.9,3.2,3.4,3.2,3.2,3.2\\\",\\\"dülmen, stadt\\\"\\n05558020,11689,5732,5957,48329,05558020,10.4,7.0,3.3,2.5,5.6,953,655,298,1210,820,390,8.2,\\\"6.9,8.0,8.4,9.1,9.2,9.7,10.0,9.9,9.6,9.9,10.1,10.4,10.4\\\",\\\"5.4,6.0,5.9,6.7,6.7,7.1,7.1,7.0,6.8,6.8,7.2,7.1,7.0\\\",\\\"1.5,2.0,2.5,2.4,2.5,2.5,2.8,2.9,2.8,3.1,3.0,3.3,3.3\\\",havixbeck\\n05558024,24263,12054,12209,59348,05558024,10.6,7.4,3.1,3.1,7.9,2681,1919,762,2563,1805,758,11.0,\\\"7.7,8.9,8.8,9.2,9.9,9.9,10.3,10.5,10.5,10.8,11.0,10.8,10.6\\\",\\\"6.5,7.0,6.8,7.1,7.6,7.3,7.6,7.6,7.4,7.6,8.0,7.7,7.4\\\",\\\"1.2,1.9,1.9,2.1,2.4,2.6,2.7,2.9,3.1,3.3,3.0,3.1,3.1\\\",\\\"lüdinghausen, stadt\\\"\\n05558028,9781,4845,4936,59394,05558028,10.5,7.4,3.1,2.8,6.9,943,673,270,1026,724,302,9.6,\\\"7.7,8.7,9.1,9.3,9.3,9.9,9.9,10.1,9.7,11.0,10.4,10.7,10.5\\\",\\\"6.6,6.8,7.0,7.0,6.9,7.3,7.3,7.3,7.0,7.7,7.6,7.6,7.4\\\",\\\"1.1,1.9,2.1,2.3,2.5,2.5,2.6,2.7,2.8,3.2,2.8,3.1,3.1\\\",nordkirchen\\n05558032,19436,9641,9795,48301,05558032,11.0,7.5,3.6,2.9,5.9,1704,1139,565,2143,1452,691,8.8,\\\"8.1,9.3,9.4,9.7,10.3,10.5,10.7,10.8,10.8,11.0,11.1,11.1,11.0\\\",\\\"6.4,6.9,6.9,7.1,7.3,7.3,7.5,7.5,7.4,7.4,7.7,7.7,7.5\\\",\\\"1.7,2.4,2.5,2.5,3.0,3.2,3.2,3.3,3.4,3.6,3.4,3.5,3.6\\\",nottuln\\n05558036,12490,6145,6345,59399,05558036,10.0,7.2,2.8,2.7,6.5,1151,816,335,1250,905,345,9.2,\\\"7.1,8.2,8.2,8.7,9.0,9.3,9.6,9.7,10.0,10.1,10.2,10.5,10.0\\\",\\\"6.1,6.7,6.7,6.9,7.1,7.3,7.4,7.2,7.2,7.1,7.4,7.5,7.2\\\",\\\"1.1,1.5,1.6,1.7,1.9,2.0,2.2,2.6,2.9,2.9,2.8,3.0,2.8\\\",\\\"olfen, stadt\\\"\\n05558040,10712,5507,5205,48720,05558040,12.5,8.1,4.3,3.3,5.9,982,631,351,1337,872,465,9.2,\\\"8.9,10.0,10.4,10.4,10.6,11.5,11.9,12.3,12.6,12.3,13.2,13.4,12.5\\\",\\\"7.3,7.8,8.0,8.0,8.0,8.6,8.6,8.8,9.0,8.7,9.4,9.2,8.1\\\",\\\"1.6,2.2,2.4,2.4,2.6,2.8,3.3,3.5,3.7,3.6,3.8,4.2,4.3\\\",rosendahl\\n05558044,20455,10176,10279,48308,05558044,10.8,7.2,3.6,2.7,5.6,1692,1137,555,2209,1482,727,8.3,\\\"7.7,9.0,9.2,9.6,10.1,10.3,10.3,10.6,10.8,11.1,10.9,10.9,10.8\\\",\\\"6.4,6.8,6.8,7.1,7.1,7.1,7.1,7.3,7.0,7.3,7.5,7.5,7.2\\\",\\\"1.3,2.2,2.3,2.5,2.9,3.2,3.3,3.4,3.8,3.8,3.4,3.4,3.6\\\",senden\\n05562004,74220,36210,38010,44575,05562004,8.6,6.4,2.3,2.1,5.9,5944,4407,1537,6411,4719,1692,8.0,\\\"7.1,8.1,8.1,8.4,8.5,8.7,9.1,9.1,9.1,9.3,9.1,9.1,8.6\\\",\\\"6.1,6.5,6.5,6.6,6.5,6.6,6.9,6.9,6.8,6.8,7.0,6.9,6.4\\\",\\\"1.0,1.6,1.6,1.8,2.0,2.1,2.2,2.2,2.3,2.4,2.1,2.2,2.3\\\",\\\"castrop-rauxel, stadt\\\"\\n05562008,34521,16922,17599,45711,05562008,9.5,7.3,2.2,2.0,7.2,3152,2471,681,3277,2505,772,9.1,\\\"7.1,8.4,8.3,8.8,8.9,9.2,9.3,9.4,9.3,9.6,9.5,9.7,9.5\\\",\\\"6.1,7.0,6.8,7.1,7.0,7.1,7.2,7.2,7.1,7.3,7.4,7.5,7.3\\\",\\\"1.0,1.5,1.5,1.8,2.0,2.1,2.1,2.2,2.2,2.4,2.0,2.1,2.2\\\",\\\"datteln, stadt\\\"\\n05562012,75431,36714,38717,46284,05562012,10.4,7.9,2.5,2.3,7.1,7077,5333,1744,7808,5949,1859,9.4,\\\"8.1,9.1,9.2,9.5,9.9,10.3,10.6,10.7,10.8,10.6,10.6,10.6,10.4\\\",\\\"7.0,7.5,7.5,7.7,7.9,8.1,8.3,8.3,8.2,8.1,8.2,8.2,7.9\\\",\\\"1.0,1.6,1.7,1.8,2.0,2.2,2.3,2.4,2.5,2.6,2.3,2.3,2.5\\\",\\\"dorsten, stadt\\\"\\n05562014,75455,36801,38654,45964,05562014,9.5,7.4,2.2,1.7,6.2,5985,4686,1299,7205,5576,1629,7.9,\\\"7.2,8.5,8.4,8.7,8.8,8.9,9.2,9.4,9.7,9.7,9.8,9.9,9.5\\\",\\\"6.3,7.1,6.9,7.0,7.1,7.1,7.2,7.4,7.4,7.5,7.7,7.8,7.4\\\",\\\"0.9,1.5,1.5,1.7,1.8,1.8,2.0,2.1,2.3,2.2,2.1,2.1,2.2\\\",\\\"gladbeck, stadt\\\"\\n05562016,38020,18535,19485,45721,05562016,9.4,6.9,2.5,2.4,6.8,3506,2579,927,3587,2629,958,9.2,\\\"7.5,8.5,8.6,8.9,9.0,9.0,9.3,9.6,9.4,9.5,9.5,9.6,9.4\\\",\\\"6.4,6.9,6.9,7.0,7.0,6.8,6.9,7.1,6.9,7.1,7.2,7.1,6.9\\\",\\\"1.1,1.6,1.8,1.9,2.0,2.2,2.3,2.5,2.5,2.5,2.3,2.5,2.5\\\",\\\"haltern am see, stadt\\\"\\n05562020,61163,29875,31288,45699,05562020,9.0,7.0,2.0,1.6,5.9,4534,3580,954,5493,4298,1195,7.4,\\\"7.3,8.2,8.4,8.6,8.9,8.9,9.2,9.2,9.4,9.3,9.3,9.3,9.0\\\",\\\"6.3,6.9,6.9,6.9,7.1,7.0,7.0,7.1,7.2,7.1,7.4,7.4,7.0\\\",\\\"1.0,1.4,1.5,1.6,1.8,1.9,2.1,2.1,2.2,2.2,1.9,2.0,2.0\\\",\\\"herten, stadt\\\"\\n05562024,83926,41288,42638,45768,05562024,9.2,7.1,2.1,2.0,6.6,7211,5549,1662,7707,5980,1727,8.6,\\\"7.3,8.3,8.3,8.6,9.0,9.3,9.6,9.6,9.6,9.8,9.6,9.6,9.2\\\",\\\"6.4,6.8,6.8,6.9,7.3,7.3,7.5,7.5,7.4,7.5,7.6,7.6,7.1\\\",\\\"1.0,1.5,1.5,1.6,1.7,2.0,2.1,2.1,2.2,2.3,2.0,2.0,2.1\\\",\\\"marl, stadt\\\"\\n05562028,31387,15553,15834,45739,05562028,8.5,6.7,1.8,1.2,4.2,1685,1321,364,2668,2108,560,5.4,\\\"7.6,8.8,8.8,9.0,9.2,9.6,9.7,9.5,9.4,9.1,8.7,8.9,8.5\\\",\\\"6.5,7.2,7.2,7.2,7.2,7.3,7.5,7.4,7.2,6.9,6.9,7.0,6.7\\\",\\\"1.0,1.6,1.6,1.8,2.0,2.3,2.2,2.1,2.2,2.2,1.8,1.9,1.8\\\",\\\"oer-erkenschwick, stadt\\\"\\n05562032,114330,55697,58633,45657,05562032,9.4,7.1,2.2,2.1,6.7,10045,7650,2395,10707,8143,2564,8.8,\\\"7.2,8.4,8.3,8.5,8.7,8.8,9.0,9.2,9.2,9.4,9.3,9.6,9.4\\\",\\\"6.1,6.8,6.7,6.7,6.8,6.8,7.0,7.0,7.0,7.1,7.2,7.4,7.1\\\",\\\"1.1,1.6,1.6,1.7,1.9,2.0,2.1,2.2,2.3,2.3,2.1,2.2,2.2\\\",\\\"recklinghausen, stadt\\\"\\n05562036,29354,14298,15056,45731,05562036,9.5,7.2,2.3,1.7,6.1,2292,1800,492,2802,2117,685,7.8,\\\"7.8,8.8,8.9,9.0,9.2,9.4,9.6,9.7,9.8,9.8,9.7,9.9,9.5\\\",\\\"6.8,7.3,7.3,7.3,7.2,7.3,7.5,7.4,7.5,7.5,7.6,7.7,7.2\\\",\\\"1.0,1.5,1.6,1.7,1.9,2.1,2.1,2.2,2.3,2.3,2.1,2.2,2.3\\\",\\\"waltrop, stadt\\\"\\n05566004,10315,5201,5114,48341,05566004,10.4,7.0,3.5,3.3,6.1,975,634,341,1075,718,357,9.5,\\\"7.7,9.0,9.3,9.7,10.1,9.9,10.5,10.4,10.2,10.5,10.6,10.5,10.4\\\",\\\"6.2,6.7,6.7,6.8,7.2,6.8,7.0,6.9,6.7,6.9,7.2,6.8,7.0\\\",\\\"1.6,2.2,2.6,2.9,2.9,3.1,3.5,3.5,3.6,3.6,3.4,3.7,3.5\\\",altenberge\\n05566008,36320,18009,18311,48282,05566008,12.1,8.2,3.9,4.0,8.6,4573,3136,1437,4412,2979,1433,12.6,\\\"10.3,11.4,11.1,11.5,11.9,12.4,12.3,12.2,12.6,12.5,12.7,12.7,12.1\\\",\\\"8.4,8.9,8.5,8.7,8.8,8.9,8.9,8.6,8.8,8.5,8.9,8.7,8.2\\\",\\\"1.9,2.5,2.6,2.9,3.0,3.4,3.4,3.6,3.8,4.0,3.8,4.0,3.9\\\",\\\"emsdetten, stadt\\\"\\n05566012,36674,18087,18587,48268,05566012,11.1,7.3,3.8,4.2,8.5,4660,3108,1552,4072,2684,1388,12.7,\\\"8.5,9.6,9.7,9.9,10.3,10.5,10.6,10.9,11.2,11.8,11.7,11.6,11.1\\\",\\\"6.5,7.1,7.1,7.1,7.2,7.2,7.3,7.5,7.5,7.8,8.0,7.8,7.3\\\",\\\"1.9,2.5,2.6,2.8,3.1,3.3,3.3,3.4,3.7,4.0,3.7,3.7,3.8\\\",\\\"greven, stadt\\\"\\n05566016,19995,10048,9947,48477,05566016,12.6,8.8,3.8,3.2,7.8,2191,1554,637,2515,1760,755,11.0,\\\"9.2,10.6,11.0,11.4,12.0,12.3,12.3,12.3,12.6,12.7,12.8,12.7,12.6\\\",\\\"7.6,8.4,8.5,8.6,9.0,9.2,9.1,8.8,8.8,8.9,9.0,9.1,8.8\\\",\\\"1.6,2.2,2.4,2.8,3.1,3.0,3.2,3.6,3.8,3.8,3.7,3.7,3.8\\\",\\\"hörstel, stadt\\\"\\n05566020,7642,3973,3669,48496,05566020,14.0,9.6,4.4,3.6,7.2,828,551,277,1072,732,340,10.8,\\\"10.2,11.5,12.3,12.9,13.1,13.3,13.4,13.7,13.9,14.2,13.7,14.2,14.0\\\",\\\"8.3,9.1,9.7,9.9,10.0,9.9,9.8,9.7,9.6,9.6,9.3,9.6,9.6\\\",\\\"1.9,2.5,2.6,3.0,3.0,3.4,3.6,4.0,4.3,4.6,4.3,4.5,4.4\\\",hopsten\\n05566024,6447,3274,3173,48612,05566024,10.8,7.8,3.0,2.4,6.7,583,431,152,696,501,195,9.0,\\\"8.6,10.3,10.7,11.0,10.9,11.1,11.5,11.5,12.0,11.2,11.6,11.8,10.8\\\",\\\"7.2,8.4,8.5,8.6,8.6,8.7,8.7,8.4,8.7,8.0,8.5,8.5,7.8\\\",\\\"1.4,2.0,2.2,2.3,2.3,2.5,2.8,3.1,3.3,3.2,3.1,3.3,3.0\\\",\\\"horstmar, stadt der burgmannshöfe\\\"\\n05566028,50935,25176,25759,49477,05566028,12.0,8.4,3.6,3.6,8.6,6210,4396,1814,6097,4281,1816,12.2,\\\"9.1,10.5,10.6,10.9,11.3,11.6,11.8,11.7,11.8,12.2,12.1,12.1,12.0\\\",\\\"7.6,8.3,8.3,8.3,8.4,8.4,8.4,8.3,8.3,8.5,8.6,8.5,8.4\\\",\\\"1.5,2.2,2.3,2.6,2.9,3.2,3.3,3.4,3.5,3.8,3.4,3.6,3.6\\\",\\\"ibbenbüren, stadt\\\"\\n05566032,6694,3321,3373,49549,05566032,11.3,7.1,4.3,3.8,7.5,758,504,254,757,472,285,11.3,\\\"7.8,9.3,9.7,9.8,10.3,10.7,11.7,11.5,11.8,12.1,11.6,11.6,11.3\\\",\\\"6.4,6.9,7.2,7.0,7.1,7.4,8.1,7.8,7.7,8.0,7.7,7.4,7.1\\\",\\\"1.5,2.4,2.5,2.8,3.2,3.4,3.6,3.7,4.1,4.1,4.0,4.3,4.3\\\",ladbergen\\n05566036,6721,3370,3351,48366,05566036,10.6,7.4,3.2,2.6,6.3,595,423,172,713,499,214,8.9,\\\"9.5,10.7,10.7,10.7,10.8,11.3,12.0,11.1,11.6,11.1,10.9,10.5,10.6\\\",\\\"7.8,8.3,8.3,8.3,8.4,8.3,8.8,8.2,8.0,7.7,7.7,7.4,7.4\\\",\\\"1.7,2.4,2.4,2.4,2.4,3.0,3.2,2.9,3.6,3.4,3.2,3.1,3.2\\\",laer\\n05566040,22461,11129,11332,49525,05566040,10.6,7.1,3.5,2.9,6.0,2014,1352,662,2373,1590,783,9.0,\\\"7.8,9.2,9.1,9.7,10.4,10.2,10.2,10.4,10.7,11.0,10.7,10.8,10.6\\\",\\\"6.1,6.8,6.8,6.9,7.4,7.0,7.0,7.1,7.2,7.3,7.4,7.3,7.1\\\",\\\"1.7,2.4,2.4,2.8,3.0,3.2,3.2,3.3,3.6,3.7,3.3,3.5,3.5\\\",\\\"lengerich, stadt\\\"\\n05566044,8559,4316,4243,49536,05566044,10.8,7.2,3.6,2.3,5.0,621,424,197,921,616,305,7.3,\\\"7.9,8.9,8.9,9.4,9.8,9.8,10.0,10.1,10.6,10.8,10.5,11.0,10.8\\\",\\\"6.6,6.9,6.8,7.0,7.2,7.1,7.0,7.0,7.0,7.2,7.2,7.4,7.2\\\",\\\"1.3,2.0,2.1,2.4,2.6,2.8,3.0,3.0,3.6,3.6,3.3,3.6,3.6\\\",lienen\\n05566048,14175,7094,7081,49504,05566048,12.5,8.0,4.5,2.0,3.2,738,456,282,1771,1128,643,5.2,\\\"8.3,9.5,9.6,10.3,10.8,11.3,11.4,11.5,11.8,12.2,12.3,12.2,12.5\\\",\\\"6.4,7.0,7.0,7.4,7.6,7.6,7.5,7.3,7.5,7.7,7.7,7.7,8.0\\\",\\\"1.9,2.5,2.6,2.9,3.2,3.7,3.9,4.2,4.4,4.5,4.6,4.5,4.5\\\",lotte\\n05566052,6461,3262,3199,48629,05566052,11.6,8.3,3.3,2.3,5.3,488,341,147,748,537,211,7.6,\\\"9.7,11.1,10.8,11.2,11.7,11.8,12.7,12.8,12.1,12.4,12.4,11.9,11.6\\\",\\\"8.4,9.2,8.7,8.8,9.4,9.3,10.0,9.7,8.8,9.3,9.3,8.8,8.3\\\",\\\"1.4,1.9,2.1,2.4,2.3,2.4,2.7,3.1,3.3,3.1,3.1,3.1,3.3\\\",metelen\\n05566056,11815,5875,5940,49497,05566056,12.8,9.1,3.7,2.5,6.9,1118,821,297,1510,1074,436,9.5,\\\"9.2,10.9,11.1,10.9,11.3,11.5,11.9,12.1,12.4,12.8,12.9,12.9,12.8\\\",\\\"7.8,8.6,8.8,8.6,8.6,8.8,8.9,9.0,9.1,9.4,9.8,9.4,9.1\\\",\\\"1.4,2.3,2.3,2.4,2.7,2.7,2.9,3.1,3.3,3.4,3.2,3.5,3.7\\\",mettingen\\n05566060,13743,6908,6835,48485,05566060,13.1,9.4,3.7,3.5,8.8,1688,1209,479,1806,1297,509,12.3,\\\"9.4,10.9,11.1,11.7,12.5,12.7,13.1,13.3,13.6,13.6,13.7,13.6,13.1\\\",\\\"7.8,8.6,8.6,8.8,9.2,9.4,9.6,9.8,10.0,9.8,10.4,9.9,9.4\\\",\\\"1.7,2.3,2.6,2.9,3.3,3.3,3.4,3.5,3.7,3.8,3.3,3.7,3.7\\\",neuenkirchen\\n05566064,9388,4650,4738,48356,05566064,12.1,8.3,3.8,3.7,7.3,1039,689,350,1137,777,360,11.1,\\\"8.9,10.1,10.4,10.3,10.4,11.2,11.7,11.7,12.1,12.1,12.2,12.5,12.1\\\",\\\"7.5,7.9,8.1,7.9,8.0,8.1,8.4,8.4,8.4,8.4,8.7,8.5,8.3\\\",\\\"1.5,2.2,2.4,2.3,2.5,3.1,3.3,3.3,3.8,3.6,3.5,4.0,3.8\\\",nordwalde\\n05566068,19599,9922,9677,48607,05566068,12.9,8.9,4.0,3.4,8.2,2272,1607,665,2530,1751,779,11.6,\\\"8.9,10.3,10.7,11.2,11.6,12.0,11.8,12.1,12.6,13.0,13.5,13.6,12.9\\\",\\\"7.3,8.0,8.2,8.4,8.6,8.7,8.5,8.6,8.7,8.9,9.7,9.6,8.9\\\",\\\"1.6,2.3,2.5,2.7,3.0,3.3,3.3,3.5,3.9,4.1,3.8,4.0,4.0\\\",\\\"ochtrup, stadt\\\"\\n05566072,11363,5661,5702,49509,05566072,14.9,10.7,4.2,4.2,10.7,1694,1213,481,1693,1213,480,14.9,\\\"9.8,11.5,11.8,11.9,12.3,12.7,13.3,13.6,13.8,14.4,14.4,14.8,14.9\\\",\\\"8.1,9.1,9.5,9.2,9.3,9.6,9.8,10.1,10.1,10.4,10.6,10.6,10.7\\\",\\\"1.6,2.5,2.4,2.8,2.9,3.0,3.5,3.5,3.7,4.0,3.8,4.1,4.2\\\",recke\\n05566076,74852,36911,37941,48431,05566076,11.8,8.3,3.5,3.6,8.6,9137,6447,2690,8829,6184,2645,12.2,\\\"9.4,10.7,10.6,11.0,11.6,11.8,11.6,11.6,11.8,12.2,12.1,12.0,11.8\\\",\\\"7.8,8.5,8.4,8.5,8.8,8.8,8.6,8.5,8.5,8.5,8.8,8.5,8.3\\\",\\\"1.6,2.2,2.3,2.5,2.8,3.0,3.0,3.1,3.3,3.6,3.3,3.5,3.5\\\",\\\"rheine, stadt\\\"\\n05566080,7191,3639,3552,48369,05566080,12.1,8.0,4.1,4.9,7.1,859,509,350,871,573,298,11.9,\\\"9.0,9.9,10.1,10.2,10.5,11.3,11.6,11.0,12.0,12.0,12.8,12.9,12.1\\\",\\\"7.1,7.5,7.2,7.2,7.5,8.1,7.8,7.5,8.1,8.2,8.9,8.7,8.0\\\",\\\"1.9,2.4,2.9,2.9,3.1,3.2,3.7,3.5,3.9,3.8,3.9,4.2,4.1\\\",\\\"saerbeck, nrw-klimakommune\\\"\\n05566084,33682,16719,16963,48565,05566084,11.8,8.4,3.4,3.1,8.4,3854,2817,1037,3980,2836,1144,11.4,\\\"9.8,10.7,10.6,10.9,11.1,11.7,11.8,12.0,12.1,12.3,12.5,12.6,11.8\\\",\\\"8.1,8.3,8.4,8.3,8.4,8.7,8.8,8.7,8.7,8.7,9.2,9.2,8.4\\\",\\\"1.7,2.3,2.2,2.6,2.7,2.9,3.0,3.3,3.4,3.5,3.4,3.4,3.4\\\",\\\"steinfurt, stadt\\\"\\n05566088,9062,4573,4489,49545,05566088,10.4,7.1,3.2,3.6,7.0,959,636,323,938,647,291,10.6,\\\"7.9,9.2,9.5,10.2,10.3,10.4,9.8,10.1,10.4,10.4,10.4,10.6,10.4\\\",\\\"6.7,7.0,7.2,7.7,7.6,7.5,7.2,7.1,7.3,7.3,7.6,7.6,7.1\\\",\\\"1.2,2.2,2.2,2.5,2.7,2.9,2.7,3.0,3.1,3.1,2.9,3.0,3.2\\\",\\\"tecklenburg, stadt\\\"\\n05566092,11178,5582,5596,49492,05566092,11.5,7.8,3.8,4.8,8.9,1529,998,531,1287,867,420,13.7,\\\"8.5,9.8,10.1,10.1,10.3,10.6,10.9,11.4,11.4,11.7,11.6,11.5,11.5\\\",\\\"6.9,7.5,7.9,7.6,7.6,7.7,7.8,7.9,7.8,7.9,8.1,8.0,7.8\\\",\\\"1.6,2.3,2.1,2.5,2.8,2.9,3.1,3.5,3.6,3.9,3.5,3.5,3.8\\\",westerkappeln\\n05566096,8102,4082,4020,48493,05566096,13.0,9.3,3.7,4.1,8.7,1034,701,333,1057,756,301,12.8,\\\"8.7,10.5,10.8,10.9,12.2,12.4,12.9,12.4,12.5,12.6,13.0,13.0,13.0\\\",\\\"7.2,8.1,8.3,8.4,9.3,9.3,9.5,9.0,8.8,8.9,9.4,9.3,9.3\\\",\\\"1.5,2.4,2.5,2.5,2.9,3.1,3.4,3.4,3.7,3.7,3.6,3.7,3.7\\\",wettringen\\n05570004,52287,25551,26736,59227,05570004,11.0,8.2,2.8,2.5,7.5,5213,3898,1315,5748,4282,1466,10.0,\\\"8.1,9.1,9.4,9.5,10.0,10.3,10.6,10.9,11.1,11.2,11.3,11.2,11.0\\\",\\\"6.8,7.3,7.4,7.4,7.6,7.7,7.9,8.0,7.9,8.1,8.6,8.5,8.2\\\",\\\"1.3,1.8,1.9,2.1,2.3,2.6,2.7,2.9,3.1,3.1,2.7,2.7,2.8\\\",\\\"ahlen, stadt\\\"\\n05570008,36560,18089,18471,59269,05570008,10.9,7.6,3.4,3.6,7.2,3949,2642,1307,3997,2762,1235,10.8,\\\"8.4,9.8,9.9,10.4,10.7,11.0,11.0,11.1,11.3,11.5,11.4,11.3,10.9\\\",\\\"6.9,7.4,7.4,7.7,7.7,7.7,7.8,7.8,7.7,7.8,8.1,7.9,7.6\\\",\\\"1.5,2.3,2.5,2.8,3.0,3.3,3.2,3.3,3.6,3.7,3.3,3.4,3.4\\\",\\\"beckum, stadt\\\"\\n05570012,6380,3217,3163,48361,05570012,13.2,8.9,4.4,3.8,6.3,643,403,240,844,566,278,10.1,\\\"9.5,11.3,11.5,11.0,12.2,13.3,13.3,14.1,13.8,13.6,14.1,14.0,13.2\\\",\\\"7.6,8.7,8.3,8.0,8.8,9.1,9.3,9.8,9.8,9.0,9.6,9.3,8.9\\\",\\\"1.9,2.5,3.2,3.0,3.4,4.2,4.0,4.4,3.9,4.6,4.5,4.7,4.4\\\",beelen\\n05570016,15542,7757,7785,48317,05570016,9.7,6.9,2.9,2.3,5.5,1204,852,352,1513,1067,446,7.7,\\\"6.9,8.3,8.5,9.0,9.3,9.3,9.6,9.4,9.8,10.1,10.1,10.0,9.7\\\",\\\"5.7,6.5,6.6,6.8,6.9,6.8,7.0,6.8,6.9,7.0,7.3,7.1,6.9\\\",\\\"1.1,1.8,1.9,2.2,2.4,2.5,2.6,2.7,2.9,3.1,2.8,3.0,2.9\\\",\\\"drensteinfurt, stadt\\\"\\n05570020,20037,10075,9962,59320,05570020,10.8,7.3,3.4,2.5,5.6,1615,1123,492,2156,1468,688,8.1,\\\"7.9,9.0,9.1,9.9,10.3,10.7,11.0,11.1,11.7,11.5,11.3,11.6,10.8\\\",\\\"6.4,7.0,7.0,7.3,7.4,7.6,7.8,7.6,8.2,7.9,7.9,8.1,7.3\\\",\\\"1.4,2.1,2.2,2.6,2.9,3.2,3.3,3.4,3.5,3.6,3.5,3.5,3.4\\\",\\\"ennigerloh, stadt\\\"\\n05570024,9583,4766,4817,48351,05570024,10.4,6.6,3.8,4.6,6.5,1069,626,443,999,633,366,11.2,\\\"7.7,8.6,9.2,9.6,10.3,10.0,10.4,10.6,10.3,10.6,10.6,10.6,10.4\\\",\\\"6.0,6.4,6.8,7.0,7.5,7.1,7.2,7.1,6.7,6.8,7.0,7.0,6.6\\\",\\\"1.7,2.2,2.4,2.6,2.8,2.8,3.2,3.5,3.7,3.8,3.6,3.7,3.8\\\",everswinkel\\n05570028,29299,14660,14639,59302,05570028,11.2,7.6,3.6,3.0,7.0,2936,2060,876,3296,2235,1061,10.0,\\\"8.9,10.2,10.4,10.8,10.5,10.7,10.9,11.1,11.4,11.7,11.7,11.7,11.2\\\",\\\"7.2,7.8,7.8,8.0,7.6,7.4,7.6,7.7,7.9,7.9,8.1,8.2,7.6\\\",\\\"1.7,2.4,2.6,2.9,2.9,3.2,3.3,3.4,3.5,3.8,3.6,3.5,3.6\\\",\\\"oelde, stadt\\\"\\n05570032,10873,5438,5435,48346,05570032,12.1,7.8,4.3,3.7,6.3,1088,689,399,1314,843,471,10.0,\\\"8.5,9.8,9.7,10.7,10.6,11.1,11.7,11.7,12.0,12.3,12.1,12.0,12.1\\\",\\\"6.9,7.4,7.2,7.8,7.6,7.8,8.0,7.9,8.0,8.2,8.1,8.0,7.8\\\",\\\"1.6,2.5,2.5,2.9,3.0,3.3,3.6,3.8,4.0,4.1,4.1,3.9,4.3\\\",ostbevern\\n05570036,14403,7263,7140,48336,05570036,12.7,7.8,4.9,3.4,5.4,1267,781,486,1835,1123,712,8.8,\\\"9.2,10.4,10.5,11.4,12.0,12.2,12.6,12.2,12.7,12.9,13.2,13.2,12.7\\\",\\\"7.2,7.7,7.7,8.1,8.1,8.1,8.3,8.2,8.3,8.1,8.6,8.3,7.8\\\",\\\"2.0,2.7,2.8,3.3,3.9,4.2,4.3,4.0,4.4,4.7,4.6,4.9,4.9\\\",\\\"sassenberg, stadt\\\"\\n05570040,13218,6583,6635,48324,05570040,11.9,8.1,3.8,2.9,6.8,1285,897,388,1577,1077,500,9.7,\\\"7.9,9.0,9.1,9.5,9.7,10.0,10.5,10.7,11.3,11.4,11.5,11.6,11.9\\\",\\\"6.3,6.8,7.0,7.1,7.0,7.1,7.5,7.4,7.4,7.5,7.8,7.9,8.1\\\",\\\"1.6,2.1,2.1,2.4,2.8,2.9,3.0,3.3,3.9,4.0,3.6,3.7,3.8\\\",\\\"sendenhorst, stadt\\\"\\n05570044,19557,9461,10096,48291,05570044,10.6,7.0,3.6,3.5,6.7,1982,1307,675,2077,1371,706,10.1,\\\"8.2,9.4,9.5,9.7,9.8,10.4,10.4,10.4,10.8,11.2,10.7,10.5,10.6\\\",\\\"6.6,7.1,7.1,7.0,7.0,7.2,7.1,7.0,7.2,7.4,7.4,7.0,7.0\\\",\\\"1.6,2.4,2.4,2.7,2.8,3.2,3.3,3.3,3.5,3.9,3.4,3.5,3.6\\\",\\\"telgte, stadt\\\"\\n05570048,12443,6318,6125,59329,05570048,12.0,8.2,3.8,3.6,6.6,1270,823,447,1494,1022,472,10.2,\\\"8.7,10.3,10.5,11.1,11.5,12.1,12.2,12.1,12.0,12.6,12.4,12.3,12.0\\\",\\\"7.2,8.0,8.1,8.2,8.4,8.6,8.7,8.4,8.2,8.7,8.8,8.6,8.2\\\",\\\"1.6,2.3,2.5,2.9,3.1,3.5,3.6,3.7,3.8,3.9,3.6,3.7,3.8\\\",wadersloh\\n05570052,37249,18087,19162,48231,05570052,12.0,7.9,4.1,3.9,8.8,4748,3286,1462,4461,2936,1525,12.7,\\\"8.5,9.5,9.6,10.0,10.7,10.9,11.4,11.4,11.7,12.0,12.1,12.2,12.0\\\",\\\"6.8,7.1,7.1,7.3,7.6,7.7,7.9,7.8,7.8,7.9,8.2,8.2,7.9\\\",\\\"1.7,2.4,2.4,2.7,3.1,3.2,3.5,3.5,3.8,4.1,3.9,4.0,4.1\\\",\\\"warendorf, stadt\\\"\\n05711000,333090,161148,171942,33602,05711000,9.5,6.4,3.1,3.6,7.2,36045,23988,12057,31661,21417,10244,10.8,\\\"7.0,8.4,8.5,8.7,9.0,9.1,9.2,9.3,9.6,9.4,9.3,9.6,9.5\\\",\\\"5.4,6.0,6.0,6.1,6.1,6.0,6.0,6.1,6.2,6.0,6.4,6.6,6.4\\\",\\\"1.7,2.4,2.5,2.6,2.9,3.1,3.1,3.2,3.3,3.4,2.9,3.0,3.1\\\",\\\"bielefeld, stadt\\\"\\n05754004,8801,4357,4444,33829,05754004,10.3,6.5,3.7,3.3,5.0,733,441,292,904,574,330,8.3,\\\"7.7,8.8,8.6,9.2,9.6,10.2,10.6,10.2,10.4,10.5,10.1,10.1,10.3\\\",\\\"6.1,6.5,6.3,6.6,6.6,7.0,7.0,6.7,6.7,6.8,6.8,6.8,6.5\\\",\\\"1.7,2.3,2.2,2.6,3.1,3.2,3.6,3.5,3.7,3.7,3.3,3.3,3.7\\\",\\\"borgholzhausen, stadt\\\"\\n05754008,97586,48366,49220,33330,05754008,10.2,6.6,3.6,3.5,7.1,10352,6956,3396,9990,6456,3534,10.6,\\\"7.6,8.8,8.8,9.1,9.4,9.7,9.7,9.9,10.0,10.2,10.3,10.5,10.2\\\",\\\"5.9,6.4,6.3,6.4,6.3,6.4,6.4,6.5,6.4,6.5,6.9,7.0,6.6\\\",\\\"1.7,2.4,2.5,2.7,3.0,3.3,3.4,3.4,3.6,3.7,3.5,3.6,3.6\\\",\\\"gütersloh, stadt\\\"\\n05754012,21709,10770,10939,33790,05754012,9.9,6.2,3.7,3.7,8.6,2672,1873,799,2145,1342,803,12.3,\\\"7.3,8.6,8.7,9.1,9.4,9.6,9.3,9.7,9.4,9.8,10.0,10.4,9.9\\\",\\\"5.6,6.2,6.2,6.3,6.3,6.1,6.1,6.3,6.1,6.2,6.5,6.7,6.2\\\",\\\"1.7,2.4,2.6,2.8,3.1,3.5,3.2,3.5,3.4,3.6,3.6,3.7,3.7\\\",\\\"halle (westf.), stadt\\\"\\n05754016,24769,12571,12198,33428,05754016,11.5,7.5,4.0,4.4,7.9,3045,1961,1084,2847,1867,980,12.3,\\\"8.3,9.6,10.1,10.4,10.8,11.0,11.4,11.4,11.6,11.9,12.1,11.9,11.5\\\",\\\"6.7,7.2,7.4,7.4,7.5,7.5,7.9,7.8,7.8,7.7,8.1,8.0,7.5\\\",\\\"1.6,2.4,2.7,3.0,3.3,3.5,3.5,3.6,3.8,4.2,4.0,3.9,4.0\\\",\\\"harsewinkel, die mähdrescherstadt\\\"\\n05754020,15965,7982,7983,33442,05754020,12.3,8.1,4.1,3.6,6.9,1680,1108,572,1962,1301,661,10.5,\\\"9.3,10.9,11.0,11.4,11.8,12.1,12.0,12.4,12.4,12.2,12.3,12.3,12.3\\\",\\\"7.4,8.0,7.9,8.1,8.2,8.4,8.2,8.4,8.3,8.2,8.5,8.3,8.1\\\",\\\"1.9,2.9,3.2,3.3,3.6,3.7,3.8,4.0,4.0,4.0,3.8,4.0,4.1\\\",herzebrock-clarholz\\n05754024,8375,4236,4139,33449,05754024,11.8,7.2,4.6,3.3,5.4,726,451,275,988,605,383,8.7,\\\"9.5,10.6,11.0,12.1,12.1,12.4,12.5,12.2,12.6,12.4,12.5,12.4,11.8\\\",\\\"7.7,8.1,8.4,9.0,8.7,8.7,8.8,8.3,8.3,8.0,8.2,7.8,7.2\\\",\\\"1.8,2.5,2.6,3.1,3.4,3.7,3.7,3.9,4.2,4.5,4.3,4.5,4.6\\\",langenberg\\n05754028,48000,23902,24098,33378,05754028,11.3,7.2,4.1,4.3,7.3,5571,3522,2049,5407,3457,1950,11.6,\\\"8.2,9.5,9.9,10.3,10.3,10.5,10.7,10.7,10.9,11.3,11.4,11.5,11.3\\\",\\\"6.4,6.9,7.1,7.2,7.2,7.2,7.3,7.2,7.3,7.4,7.6,7.6,7.2\\\",\\\"1.8,2.6,2.8,3.1,3.1,3.3,3.4,3.5,3.6,3.9,3.8,3.9,4.1\\\",\\\"rheda-wiedenbrück, stadt\\\"\\n05754032,29436,14901,14535,33397,05754032,13.2,8.5,4.7,4.9,8.5,3939,2494,1445,3894,2512,1382,13.4,\\\"9.8,11.1,11.2,11.8,12.1,12.9,12.8,12.9,13.3,13.5,13.7,13.4,13.2\\\",\\\"7.9,8.3,8.2,8.5,8.5,8.8,8.8,8.7,8.8,8.8,9.1,8.8,8.5\\\",\\\"1.9,2.8,3.0,3.3,3.6,4.1,4.0,4.3,4.5,4.7,4.6,4.6,4.7\\\",\\\"rietberg, stadt\\\"\\n05754036,27092,13435,13657,33758,05754036,11.1,7.3,3.8,3.4,5.9,2514,1598,916,3005,1989,1016,9.3,\\\"8.5,10.0,10.3,10.7,10.9,10.9,11.0,11.1,11.5,11.4,11.1,11.2,11.1\\\",\\\"6.7,7.3,7.3,7.5,7.6,7.4,7.5,7.4,7.7,7.5,7.6,7.5,7.3\\\",\\\"1.8,2.6,2.9,3.2,3.3,3.5,3.5,3.7,3.8,3.9,3.5,3.7,3.8\\\",\\\"schloß holte-stukenbrock, stadt\\\"\\n05754040,20749,10242,10507,33803,05754040,10.1,6.6,3.5,5.3,9.8,3121,2029,1092,2097,1370,727,15.0,\\\"7.9,9.1,9.2,9.7,9.9,10.1,10.2,10.3,10.3,10.3,10.3,10.3,10.1\\\",\\\"6.3,6.7,6.7,6.8,6.8,6.7,6.8,6.8,6.7,6.6,7.1,6.9,6.6\\\",\\\"1.7,2.4,2.5,2.9,3.1,3.4,3.4,3.6,3.7,3.7,3.2,3.4,3.5\\\",steinhagen\\n05754044,25512,13060,12452,33415,05754044,11.3,7.4,3.9,4.6,7.7,3146,1967,1179,2893,1891,1002,12.3,\\\"8.4,9.2,9.9,10.3,10.3,10.6,10.5,10.7,10.7,11.1,11.2,11.4,11.3\\\",\\\"6.7,6.9,7.1,7.2,7.4,7.1,7.1,7.1,6.9,7.2,7.5,7.6,7.4\\\",\\\"1.7,2.3,2.8,3.0,3.0,3.5,3.4,3.6,3.8,3.9,3.7,3.8,3.9\\\",\\\"verl, stadt\\\"\\n05754048,21230,10686,10544,33775,05754048,12.1,7.2,4.9,4.8,6.3,2364,1335,1029,2572,1536,1036,11.1,\\\"8.8,10.6,10.7,11.2,11.9,12.2,12.1,12.2,12.5,12.4,12.2,12.0,12.1\\\",\\\"6.6,7.5,7.5,7.5,7.7,7.7,7.6,7.6,7.7,7.5,7.6,7.3,7.2\\\",\\\"2.3,3.1,3.2,3.7,4.2,4.5,4.4,4.6,4.8,4.9,4.6,4.7,4.9\\\",\\\"versmold, stadt\\\"\\n05754052,11418,5714,5704,33824,05754052,9.5,6.3,3.2,2.8,5.1,896,579,317,1090,725,365,7.8,\\\"7.2,8.3,8.2,8.8,9.1,8.9,9.3,9.3,9.5,9.4,9.6,9.6,9.5\\\",\\\"5.8,6.2,6.0,6.4,6.2,5.9,6.3,6.1,6.3,6.0,6.5,6.5,6.3\\\",\\\"1.4,2.0,2.2,2.4,2.9,3.0,3.0,3.2,3.2,3.4,3.1,3.1,3.2\\\",\\\"werther (westf.), stadt\\\"\\n05758004,45615,22277,23338,32257,05758004,9.6,6.1,3.5,2.9,6.0,4074,2750,1324,4379,2801,1578,8.9,\\\"7.8,9.1,9.6,9.7,10.2,10.4,10.2,10.3,10.4,10.2,9.9,10.0,9.6\\\",\\\"6.0,6.5,6.8,6.8,6.9,7.0,6.8,6.8,6.6,6.4,6.5,6.5,6.1\\\",\\\"1.8,2.7,2.8,2.9,3.3,3.4,3.4,3.5,3.8,3.8,3.4,3.4,3.5\\\",\\\"bünde, stadt\\\"\\n05758008,20658,10193,10465,32130,05758008,9.2,5.8,3.4,3.2,4.7,1633,976,657,1898,1195,703,7.9,\\\"6.6,7.9,8.2,8.6,8.9,9.3,9.2,9.7,9.5,9.4,9.4,9.3,9.2\\\",\\\"5.2,5.6,5.8,6.1,6.2,6.3,6.2,6.4,6.2,6.2,6.3,6.2,5.8\\\",\\\"1.4,2.3,2.4,2.5,2.7,3.0,3.0,3.3,3.3,3.3,3.0,3.2,3.4\\\",\\\"enger, widukindstadt\\\"\\n05758012,66521,32485,34036,32052,05758012,9.2,6.0,3.1,3.7,7.0,7099,4636,2463,6106,4022,2084,10.7,\\\"6.9,8.4,8.7,8.9,9.1,9.3,9.3,9.6,9.9,9.7,9.5,9.4,9.2\\\",\\\"5.5,6.2,6.2,6.2,6.2,6.3,6.2,6.2,6.3,6.1,6.3,6.2,6.0\\\",\\\"1.5,2.3,2.5,2.7,2.9,3.1,3.1,3.4,3.6,3.6,3.1,3.2,3.1\\\",\\\"herford, hansestadt\\\"\\n05758016,19758,9805,9953,32120,05758016,8.5,5.3,3.2,2.5,4.5,1380,894,486,1679,1044,635,7.0,\\\"6.4,7.6,8.1,8.4,8.6,8.8,8.6,8.9,9.0,9.0,8.7,8.8,8.5\\\",\\\"5.1,5.7,5.9,6.1,6.0,6.1,5.8,6.0,5.9,5.9,5.8,5.7,5.3\\\",\\\"1.3,1.9,2.1,2.4,2.6,2.7,2.8,2.9,3.1,3.2,2.9,3.1,3.2\\\",hiddenhausen\\n05758020,16085,7896,8189,32278,05758020,8.9,6.0,2.9,3.2,5.9,1460,952,508,1436,962,474,9.1,\\\"7.1,8.2,8.7,9.0,9.5,9.9,9.7,9.9,9.9,9.6,9.8,9.6,8.9\\\",\\\"5.6,6.1,6.2,6.4,6.7,6.8,6.5,6.6,6.5,6.4,6.9,6.5,6.0\\\",\\\"1.6,2.2,2.5,2.6,2.8,3.1,3.2,3.3,3.4,3.1,2.9,3.1,2.9\\\",kirchlengern\\n05758024,40086,19759,20327,32584,05758024,9.2,6.1,3.1,2.2,4.8,2820,1929,891,3673,2435,1238,7.0,\\\"7.7,8.7,8.8,8.9,9.3,9.6,9.7,9.5,9.8,9.9,9.5,9.4,9.2\\\",\\\"6.0,6.3,6.3,6.2,6.3,6.4,6.5,6.4,6.2,6.3,6.4,6.3,6.1\\\",\\\"1.6,2.4,2.6,2.7,3.0,3.2,3.2,3.2,3.5,3.6,3.1,3.1,3.1\\\",\\\"löhne, stadt\\\"\\n05758028,9717,4841,4876,32289,05758028,9.9,6.2,3.7,2.9,5.0,774,489,285,962,606,356,8.0,\\\"6.7,8.3,8.3,8.5,9.2,8.9,9.3,9.5,9.5,10.0,10.0,10.2,9.9\\\",\\\"5.2,6.2,6.1,6.1,6.6,6.4,6.6,6.6,6.4,6.6,6.6,6.8,6.2\\\",\\\"1.4,2.1,2.1,2.4,2.7,2.5,2.7,2.9,3.1,3.4,3.4,3.4,3.7\\\",rödinghausen\\n05758032,14768,7232,7536,32139,05758032,8.8,5.8,3.0,2.4,4.6,1040,679,361,1298,861,437,7.0,\\\"6.8,7.7,8.0,8.4,8.7,8.9,8.8,9.2,9.0,9.0,9.0,9.0,8.8\\\",\\\"5.4,5.8,5.9,6.1,6.2,6.0,6.0,6.2,6.0,5.9,6.2,6.1,5.8\\\",\\\"1.3,1.9,2.1,2.3,2.4,2.9,2.8,3.0,3.0,3.1,2.7,2.9,3.0\\\",\\\"spenge, stadt\\\"\\n05758036,18914,9447,9467,32602,05758036,9.2,6.1,3.1,2.5,5.1,1435,970,465,1739,1161,578,7.6,\\\"7.4,8.3,8.6,9.2,9.0,9.4,9.4,9.6,9.9,9.5,9.4,9.3,9.2\\\",\\\"5.8,6.1,6.2,6.5,6.2,6.3,6.3,6.4,6.4,6.1,6.3,6.2,6.1\\\",\\\"1.6,2.1,2.4,2.7,2.7,3.1,3.0,3.2,3.5,3.4,3.1,3.2,3.1\\\",\\\"vlotho, stadt\\\"\\n05762004,18699,9140,9559,33014,05762004,10.5,7.2,3.2,3.1,7.8,2048,1465,583,1956,1352,604,11.0,\\\"7.7,8.9,9.1,9.2,9.5,9.8,10.1,10.1,10.7,10.7,10.7,10.9,10.5\\\",\\\"6.5,7.1,7.2,7.1,7.2,7.0,7.4,7.2,7.3,7.3,7.7,7.8,7.2\\\",\\\"1.2,1.8,1.9,2.1,2.3,2.8,2.7,2.9,3.4,3.4,3.0,3.1,3.2\\\",\\\"bad driburg, stadt\\\"\\n05762008,13442,6641,6801,37688,05762008,10.1,7.5,2.6,1.8,5.5,986,739,247,1360,1004,356,7.3,\\\"8.2,9.2,9.1,9.6,9.7,9.8,9.8,9.7,10.0,10.4,10.3,10.3,10.1\\\",\\\"6.8,7.4,7.4,7.7,7.6,7.5,7.6,7.5,7.5,7.7,7.9,7.7,7.5\\\",\\\"1.4,1.7,1.7,1.9,2.1,2.4,2.2,2.2,2.5,2.7,2.4,2.6,2.6\\\",\\\"beverungen, stadt\\\"\\n05762012,9497,4944,4553,34434,05762012,8.6,6.0,2.5,2.0,4.3,600,412,188,816,574,242,6.3,\\\"7.7,8.6,8.7,9.0,9.0,9.2,9.1,9.3,9.1,9.0,9.1,8.9,8.6\\\",\\\"6.7,7.1,7.2,7.1,7.0,7.1,7.0,7.0,6.7,6.4,6.6,6.5,6.0\\\",\\\"1.0,1.4,1.5,1.9,2.0,2.1,2.2,2.3,2.4,2.6,2.5,2.4,2.5\\\",\\\"borgentreich, orgelstadt\\\"\\n05762016,16586,8368,8218,33034,05762016,9.3,6.6,2.7,2.5,6.0,1416,997,419,1539,1097,442,8.5,\\\"6.9,8.1,8.4,8.4,8.9,9.1,9.3,9.5,9.6,9.5,10.0,9.7,9.3\\\",\\\"5.9,6.5,6.7,6.7,7.0,7.0,7.0,7.0,6.8,6.6,7.4,7.1,6.6\\\",\\\"1.0,1.6,1.6,1.7,1.9,2.1,2.3,2.5,2.7,2.9,2.6,2.6,2.7\\\",\\\"brakel, stadt\\\"\\n05762020,29589,14691,14898,37671,05762020,9.1,6.8,2.3,2.2,6.7,2612,1975,637,2704,2021,683,8.8,\\\"6.9,7.7,7.9,8.1,8.5,8.7,8.9,8.8,8.9,9.3,9.2,9.5,9.1\\\",\\\"5.8,6.2,6.3,6.4,6.7,6.7,6.7,6.7,6.7,6.8,7.0,7.2,6.8\\\",\\\"1.1,1.5,1.6,1.7,1.8,2.0,2.2,2.1,2.2,2.5,2.2,2.4,2.3\\\",\\\"höxter, stadt\\\"\\n05762024,5125,2592,2533,37696,05762024,9.3,6.7,2.6,2.1,5.7,402,294,108,477,344,133,7.8,\\\"6.2,7.2,7.5,8.5,7.9,8.3,9.2,9.6,10.4,9.6,9.6,9.9,9.3\\\",\\\"5.3,5.9,6.0,6.5,6.0,6.5,6.9,7.5,7.9,7.2,7.1,7.3,6.7\\\",\\\"0.9,1.3,1.5,1.9,2.0,1.8,2.3,2.1,2.4,2.4,2.5,2.6,2.6\\\",\\\"marienmünster, stadt\\\"\\n05762028,6254,3231,3023,33039,05762028,9.9,7.2,2.7,2.4,5.0,462,315,147,621,450,171,7.4,\\\"7.7,8.6,8.9,9.6,10.0,10.4,10.2,10.5,10.8,11.1,10.3,10.5,9.9\\\",\\\"6.3,6.7,7.0,7.5,7.5,8.1,7.7,7.9,7.8,8.1,7.7,7.7,7.2\\\",\\\"1.4,1.9,1.9,2.1,2.5,2.2,2.5,2.6,3.0,3.0,2.7,2.8,2.7\\\",\\\"nieheim, stadt\\\"\\n05762032,12922,6446,6476,32839,05762032,10.1,7.1,3.0,3.3,8.0,1458,1029,429,1301,919,382,11.3,\\\"8.8,9.7,9.8,10.0,10.0,10.5,10.6,11.1,11.3,11.3,11.1,11.3,10.1\\\",\\\"7.4,7.9,8.0,8.0,7.9,8.1,8.0,8.2,8.3,8.3,8.4,8.5,7.1\\\",\\\"1.4,1.9,1.8,2.0,2.1,2.4,2.7,2.9,3.0,3.0,2.7,2.8,3.0\\\",\\\"steinheim, stadt\\\"\\n05762036,23629,11761,11868,34414,05762036,9.1,6.5,2.6,2.8,7.4,2417,1760,657,2149,1545,604,10.2,\\\"7.2,8.2,8.2,8.7,8.9,9.3,9.7,9.9,9.6,9.9,9.6,9.6,9.1\\\",\\\"6.1,6.6,6.7,6.9,7.0,7.2,7.4,7.4,6.9,7.1,7.1,6.9,6.5\\\",\\\"1.1,1.6,1.4,1.8,1.9,2.1,2.3,2.5,2.7,2.8,2.5,2.7,2.6\\\",\\\"warburg, hansestadt\\\"\\n05762040,8267,4192,4075,34439,05762040,8.7,6.5,2.2,1.6,3.7,439,310,129,720,537,183,5.3,\\\"7.2,7.8,8.0,8.0,8.3,8.3,8.6,8.5,8.6,9.1,8.8,8.8,8.7\\\",\\\"6.2,6.4,6.7,6.6,6.8,6.6,7.0,6.6,6.5,6.9,7.1,6.7,6.5\\\",\\\"1.0,1.4,1.4,1.5,1.6,1.7,1.6,1.9,2.1,2.3,1.7,2.1,2.2\\\",\\\"willebadessen, stadt\\\"\\n05766004,9828,5074,4754,32832,05766004,9.0,6.0,3.0,1.4,3.5,482,341,141,883,586,297,4.9,\\\"6.7,8.3,8.1,8.7,9.5,9.6,9.4,9.6,10.0,9.9,9.2,9.6,9.0\\\",\\\"5.5,6.2,6.1,6.5,6.9,6.9,6.8,7.0,6.9,6.8,6.6,6.6,6.0\\\",\\\"1.2,2.1,2.1,2.2,2.6,2.7,2.6,2.6,3.1,3.0,2.6,3.0,3.0\\\",augustdorf\\n05766008,53341,25619,27722,32105,05766008,9.7,6.7,3.0,3.1,7.0,5371,3742,1629,5152,3558,1594,10.1,\\\"7.2,8.6,8.5,8.8,8.9,9.2,9.3,9.5,9.6,9.7,9.7,9.9,9.7\\\",\\\"5.8,6.4,6.3,6.4,6.4,6.5,6.6,6.5,6.5,6.6,6.8,6.8,6.7\\\",\\\"1.5,2.2,2.2,2.4,2.5,2.7,2.8,3.0,3.1,3.1,2.9,3.1,3.0\\\",\\\"bad salzuflen, stadt\\\"\\n05766012,8846,4418,4428,32683,05766012,8.4,6.2,2.2,2.0,5.3,646,470,176,746,548,198,7.3,\\\"6.7,7.6,7.8,8.6,8.3,8.7,8.9,8.9,9.2,9.1,8.9,8.6,8.4\\\",\\\"5.5,6.3,6.3,6.9,6.5,6.9,6.8,6.6,6.7,6.6,6.7,6.5,6.2\\\",\\\"1.2,1.4,1.5,1.7,1.8,1.8,2.1,2.3,2.5,2.4,2.2,2.1,2.2\\\",\\\"barntrup, stadt\\\"\\n05766016,15370,7671,7699,32825,05766016,8.0,5.6,2.4,2.2,5.5,1198,853,345,1225,862,363,7.8,\\\"6.2,7.1,7.1,7.0,7.3,7.6,7.8,7.9,8.2,8.2,8.1,7.9,8.0\\\",\\\"5.0,5.5,5.2,5.2,5.2,5.3,5.5,5.4,5.5,5.5,5.7,5.6,5.6\\\",\\\"1.2,1.6,1.8,1.8,2.2,2.2,2.2,2.5,2.7,2.7,2.4,2.3,2.4\\\",\\\"blomberg, stadt\\\"\\n05766020,74817,36141,38676,32756,05766020,9.0,6.4,2.6,2.7,6.6,6968,4915,2053,6715,4754,1961,9.3,\\\"6.9,7.9,8.0,8.3,8.5,8.8,8.9,8.9,9.3,9.2,8.9,9.1,9.0\\\",\\\"5.5,6.0,5.9,6.1,6.2,6.2,6.2,6.2,6.4,6.4,6.4,6.5,6.4\\\",\\\"1.3,1.9,2.1,2.2,2.4,2.6,2.6,2.7,2.9,2.9,2.5,2.6,2.6\\\",\\\"detmold, stadt\\\"\\n05766024,7970,4048,3922,32694,05766024,8.2,5.6,2.6,1.8,4.7,516,375,141,654,447,207,6.5,\\\"6.7,8.2,8.4,8.7,8.7,8.7,8.5,8.8,9.4,9.0,8.4,8.8,8.2\\\",\\\"5.7,6.4,6.4,6.5,6.3,6.5,6.3,6.5,6.7,6.1,6.1,6.0,5.6\\\",\\\"1.0,1.8,1.9,2.2,2.4,2.2,2.2,2.4,2.6,3.0,2.3,2.8,2.6\\\",dörentrup\\n05766028,11522,5795,5727,32699,05766028,9.5,6.8,2.7,1.9,4.8,772,557,215,1098,789,309,6.7,\\\"7.3,8.3,8.3,8.4,8.9,9.2,9.2,9.3,9.7,9.9,10.0,10.2,9.5\\\",\\\"6.1,6.6,6.6,6.6,6.7,6.7,6.8,6.8,6.8,7.0,7.3,7.3,6.8\\\",\\\"1.2,1.7,1.7,1.9,2.2,2.5,2.4,2.6,2.9,3.0,2.7,2.9,2.7\\\",extertal\\n05766032,17126,8324,8802,32805,05766032,9.5,6.8,2.7,2.2,5.9,1380,1011,369,1621,1164,457,8.1,\\\"6.5,7.5,7.8,8.2,8.3,8.3,8.5,8.7,8.9,9.3,8.9,9.2,9.5\\\",\\\"5.3,5.8,5.8,6.2,6.2,6.2,6.3,6.3,6.3,6.5,6.6,6.8,6.8\\\",\\\"1.2,1.7,2.0,2.0,2.1,2.1,2.2,2.4,2.6,2.7,2.3,2.5,2.7\\\",\\\"horn-bad meinberg, stadt\\\"\\n05766036,13914,6902,7012,32689,05766036,9.1,6.5,2.6,1.8,4.3,856,601,255,1268,905,363,6.2,\\\"6.7,7.7,7.9,8.3,8.2,8.8,8.6,9.0,9.4,9.4,9.4,9.2,9.1\\\",\\\"5.5,6.0,6.0,6.3,6.1,6.4,6.2,6.5,6.6,6.6,6.8,6.6,6.5\\\",\\\"1.2,1.8,1.9,2.1,2.1,2.4,2.4,2.5,2.8,2.9,2.6,2.7,2.6\\\",kalletal\\n05766040,35120,17336,17784,32791,05766040,9.8,6.9,2.9,2.0,5.1,2493,1800,693,3442,2423,1019,7.1,\\\"7.5,8.6,9.0,9.3,9.2,9.7,9.4,9.6,9.6,9.5,9.4,9.9,9.8\\\",\\\"6.0,6.5,6.8,7.0,6.6,6.8,6.7,6.8,6.7,6.5,6.7,7.1,6.9\\\",\\\"1.5,2.1,2.2,2.3,2.6,2.9,2.7,2.9,2.9,3.0,2.8,2.9,2.9\\\",\\\"lage, stadt\\\"\\n05766044,41276,20457,20819,32657,05766044,9.3,6.6,2.7,2.8,6.6,3882,2744,1138,3821,2709,1112,9.4,\\\"7.0,8.0,8.2,8.6,8.7,8.8,9.1,9.2,9.5,9.6,9.4,9.6,9.3\\\",\\\"5.6,6.1,6.3,6.3,6.3,6.2,6.5,6.4,6.5,6.5,6.7,6.9,6.6\\\",\\\"1.4,1.9,2.0,2.3,2.4,2.6,2.6,2.8,3.0,3.1,2.6,2.7,2.7\\\",\\\"lemgo, stadt\\\"\\n05766048,16401,8148,8253,33818,05766048,9.4,6.5,3.0,2.5,5.3,1286,868,418,1549,1059,490,7.8,\\\"7.0,8.3,8.3,9.0,9.3,9.5,9.5,9.7,10.0,10.1,9.8,9.7,9.4\\\",\\\"5.7,6.4,6.3,6.6,6.7,6.8,6.7,6.8,6.9,6.9,7.0,6.9,6.5\\\",\\\"1.2,1.9,2.0,2.4,2.6,2.7,2.8,2.9,3.1,3.2,2.9,2.8,3.0\\\",leopoldshöhe\\n05766052,9751,4851,4900,32676,05766052,9.5,6.7,2.7,2.2,5.0,708,492,216,922,656,266,7.3,\\\"7.2,8.2,8.4,8.8,8.5,8.9,9.3,9.1,9.3,9.5,9.6,9.7,9.5\\\",\\\"5.9,6.5,6.5,6.8,6.5,6.7,6.8,6.6,6.4,6.5,7.0,6.9,6.7\\\",\\\"1.2,1.7,1.9,2.0,2.0,2.2,2.5,2.5,2.8,3.0,2.6,2.8,2.7\\\",\\\"lügde, stadt der osterräder\\\"\\n05766056,17616,8722,8894,33813,05766056,8.8,5.9,3.0,2.1,4.5,1161,795,366,1559,1034,525,6.6,\\\"6.9,8.2,8.3,8.6,8.6,8.8,9.0,9.0,9.4,9.5,9.5,9.5,8.8\\\",\\\"5.5,6.0,5.9,6.1,6.1,6.1,6.2,6.1,6.3,6.2,6.6,6.3,5.9\\\",\\\"1.5,2.2,2.4,2.5,2.6,2.8,2.8,2.9,3.1,3.3,2.8,3.1,3.0\\\",\\\"oerlinghausen, stadt\\\"\\n05766060,8708,4341,4367,32816,05766060,8.1,5.9,2.2,1.4,3.7,445,323,122,706,517,189,5.1,\\\"6.4,7.7,7.7,8.3,8.2,8.6,9.1,9.0,9.1,8.8,8.6,8.4,8.1\\\",\\\"5.4,6.2,6.2,6.5,6.3,6.4,6.8,6.6,6.5,6.2,6.4,6.3,5.9\\\",\\\"0.9,1.6,1.5,1.7,1.8,2.2,2.3,2.4,2.6,2.6,2.2,2.1,2.2\\\",\\\"schieder-schwalenberg, stadt\\\"\\n05766064,9144,4643,4501,33189,05766064,9.5,6.7,2.8,1.7,3.6,485,332,153,871,615,256,5.3,\\\"6.7,7.8,7.5,8.6,9.0,8.7,9.2,9.5,9.7,10.1,9.8,10.1,9.5\\\",\\\"5.3,5.9,5.9,6.3,6.4,6.3,6.5,6.8,6.7,6.9,7.4,7.3,6.7\\\",\\\"1.4,1.9,1.7,2.3,2.6,2.4,2.7,2.7,3.1,3.2,2.4,2.8,2.8\\\",schlangen\\n05770004,48990,23905,25085,32545,05770004,8.7,5.9,2.8,3.8,7.3,5434,3588,1846,4247,2880,1367,11.1,\\\"6.8,8.0,8.2,8.8,8.9,9.5,9.3,9.3,9.5,9.1,8.8,9.0,8.7\\\",\\\"5.4,6.0,6.0,6.4,6.3,6.6,6.5,6.3,6.4,6.0,6.0,6.1,5.9\\\",\\\"1.4,2.1,2.2,2.4,2.6,2.8,2.8,2.9,3.1,3.1,2.7,2.9,2.8\\\",\\\"bad oeynhausen, stadt\\\"\\n05770008,24921,12213,12708,32339,05770008,9.1,6.0,3.2,3.8,7.7,2867,1910,957,2278,1486,792,11.5,\\\"7.0,8.2,8.0,8.3,8.6,9.1,9.0,9.4,9.3,9.6,9.2,9.6,9.1\\\",\\\"5.6,6.0,5.9,5.9,6.0,6.2,6.3,6.2,5.9,5.9,6.1,6.5,6.0\\\",\\\"1.4,2.2,2.1,2.4,2.6,3.0,2.7,3.3,3.3,3.6,3.1,3.2,3.2\\\",\\\"espelkamp, stadt\\\"\\n05770012,15916,7890,8026,32479,05770012,9.1,6.2,2.9,2.0,4.5,1032,712,320,1442,985,457,6.5,\\\"6.5,7.8,8.0,8.1,8.0,8.2,8.1,8.6,8.7,8.8,9.0,9.0,9.1\\\",\\\"5.5,6.2,6.1,5.9,5.7,5.6,5.7,5.8,5.9,5.9,6.1,6.0,6.2\\\",\\\"1.0,1.6,1.9,2.2,2.3,2.5,2.5,2.7,2.9,3.0,2.9,2.9,2.9\\\",hille\\n05770016,13271,6651,6620,32609,05770016,10.0,6.4,3.6,2.8,5.6,1116,741,375,1321,847,474,8.4,\\\"7.4,8.9,8.9,9.4,9.5,10.2,9.9,9.9,9.9,10.2,10.1,10.0,10.0\\\",\\\"6.0,6.7,6.4,6.7,6.6,6.9,6.6,6.4,6.4,6.6,6.4,6.5,6.4\\\",\\\"1.5,2.2,2.5,2.7,2.9,3.3,3.3,3.5,3.6,3.7,3.7,3.5,3.6\\\",hüllhorst\\n05770020,25462,12270,13192,32312,05770020,9.4,6.0,3.4,3.7,7.4,2821,1877,944,2384,1525,859,11.1,\\\"7.1,8.4,8.5,9.1,9.1,9.2,9.4,9.5,9.5,9.8,9.5,9.7,9.4\\\",\\\"5.6,6.2,6.1,6.3,6.3,6.3,6.4,6.5,6.4,6.4,6.4,6.4,6.0\\\",\\\"1.5,2.1,2.4,2.7,2.8,2.9,3.0,3.0,3.1,3.4,3.0,3.3,3.4\\\",\\\"lübbecke, stadt\\\"\\n05770024,81598,40066,41532,32423,05770024,8.5,5.9,2.5,2.6,6.1,7125,5003,2122,6902,4839,2063,8.7,\\\"6.5,7.6,7.6,7.9,8.1,8.3,8.3,8.4,8.5,8.6,8.6,8.6,8.5\\\",\\\"5.3,5.8,5.8,5.9,5.9,5.9,5.9,5.7,5.8,5.8,6.2,6.1,5.9\\\",\\\"1.2,1.8,1.8,2.0,2.3,2.4,2.4,2.7,2.7,2.8,2.4,2.4,2.5\\\",\\\"minden, stadt\\\"\\n05770028,25663,12945,12718,32469,05770028,8.9,6.3,2.6,2.0,4.5,1688,1165,523,2281,1619,662,6.6,\\\"6.9,7.9,7.9,8.3,8.6,8.9,8.9,9.0,9.2,9.2,9.1,9.0,8.9\\\",\\\"5.6,6.1,6.1,6.3,6.4,6.6,6.6,6.5,6.4,6.4,6.6,6.5,6.3\\\",\\\"1.3,1.8,1.8,2.0,2.2,2.3,2.4,2.5,2.8,2.9,2.4,2.5,2.6\\\",\\\"petershagen, stadt\\\"\\n05770032,35430,17486,17944,32457,05770032,8.5,5.7,2.8,2.1,4.7,2423,1664,759,3009,2019,990,6.8,\\\"6.9,7.9,8.1,8.5,8.8,9.0,9.2,9.2,9.1,9.0,8.7,8.8,8.5\\\",\\\"5.6,6.1,6.2,6.4,6.4,6.4,6.5,6.5,6.2,6.0,6.2,6.0,5.7\\\",\\\"1.2,1.8,1.9,2.1,2.4,2.6,2.7,2.7,2.9,3.0,2.6,2.7,2.8\\\",\\\"porta westfalica, stadt\\\"\\n05770036,12647,6258,6389,32361,05770036,10.1,6.7,3.4,2.8,5.9,1107,752,355,1279,851,428,8.8,\\\"6.8,8.2,8.2,8.6,9.0,9.4,9.6,9.9,10.4,10.1,10.2,10.8,10.1\\\",\\\"5.4,6.1,6.0,6.2,6.4,6.5,6.6,6.7,6.9,6.5,7.0,7.3,6.7\\\",\\\"1.4,2.1,2.2,2.5,2.6,2.9,3.0,3.1,3.5,3.6,3.2,3.5,3.4\\\",\\\"preußisch oldendorf, stadt\\\"\\n05770040,15581,7844,7737,32369,05770040,9.9,6.3,3.6,3.1,5.1,1283,793,490,1541,974,567,8.2,\\\"6.7,7.8,8.1,8.4,8.9,9.0,9.1,9.2,9.8,9.8,9.9,9.7,9.9\\\",\\\"5.4,5.9,5.9,6.1,6.4,6.1,6.3,5.9,6.1,6.0,6.4,6.3,6.3\\\",\\\"1.2,1.9,2.2,2.3,2.5,2.9,2.9,3.3,3.7,3.7,3.4,3.4,3.6\\\",\\\"rahden, stadt\\\"\\n05770044,13571,6960,6611,32351,05770044,10.7,7.0,3.7,3.2,5.6,1192,755,437,1451,950,501,8.8,\\\"7.3,8.1,8.4,9.0,9.1,10.0,9.9,10.3,10.9,10.7,11.0,11.1,10.7\\\",\\\"5.9,6.2,6.1,6.4,6.4,6.7,6.8,6.8,7.1,6.8,7.1,7.1,7.0\\\",\\\"1.4,1.9,2.3,2.5,2.6,3.2,3.1,3.5,3.8,3.8,3.9,4.0,3.7\\\",stemwede\\n05774004,9294,4707,4587,33184,05774004,9.6,6.8,2.9,1.8,4.2,551,387,164,896,628,268,5.9,\\\"7.3,8.5,7.9,8.6,8.9,9.6,9.7,9.9,10.0,10.0,9.4,9.3,9.6\\\",\\\"6.0,6.7,6.2,6.5,6.6,6.9,6.9,6.9,6.8,6.8,6.8,6.7,6.8\\\",\\\"1.3,1.8,1.7,2.1,2.3,2.7,2.8,2.9,3.2,3.2,2.6,2.7,2.9\\\",altenbeken\\n05774008,15572,7576,7996,33175,05774008,10.3,6.8,3.5,3.2,6.3,1481,976,505,1605,1054,551,9.5,\\\"7.3,8.9,8.7,9.0,9.3,9.6,9.8,10.1,10.3,10.6,10.3,10.3,10.3\\\",\\\"5.8,6.7,6.5,6.5,6.5,6.8,6.9,6.8,6.9,7.0,7.1,6.9,6.8\\\",\\\"1.5,2.2,2.3,2.6,2.8,2.8,2.9,3.2,3.4,3.6,3.3,3.4,3.5\\\",\\\"bad lippspringe, stadt\\\"\\n05774012,13447,6695,6752,33178,05774012,9.2,6.3,2.9,2.5,5.4,1058,720,338,1242,849,393,7.9,\\\"7.5,8.3,8.4,8.4,8.7,9.0,9.2,9.2,9.6,9.7,9.5,9.7,9.2\\\",\\\"6.1,6.4,6.0,6.1,6.1,6.2,6.5,6.5,6.6,6.4,6.7,6.8,6.3\\\",\\\"1.5,1.9,2.4,2.3,2.6,2.8,2.7,2.7,3.0,3.2,2.8,2.9,2.9\\\",borchen\\n05774016,21772,11305,10467,33142,05774016,11.3,7.6,3.7,3.5,6.8,2251,1483,768,2459,1644,815,10.3,\\\"8.5,9.9,10.3,10.7,10.9,11.2,11.4,11.4,11.8,11.7,11.3,11.7,11.3\\\",\\\"7.0,7.7,8.0,8.0,8.0,8.1,8.0,7.9,8.0,8.0,8.0,8.0,7.6\\\",\\\"1.5,2.2,2.3,2.7,2.9,3.1,3.3,3.5,3.8,3.7,3.3,3.7,3.7\\\",\\\"büren, stadt\\\"\\n05774020,31964,16316,15648,33129,05774020,12.6,8.6,3.9,3.4,8.0,3626,2542,1084,4019,2762,1257,11.3,\\\"9.5,10.8,11.1,11.8,12.3,12.8,12.7,13.1,13.3,13.1,13.3,13.0,12.6\\\",\\\"7.8,8.2,8.4,8.8,9.0,9.1,9.1,9.2,9.1,8.9,9.4,9.1,8.6\\\",\\\"1.8,2.5,2.7,2.9,3.4,3.6,3.6,3.8,4.2,4.1,3.9,3.9,3.9\\\",\\\"delbrück, stadt\\\"\\n05774024,16080,8166,7914,33161,05774024,12.2,8.0,4.2,4.1,8.0,1948,1292,656,1961,1292,669,12.1,\\\"9.4,10.7,11.0,11.2,11.9,12.0,11.9,11.9,11.8,11.9,12.1,12.3,12.2\\\",\\\"7.5,7.9,8.1,8.1,8.5,8.4,8.4,8.2,7.9,7.9,8.3,8.3,8.0\\\",\\\"2.0,2.8,2.8,3.1,3.4,3.6,3.5,3.7,3.8,4.1,3.9,4.0,4.2\\\",\\\"hövelhof, sennegemeinde\\\"\\n05774028,10589,5449,5140,33165,05774028,10.0,6.9,3.1,2.4,4.6,739,489,250,1062,735,327,7.0,\\\"6.7,8.1,8.5,8.8,8.9,9.4,9.2,9.3,9.4,10.0,9.7,9.9,10.0\\\",\\\"5.7,6.4,6.7,6.9,6.8,6.8,6.8,6.8,6.7,6.9,7.1,7.2,6.9\\\",\\\"1.1,1.6,1.8,1.9,2.1,2.5,2.4,2.4,2.7,3.1,2.6,2.8,3.1\\\",\\\"lichtenau, stadt\\\"\\n05774032,148126,73680,74446,33098,05774032,10.5,7.4,3.0,3.5,8.8,18267,13077,5190,15528,11030,4498,12.3,\\\"7.7,9.0,9.2,9.6,9.7,10.1,10.3,10.5,10.8,11.1,10.8,10.8,10.5\\\",\\\"6.1,6.7,6.9,7.1,7.0,7.0,7.1,7.1,7.3,7.5,7.9,7.8,7.4\\\",\\\"1.7,2.3,2.3,2.5,2.7,3.1,3.2,3.3,3.5,3.6,2.9,3.0,3.0\\\",\\\"paderborn, stadt\\\"\\n05774036,25186,12493,12693,33154,05774036,10.2,7.2,3.0,2.7,6.8,2394,1718,676,2568,1820,748,9.5,\\\"8.2,9.1,9.5,9.6,9.9,10.1,10.4,10.5,10.8,10.8,10.8,10.8,10.2\\\",\\\"6.6,6.8,7.2,7.1,7.2,7.3,7.5,7.3,7.4,7.4,7.8,7.6,7.2\\\",\\\"1.6,2.2,2.2,2.5,2.7,2.8,2.9,3.2,3.4,3.5,3.0,3.1,3.0\\\",\\\"salzkotten, stadt\\\"\\n05774040,12302,6162,6140,33181,05774040,11.7,8.2,3.5,3.3,7.3,1303,899,404,1437,1009,428,10.6,\\\"8.9,9.6,10.1,10.8,11.0,11.3,10.8,11.7,11.9,12.0,12.0,11.9,11.7\\\",\\\"7.4,7.5,7.9,8.4,8.3,8.4,7.8,8.4,8.5,8.3,8.7,8.4,8.2\\\",\\\"1.5,2.1,2.2,2.3,2.6,2.9,3.0,3.3,3.4,3.7,3.3,3.5,3.5\\\",\\\"bad wünnenberg, stadt\\\"\\n05911000,364742,177427,187315,44787,05911000,8.8,6.6,2.2,2.4,6.9,33870,25088,8782,32256,24052,8204,9.3,\\\"6.5,7.7,7.7,8.2,8.4,8.6,8.8,8.9,9.0,9.2,9.1,9.2,8.8\\\",\\\"5.3,6.0,6.0,6.2,6.4,6.4,6.5,6.5,6.6,6.6,6.9,6.9,6.6\\\",\\\"1.1,1.7,1.8,1.9,2.0,2.2,2.3,2.4,2.5,2.6,2.1,2.2,2.2\\\",\\\"bochum, stadt\\\"\\n05913000,586181,287846,298335,44135,05913000,8.5,6.4,2.2,2.5,6.6,53554,38838,14716,49951,37260,12691,9.1,\\\"6.4,7.7,7.7,8.1,8.2,8.4,8.5,8.5,8.7,8.9,8.7,8.7,8.5\\\",\\\"5.4,6.0,6.0,6.2,6.2,6.2,6.3,6.2,6.3,6.3,6.6,6.6,6.4\\\",\\\"1.0,1.6,1.7,1.8,2.0,2.2,2.3,2.3,2.4,2.5,2.1,2.1,2.2\\\",\\\"dortmund, stadt\\\"\\n05914000,189044,92207,96837,58095,05914000,9.6,6.9,2.7,2.8,6.8,18203,12840,5363,18085,12968,5117,9.6,\\\"7.2,8.5,8.5,8.8,9.1,9.3,9.3,9.6,9.7,9.7,9.7,9.7,9.6\\\",\\\"5.9,6.5,6.4,6.6,6.6,6.7,6.6,6.8,6.7,6.7,7.0,7.0,6.9\\\",\\\"1.3,1.9,2.1,2.2,2.4,2.6,2.7,2.8,2.9,3.0,2.7,2.7,2.7\\\",\\\"hagen, stadt der fernuniversität\\\"\\n05915000,179397,88166,91231,59065,05915000,9.5,7.1,2.4,2.4,6.8,16532,12237,4295,16974,12657,4317,9.2,\\\"7.2,8.3,8.4,8.7,8.8,9.2,9.4,9.5,9.6,9.9,9.9,9.9,9.5\\\",\\\"6.1,6.7,6.7,6.9,6.8,6.9,7.0,7.0,7.1,7.2,7.5,7.5,7.1\\\",\\\"1.1,1.6,1.7,1.8,2.0,2.3,2.3,2.5,2.5,2.7,2.4,2.4,2.4\\\",\\\"hamm, stadt\\\"\\n05916000,155851,75940,79911,44623,05916000,8.2,6.2,2.0,1.5,5.0,10244,7831,2413,12785,9709,3076,6.6,\\\"6.6,7.6,7.4,7.6,7.9,8.1,8.3,8.5,8.3,8.7,8.4,8.4,8.2\\\",\\\"5.6,6.1,5.9,6.0,6.1,6.2,6.2,6.4,6.2,6.5,6.6,6.5,6.2\\\",\\\"1.0,1.4,1.5,1.6,1.7,1.9,2.0,2.1,2.1,2.2,1.8,1.9,2.0\\\",\\\"herne, stadt\\\"\\n05954004,9004,4442,4562,58339,05954004,8.2,5.7,2.5,2.0,4.3,572,388,184,738,512,226,6.4,\\\"6.2,7.3,7.4,8.0,8.1,8.4,8.3,8.7,8.7,8.8,8.6,8.9,8.2\\\",\\\"5.0,5.4,5.4,5.8,5.8,5.9,5.8,6.2,6.0,5.9,6.1,6.3,5.7\\\",\\\"1.2,1.9,2.0,2.2,2.3,2.5,2.5,2.5,2.8,3.0,2.5,2.6,2.5\\\",\\\"breckerfeld, hansestadt\\\"\\n05954008,29926,14635,15291,58256,05954008,9.3,6.2,3.1,2.9,5.5,2532,1660,872,2798,1869,929,8.5,\\\"7.2,8.4,8.4,8.8,9.4,9.7,9.7,9.8,10.0,9.8,9.7,9.7,9.3\\\",\\\"5.9,6.3,6.3,6.3,6.7,6.7,6.8,6.7,6.8,6.5,6.8,6.7,6.2\\\",\\\"1.4,2.1,2.2,2.5,2.7,2.9,2.9,3.1,3.2,3.3,3.0,3.1,3.1\\\",\\\"ennepetal, stadt der kluterthöhle\\\"\\n05954012,31315,15290,16025,58285,05954012,9.9,6.9,3.1,2.6,6.1,2701,1900,801,3103,2147,956,8.6,\\\"7.3,8.6,8.9,9.3,9.7,10.0,9.9,10.0,10.1,10.2,10.3,10.3,9.9\\\",\\\"6.0,6.6,6.8,6.9,6.9,7.1,7.1,7.0,7.0,6.9,7.2,7.2,6.9\\\",\\\"1.3,2.0,2.2,2.4,2.7,2.9,2.9,3.0,3.1,3.3,3.1,3.1,3.1\\\",\\\"gevelsberg, stadt\\\"\\n05954016,54834,26608,28226,45525,05954016,9.4,6.7,2.7,2.4,5.6,4414,3074,1340,5130,3661,1469,8.0,\\\"7.2,8.5,8.7,8.9,9.3,9.5,9.6,9.7,9.9,10.0,9.8,9.7,9.4\\\",\\\"6.1,6.6,6.6,6.7,6.8,6.8,6.8,6.9,7.0,7.0,7.2,7.0,6.7\\\",\\\"1.1,1.9,2.1,2.2,2.5,2.7,2.8,2.8,2.9,3.0,2.6,2.7,2.7\\\",\\\"hattingen, stadt\\\"\\n05954020,22818,10869,11949,58313,05954020,8.8,6.1,2.7,2.6,6.8,2150,1546,604,2007,1390,617,9.4,\\\"6.6,7.3,7.6,8.2,8.2,8.6,8.5,8.7,8.9,9.4,9.3,9.3,8.8\\\",\\\"5.4,5.6,5.7,6.0,6.1,6.1,6.2,6.3,6.4,6.5,6.6,6.6,6.1\\\",\\\"1.2,1.7,1.9,2.2,2.2,2.4,2.3,2.4,2.5,2.9,2.7,2.7,2.7\\\",\\\"herdecke, stadt\\\"\\n05954024,28330,13598,14732,58332,05954024,8.9,6.2,2.7,2.8,5.3,2273,1490,783,2517,1748,769,8.0,\\\"6.9,8.2,8.2,8.6,9.1,9.3,9.0,9.1,9.1,9.3,9.2,8.9,8.9\\\",\\\"5.4,6.0,6.0,6.2,6.4,6.4,6.3,6.3,6.1,6.4,6.5,6.3,6.2\\\",\\\"1.4,2.2,2.2,2.4,2.7,2.9,2.7,2.8,3.0,2.9,2.7,2.7,2.7\\\",\\\"schwelm, stadt\\\"\\n05954028,25205,12161,13044,45549,05954028,9.0,6.2,2.8,2.3,5.8,2039,1457,582,2261,1553,708,8.1,\\\"6.5,7.9,8.3,8.4,8.9,9.2,9.4,9.6,9.6,9.7,9.3,9.2,9.0\\\",\\\"5.2,6.0,6.2,6.2,6.4,6.5,6.5,6.7,6.6,6.5,6.4,6.3,6.2\\\",\\\"1.3,1.9,2.1,2.3,2.5,2.7,2.8,2.9,3.0,3.2,2.9,2.9,2.8\\\",\\\"sprockhövel, stadt\\\"\\n05954032,27822,13712,14110,58300,05954032,8.2,5.7,2.4,2.0,4.8,1889,1325,564,2274,1597,677,6.8,\\\"5.9,7.2,7.6,7.9,8.1,8.4,8.4,8.7,8.7,8.9,8.7,8.7,8.2\\\",\\\"4.8,5.4,5.7,5.7,5.8,5.8,5.9,6.2,6.1,6.1,6.3,6.3,5.7\\\",\\\"1.1,1.8,2.0,2.2,2.3,2.5,2.4,2.5,2.7,2.8,2.4,2.5,2.4\\\",\\\"wetter (ruhr), stadt\\\"\\n05954036,96700,46997,49703,58452,05954036,9.0,6.6,2.4,2.4,6.2,8317,6009,2308,8751,6383,2368,8.6,\\\"7.0,8.3,8.3,8.8,9.2,9.2,9.4,9.3,9.2,9.4,9.3,9.4,9.0\\\",\\\"5.8,6.4,6.4,6.7,6.9,6.8,6.9,6.7,6.6,6.7,6.9,7.0,6.6\\\",\\\"1.2,1.9,1.9,2.1,2.2,2.4,2.4,2.5,2.7,2.7,2.4,2.4,2.4\\\",\\\"witten, stadt\\\"\\n05958004,73784,36277,37507,59759,05958004,11.4,7.8,3.7,4.3,10.0,10518,7352,3166,8435,5727,2708,14.3,\\\"9.3,10.7,10.5,10.8,11.6,12.0,12.0,12.0,12.2,12.0,11.9,11.9,11.4\\\",\\\"7.7,8.3,8.0,8.1,8.5,8.5,8.5,8.5,8.4,8.3,8.3,8.2,7.8\\\",\\\"1.6,2.4,2.5,2.7,3.1,3.5,3.5,3.5,3.8,3.7,3.6,3.7,3.7\\\",\\\"arnsberg, stadt\\\"\\n05958008,11170,5646,5524,59909,05958008,13.0,8.6,4.5,3.6,8.9,1395,990,405,1457,957,500,12.5,\\\"9.5,11.0,10.8,11.3,11.9,12.9,12.8,13.1,13.3,12.9,13.1,13.4,13.0\\\",\\\"7.5,8.1,7.8,7.9,8.0,8.8,8.7,8.7,8.9,8.7,8.9,9.1,8.6\\\",\\\"2.0,2.8,3.0,3.4,3.8,4.1,4.1,4.3,4.4,4.1,4.2,4.3,4.5\\\",bestwig\\n05958012,26232,13070,13162,59929,05958012,12.2,8.2,4.1,3.8,7.7,3017,2009,1008,3209,2144,1065,11.5,\\\"9.1,10.2,10.4,11.0,11.3,11.9,12.1,12.3,12.4,12.4,12.6,12.8,12.2\\\",\\\"7.6,7.9,7.9,8.4,8.4,8.5,8.6,8.6,8.4,8.3,8.7,8.7,8.2\\\",\\\"1.5,2.3,2.5,2.7,2.9,3.4,3.5,3.7,3.9,4.1,4.0,4.1,4.1\\\",\\\"brilon, stadt\\\"\\n05958016,8942,4554,4388,59889,05958016,12.5,8.9,3.5,3.2,8.3,1032,743,289,1115,800,315,11.5,\\\"8.4,9.7,10.1,10.4,11.3,11.9,11.4,11.7,11.9,12.4,12.6,12.8,12.5\\\",\\\"7.0,7.7,7.9,8.2,8.6,8.7,8.4,8.4,8.4,8.5,8.9,9.3,8.9\\\",\\\"1.4,2.0,2.2,2.2,2.7,3.2,3.0,3.3,3.6,3.9,3.7,3.5,3.5\\\",eslohe (sauerland)\\n05958020,4541,2309,2232,59969,05958020,11.8,8.7,3.1,2.5,5.9,382,269,113,536,396,140,8.4,\\\"9.1,10.2,10.6,10.9,11.5,11.4,12.2,12.4,12.4,12.1,12.4,12.3,11.8\\\",\\\"7.8,8.4,8.8,8.8,8.8,8.7,9.2,9.0,9.0,8.4,9.0,9.0,8.7\\\",\\\"1.3,1.8,1.8,2.1,2.7,2.8,3.0,3.4,3.4,3.7,3.4,3.3,3.1\\\",\\\"hallenberg, stadt\\\"\\n05958024,19968,10182,9786,34431,05958024,9.6,6.7,2.9,2.2,5.8,1608,1162,446,1921,1334,587,8.1,\\\"7.1,8.3,8.2,8.5,8.7,9.5,9.4,9.6,9.6,9.9,9.8,9.7,9.6\\\",\\\"6.2,6.7,6.5,6.6,6.5,6.9,6.8,7.0,6.8,6.9,7.1,7.0,6.7\\\",\\\"0.9,1.6,1.7,1.8,2.2,2.7,2.5,2.6,2.7,3.0,2.7,2.7,2.9\\\",\\\"marsberg, stadt\\\"\\n05958028,7938,4008,3930,59964,05958028,13.5,9.3,4.2,4.5,8.3,1020,661,359,1071,735,336,12.8,\\\"8.9,10.6,10.6,10.8,11.8,12.7,12.7,13.2,13.8,13.9,14.1,13.8,13.5\\\",\\\"7.5,8.5,8.3,8.5,9.0,9.3,9.4,9.4,9.3,9.2,9.9,9.6,9.3\\\",\\\"1.4,2.1,2.3,2.3,2.8,3.5,3.3,3.7,4.5,4.7,4.1,4.2,4.2\\\",\\\"medebach, hansestadt\\\"\\n05958032,30119,14916,15203,59872,05958032,11.5,8.1,3.4,3.6,8.2,3559,2480,1079,3478,2444,1034,11.8,\\\"8.3,9.5,9.9,10.0,10.6,10.8,10.7,11.2,11.3,11.6,11.7,11.7,11.5\\\",\\\"6.9,7.5,7.6,7.6,7.9,7.9,7.9,8.2,8.1,8.1,8.4,8.3,8.1\\\",\\\"1.5,2.0,2.3,2.4,2.7,2.9,2.8,3.0,3.2,3.5,3.3,3.4,3.4\\\",\\\"meschede, kreis- und  hochschulstadt\\\"\\n05958036,14874,7389,7485,59939,05958036,12.2,7.9,4.3,3.7,8.4,1806,1250,556,1820,1176,644,12.1,\\\"8.8,10.2,10.6,11.1,11.7,12.3,13.0,12.6,12.8,12.6,12.7,12.8,12.2\\\",\\\"7.3,7.9,8.1,8.1,8.3,8.8,8.9,8.4,8.5,8.0,8.8,8.2,7.9\\\",\\\"1.5,2.3,2.5,3.0,3.4,3.5,4.0,4.3,4.3,4.6,3.9,4.5,4.3\\\",\\\"olsberg, stadt\\\"\\n05958040,25230,12826,12404,57392,05958040,13.4,8.9,4.5,4.2,8.2,3130,2066,1064,3382,2241,1141,12.4,\\\"9.3,11.0,11.4,11.5,12.0,12.5,12.9,13.1,13.2,13.1,13.6,13.6,13.4\\\",\\\"7.7,8.6,8.5,8.6,8.7,9.0,9.1,8.9,8.9,8.7,9.4,9.2,8.9\\\",\\\"1.6,2.5,2.9,2.9,3.3,3.6,3.8,4.1,4.3,4.4,4.2,4.4,4.5\\\",\\\"schmallenberg, stadt\\\"\\n05958044,28166,14153,14013,59846,05958044,13.1,8.8,4.3,3.9,7.7,3269,2171,1098,3693,2488,1205,11.6,\\\"10.3,11.8,12.1,12.5,13.1,13.1,12.9,13.6,13.7,13.6,13.4,13.5,13.1\\\",\\\"8.7,9.3,9.3,9.2,9.6,9.4,9.1,9.6,9.3,9.2,9.3,9.3,8.8\\\",\\\"1.6,2.5,2.8,3.2,3.6,3.8,3.8,4.0,4.4,4.4,4.1,4.2,4.3\\\",\\\"sundern (sauerland), stadt\\\"\\n05958048,12798,6434,6364,59955,05958048,15.5,9.8,5.7,6.2,10.6,2144,1356,788,1985,1256,729,16.8,\\\"9.8,11.5,11.3,12.2,12.7,13.6,14.1,14.6,14.8,15.4,15.7,15.4,15.5\\\",\\\"8.1,8.9,8.4,8.7,9.1,9.4,9.8,10.0,9.8,9.8,10.3,10.1,9.8\\\",\\\"1.7,2.6,2.9,3.5,3.6,4.1,4.3,4.6,5.0,5.6,5.4,5.3,5.7\\\",\\\"winterberg, stadt\\\"\\n05962004,17375,8592,8783,58762,05962004,9.2,6.4,2.8,1.9,4.6,1143,807,336,1604,1109,495,6.6,\\\"7.0,8.0,8.2,8.7,8.9,9.2,9.0,9.2,9.3,9.3,9.2,9.3,9.2\\\",\\\"5.8,6.1,6.3,6.5,6.4,6.6,6.5,6.5,6.3,6.3,6.4,6.3,6.4\\\",\\\"1.2,1.9,1.9,2.2,2.5,2.6,2.4,2.7,3.0,3.0,2.7,2.9,2.8\\\",\\\"altena, stadt\\\"\\n05962008,11602,5745,5857,58802,05962008,12.4,9.0,3.5,2.8,7.6,1205,877,328,1444,1043,401,10.4,\\\"10.1,11.9,12.1,12.9,12.9,13.1,13.0,13.0,13.2,12.9,12.7,13.3,12.4\\\",\\\"8.6,9.1,9.3,9.6,9.5,9.6,9.8,9.4,9.5,9.2,9.4,9.5,9.0\\\",\\\"1.5,2.8,2.8,3.3,3.4,3.5,3.2,3.5,3.7,3.8,3.3,3.8,3.5\\\",\\\"balve, stadt\\\"\\n05962012,16117,7886,8231,58553,05962012,9.4,6.0,3.4,3.2,6.6,1570,1060,510,1514,970,544,9.7,\\\"7.8,9.1,9.6,9.6,10.0,10.3,9.6,9.8,10.1,10.1,9.8,9.5,9.4\\\",\\\"6.1,6.7,6.9,6.7,6.8,6.7,6.7,6.8,6.7,6.8,6.6,6.2,6.0\\\",\\\"1.6,2.5,2.7,3.0,3.2,3.6,3.0,3.0,3.4,3.3,3.3,3.3,3.4\\\",\\\"halver, stadt\\\"\\n05962016,33535,16498,17037,58675,05962016,10.9,7.7,3.2,3.0,6.8,3261,2266,995,3660,2584,1076,9.7,\\\"7.9,9.2,9.2,9.8,10.2,10.6,10.3,10.7,10.5,10.7,10.8,11.3,10.9\\\",\\\"6.5,7.1,7.0,7.3,7.4,7.5,7.5,7.6,7.4,7.4,7.8,8.0,7.7\\\",\\\"1.4,2.1,2.2,2.5,2.8,3.1,2.8,3.1,3.1,3.3,3.1,3.3,3.2\\\",\\\"hemer, stadt\\\"\\n05962020,7217,3577,3640,58849,05962020,9.1,5.6,3.5,2.4,4.5,503,328,175,658,405,253,7.0,\\\"7.4,8.9,9.2,9.2,9.6,10.1,9.3,9.6,10.2,9.5,9.7,9.5,9.1\\\",\\\"5.6,6.1,6.1,6.0,6.2,6.5,6.2,5.9,6.6,6.3,6.5,6.3,5.6\\\",\\\"1.7,2.8,3.1,3.3,3.4,3.6,3.1,3.7,3.5,3.2,3.2,3.2,3.5\\\",herscheid\\n05962024,93537,45770,47767,58636,05962024,10.0,7.1,2.9,3.2,7.6,10098,7134,2964,9372,6617,2755,10.8,\\\"8.1,9.4,9.5,10.1,10.1,10.5,10.1,10.3,10.4,10.3,10.3,10.4,10.0\\\",\\\"6.7,7.3,7.2,7.5,7.4,7.6,7.4,7.3,7.3,7.2,7.4,7.4,7.1\\\",\\\"1.4,2.1,2.3,2.6,2.7,2.9,2.7,3.0,3.1,3.2,2.9,3.0,2.9\\\",\\\"iserlohn, stadt\\\"\\n05962028,16300,8060,8240,58566,05962028,10.6,7.3,3.2,2.2,5.5,1256,901,355,1722,1193,529,7.7,\\\"7.7,8.6,8.9,9.2,9.7,9.6,9.0,9.8,10.2,10.4,10.5,10.8,10.6\\\",\\\"6.2,6.4,6.7,6.6,6.9,6.7,6.5,7.0,7.2,7.2,7.5,7.7,7.3\\\",\\\"1.5,2.2,2.3,2.6,2.8,2.9,2.6,2.8,3.1,3.2,3.0,3.1,3.2\\\",\\\"kierspe, stadt\\\"\\n05962032,73354,35955,37399,58507,05962032,9.0,5.6,3.4,3.6,7.0,7831,5171,2660,6583,4113,2470,10.7,\\\"7.3,8.5,8.5,8.7,9.1,9.2,9.0,9.2,9.4,9.6,9.3,9.2,9.0\\\",\\\"5.6,5.9,5.9,5.9,6.0,5.9,6.0,6.0,5.8,5.8,6.0,5.9,5.6\\\",\\\"1.7,2.5,2.6,2.8,3.1,3.2,3.1,3.3,3.6,3.8,3.3,3.4,3.4\\\",\\\"lüdenscheid, stadt\\\"\\n05962036,20670,10359,10311,58540,05962036,10.1,7.1,3.0,3.3,6.3,1998,1312,686,2078,1460,618,9.7,\\\"8.7,10.0,9.8,10.1,10.4,10.8,10.2,10.6,10.6,10.4,10.1,10.4,10.1\\\",\\\"7.0,7.6,7.4,7.6,7.7,7.9,7.5,7.7,7.3,7.0,7.2,7.2,7.1\\\",\\\"1.7,2.4,2.4,2.5,2.7,3.0,2.7,2.9,3.2,3.4,2.9,3.2,3.0\\\",\\\"meinerzhagen, stadt\\\"\\n05962040,53485,26238,27247,58706,05962040,10.4,7.4,3.0,2.5,6.6,4887,3553,1334,5580,3977,1603,9.1,\\\"9.0,10.1,10.3,10.8,10.9,11.2,11.2,11.6,11.5,11.4,11.2,11.1,10.4\\\",\\\"7.7,8.1,8.1,8.3,8.2,8.2,8.2,8.4,8.1,8.0,8.2,8.1,7.4\\\",\\\"1.3,2.0,2.2,2.5,2.7,3.0,3.0,3.2,3.3,3.5,3.0,3.0,3.0\\\",\\\"menden (sauerland), stadt\\\"\\n05962044,6644,3332,3312,58769,05962044,8.8,6.4,2.5,1.2,3.3,300,220,80,586,422,164,4.5,\\\"6.6,8.1,8.2,8.8,9.4,10.0,9.1,9.1,9.5,9.2,9.1,9.0,8.8\\\",\\\"5.6,6.4,6.5,6.8,6.8,7.4,6.7,6.5,6.9,6.4,6.8,6.6,6.4\\\",\\\"0.9,1.7,1.7,2.0,2.6,2.6,2.3,2.6,2.6,2.8,2.3,2.5,2.5\\\",nachrodt-wiblingwerde\\n05962048,12024,5991,6033,58809,05962048,10.3,7.0,3.3,2.7,6.5,1111,787,324,1235,840,395,9.2,\\\"8.3,9.8,9.7,10.4,10.6,11.0,10.7,11.2,10.9,11.0,10.8,10.6,10.3\\\",\\\"6.8,7.6,7.5,7.8,7.7,7.9,7.9,7.9,7.6,7.7,7.8,7.3,7.0\\\",\\\"1.5,2.3,2.2,2.6,2.9,3.0,2.8,3.3,3.4,3.3,3.1,3.3,3.3\\\",\\\"neuenrade, stadt\\\"\\n05962052,25781,12851,12930,58840,05962052,10.1,6.9,3.2,3.1,6.3,2432,1621,811,2603,1785,818,9.4,\\\"8.8,10.1,10.1,10.8,10.8,11.1,10.0,10.8,10.9,10.8,10.6,10.6,10.1\\\",\\\"7.0,7.4,7.4,7.7,7.4,7.7,7.2,7.4,7.4,7.2,7.6,7.4,6.9\\\",\\\"1.9,2.6,2.6,3.0,3.4,3.4,2.9,3.4,3.6,3.6,3.1,3.2,3.2\\\",\\\"plettenberg, stadt\\\"\\n05962056,10528,5194,5334,58579,05962056,9.6,6.1,3.5,2.9,5.0,832,527,305,1011,638,373,7.9,\\\"8.2,9.2,9.5,9.3,9.8,9.5,9.2,10.0,10.1,9.8,9.8,10.0,9.6\\\",\\\"6.6,6.8,6.7,6.4,6.7,6.2,6.1,6.6,6.4,6.0,6.4,6.2,6.1\\\",\\\"1.6,2.4,2.8,2.9,3.1,3.2,3.2,3.4,3.7,3.8,3.3,3.8,3.5\\\",schalksmühle\\n05962060,18002,8939,9063,58791,05962060,9.2,6.6,2.6,2.1,5.3,1333,955,378,1656,1191,465,7.4,\\\"7.4,8.3,8.7,9.3,9.3,9.8,9.1,9.4,9.4,9.4,9.5,9.4,9.2\\\",\\\"5.8,6.1,6.3,6.7,6.4,6.8,6.6,6.6,6.4,6.5,6.8,6.8,6.6\\\",\\\"1.5,2.2,2.3,2.6,2.8,3.0,2.5,2.8,3.0,2.9,2.7,2.6,2.6\\\",\\\"werdohl, stadt\\\"\\n05966004,24676,12499,12177,57439,05966004,11.0,7.5,3.6,3.4,7.1,2585,1746,839,2722,1843,879,10.5,\\\"9.2,10.6,10.6,10.7,11.1,11.4,11.0,11.3,11.4,11.3,11.6,11.5,11.0\\\",\\\"7.5,7.9,7.8,7.9,7.9,8.0,7.7,7.9,7.8,7.7,8.2,8.0,7.5\\\",\\\"1.8,2.7,2.8,2.9,3.1,3.4,3.3,3.4,3.7,3.6,3.4,3.5,3.6\\\",\\\"attendorn, hansestadt\\\"\\n05966008,11874,6003,5871,57489,05966008,12.0,8.1,3.9,3.1,5.8,1058,685,373,1429,960,469,8.9,\\\"9.2,10.6,10.6,10.9,11.3,11.8,11.4,12.1,11.8,12.3,13.0,12.8,12.0\\\",\\\"7.3,7.7,7.7,7.6,7.9,8.1,7.9,8.4,7.9,8.4,8.8,8.6,8.1\\\",\\\"1.9,2.9,2.9,3.3,3.4,3.7,3.5,3.7,4.0,3.9,4.2,4.1,3.9\\\",\\\"drolshagen, stadt\\\"\\n05966012,17258,8849,8409,57413,05966012,12.7,8.6,4.1,2.8,6.3,1573,1082,491,2193,1480,713,9.1,\\\"9.7,11.6,11.6,12.0,12.5,12.8,12.0,12.9,13.1,13.2,13.6,13.2,12.7\\\",\\\"8.0,8.8,8.9,8.9,9.2,9.3,8.7,9.1,9.0,9.1,9.6,9.1,8.6\\\",\\\"1.7,2.9,2.7,3.1,3.4,3.5,3.3,3.8,4.0,4.1,4.1,4.2,4.1\\\",finnentrop\\n05966016,11854,6016,5838,57399,05966016,12.8,8.5,4.3,3.9,7.4,1342,876,466,1522,1007,515,11.3,\\\"8.2,10.0,10.0,10.8,10.8,11.4,11.9,12.4,12.5,12.6,12.5,12.8,12.8\\\",\\\"6.9,7.7,7.7,8.0,7.8,8.1,8.3,8.7,8.4,8.5,8.6,8.6,8.5\\\",\\\"1.3,2.3,2.4,2.8,3.0,3.4,3.6,3.7,4.1,4.1,3.9,4.2,4.3\\\",kirchhundem\\n05966020,26073,13154,12919,57368,05966020,13.0,9.0,4.0,4.2,9.3,3535,2431,1104,3390,2338,1052,13.6,\\\"9.4,11.0,11.1,11.6,12.2,12.4,12.2,12.4,12.5,12.9,13.4,13.3,13.0\\\",\\\"8.0,8.7,8.7,8.9,9.0,9.0,8.9,9.0,8.8,8.9,9.4,9.2,9.0\\\",\\\"1.4,2.3,2.4,2.7,3.2,3.4,3.3,3.4,3.7,4.1,4.0,4.1,4.0\\\",\\\"lennestadt, stadt\\\"\\n05966024,24757,12107,12650,57462,05966024,11.8,7.6,4.2,4.7,9.8,3609,2436,1173,2913,1875,1038,14.6,\\\"8.6,10.1,10.3,10.7,10.8,11.3,11.2,11.5,11.5,11.8,12.1,12.0,11.8\\\",\\\"6.9,7.5,7.5,7.6,7.5,7.7,7.8,7.7,7.5,7.7,8.2,8.0,7.6\\\",\\\"1.8,2.7,2.8,3.1,3.3,3.6,3.4,3.8,4.0,4.1,3.9,4.0,4.2\\\",\\\"olpe, stadt\\\"\\n05966028,19873,9996,9877,57482,05966028,12.5,8.4,4.1,3.4,6.8,2033,1360,673,2494,1677,817,10.2,\\\"10.1,11.4,11.8,12.1,12.3,12.6,12.6,12.7,12.7,12.8,12.7,12.7,12.5\\\",\\\"8.2,8.5,8.8,8.9,8.7,8.7,8.7,8.9,8.6,8.8,8.9,8.7,8.4\\\",\\\"1.9,2.9,3.0,3.1,3.6,3.9,3.9,3.8,4.1,4.1,3.8,4.0,4.1\\\",wenden\\n05970004,19774,10017,9757,57319,05970004,10.6,6.9,3.7,3.5,6.7,2003,1315,688,2099,1362,737,10.1,\\\"8.5,9.7,9.9,10.6,10.8,11.4,11.2,11.2,11.8,11.6,11.7,11.0,10.6\\\",\\\"6.7,7.1,7.1,7.5,7.5,7.7,7.5,7.3,7.5,7.2,7.6,7.1,6.9\\\",\\\"1.9,2.6,2.9,3.1,3.3,3.7,3.7,3.9,4.3,4.5,4.0,3.9,3.7\\\",\\\"bad berleburg, stadt\\\"\\n05970008,14969,7758,7211,57299,05970008,11.8,7.8,4.0,3.5,6.7,1536,1008,528,1771,1173,598,10.3,\\\"9.8,10.8,10.6,11.2,11.8,12.2,11.5,11.7,12.3,12.1,11.9,12.1,11.8\\\",\\\"8.1,8.4,8.1,8.4,8.5,8.6,8.1,8.1,8.3,8.0,8.2,8.1,7.8\\\",\\\"1.7,2.4,2.5,2.7,3.2,3.5,3.3,3.6,4.0,4.0,3.7,3.9,4.0\\\",burbach\\n05970012,7206,3671,3535,57339,05970012,11.7,8.0,3.7,3.0,6.6,687,474,213,843,575,268,9.5,\\\"9.5,11.0,11.2,11.8,12.2,12.6,12.5,12.6,12.8,12.5,12.0,12.3,11.7\\\",\\\"7.9,8.7,8.6,8.8,9.2,9.3,8.9,8.9,8.8,8.6,8.4,8.7,8.0\\\",\\\"1.6,2.3,2.6,3.1,3.0,3.4,3.7,3.7,4.0,3.9,3.7,3.7,3.7\\\",erndtebrück\\n05970016,17929,8935,8994,57258,05970016,11.1,7.8,3.3,2.8,6.3,1640,1134,506,1993,1398,595,9.1,\\\"8.6,9.7,9.7,10.5,11.0,11.2,11.2,11.0,11.3,11.5,11.6,11.3,11.1\\\",\\\"7.3,7.5,7.4,7.9,8.0,7.9,7.9,7.8,7.8,7.8,8.2,7.9,7.8\\\",\\\"1.3,2.1,2.3,2.6,3.0,3.3,3.3,3.2,3.4,3.7,3.4,3.4,3.3\\\",\\\"freudenberg, stadt\\\"\\n05970020,15169,7537,7632,57271,05970020,10.3,7.3,2.9,2.2,4.7,1037,708,329,1556,1112,444,6.8,\\\"8.1,9.0,8.9,9.5,9.7,10.3,10.2,10.2,10.7,11.2,10.9,10.9,10.3\\\",\\\"6.7,7.0,6.7,7.0,7.1,7.4,7.2,7.3,7.4,7.8,7.9,7.8,7.3\\\",\\\"1.4,2.0,2.2,2.5,2.6,2.9,2.9,2.9,3.2,3.4,2.9,3.1,2.9\\\",\\\"hilchenbach, stadt\\\"\\n05970024,31500,15642,15858,57223,05970024,10.4,7.5,2.9,2.5,6.3,2771,1994,777,3263,2348,915,8.8,\\\"7.8,8.9,9.0,9.3,9.8,10.1,10.1,10.1,10.4,10.4,10.7,10.5,10.4\\\",\\\"6.5,6.8,6.8,6.9,7.0,7.1,7.2,7.2,7.1,7.1,7.7,7.6,7.5\\\",\\\"1.3,2.0,2.2,2.4,2.8,2.9,2.9,2.9,3.2,3.4,3.1,2.9,2.9\\\",\\\"kreuztal, stadt\\\"\\n05970028,14276,7261,7015,57334,05970028,10.7,7.6,3.1,2.2,5.7,1127,808,319,1523,1080,443,7.9,\\\"8.1,9.2,9.4,9.9,10.6,10.9,11.1,11.1,11.1,11.4,11.5,11.6,10.7\\\",\\\"6.9,7.5,7.2,7.7,8.3,8.3,8.5,8.4,8.2,8.1,8.3,8.2,7.6\\\",\\\"1.2,1.7,2.1,2.2,2.3,2.6,2.6,2.8,2.9,3.3,3.2,3.3,3.1\\\",\\\"bad laasphe, stadt\\\"\\n05970032,23393,11720,11673,57250,05970032,11.6,8.0,3.6,2.5,6.7,2146,1565,581,2707,1875,832,9.2,\\\"8.2,10.0,10.3,10.7,11.2,11.7,11.8,11.7,11.8,12.3,12.1,12.0,11.6\\\",\\\"6.9,7.7,7.8,8.0,8.2,8.3,8.5,8.3,8.3,8.4,8.6,8.5,8.0\\\",\\\"1.4,2.3,2.5,2.7,3.0,3.4,3.3,3.5,3.6,3.9,3.5,3.5,3.6\\\",\\\"netphen, stadt\\\"\\n05970036,13717,6954,6763,57290,05970036,11.7,8.2,3.5,2.7,6.7,1291,921,370,1609,1130,479,9.4,\\\"9.6,11.1,10.7,11.4,11.7,11.6,11.3,11.7,12.3,11.9,12.5,12.3,11.7\\\",\\\"8.0,8.4,8.1,8.5,8.6,8.4,8.3,8.5,8.8,8.3,8.9,8.7,8.2\\\",\\\"1.7,2.7,2.6,2.9,3.1,3.2,3.0,3.1,3.5,3.6,3.6,3.6,3.5\\\",neunkirchen\\n05970040,102355,49925,52430,57072,05970040,11.8,8.5,3.3,4.5,10.8,15626,11006,4620,12104,8705,3399,15.3,\\\"8.3,9.5,9.7,10.3,10.6,10.9,11.1,11.0,11.4,11.8,11.8,11.9,11.8\\\",\\\"6.7,7.3,7.3,7.6,7.6,7.6,7.8,7.7,7.7,8.0,8.6,8.6,8.5\\\",\\\"1.5,2.2,2.4,2.7,2.9,3.2,3.4,3.4,3.6,3.8,3.2,3.3,3.3\\\",\\\"siegen, universitätsstadt\\\"\\n05970044,20512,10206,10306,57234,05970044,12.3,8.5,3.8,3.4,6.9,2117,1423,694,2522,1750,772,10.3,\\\"8.6,9.9,10.2,11.1,11.5,12.0,12.0,12.0,12.5,12.5,12.4,12.7,12.3\\\",\\\"7.1,7.7,7.6,8.2,8.3,8.5,8.5,8.5,8.7,8.6,8.9,8.9,8.5\\\",\\\"1.5,2.2,2.6,2.9,3.2,3.5,3.5,3.6,3.8,3.9,3.5,3.8,3.8\\\",wilnsdorf\\n05974004,10557,5361,5196,59609,05974004,12.9,8.6,4.2,3.9,8.8,1346,930,416,1357,911,446,12.7,\\\"9.5,10.8,10.8,11.4,11.8,12.2,12.2,12.3,12.7,13.1,12.6,13.3,12.9\\\",\\\"7.8,8.5,8.3,8.6,8.9,8.5,8.5,8.8,8.9,8.9,8.8,9.2,8.6\\\",\\\"1.7,2.3,2.4,2.8,2.9,3.7,3.7,3.5,3.8,4.2,3.8,4.1,4.2\\\",anröchte\\n05974008,11931,5735,6196,59505,05974008,9.6,6.9,2.7,2.8,6.6,1118,784,334,1147,819,328,9.4,\\\"7.3,8.9,9.1,9.3,9.8,9.8,9.9,10.1,10.2,10.4,10.4,10.2,9.6\\\",\\\"6.0,7.0,7.2,7.1,7.2,7.1,7.2,7.5,7.4,7.4,7.6,7.1,6.9\\\",\\\"1.3,1.8,1.9,2.2,2.6,2.6,2.7,2.7,2.9,3.1,2.8,3.0,2.7\\\",bad sassendorf\\n05974012,12442,6269,6173,59469,05974012,12.0,8.0,4.0,3.1,5.6,1081,692,389,1494,993,501,8.7,\\\"9.5,10.6,10.5,11.6,12.0,12.5,12.4,12.6,12.4,13.0,13.1,12.7,12.0\\\",\\\"7.7,7.9,7.9,8.4,8.7,8.9,8.9,8.7,8.4,8.8,9.0,8.6,8.0\\\",\\\"1.8,2.7,2.6,3.1,3.3,3.5,3.5,3.9,4.0,4.2,4.0,4.0,4.0\\\",ense\\n05974016,16128,7968,8160,59597,05974016,11.0,7.4,3.5,2.4,6.1,1373,988,385,1771,1200,571,8.5,\\\"8.9,10.4,10.4,10.7,11.2,11.1,11.1,10.6,11.1,11.3,11.1,11.5,11.0\\\",\\\"7.4,8.2,8.1,8.2,8.3,8.0,8.1,7.7,7.8,7.7,7.9,8.0,7.4\\\",\\\"1.4,2.2,2.4,2.5,2.9,3.1,3.0,2.9,3.3,3.6,3.2,3.5,3.5\\\",\\\"erwitte, stadt\\\"\\n05974020,21070,10487,10583,59590,05974020,11.4,8.0,3.4,2.9,7.0,2096,1475,621,2405,1679,726,9.9,\\\"8.7,10.1,9.9,10.7,11.1,11.5,11.5,11.8,12.4,12.3,12.0,12.2,11.4\\\",\\\"7.2,7.9,7.7,8.1,8.3,8.4,8.5,8.5,8.6,8.4,8.6,8.8,8.0\\\",\\\"1.5,2.2,2.1,2.6,2.8,3.1,3.0,3.3,3.8,3.9,3.3,3.5,3.4\\\",\\\"geseke, stadt\\\"\\n05974024,12027,6044,5983,59510,05974024,11.2,7.7,3.5,2.8,6.2,1085,751,334,1349,931,418,9.0,\\\"7.6,8.7,8.9,9.7,10.0,9.9,10.2,10.3,10.9,11.1,11.6,11.7,11.2\\\",\\\"6.4,7.1,7.2,7.7,7.7,7.4,7.5,7.7,8.0,7.7,8.2,8.3,7.7\\\",\\\"1.2,1.6,1.7,2.0,2.3,2.5,2.7,2.6,2.9,3.4,3.3,3.4,3.5\\\",lippetal\\n05974028,67233,33073,34160,59555,05974028,10.8,7.4,3.5,3.5,7.6,7481,5140,2341,7278,4954,2324,11.1,\\\"9.0,10.0,9.8,10.4,10.4,10.7,10.8,10.9,11.1,11.1,11.2,11.3,10.8\\\",\\\"7.2,7.5,7.3,7.6,7.5,7.6,7.8,7.7,7.6,7.6,7.9,7.9,7.4\\\",\\\"1.8,2.4,2.5,2.7,2.8,3.1,3.1,3.3,3.5,3.5,3.4,3.4,3.5\\\",\\\"lippstadt, stadt\\\"\\n05974032,11608,5987,5621,59519,05974032,10.1,7.3,2.9,4.0,10.4,1673,1210,463,1178,844,334,14.4,\\\"7.7,8.9,9.6,10.1,10.5,10.8,11.2,11.0,11.5,11.4,11.2,11.1,10.1\\\",\\\"6.5,7.0,7.3,7.6,7.7,7.9,8.3,7.8,8.1,7.9,8.0,8.0,7.3\\\",\\\"1.2,1.9,2.3,2.5,2.8,3.0,3.0,3.2,3.4,3.5,3.2,3.0,2.9\\\",möhnesee\\n05974036,11095,5790,5305,59602,05974036,10.9,7.5,3.4,2.5,5.0,833,558,275,1211,830,381,7.5,\\\"8.1,9.5,9.5,9.9,10.3,10.6,11.0,11.3,12.0,11.7,11.8,11.4,10.9\\\",\\\"6.8,7.5,7.4,7.6,7.5,7.5,7.9,7.9,8.2,8.2,8.4,8.0,7.5\\\",\\\"1.4,2.0,2.1,2.4,2.8,3.1,3.1,3.3,3.8,3.5,3.4,3.3,3.4\\\",\\\"rüthen, stadt\\\"\\n05974040,47974,23245,24729,59494,05974040,10.8,7.7,3.1,3.3,8.5,5632,4072,1560,5184,3684,1500,11.7,\\\"8.4,9.7,9.8,10.4,10.5,10.6,10.8,11.0,11.1,11.5,11.2,11.5,10.8\\\",\\\"6.8,7.4,7.6,7.8,7.8,7.5,7.7,7.8,7.6,7.8,8.0,8.3,7.7\\\",\\\"1.6,2.3,2.3,2.5,2.7,3.1,3.1,3.3,3.5,3.7,3.2,3.3,3.1\\\",\\\"soest, stadt\\\"\\n05974044,25407,12721,12686,59581,05974044,9.9,7.0,2.9,2.6,5.9,2150,1495,655,2518,1781,737,8.5,\\\"7.4,8.6,8.4,9.0,9.4,9.3,9.4,9.7,9.9,10.3,10.2,10.2,9.9\\\",\\\"6.0,6.5,6.6,6.9,6.9,6.7,6.9,7.0,6.9,7.2,7.4,7.4,7.0\\\",\\\"1.3,2.0,1.8,2.1,2.5,2.6,2.6,2.7,3.0,3.1,2.8,2.8,2.9\\\",\\\"warstein, stadt\\\"\\n05974048,12140,6071,6069,59514,05974048,9.6,6.6,3.0,1.7,3.5,638,428,210,1164,804,360,5.3,\\\"7.2,8.2,8.7,8.8,9.2,9.5,9.8,9.9,9.9,9.9,9.7,10.4,9.6\\\",\\\"6.1,6.4,6.8,6.9,7.0,7.1,7.3,7.4,7.0,7.1,7.1,7.4,6.6\\\",\\\"1.1,1.8,1.9,1.9,2.2,2.4,2.5,2.6,2.9,2.8,2.7,3.0,3.0\\\",welver\\n05974052,30638,15681,14957,59457,05974052,11.1,7.9,3.2,2.8,7.0,2977,2134,843,3397,2417,980,9.7,\\\"8.2,9.4,9.3,10.2,10.6,10.7,11.0,11.3,11.0,11.6,11.5,11.7,11.1\\\",\\\"6.9,7.3,7.1,7.8,7.8,7.8,8.0,8.1,7.9,8.1,8.2,8.5,7.9\\\",\\\"1.4,2.1,2.2,2.4,2.8,2.9,3.1,3.2,3.1,3.5,3.3,3.2,3.2\\\",\\\"werl, stadt\\\"\\n05974056,12745,6629,6116,58739,05974056,10.9,7.4,3.5,3.2,6.3,1205,801,404,1386,937,449,9.5,\\\"8.5,10.3,9.8,10.8,11.3,11.5,11.7,12.0,12.4,12.6,12.6,11.8,10.9\\\",\\\"7.2,7.7,7.5,8.2,8.3,8.4,8.4,8.6,8.6,8.8,9.0,8.2,7.4\\\",\\\"1.3,2.6,2.3,2.6,3.0,3.1,3.3,3.4,3.8,3.9,3.7,3.6,3.5\\\",wickede (ruhr)\\n05978004,47803,23562,24241,59192,05978004,10.3,8.1,2.2,1.5,5.3,3283,2547,736,4924,3850,1074,6.9,\\\"7.4,8.5,8.4,8.9,9.2,9.4,9.4,9.8,10.0,10.2,10.2,10.3,10.3\\\",\\\"6.4,7.1,6.8,7.1,7.2,7.2,7.2,7.5,7.7,7.8,8.1,8.2,8.1\\\",\\\"1.0,1.5,1.6,1.8,2.0,2.2,2.2,2.2,2.3,2.4,2.1,2.1,2.2\\\",\\\"bergkamen, stadt\\\"\\n05978008,18059,8790,9269,59199,05978008,9.0,6.8,2.1,2.1,4.8,1245,858,387,1621,1234,387,6.9,\\\"6.6,7.5,7.7,8.0,8.3,8.7,8.8,9.3,9.3,9.3,9.1,9.5,9.0\\\",\\\"5.7,6.2,6.3,6.3,6.4,6.7,6.8,7.1,7.1,7.0,7.1,7.3,6.8\\\",\\\"0.9,1.3,1.4,1.7,1.9,2.0,2.0,2.1,2.2,2.3,2.0,2.2,2.1\\\",bönen\\n05978012,20961,10293,10668,58730,05978012,9.7,7.0,2.7,2.2,5.5,1607,1147,460,2037,1471,566,7.7,\\\"7.2,8.3,8.3,8.5,9.0,9.1,9.1,9.1,9.4,9.9,9.8,10.0,9.7\\\",\\\"6.0,6.5,6.4,6.5,6.8,6.8,6.8,6.7,6.7,7.0,7.2,7.3,7.0\\\",\\\"1.1,1.8,1.8,2.0,2.2,2.2,2.3,2.4,2.6,2.8,2.6,2.7,2.7\\\",\\\"fröndenberg/ruhr, stadt\\\"\\n05978016,17085,8310,8775,59439,05978016,9.2,6.6,2.5,2.5,10.0,2144,1710,434,1564,1130,434,12.5,\\\"7.1,8.3,8.3,8.8,9.1,9.6,9.7,9.6,9.6,9.8,9.9,9.9,9.2\\\",\\\"6.0,6.6,6.6,6.5,6.7,7.0,7.1,7.0,6.9,7.0,7.2,7.1,6.6\\\",\\\"1.0,1.7,1.7,2.3,2.4,2.6,2.6,2.6,2.7,2.8,2.7,2.7,2.5\\\",holzwickede\\n05978020,43868,21485,22383,59174,05978020,8.9,6.7,2.2,2.2,6.7,3888,2920,968,3926,2945,981,8.9,\\\"6.7,7.7,7.7,8.2,8.5,8.8,9.0,9.3,9.5,9.4,9.3,9.4,8.9\\\",\\\"5.7,6.2,6.2,6.5,6.6,6.8,6.8,7.0,7.2,7.0,7.3,7.2,6.7\\\",\\\"1.0,1.6,1.5,1.7,1.9,2.0,2.2,2.3,2.3,2.5,2.0,2.2,2.2\\\",\\\"kamen, stadt\\\"\\n05978024,85867,41810,44057,44532,05978024,9.2,7.0,2.2,2.1,6.5,7386,5590,1796,7900,6024,1876,8.6,\\\"7.1,8.2,8.2,8.4,8.6,8.7,9.0,9.1,9.2,9.3,9.3,9.4,9.2\\\",\\\"6.2,6.8,6.7,6.8,6.8,6.8,7.0,7.1,7.1,7.1,7.3,7.3,7.0\\\",\\\"0.9,1.4,1.5,1.7,1.8,1.9,2.0,2.0,2.1,2.2,1.9,2.0,2.2\\\",\\\"lünen, stadt\\\"\\n05978028,46723,22767,23956,58239,05978028,8.9,6.4,2.5,2.2,5.8,3726,2715,1011,4145,2983,1162,8.0,\\\"7.0,8.0,8.3,8.7,8.9,9.0,9.1,9.3,9.2,9.8,9.5,9.4,8.9\\\",\\\"5.9,6.3,6.5,6.7,6.7,6.6,6.5,6.7,6.7,7.0,7.1,6.9,6.4\\\",\\\"1.1,1.7,1.8,2.0,2.2,2.4,2.5,2.6,2.6,2.8,2.4,2.4,2.5\\\",\\\"schwerte, hansestadt an der ruhr\\\"\\n05978032,26603,13272,13331,59379,05978032,9.8,7.3,2.5,2.2,6.5,2325,1733,592,2607,1930,677,8.7,\\\"7.7,8.6,8.7,9.0,9.3,9.6,9.9,10.1,10.2,10.4,10.6,10.4,9.8\\\",\\\"6.5,7.0,7.0,7.0,7.3,7.4,7.7,7.6,7.4,7.6,8.0,7.7,7.3\\\",\\\"1.1,1.6,1.7,1.9,2.0,2.1,2.2,2.5,2.8,2.9,2.7,2.7,2.5\\\",\\\"selm, stadt\\\"\\n05978036,59111,28581,30530,59423,05978036,9.6,6.9,2.7,2.8,7.5,6138,4462,1676,5651,4059,1592,10.4,\\\"6.6,7.7,7.9,8.2,8.3,8.7,9.0,9.1,9.2,10.1,10.0,9.9,9.6\\\",\\\"5.5,6.0,6.1,6.3,6.3,6.5,6.6,6.6,6.6,7.2,7.3,7.2,6.9\\\",\\\"1.1,1.7,1.7,2.0,2.0,2.2,2.4,2.5,2.6,2.9,2.7,2.7,2.7\\\",\\\"unna, stadt\\\"\\n05978040,29955,14568,15387,59368,05978040,9.4,6.9,2.5,2.5,6.9,2823,2081,742,2826,2076,750,9.4,\\\"7.5,8.6,8.7,9.1,9.2,9.5,9.5,9.8,9.9,10.2,9.9,9.8,9.4\\\",\\\"6.3,6.9,6.9,7.1,7.2,7.2,7.1,7.4,7.4,7.4,7.4,7.3,6.9\\\",\\\"1.1,1.7,1.8,2.0,2.0,2.3,2.4,2.4,2.5,2.8,2.6,2.5,2.5\\\",\\\"werne, stadt\\\"\\n\"\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://github.com/topojson/topojson Version 3.0.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar transform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2, n = input.length, output = new Array(n);\n\t    output[0] = (x0 += input[0]) * kx + dx;\n\t    output[1] = (y0 += input[1]) * ky + dy;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar bbox = function(topology) {\n\t  var t = transform(topology.transform), key,\n\t      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\t\n\t  function bboxPoint(p) {\n\t    p = t(p);\n\t    if (p[0] < x0) x0 = p[0];\n\t    if (p[0] > x1) x1 = p[0];\n\t    if (p[1] < y0) y0 = p[1];\n\t    if (p[1] > y1) y1 = p[1];\n\t  }\n\t\n\t  function bboxGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n\t      case \"Point\": bboxPoint(o.coordinates); break;\n\t      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n\t    }\n\t  }\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var i = -1, n = arc.length, p;\n\t    while (++i < n) {\n\t      p = t(arc[i], i);\n\t      if (p[0] < x0) x0 = p[0];\n\t      if (p[0] > x1) x1 = p[0];\n\t      if (p[1] < y0) y0 = p[1];\n\t      if (p[1] > y1) y1 = p[1];\n\t    }\n\t  });\n\t\n\t  for (key in topology.objects) {\n\t    bboxGeometry(topology.objects[key]);\n\t  }\n\t\n\t  return [x0, y0, x1, y1];\n\t};\n\t\n\tvar reverse = function(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t};\n\t\n\tvar feature = function(topology, o) {\n\t  return o.type === \"GeometryCollection\"\n\t      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n\t      : feature$1(topology, o);\n\t};\n\t\n\tfunction feature$1(topology, o) {\n\t  var id = o.id,\n\t      bbox = o.bbox,\n\t      properties = o.properties == null ? {} : o.properties,\n\t      geometry = object(topology, o);\n\t  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n\t      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n\t      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var transformPoint = transform(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n\t      points.push(transformPoint(a[k], k));\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    return transformPoint(p);\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var type = o.type, coordinates;\n\t    switch (type) {\n\t      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n\t      case \"Point\": coordinates = point(o.coordinates); break;\n\t      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n\t      case \"LineString\": coordinates = line(o.arcs); break;\n\t      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n\t      case \"Polygon\": coordinates = polygon(o.arcs); break;\n\t      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n\t      default: return null;\n\t    }\n\t    return {type: type, coordinates: coordinates};\n\t  }\n\t\n\t  return geometry(o);\n\t}\n\t\n\tvar stitch = function(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t};\n\t\n\tvar mesh = function(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t};\n\t\n\tfunction meshArcs(topology, object$$1, filter) {\n\t  var arcs, i, n;\n\t  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n\t  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n\t  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n\t}\n\t\n\tfunction extractArcs(topology, object$$1, filter) {\n\t  var arcs = [],\n\t      geomsByArc = [],\n\t      geom;\n\t\n\t  function extract0(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function extract1(arcs) {\n\t    arcs.forEach(extract0);\n\t  }\n\t\n\t  function extract2(arcs) {\n\t    arcs.forEach(extract1);\n\t  }\n\t\n\t  function extract3(arcs) {\n\t    arcs.forEach(extract2);\n\t  }\n\t\n\t  function geometry(o) {\n\t    switch (geom = o, o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"LineString\": extract1(o.arcs); break;\n\t      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n\t      case \"MultiPolygon\": extract3(o.arcs); break;\n\t    }\n\t  }\n\t\n\t  geometry(object$$1);\n\t\n\t  geomsByArc.forEach(filter == null\n\t      ? function(geoms) { arcs.push(geoms[0].i); }\n\t      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t\n\t  return arcs;\n\t}\n\t\n\tfunction planarRingArea(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area); // Note: doubled area!\n\t}\n\t\n\tvar merge = function(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t};\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      groups = [];\n\t\n\t  objects.forEach(geometry);\n\t\n\t  function geometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"Polygon\": extract(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n\t    }\n\t  }\n\t\n\t  function extract(polygon) {\n\t    polygon.forEach(function(ring) {\n\t      ring.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring) {\n\t    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var group = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      groups.push(group);\n\t      while (polygon = neighbors.pop()) {\n\t        group.push(polygon);\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: groups.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitch(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tvar bisect = function(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t};\n\t\n\tvar neighbors = function(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t};\n\t\n\tvar untransform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2,\n\t        n = input.length,\n\t        output = new Array(n),\n\t        x1 = Math.round((input[0] - dx) / kx),\n\t        y1 = Math.round((input[1] - dy) / ky);\n\t    output[0] = x1 - x0, x0 = x1;\n\t    output[1] = y1 - y0, y0 = y1;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar quantize = function(topology, transform) {\n\t  if (topology.transform) throw new Error(\"already quantized\");\n\t\n\t  if (!transform || !transform.scale) {\n\t    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n\t    box = topology.bbox || bbox(topology);\n\t    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n\t    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n\t  } else {\n\t    box = topology.bbox;\n\t  }\n\t\n\t  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\t\n\t  function quantizePoint(point) {\n\t    return t(point);\n\t  }\n\t\n\t  function quantizeGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n\t      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n\t      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function quantizeArc(input) {\n\t    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n\t    output[0] = t(input[0], 0);\n\t    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n\t    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n\t    output.length = j;\n\t    return output;\n\t  }\n\t\n\t  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: box,\n\t    transform: transform,\n\t    objects: outputs,\n\t    arcs: topology.arcs.map(quantizeArc)\n\t  };\n\t};\n\t\n\t// Computes the bounding box of the specified hash of GeoJSON objects.\n\tvar bounds = function(objects) {\n\t  var x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  function boundGeometry(geometry) {\n\t    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var boundGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n\t    Point: function(o) { boundPoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n\t    LineString: function(o) { boundLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n\t    Polygon: function(o) { o.arcs.forEach(boundLine); },\n\t    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n\t  };\n\t\n\t  function boundPoint(coordinates) {\n\t    var x = coordinates[0],\n\t        y = coordinates[1];\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  function boundLine(coordinates) {\n\t    coordinates.forEach(boundPoint);\n\t  }\n\t\n\t  function boundMultiLine(coordinates) {\n\t    coordinates.forEach(boundLine);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    boundGeometry(objects[key]);\n\t  }\n\t\n\t  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n\t};\n\t\n\tvar hashset = function(size, hash, equal, type, empty) {\n\t  if (arguments.length === 3) {\n\t    type = Array;\n\t    empty = null;\n\t  }\n\t\n\t  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      mask = size - 1;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    store[i] = empty;\n\t  }\n\t\n\t  function add(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) throw new Error(\"full hashset\");\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    store[index] = value;\n\t    return true;\n\t  }\n\t\n\t  function has(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) break;\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function values() {\n\t    var values = [];\n\t    for (var i = 0, n = store.length; i < n; ++i) {\n\t      var match = store[i];\n\t      if (match != empty) values.push(match);\n\t    }\n\t    return values;\n\t  }\n\t\n\t  return {\n\t    add: add,\n\t    has: has,\n\t    values: values\n\t  };\n\t};\n\t\n\tvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n\t  if (arguments.length === 3) {\n\t    keyType = valueType = Array;\n\t    keyEmpty = null;\n\t  }\n\t\n\t  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      valstore = new valueType(size),\n\t      mask = size - 1;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    keystore[i] = keyEmpty;\n\t  }\n\t\n\t  function set(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index] = value;\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    return value;\n\t  }\n\t\n\t  function maybeSet(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    return value;\n\t  }\n\t\n\t  function get(key, missingValue) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) break;\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    return missingValue;\n\t  }\n\t\n\t  function keys() {\n\t    var keys = [];\n\t    for (var i = 0, n = keystore.length; i < n; ++i) {\n\t      var matchKey = keystore[i];\n\t      if (matchKey != keyEmpty) keys.push(matchKey);\n\t    }\n\t    return keys;\n\t  }\n\t\n\t  return {\n\t    set: set,\n\t    maybeSet: maybeSet, // set if unset\n\t    get: get,\n\t    keys: keys\n\t  };\n\t};\n\t\n\tvar equalPoint = function(pointA, pointB) {\n\t  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n\t};\n\t\n\t// TODO if quantized, use simpler Int32 hashing?\n\t\n\tvar buffer = new ArrayBuffer(16);\n\tvar floats = new Float64Array(buffer);\n\tvar uints = new Uint32Array(buffer);\n\t\n\tvar hashPoint = function(point) {\n\t  floats[0] = point[0];\n\t  floats[1] = point[1];\n\t  var hash = uints[0] ^ uints[1];\n\t  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n\t  return hash & 0x7fffffff;\n\t};\n\t\n\t// Given an extracted (pre-)topology, identifies all of the junctions. These are\n\t// the points at which arcs (lines or rings) will need to be cut so that each\n\t// arc is represented uniquely.\n\t//\n\t// A junction is a point where at least one arc deviates from another arc going\n\t// through the same point. For example, consider the point B. If there is a arc\n\t// through ABC and another arc through CBA, then B is not a junction because in\n\t// both cases the adjacent point pairs are {A,C}. However, if there is an\n\t// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n\t//\n\t// For a closed ring ABCA, the first point A’s adjacent points are the second\n\t// and last point {B,C}. For a line, the first and last point are always\n\t// considered junctions, even if the line is closed; this ensures that a closed\n\t// line is never rotated.\n\tvar join = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      indexes = index(),\n\t      visitedByIndex = new Int32Array(coordinates.length),\n\t      leftByIndex = new Int32Array(coordinates.length),\n\t      rightByIndex = new Int32Array(coordinates.length),\n\t      junctionByIndex = new Int8Array(coordinates.length),\n\t      junctionCount = 0, // upper bound on number of junctions\n\t      i, n,\n\t      previousIndex,\n\t      currentIndex,\n\t      nextIndex;\n\t\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n\t  }\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineStart = line[0],\n\t        lineEnd = line[1];\n\t    currentIndex = indexes[lineStart];\n\t    nextIndex = indexes[++lineStart];\n\t    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n\t    while (++lineStart <= lineEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n\t    }\n\t    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n\t  }\n\t\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = -1;\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0] + 1,\n\t        ringEnd = ring[1];\n\t    previousIndex = indexes[ringEnd - 1];\n\t    currentIndex = indexes[ringStart - 1];\n\t    nextIndex = indexes[ringStart];\n\t    sequence(i, previousIndex, currentIndex, nextIndex);\n\t    while (++ringStart <= ringEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n\t    }\n\t  }\n\t\n\t  function sequence(i, previousIndex, currentIndex, nextIndex) {\n\t    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n\t    visitedByIndex[currentIndex] = i;\n\t    var leftIndex = leftByIndex[currentIndex];\n\t    if (leftIndex >= 0) {\n\t      var rightIndex = rightByIndex[currentIndex];\n\t      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n\t        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n\t        ++junctionCount, junctionByIndex[currentIndex] = 1;\n\t      }\n\t    } else {\n\t      leftByIndex[currentIndex] = previousIndex;\n\t      rightByIndex[currentIndex] = nextIndex;\n\t    }\n\t  }\n\t\n\t  function index() {\n\t    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n\t        indexes = new Int32Array(coordinates.length);\n\t\n\t    for (var i = 0, n = coordinates.length; i < n; ++i) {\n\t      indexes[i] = indexByPoint.maybeSet(i, i);\n\t    }\n\t\n\t    return indexes;\n\t  }\n\t\n\t  function hashIndex(i) {\n\t    return hashPoint(coordinates[i]);\n\t  }\n\t\n\t  function equalIndex(i, j) {\n\t    return equalPoint(coordinates[i], coordinates[j]);\n\t  }\n\t\n\t  visitedByIndex = leftByIndex = rightByIndex = null;\n\t\n\t  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\t\n\t  // Convert back to a standard hashset by point for caller convenience.\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    if (junctionByIndex[j = indexes[i]]) {\n\t      junctionByPoint.add(coordinates[j]);\n\t    }\n\t  }\n\t\n\t  return junctionByPoint;\n\t};\n\t\n\t// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n\t// point sequences are identified. The topology can then be subsequently deduped\n\t// to remove exact duplicate arcs.\n\tvar cut = function(topology) {\n\t  var junctions = join(topology),\n\t      coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      next,\n\t      i, n;\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineMid = line[0],\n\t        lineEnd = line[1];\n\t    while (++lineMid < lineEnd) {\n\t      if (junctions.has(coordinates[lineMid])) {\n\t        next = {0: lineMid, 1: line[1]};\n\t        line[1] = lineMid;\n\t        line = line.next = next;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0],\n\t        ringMid = ringStart,\n\t        ringEnd = ring[1],\n\t        ringFixed = junctions.has(coordinates[ringStart]);\n\t    while (++ringMid < ringEnd) {\n\t      if (junctions.has(coordinates[ringMid])) {\n\t        if (ringFixed) {\n\t          next = {0: ringMid, 1: ring[1]};\n\t          ring[1] = ringMid;\n\t          ring = ring.next = next;\n\t        } else { // For the first junction, we can rotate rather than cut.\n\t          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n\t          coordinates[ringEnd] = coordinates[ringStart];\n\t          ringFixed = true;\n\t          ringMid = ringStart; // restart; we may have skipped junctions\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction rotateArray(array, start, end, offset) {\n\t  reverse$1(array, start, end);\n\t  reverse$1(array, start, start + offset);\n\t  reverse$1(array, start + offset, end);\n\t}\n\t\n\tfunction reverse$1(array, start, end) {\n\t  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n\t    t = array[start], array[start] = array[end], array[end] = t;\n\t  }\n\t}\n\t\n\t// Given a cut topology, combines duplicate arcs.\n\tvar dedup = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines, line,\n\t      rings = topology.rings, ring,\n\t      arcCount = lines.length + rings.length,\n\t      i, n;\n\t\n\t  delete topology.lines;\n\t  delete topology.rings;\n\t\n\t  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    line = lines[i]; while (line = line.next) ++arcCount;\n\t  }\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    ring = rings[i]; while (ring = ring.next) ++arcCount;\n\t  }\n\t\n\t  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n\t      arcs = topology.arcs = [];\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    line = lines[i];\n\t    do {\n\t      dedupLine(line);\n\t    } while (line = line.next);\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    ring = rings[i];\n\t    if (ring.next) { // arc is no longer closed\n\t      do {\n\t        dedupLine(ring);\n\t      } while (ring = ring.next);\n\t    } else {\n\t      dedupRing(ring);\n\t    }\n\t  }\n\t\n\t  function dedupLine(arc) {\n\t    var startPoint,\n\t        endPoint,\n\t        startArcs, startArc,\n\t        endArcs, endArc,\n\t        i, n;\n\t\n\t    // Does this arc match an existing arc in order?\n\t    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n\t      for (i = 0, n = startArcs.length; i < n; ++i) {\n\t        startArc = startArcs[i];\n\t        if (equalLine(startArc, arc)) {\n\t          arc[0] = startArc[0];\n\t          arc[1] = startArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Does this arc match an existing arc in reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (reverseEqualLine(endArc, arc)) {\n\t          arc[1] = endArc[0];\n\t          arc[0] = endArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function dedupRing(arc) {\n\t    var endPoint,\n\t        endArcs,\n\t        endArc,\n\t        i, n;\n\t\n\t    // Does this arc match an existing line in order, or reverse order?\n\t    // Rings are closed, so their start point and end point is the same.\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Otherwise, does this arc match an existing ring in order, or reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function equalLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n\t    return true;\n\t  }\n\t\n\t  function equalRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = n - findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // Rings are rotated to a consistent, but arbitrary, start point.\n\t  // This is necessary to detect when a ring and a rotated copy are dupes.\n\t  function findMinimumOffset(arc) {\n\t    var start = arc[0],\n\t        end = arc[1],\n\t        mid = start,\n\t        minimum = mid,\n\t        minimumPoint = coordinates[mid];\n\t    while (++mid < end) {\n\t      var point = coordinates[mid];\n\t      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n\t        minimum = mid;\n\t        minimumPoint = point;\n\t      }\n\t    }\n\t    return minimum - start;\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\t// Given an array of arcs in absolute (but already quantized!) coordinates,\n\t// converts to fixed-point delta encoding.\n\t// This is a destructive operation that modifies the given arcs!\n\tvar delta = function(arcs) {\n\t  var i = -1,\n\t      n = arcs.length;\n\t\n\t  while (++i < n) {\n\t    var arc = arcs[i],\n\t        j = 0,\n\t        k = 1,\n\t        m = arc.length,\n\t        point = arc[0],\n\t        x0 = point[0],\n\t        y0 = point[1],\n\t        x1,\n\t        y1;\n\t\n\t    while (++j < m) {\n\t      point = arc[j], x1 = point[0], y1 = point[1];\n\t      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n\t    }\n\t\n\t    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\t\n\t    arc.length = k;\n\t  }\n\t\n\t  return arcs;\n\t};\n\t\n\t// Extracts the lines and rings from the specified hash of geometry objects.\n\t//\n\t// Returns an object with three properties:\n\t//\n\t// * coordinates - shared buffer of [x, y] coordinates\n\t// * lines - lines extracted from the hash, of the form [start, end]\n\t// * rings - rings extracted from the hash, of the form [start, end]\n\t//\n\t// For each ring or line, start and end represent inclusive indexes into the\n\t// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n\t// coordinates[end].\n\t//\n\t// For each line or polygon geometry in the input hash, including nested\n\t// geometries as in geometry collections, the `coordinates` array is replaced\n\t// with an equivalent `arcs` array that, for each line (for line string\n\t// geometries) or ring (for polygon geometries), points to one of the above\n\t// lines or rings.\n\tvar extract = function(objects) {\n\t  var index = -1,\n\t      lines = [],\n\t      rings = [],\n\t      coordinates = [];\n\t\n\t  function extractGeometry(geometry) {\n\t    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var extractGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n\t    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n\t  };\n\t\n\t  function extractLine(line) {\n\t    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    lines.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractRing(ring) {\n\t    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    rings.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractMultiRing(rings) {\n\t    return rings.map(extractRing);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    extractGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    coordinates: coordinates,\n\t    lines: lines,\n\t    rings: rings,\n\t    objects: objects\n\t  };\n\t};\n\t\n\t// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n\t// Any null input geometry objects are represented as {type: null} in the output.\n\t// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n\t// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\n\tvar geometry = function(inputs) {\n\t  var outputs = {}, key;\n\t  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n\t  return outputs;\n\t};\n\t\n\tfunction geomifyObject(input) {\n\t  return input == null ? {type: null}\n\t      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n\t      : input.type === \"Feature\" ? geomifyFeature\n\t      : geomifyGeometry)(input);\n\t}\n\t\n\tfunction geomifyFeatureCollection(input) {\n\t  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  return output;\n\t}\n\t\n\tfunction geomifyFeature(input) {\n\t  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n\t  if (input.id != null) output.id = input.id;\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  for (key in input.properties) { output.properties = input.properties; break; }\n\t  return output;\n\t}\n\t\n\tfunction geomifyGeometry(input) {\n\t  if (input == null) return {type: null};\n\t  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n\t      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n\t      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  return output;\n\t}\n\t\n\tvar prequantize = function(objects, bbox, n) {\n\t  var x0 = bbox[0],\n\t      y0 = bbox[1],\n\t      x1 = bbox[2],\n\t      y1 = bbox[3],\n\t      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n\t      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\t\n\t  function quantizePoint(input) {\n\t    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n\t  }\n\t\n\t  function quantizePoints(input, m) {\n\t    var i = -1,\n\t        j = 0,\n\t        n = input.length,\n\t        output = new Array(n), // pessimistic\n\t        pi,\n\t        px,\n\t        py,\n\t        x,\n\t        y;\n\t\n\t    while (++i < n) {\n\t      pi = input[i];\n\t      x = Math.round((pi[0] - x0) * kx);\n\t      y = Math.round((pi[1] - y0) * ky);\n\t      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n\t    }\n\t\n\t    output.length = j;\n\t    while (j < m) j = output.push([output[0][0], output[0][1]]);\n\t    return output;\n\t  }\n\t\n\t  function quantizeLine(input) {\n\t    return quantizePoints(input, 2);\n\t  }\n\t\n\t  function quantizeRing(input) {\n\t    return quantizePoints(input, 4);\n\t  }\n\t\n\t  function quantizePolygon(input) {\n\t    return input.map(quantizeRing);\n\t  }\n\t\n\t  function quantizeGeometry(o) {\n\t    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n\t  }\n\t\n\t  var quantizeGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n\t    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n\t    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n\t    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    quantizeGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    scale: [1 / kx, 1 / ky],\n\t    translate: [x0, y0]\n\t  };\n\t};\n\t\n\t// Constructs the TopoJSON Topology for the specified hash of features.\n\t// Each object in the specified hash must be a GeoJSON object,\n\t// meaning FeatureCollection, a Feature or a geometry object.\n\tvar topology = function(objects, quantization) {\n\t  var bbox = bounds(objects = geometry(objects)),\n\t      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n\t      topology = dedup(cut(extract(objects))),\n\t      coordinates = topology.coordinates,\n\t      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\t\n\t  objects = topology.objects; // for garbage collection\n\t  topology.bbox = bbox;\n\t  topology.arcs = topology.arcs.map(function(arc, i) {\n\t    indexByArc.set(arc, i);\n\t    return coordinates.slice(arc[0], arc[1] + 1);\n\t  });\n\t\n\t  delete topology.coordinates;\n\t  coordinates = null;\n\t\n\t  function indexGeometry(geometry$$1) {\n\t    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n\t  }\n\t\n\t  var indexGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n\t    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n\t  };\n\t\n\t  function indexArcs(arc) {\n\t    var indexes = [];\n\t    do {\n\t      var index = indexByArc.get(arc);\n\t      indexes.push(arc[0] < arc[1] ? index : ~index);\n\t    } while (arc = arc.next);\n\t    return indexes;\n\t  }\n\t\n\t  function indexMultiArcs(arcs) {\n\t    return arcs.map(indexArcs);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    indexGeometry(objects[key]);\n\t  }\n\t\n\t  if (transform) {\n\t    topology.transform = transform;\n\t    topology.arcs = delta(topology.arcs);\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction hashArc(arc) {\n\t  var i = arc[0], j = arc[1], t;\n\t  if (j < i) t = i, i = j, j = t;\n\t  return i + 31 * j;\n\t}\n\t\n\tfunction equalArc(arcA, arcB) {\n\t  var ia = arcA[0], ja = arcA[1],\n\t      ib = arcB[0], jb = arcB[1], t;\n\t  if (ja < ia) t = ia, ia = ja, ja = t;\n\t  if (jb < ib) t = ib, ib = jb, jb = t;\n\t  return ia === ib && ja === jb;\n\t}\n\t\n\tvar prune = function(topology) {\n\t  var oldObjects = topology.objects,\n\t      newObjects = {},\n\t      oldArcs = topology.arcs,\n\t      newArcs = [],\n\t      newArcIndex = -1,\n\t      newIndexByOldIndex = new Array(oldArcs.length),\n\t      key;\n\t\n\t  function pruneGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(pruneGeometry)}; break;\n\t      case \"LineString\": output = {type: \"LineString\", arcs: pruneArcs(input.arcs)}; break;\n\t      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(pruneArcs)}; break;\n\t      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(pruneArcs)}; break;\n\t      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(pruneMultiArcs)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function pruneArc(oldIndex) {\n\t    var oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true), newIndex;\n\t\n\t    // If this is the first instance of this arc, record it under its new index.\n\t    if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n\t      newIndexByOldIndex[oldIndex] = newIndex = ++newArcIndex;\n\t      newArcs[newIndex] = oldArcs[oldIndex];\n\t    }\n\t\n\t    return oldReverse ? ~newIndex : newIndex;\n\t  }\n\t\n\t  function pruneArcs(arcs) {\n\t    return arcs.map(pruneArc);\n\t  }\n\t\n\t  function pruneMultiArcs(arcs) {\n\t    return arcs.map(pruneArcs);\n\t  }\n\t\n\t  for (key in oldObjects) {\n\t    newObjects[key] = pruneGeometry(oldObjects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    transform: topology.transform,\n\t    objects: newObjects,\n\t    arcs: newArcs\n\t  };\n\t};\n\t\n\tvar filter = function(topology, filter) {\n\t  var oldObjects = topology.objects,\n\t      newObjects = {},\n\t      key;\n\t\n\t  if (filter == null) filter = filterTrue;\n\t\n\t  function filterGeometry(input) {\n\t    var output, arcs;\n\t    switch (input.type) {\n\t      case \"Polygon\": {\n\t        arcs = filterRings(input.arcs);\n\t        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n\t        break;\n\t      }\n\t      case \"MultiPolygon\": {\n\t        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n\t        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n\t        break;\n\t      }\n\t      case \"GeometryCollection\": {\n\t        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n\t        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n\t        break;\n\t      }\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function filterRings(arcs) {\n\t    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n\t        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n\t        : null;\n\t  }\n\t\n\t  function filterExteriorRing(ring) {\n\t    return filter(ring, false);\n\t  }\n\t\n\t  function filterInteriorRing(ring) {\n\t    return filter(ring, true);\n\t  }\n\t\n\t  for (key in oldObjects) {\n\t    newObjects[key] = filterGeometry(oldObjects[key]);\n\t  }\n\t\n\t  return prune({\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    transform: topology.transform,\n\t    objects: newObjects,\n\t    arcs: topology.arcs\n\t  });\n\t};\n\t\n\tfunction filterTrue() {\n\t  return true;\n\t}\n\t\n\tfunction filterIdentity(x) {\n\t  return x;\n\t}\n\t\n\tfunction filterNotNull(geometry) {\n\t  return geometry.type != null;\n\t}\n\t\n\tvar filterAttached = function(topology) {\n\t  var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n\t      ringIndex = 0,\n\t      name;\n\t\n\t  function testGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n\t      case \"Polygon\": testArcs(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n\t    }\n\t  }\n\t\n\t  function testArcs(arcs) {\n\t    for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n\t      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n\t        var arc = ring[j];\n\t        if (arc < 0) arc = ~arc;\n\t        var uniqueRing = uniqueRingByArc[arc];\n\t        if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n\t        else uniqueRingByArc[arc] = ringIndex;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (name in topology.objects) {\n\t    testGeometry(topology.objects[name]);\n\t  }\n\t\n\t  return function(ring) {\n\t    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n\t      if (arc = ring[j], uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t};\n\t\n\tfunction planarTriangleArea(triangle) {\n\t  var a = triangle[0], b = triangle[1], c = triangle[2];\n\t  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n\t}\n\t\n\tfunction planarRingArea$1(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area) / 2;\n\t}\n\t\n\tvar filterWeight = function(topology, minWeight, weight) {\n\t  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\t\n\t  if (weight == null) weight = planarRingArea$1;\n\t\n\t  return function(ring, interior) {\n\t    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n\t  };\n\t};\n\t\n\tvar filterAttachedWeight = function(topology, minWeight, weight) {\n\t  var a = filterAttached(topology),\n\t      w = filterWeight(topology, minWeight, weight);\n\t  return function(ring, interior) {\n\t    return a(ring, interior) || w(ring, interior);\n\t  };\n\t};\n\t\n\tfunction compare(a, b) {\n\t  return a[1][2] - b[1][2];\n\t}\n\t\n\tvar newHeap = function() {\n\t  var heap = {},\n\t      array = [],\n\t      size = 0;\n\t\n\t  heap.push = function(object) {\n\t    up(array[object._ = size] = object, size++);\n\t    return size;\n\t  };\n\t\n\t  heap.pop = function() {\n\t    if (size <= 0) return;\n\t    var removed = array[0], object;\n\t    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t    return removed;\n\t  };\n\t\n\t  heap.remove = function(removed) {\n\t    var i = removed._, object;\n\t    if (array[i] !== removed) return; // invalid request\n\t    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t    return i;\n\t  };\n\t\n\t  function up(object, i) {\n\t    while (i > 0) {\n\t      var j = ((i + 1) >> 1) - 1,\n\t          parent = array[j];\n\t      if (compare(object, parent) >= 0) break;\n\t      array[parent._ = i] = parent;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  function down(object, i) {\n\t    while (true) {\n\t      var r = (i + 1) << 1,\n\t          l = r - 1,\n\t          j = i,\n\t          child = array[j];\n\t      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n\t      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n\t      if (j === i) break;\n\t      array[child._ = i] = child;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  return heap;\n\t};\n\t\n\tfunction copy(point) {\n\t  return [point[0], point[1], 0];\n\t}\n\t\n\tvar presimplify = function(topology, weight) {\n\t  var point = topology.transform ? transform(topology.transform) : copy,\n\t      heap = newHeap();\n\t\n\t  if (weight == null) weight = planarTriangleArea;\n\t\n\t  var arcs = topology.arcs.map(function(arc) {\n\t    var triangles = [],\n\t        maxWeight = 0,\n\t        triangle,\n\t        i,\n\t        n;\n\t\n\t    arc = arc.map(point);\n\t\n\t    for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n\t      triangle[1][2] = weight(triangle);\n\t      triangles.push(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    // Always keep the arc endpoints!\n\t    arc[0][2] = arc[n][2] = Infinity;\n\t\n\t    for (i = 0, n = triangles.length; i < n; ++i) {\n\t      triangle = triangles[i];\n\t      triangle.previous = triangles[i - 1];\n\t      triangle.next = triangles[i + 1];\n\t    }\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the weight of the current point is less than that of the previous\n\t      // point to be eliminated, use the latter’s weight instead. This ensures\n\t      // that the current point cannot be eliminated without eliminating\n\t      // previously- eliminated points.\n\t      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n\t      else maxWeight = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    return arc;\n\t  });\n\t\n\t  function update(triangle) {\n\t    heap.remove(triangle);\n\t    triangle[1][2] = weight(triangle);\n\t    heap.push(triangle);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    objects: topology.objects,\n\t    arcs: arcs\n\t  };\n\t};\n\t\n\tvar quantile = function(topology, p) {\n\t  var array = [];\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    arc.forEach(function(point) {\n\t      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n\t        array.push(point[2]);\n\t      }\n\t    });\n\t  });\n\t\n\t  return array.length && quantile$1(array.sort(descending), p);\n\t};\n\t\n\tfunction quantile$1(array, p) {\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return array[0];\n\t  if (p >= 1) return array[n - 1];\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = array[i],\n\t      b = array[i + 1];\n\t  return a + (b - a) * (h - i);\n\t}\n\t\n\tfunction descending(a, b) {\n\t  return b - a;\n\t}\n\t\n\tvar simplify = function(topology, minWeight) {\n\t  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\t\n\t  // Remove points whose weight is less than the minimum weight.\n\t  var arcs = topology.arcs.map(function(input) {\n\t    var i = -1,\n\t        j = 0,\n\t        n = input.length,\n\t        output = new Array(n), // pessimistic\n\t        point;\n\t\n\t    while (++i < n) {\n\t      if ((point = input[i])[2] >= minWeight) {\n\t        output[j++] = [point[0], point[1]];\n\t      }\n\t    }\n\t\n\t    output.length = j;\n\t    return output;\n\t  });\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    transform: topology.transform,\n\t    bbox: topology.bbox,\n\t    objects: topology.objects,\n\t    arcs: arcs\n\t  };\n\t};\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar quarterPi = pi / 4;\n\tvar radians = pi / 180;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\t\n\tfunction halfArea(ring, closed) {\n\t  var i = 0,\n\t      n = ring.length,\n\t      sum = 0,\n\t      point = ring[closed ? i++ : n - 1],\n\t      lambda0, lambda1 = point[0] * radians,\n\t      phi1 = (point[1] * radians) / 2 + quarterPi,\n\t      cosPhi0, cosPhi1 = cos(phi1),\n\t      sinPhi0, sinPhi1 = sin(phi1);\n\t\n\t  for (; i < n; ++i) {\n\t    point = ring[i];\n\t    lambda0 = lambda1, lambda1 = point[0] * radians;\n\t    phi1 = (point[1] * radians) / 2 + quarterPi;\n\t    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n\t    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\t\n\t    // Spherical excess E for a spherical triangle with vertices: south pole,\n\t    // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n\t    var dLambda = lambda1 - lambda0,\n\t        sdLambda = dLambda >= 0 ? 1 : -1,\n\t        adLambda = sdLambda * dLambda,\n\t        k = sinPhi0 * sinPhi1,\n\t        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n\t        v = k * sdLambda * sin(adLambda);\n\t    sum += atan2(v, u);\n\t  }\n\t\n\t  return sum;\n\t}\n\t\n\tfunction sphericalRingArea(ring, interior) {\n\t  var sum = halfArea(ring, true);\n\t  if (interior) sum *= -1;\n\t  return (sum < 0 ? tau + sum : sum) * 2;\n\t}\n\t\n\tfunction sphericalTriangleArea(t) {\n\t  var sum = halfArea(t, false);\n\t  return (sum < 0 ? tau + sum : sum) * 2;\n\t}\n\t\n\texports.bbox = bbox;\n\texports.feature = feature;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.neighbors = neighbors;\n\texports.quantize = quantize;\n\texports.transform = transform;\n\texports.untransform = untransform;\n\texports.topology = topology;\n\texports.filter = filter;\n\texports.filterAttached = filterAttached;\n\texports.filterAttachedWeight = filterAttachedWeight;\n\texports.filterWeight = filterWeight;\n\texports.planarRingArea = planarRingArea$1;\n\texports.planarTriangleArea = planarTriangleArea;\n\texports.presimplify = presimplify;\n\texports.quantile = quantile;\n\texports.simplify = simplify;\n\texports.sphericalRingArea = sphericalRingArea;\n\texports.sphericalTriangleArea = sphericalTriangleArea;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5dc74d6ef4cfb17d8132","/* Riot v3.4.4, @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.riot = global.riot || {})));\n}(this, (function (exports) { 'use strict';\n\nvar __TAGS_CACHE = [];\nvar __TAG_IMPL = {};\nvar GLOBAL_MIXIN = '__global_mixin';\nvar ATTRS_PREFIX = 'riot-';\nvar REF_DIRECTIVES = ['ref', 'data-ref'];\nvar IS_DIRECTIVE = 'data-is';\nvar CONDITIONAL_DIRECTIVE = 'if';\nvar LOOP_DIRECTIVE = 'each';\nvar LOOP_NO_REORDER_DIRECTIVE = 'no-reorder';\nvar SHOW_DIRECTIVE = 'show';\nvar HIDE_DIRECTIVE = 'hide';\nvar RIOT_EVENTS_KEY = '__riot-events__';\nvar T_STRING = 'string';\nvar T_OBJECT = 'object';\nvar T_UNDEF  = 'undefined';\nvar T_FUNCTION = 'function';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar XLINK_REGEX = /^xlink:(\\w+)/;\nvar WIN = typeof window === T_UNDEF ? undefined : window;\nvar RE_SPECIAL_TAGS = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/;\nvar RE_SPECIAL_TAGS_NO_OPTION = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;\nvar RE_EVENTS_PREFIX = /^on/;\nvar RE_RESERVED_NAMES = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/;\nvar RE_HTML_ATTRS = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\nvar CASE_SENSITIVE_ATTRIBUTES = { 'viewbox': 'viewBox' };\nvar RE_BOOL_ATTRS = /^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/;\nvar IE_VERSION = (WIN && WIN.document || {}).documentMode | 0;\n\n/**\n * Check Check if the passed argument is undefined\n * @param   { String } value -\n * @returns { Boolean } -\n */\nfunction isBoolAttr(value) {\n  return RE_BOOL_ATTRS.test(value)\n}\n\n/**\n * Check if passed argument is a function\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isFunction(value) {\n  return typeof value === T_FUNCTION\n}\n\n/**\n * Check if passed argument is an object, exclude null\n * NOTE: use isObject(x) && !isArray(x) to excludes arrays.\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isObject(value) {\n  return value && typeof value === T_OBJECT // typeof null is 'object'\n}\n\n/**\n * Check if passed argument is undefined\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isUndefined(value) {\n  return typeof value === T_UNDEF\n}\n\n/**\n * Check if passed argument is a string\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isString(value) {\n  return typeof value === T_STRING\n}\n\n/**\n * Check if passed argument is empty. Different from falsy, because we dont consider 0 or false to be blank\n * @param { * } value -\n * @returns { Boolean } -\n */\nfunction isBlank(value) {\n  return isUndefined(value) || value === null || value === ''\n}\n\n/**\n * Check if passed argument is a kind of array\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isArray(value) {\n  return Array.isArray(value) || value instanceof Array\n}\n\n/**\n * Check whether object's property could be overridden\n * @param   { Object }  obj - source object\n * @param   { String }  key - object property\n * @returns { Boolean } -\n */\nfunction isWritable(obj, key) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, key);\n  return isUndefined(obj[key]) || descriptor && descriptor.writable\n}\n\n/**\n * Check if passed argument is a reserved name\n * @param   { String } value -\n * @returns { Boolean } -\n */\nfunction isReservedName(value) {\n  return RE_RESERVED_NAMES.test(value)\n}\n\nvar check = Object.freeze({\n\tisBoolAttr: isBoolAttr,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tisUndefined: isUndefined,\n\tisString: isString,\n\tisBlank: isBlank,\n\tisArray: isArray,\n\tisWritable: isWritable,\n\tisReservedName: isReservedName\n});\n\n/**\n * Shorter and fast way to select multiple nodes in the DOM\n * @param   { String } selector - DOM selector\n * @param   { Object } ctx - DOM node where the targets of our search will is located\n * @returns { Object } dom nodes found\n */\nfunction $$(selector, ctx) {\n  return Array.prototype.slice.call((ctx || document).querySelectorAll(selector))\n}\n\n/**\n * Shorter and fast way to select a single node in the DOM\n * @param   { String } selector - unique dom selector\n * @param   { Object } ctx - DOM node where the target of our search will is located\n * @returns { Object } dom node found\n */\nfunction $(selector, ctx) {\n  return (ctx || document).querySelector(selector)\n}\n\n/**\n * Create a document fragment\n * @returns { Object } document fragment\n */\nfunction createFrag() {\n  return document.createDocumentFragment()\n}\n\n/**\n * Create a document text node\n * @returns { Object } create a text node to use as placeholder\n */\nfunction createDOMPlaceholder() {\n  return document.createTextNode('')\n}\n\n/**\n * Create a generic DOM node\n * @param   { String } name - name of the DOM node we want to create\n * @returns { Object } DOM node just created\n */\nfunction mkEl(name) {\n  return document.createElement(name)\n}\n\n/**\n * Set the inner html of any DOM node SVGs included\n * @param { Object } container - DOM node where we'll inject new html\n * @param { String } html - html to inject\n */\n/* istanbul ignore next */\nfunction setInnerHTML(container, html) {\n  if (!isUndefined(container.innerHTML))\n    { container.innerHTML = html; }\n    // some browsers do not support innerHTML on the SVGs tags\n  else {\n    var doc = new DOMParser().parseFromString(html, 'application/xml');\n    var node = container.ownerDocument.importNode(doc.documentElement, true);\n    container.appendChild(node);\n  }\n}\n\n/**\n * Toggle the visibility of any DOM node\n * @param   { Object }  dom - DOM node we want to hide\n * @param   { Boolean } show - do we want to show it?\n */\n\nfunction toggleVisibility(dom, show) {\n  dom.style.display = show ? '' : 'none';\n  dom['hidden'] = show ? false : true;\n}\n\n/**\n * Remove any DOM attribute from a node\n * @param   { Object } dom - DOM node we want to update\n * @param   { String } name - name of the property we want to remove\n */\nfunction remAttr(dom, name) {\n  dom.removeAttribute(name);\n}\n\n/**\n * Convert a style object to a string\n * @param   { Object } style - style object we need to parse\n * @returns { String } resulting css string\n * @example\n * styleObjectToString({ color: 'red', height: '10px'}) // => 'color: red; height: 10px'\n */\nfunction styleObjectToString(style) {\n  return Object.keys(style).reduce(function (acc, prop) {\n    return (acc + \" \" + prop + \": \" + (style[prop]) + \";\")\n  }, '')\n}\n\n/**\n * Get the value of any DOM attribute on a node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { String } name - name of the attribute we want to get\n * @returns { String | undefined } name of the node attribute whether it exists\n */\nfunction getAttr(dom, name) {\n  return dom.getAttribute(name)\n}\n\n/**\n * Set any DOM attribute\n * @param { Object } dom - DOM node we want to update\n * @param { String } name - name of the property we want to set\n * @param { String } val - value of the property we want to set\n */\nfunction setAttr(dom, name, val) {\n  var xlink = XLINK_REGEX.exec(name);\n  if (xlink && xlink[1])\n    { dom.setAttributeNS(XLINK_NS, xlink[1], val); }\n  else\n    { dom.setAttribute(name, val); }\n}\n\n/**\n * Insert safely a tag to fix #1962 #1649\n * @param   { HTMLElement } root - children container\n * @param   { HTMLElement } curr - node to insert\n * @param   { HTMLElement } next - node that should preceed the current node inserted\n */\nfunction safeInsert(root, curr, next) {\n  root.insertBefore(curr, next.parentNode && next);\n}\n\n/**\n * Minimize risk: only zero or one _space_ between attr & value\n * @param   { String }   html - html string we want to parse\n * @param   { Function } fn - callback function to apply on any attribute found\n */\nfunction walkAttrs(html, fn) {\n  if (!html)\n    { return }\n  var m;\n  while (m = RE_HTML_ATTRS.exec(html))\n    { fn(m[1].toLowerCase(), m[2] || m[3] || m[4]); }\n}\n\n/**\n * Walk down recursively all the children tags starting dom node\n * @param   { Object }   dom - starting node where we will start the recursion\n * @param   { Function } fn - callback to transform the child node just found\n * @param   { Object }   context - fn can optionally return an object, which is passed to children\n */\nfunction walkNodes(dom, fn, context) {\n  if (dom) {\n    var res = fn(dom, context);\n    var next;\n    // stop the recursion\n    if (res === false) { return }\n\n    dom = dom.firstChild;\n\n    while (dom) {\n      next = dom.nextSibling;\n      walkNodes(dom, fn, res);\n      dom = next;\n    }\n  }\n}\n\nvar dom = Object.freeze({\n\t$$: $$,\n\t$: $,\n\tcreateFrag: createFrag,\n\tcreateDOMPlaceholder: createDOMPlaceholder,\n\tmkEl: mkEl,\n\tsetInnerHTML: setInnerHTML,\n\ttoggleVisibility: toggleVisibility,\n\tremAttr: remAttr,\n\tstyleObjectToString: styleObjectToString,\n\tgetAttr: getAttr,\n\tsetAttr: setAttr,\n\tsafeInsert: safeInsert,\n\twalkAttrs: walkAttrs,\n\twalkNodes: walkNodes\n});\n\nvar styleNode;\nvar cssTextProp;\nvar byName = {};\nvar remainder = [];\nvar needsInject = false;\n\n// skip the following code on the server\nif (WIN) {\n  styleNode = (function () {\n    // create a new style element with the correct type\n    var newNode = mkEl('style');\n    setAttr(newNode, 'type', 'text/css');\n\n    // replace any user node or insert the new one into the head\n    var userNode = $('style[type=riot]');\n    /* istanbul ignore next */\n    if (userNode) {\n      if (userNode.id) { newNode.id = userNode.id; }\n      userNode.parentNode.replaceChild(newNode, userNode);\n    }\n    else { document.getElementsByTagName('head')[0].appendChild(newNode); }\n\n    return newNode\n  })();\n  cssTextProp = styleNode.styleSheet;\n}\n\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nvar styleManager = {\n  styleNode: styleNode,\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { String } css - css string\n   * @param { String } name - if it's passed we will map the css to a tagname\n   */\n  add: function add(css, name) {\n    if (name) { byName[name] = css; }\n    else { remainder.push(css); }\n    needsInject = true;\n  },\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   */\n  inject: function inject() {\n    if (!WIN || !needsInject) { return }\n    needsInject = false;\n    var style = Object.keys(byName)\n      .map(function(k) { return byName[k] })\n      .concat(remainder).join('\\n');\n    /* istanbul ignore next */\n    if (cssTextProp) { cssTextProp.cssText = style; }\n    else { styleNode.innerHTML = style; }\n  }\n};\n\n/**\n * The riot template engine\n * @version v3.0.3\n */\n/**\n * riot.util.brackets\n *\n * - `brackets    ` - Returns a string or regex based on its parameter\n * - `brackets.set` - Change the current riot brackets\n *\n * @module\n */\n\n/* global riot */\n\n/* istanbul ignore next */\nvar brackets = (function (UNDEF) {\n\n  var\n    REGLOB = 'g',\n\n    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\n    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`/g,\n\n    S_QBLOCKS = R_STRINGS.source + '|' +\n      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?(\\/)[gim]*/.source,\n\n    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\n    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\n    FINDBRACES = {\n      '(': RegExp('([()])|'   + S_QBLOCKS, REGLOB),\n      '[': RegExp('([[\\\\]])|' + S_QBLOCKS, REGLOB),\n      '{': RegExp('([{}])|'   + S_QBLOCKS, REGLOB)\n    },\n\n    DEFAULT = '{ }';\n\n  var _pairs = [\n    '{', '}',\n    '{', '}',\n    /{[^}]*}/,\n    /\\\\([{}])/g,\n    /\\\\({)|{/g,\n    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCKS, REGLOB),\n    DEFAULT,\n    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n    /(^|[^\\\\]){=[\\S\\s]*?}/\n  ];\n\n  var\n    cachedBrackets = UNDEF,\n    _regex,\n    _cache = [],\n    _settings;\n\n  function _loopback (re) { return re }\n\n  function _rewrite (re, bp) {\n    if (!bp) { bp = _cache; }\n    return new RegExp(\n      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n    )\n  }\n\n  function _create (pair) {\n    if (pair === DEFAULT) { return _pairs }\n\n    var arr = pair.split(' ');\n\n    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n      throw new Error('Unsupported brackets \"' + pair + '\"')\n    }\n    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '));\n\n    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr);\n    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr);\n    arr[6] = _rewrite(_pairs[6], arr);\n    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCKS, REGLOB);\n    arr[8] = pair;\n    return arr\n  }\n\n  function _brackets (reOrIdx) {\n    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n  }\n\n  _brackets.split = function split (str, tmpl, _bp) {\n    // istanbul ignore next: _bp is for the compiler\n    if (!_bp) { _bp = _cache; }\n\n    var\n      parts = [],\n      match,\n      isexpr,\n      start,\n      pos,\n      re = _bp[6];\n\n    isexpr = start = re.lastIndex = 0;\n\n    while ((match = re.exec(str))) {\n\n      pos = match.index;\n\n      if (isexpr) {\n\n        if (match[2]) {\n          re.lastIndex = skipBraces(str, match[2], re.lastIndex);\n          continue\n        }\n        if (!match[3]) {\n          continue\n        }\n      }\n\n      if (!match[1]) {\n        unescapeStr(str.slice(start, pos));\n        start = re.lastIndex;\n        re = _bp[6 + (isexpr ^= 1)];\n        re.lastIndex = start;\n      }\n    }\n\n    if (str && start < str.length) {\n      unescapeStr(str.slice(start));\n    }\n\n    return parts\n\n    function unescapeStr (s) {\n      if (tmpl || isexpr) {\n        parts.push(s && s.replace(_bp[5], '$1'));\n      } else {\n        parts.push(s);\n      }\n    }\n\n    function skipBraces (s, ch, ix) {\n      var\n        match,\n        recch = FINDBRACES[ch];\n\n      recch.lastIndex = ix;\n      ix = 1;\n      while ((match = recch.exec(s))) {\n        if (match[1] &&\n          !(match[1] === ch ? ++ix : --ix)) { break }\n      }\n      return ix ? s.length : recch.lastIndex\n    }\n  };\n\n  _brackets.hasExpr = function hasExpr (str) {\n    return _cache[4].test(str)\n  };\n\n  _brackets.loopKeys = function loopKeys (expr) {\n    var m = expr.match(_cache[9]);\n\n    return m\n      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n      : { val: expr.trim() }\n  };\n\n  _brackets.array = function array (pair) {\n    return pair ? _create(pair) : _cache\n  };\n\n  function _reset (pair) {\n    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n      _cache = _create(pair);\n      _regex = pair === DEFAULT ? _loopback : _rewrite;\n      _cache[9] = _regex(_pairs[9]);\n    }\n    cachedBrackets = pair;\n  }\n\n  function _setSettings (o) {\n    var b;\n\n    o = o || {};\n    b = o.brackets;\n    Object.defineProperty(o, 'brackets', {\n      set: _reset,\n      get: function () { return cachedBrackets },\n      enumerable: true\n    });\n    _settings = o;\n    _reset(b);\n  }\n\n  Object.defineProperty(_brackets, 'settings', {\n    set: _setSettings,\n    get: function () { return _settings }\n  });\n\n  /* istanbul ignore next: in the browser riot is always in the scope */\n  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};\n  _brackets.set = _reset;\n\n  _brackets.R_STRINGS = R_STRINGS;\n  _brackets.R_MLCOMMS = R_MLCOMMS;\n  _brackets.S_QBLOCKS = S_QBLOCKS;\n\n  return _brackets\n\n})();\n\n/**\n * @module tmpl\n *\n * tmpl          - Root function, returns the template value, render with data\n * tmpl.hasExpr  - Test the existence of a expression inside a string\n * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n */\n\n/* istanbul ignore next */\nvar tmpl = (function () {\n\n  var _cache = {};\n\n  function _tmpl (str, data) {\n    if (!str) { return str }\n\n    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr)\n  }\n\n  _tmpl.hasExpr = brackets.hasExpr;\n\n  _tmpl.loopKeys = brackets.loopKeys;\n\n  // istanbul ignore next\n  _tmpl.clearCache = function () { _cache = {}; };\n\n  _tmpl.errorHandler = null;\n\n  function _logErr (err, ctx) {\n\n    err.riotData = {\n      tagName: ctx && ctx.__ && ctx.__.tagName,\n      _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n    };\n\n    if (_tmpl.errorHandler) { _tmpl.errorHandler(err); }\n    else if (\n      typeof console !== 'undefined' &&\n      typeof console.error === 'function'\n    ) {\n      if (err.riotData.tagName) {\n        console.error('Riot template error thrown in the <%s> tag', err.riotData.tagName);\n      }\n      console.error(err);\n    }\n  }\n\n  function _create (str) {\n    var expr = _getTmpl(str);\n\n    if (expr.slice(0, 11) !== 'try{return ') { expr = 'return ' + expr; }\n\n    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n  }\n\n  var\n    CH_IDEXPR = String.fromCharCode(0x2057),\n    RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/,\n    RE_QBLOCK = RegExp(brackets.S_QBLOCKS, 'g'),\n    RE_DQUOTE = /\\u2057/g,\n    RE_QBMARK = /\\u2057(\\d+)~/g;\n\n  function _getTmpl (str) {\n    var\n      qstr = [],\n      expr,\n      parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1);\n\n    if (parts.length > 2 || parts[0]) {\n      var i, j, list = [];\n\n      for (i = j = 0; i < parts.length; ++i) {\n\n        expr = parts[i];\n\n        if (expr && (expr = i & 1\n\n            ? _parseExpr(expr, 1, qstr)\n\n            : '\"' + expr\n                .replace(/\\\\/g, '\\\\\\\\')\n                .replace(/\\r\\n?|\\n/g, '\\\\n')\n                .replace(/\"/g, '\\\\\"') +\n              '\"'\n\n          )) { list[j++] = expr; }\n\n      }\n\n      expr = j < 2 ? list[0]\n           : '[' + list.join(',') + '].join(\"\")';\n\n    } else {\n\n      expr = _parseExpr(parts[1], 0, qstr);\n    }\n\n    if (qstr[0]) {\n      expr = expr.replace(RE_QBMARK, function (_, pos) {\n        return qstr[pos]\n          .replace(/\\r/g, '\\\\r')\n          .replace(/\\n/g, '\\\\n')\n      });\n    }\n    return expr\n  }\n\n  var\n    RE_BREND = {\n      '(': /[()]/g,\n      '[': /[[\\]]/g,\n      '{': /[{}]/g\n    };\n\n  function _parseExpr (expr, asText, qstr) {\n\n    expr = expr\n          .replace(RE_QBLOCK, function (s, div) {\n            return s.length > 2 && !div ? CH_IDEXPR + (qstr.push(s) - 1) + '~' : s\n          })\n          .replace(/\\s+/g, ' ').trim()\n          .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n\n    if (expr) {\n      var\n        list = [],\n        cnt = 0,\n        match;\n\n      while (expr &&\n            (match = expr.match(RE_CSNAME)) &&\n            !match.index\n        ) {\n        var\n          key,\n          jsb,\n          re = /,|([[{(])|$/g;\n\n        expr = RegExp.rightContext;\n        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n\n        while (jsb = (match = re.exec(expr))[1]) { skipBraces(jsb, re); }\n\n        jsb  = expr.slice(0, match.index);\n        expr = RegExp.rightContext;\n\n        list[cnt++] = _wrapExpr(jsb, 1, key);\n      }\n\n      expr = !cnt ? _wrapExpr(expr, asText)\n           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n    }\n    return expr\n\n    function skipBraces (ch, re) {\n      var\n        mm,\n        lv = 1,\n        ir = RE_BREND[ch];\n\n      ir.lastIndex = re.lastIndex;\n      while (mm = ir.exec(expr)) {\n        if (mm[0] === ch) { ++lv; }\n        else if (!--lv) { break }\n      }\n      re.lastIndex = lv ? expr.length : ir.lastIndex;\n    }\n  }\n\n  // istanbul ignore next: not both\n  var // eslint-disable-next-line max-len\n    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/;\n\n  function _wrapExpr (expr, asText, key) {\n    var tb;\n\n    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n      if (mvar) {\n        pos = tb ? 0 : pos + match.length;\n\n        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n          match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n          if (pos) { tb = (s = s[pos]) === '.' || s === '(' || s === '['; }\n        } else if (pos) {\n          tb = !JS_NOPROPS.test(s.slice(pos));\n        }\n      }\n      return match\n    });\n\n    if (tb) {\n      expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n    }\n\n    if (key) {\n\n      expr = (tb\n          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n        ) + '?\"' + key + '\":\"\"';\n\n    } else if (asText) {\n\n      expr = 'function(v){' + (tb\n          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n        ) + ';return v||v===0?v:\"\"}.call(this)';\n    }\n\n    return expr\n  }\n\n  _tmpl.version = brackets.version = 'v3.0.3';\n\n  return _tmpl\n\n})();\n\n/* istanbul ignore next */\nvar observable$1 = function(el) {\n\n  /**\n   * Extend the original object or create a new empty one\n   * @type { Object }\n   */\n\n  el = el || {};\n\n  /**\n   * Private variables\n   */\n  var callbacks = {},\n    slice = Array.prototype.slice;\n\n  /**\n   * Public Api\n   */\n\n  // extend the el object adding the observable methods\n  Object.defineProperties(el, {\n    /**\n     * Listen to the given `event` ands\n     * execute the `callback` each time an event is triggered.\n     * @param  { String } event - event id\n     * @param  { Function } fn - callback function\n     * @returns { Object } el\n     */\n    on: {\n      value: function(event, fn) {\n        if (typeof fn == 'function')\n          { (callbacks[event] = callbacks[event] || []).push(fn); }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Removes the given `event` listeners\n     * @param   { String } event - event id\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    off: {\n      value: function(event, fn) {\n        if (event == '*' && !fn) { callbacks = {}; }\n        else {\n          if (fn) {\n            var arr = callbacks[event];\n            for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n              if (cb == fn) { arr.splice(i--, 1); }\n            }\n          } else { delete callbacks[event]; }\n        }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Listen to the given `event` and\n     * execute the `callback` at most once\n     * @param   { String } event - event id\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    one: {\n      value: function(event, fn) {\n        function on() {\n          el.off(event, on);\n          fn.apply(el, arguments);\n        }\n        return el.on(event, on)\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Execute all callback functions that listen to\n     * the given `event`\n     * @param   { String } event - event id\n     * @returns { Object } el\n     */\n    trigger: {\n      value: function(event) {\n        var arguments$1 = arguments;\n\n\n        // getting the arguments\n        var arglen = arguments.length - 1,\n          args = new Array(arglen),\n          fns,\n          fn,\n          i;\n\n        for (i = 0; i < arglen; i++) {\n          args[i] = arguments$1[i + 1]; // skip first argument\n        }\n\n        fns = slice.call(callbacks[event] || [], 0);\n\n        for (i = 0; fn = fns[i]; ++i) {\n          fn.apply(el, args);\n        }\n\n        if (callbacks['*'] && event != '*')\n          { el.trigger.apply(el, ['*', event].concat(args)); }\n\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    }\n  });\n\n  return el\n\n};\n\n/**\n * Specialized function for looping an array-like collection with `each={}`\n * @param   { Array } list - collection of items\n * @param   {Function} fn - callback function\n * @returns { Array } the array looped\n */\nfunction each(list, fn) {\n  var len = list ? list.length : 0;\n  var i = 0;\n  for (; i < len; ++i) {\n    fn(list[i], i);\n  }\n  return list\n}\n\n/**\n * Check whether an array contains an item\n * @param   { Array } array - target array\n * @param   { * } item - item to test\n * @returns { Boolean } -\n */\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   { String } str - input string\n * @returns { String } my-string -> myString\n */\nfunction toCamel(str) {\n  return str.replace(/-(\\w)/g, function (_, c) { return c.toUpperCase(); })\n}\n\n/**\n * Faster String startsWith alternative\n * @param   { String } str - source string\n * @param   { String } value - test string\n * @returns { Boolean } -\n */\nfunction startsWith(str, value) {\n  return str.slice(0, value.length) === value\n}\n\n/**\n * Helper function to set an immutable property\n * @param   { Object } el - object where the new property will be set\n * @param   { String } key - object key where the new property will be stored\n * @param   { * } value - value of the new property\n * @param   { Object } options - set the propery overriding the default options\n * @returns { Object } - the initial object\n */\nfunction defineProperty(el, key, value, options) {\n  Object.defineProperty(el, key, extend({\n    value: value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  return el\n}\n\n/**\n * Extend any object with other properties\n * @param   { Object } src - source object\n * @returns { Object } the resulting extended object\n *\n * var obj = { foo: 'baz' }\n * extend(obj, {bar: 'bar', foo: 'bar'})\n * console.log(obj) => {bar: 'bar', foo: 'bar'}\n *\n */\nfunction extend(src) {\n  var obj, args = arguments;\n  for (var i = 1; i < args.length; ++i) {\n    if (obj = args[i]) {\n      for (var key in obj) {\n        // check if this property of the source object could be overridden\n        if (isWritable(src, key))\n          { src[key] = obj[key]; }\n      }\n    }\n  }\n  return src\n}\n\nvar misc = Object.freeze({\n\teach: each,\n\tcontains: contains,\n\ttoCamel: toCamel,\n\tstartsWith: startsWith,\n\tdefineProperty: defineProperty,\n\textend: extend\n});\n\nvar settings$1 = extend(Object.create(brackets.settings), {\n  skipAnonymousTags: true\n});\n\n/**\n * Trigger DOM events\n * @param   { HTMLElement } dom - dom element target of the event\n * @param   { Function } handler - user function\n * @param   { Object } e - event object\n */\nfunction handleEvent(dom, handler, e) {\n  var ptag = this.__.parent,\n    item = this.__.item;\n\n  if (!item)\n    { while (ptag && !item) {\n      item = ptag.__.item;\n      ptag = ptag.__.parent;\n    } }\n\n  // override the event properties\n  /* istanbul ignore next */\n  if (isWritable(e, 'currentTarget')) { e.currentTarget = dom; }\n  /* istanbul ignore next */\n  if (isWritable(e, 'target')) { e.target = e.srcElement; }\n  /* istanbul ignore next */\n  if (isWritable(e, 'which')) { e.which = e.charCode || e.keyCode; }\n\n  e.item = item;\n\n  handler.call(this, e);\n\n  if (!e.preventUpdate) {\n    var p = getImmediateCustomParentTag(this);\n    // fixes #2083\n    if (p.isMounted) { p.update(); }\n  }\n}\n\n/**\n * Attach an event to a DOM node\n * @param { String } name - event name\n * @param { Function } handler - event callback\n * @param { Object } dom - dom node\n * @param { Tag } tag - tag instance\n */\nfunction setEventHandler(name, handler, dom, tag) {\n  var eventName,\n    cb = handleEvent.bind(tag, dom, handler);\n\n  // avoid to bind twice the same event\n  // possible fix for #2332\n  dom[name] = null;\n\n  // normalize event name\n  eventName = name.replace(RE_EVENTS_PREFIX, '');\n\n  // cache the listener into the listeners array\n  if (!contains(tag.__.listeners, dom)) { tag.__.listeners.push(dom); }\n  if (!dom[RIOT_EVENTS_KEY]) { dom[RIOT_EVENTS_KEY] = {}; }\n  if (dom[RIOT_EVENTS_KEY][name]) { dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][name]); }\n\n  dom[RIOT_EVENTS_KEY][name] = cb;\n  dom.addEventListener(eventName, cb, false);\n}\n\n/**\n * Update dynamically created data-is tags with changing expressions\n * @param { Object } expr - expression tag and expression info\n * @param { Tag }    parent - parent for tag creation\n * @param { String } tagName - tag implementation we want to use\n */\nfunction updateDataIs(expr, parent, tagName) {\n  var conf, isVirtual, head, ref;\n\n  if (expr.tag && expr.tagName === tagName) {\n    expr.tag.update();\n    return\n  }\n\n  isVirtual = expr.dom.tagName === 'VIRTUAL';\n  // sync _parent to accommodate changing tagnames\n  if (expr.tag) {\n    // need placeholder before unmount\n    if(isVirtual) {\n      head = expr.tag.__.head;\n      ref = createDOMPlaceholder();\n      head.parentNode.insertBefore(ref, head);\n    }\n\n    expr.tag.unmount(true);\n  }\n\n  if (!isString(tagName)) { return }\n\n  expr.impl = __TAG_IMPL[tagName];\n  conf = {root: expr.dom, parent: parent, hasImpl: true, tagName: tagName};\n  expr.tag = initChildTag(expr.impl, conf, expr.dom.innerHTML, parent);\n  each(expr.attrs, function (a) { return setAttr(expr.tag.root, a.name, a.value); });\n  expr.tagName = tagName;\n  expr.tag.mount();\n  if (isVirtual)\n    { makeReplaceVirtual(expr.tag, ref || expr.tag.root); } // root exist first time, after use placeholder\n\n  // parent is the placeholder tag, not the dynamic tag so clean up\n  parent.__.onUnmount = function() {\n    var delName = expr.tag.opts.dataIs,\n      tags = expr.tag.parent.tags,\n      _tags = expr.tag.__.parent.tags;\n    arrayishRemove(tags, delName, expr.tag);\n    arrayishRemove(_tags, delName, expr.tag);\n    expr.tag.unmount();\n  };\n}\n\n/**\n * Nomalize any attribute removing the \"riot-\" prefix\n * @param   { String } attrName - original attribute name\n * @returns { String } valid html attribute name\n */\nfunction normalizeAttrName(attrName) {\n  if (!attrName) { return null }\n  attrName = attrName.replace(ATTRS_PREFIX, '');\n  if (CASE_SENSITIVE_ATTRIBUTES[attrName]) { attrName = CASE_SENSITIVE_ATTRIBUTES[attrName]; }\n  return attrName\n}\n\n/**\n * Update on single tag expression\n * @this Tag\n * @param { Object } expr - expression logic\n * @returns { undefined }\n */\nfunction updateExpression(expr) {\n  if (this.root && getAttr(this.root,'virtualized')) { return }\n\n  var dom = expr.dom,\n    // remove the riot- prefix\n    attrName = normalizeAttrName(expr.attr),\n    isToggle = contains([SHOW_DIRECTIVE, HIDE_DIRECTIVE], attrName),\n    isVirtual = expr.root && expr.root.tagName === 'VIRTUAL',\n    parent = dom && (expr.parent || dom.parentNode),\n    // detect the style attributes\n    isStyleAttr = attrName === 'style',\n    isClassAttr = attrName === 'class',\n    hasValue,\n    isObj,\n    value;\n\n  // if it's a tag we could totally skip the rest\n  if (expr._riot_id) {\n    if (expr.isMounted) {\n      expr.update();\n    // if it hasn't been mounted yet, do that now.\n    } else {\n      expr.mount();\n      if (isVirtual) {\n        makeReplaceVirtual(expr, expr.root);\n      }\n    }\n    return\n  }\n  // if this expression has the update method it means it can handle the DOM changes by itself\n  if (expr.update) { return expr.update() }\n\n  // ...it seems to be a simple expression so we try to calculat its value\n  value = tmpl(expr.expr, isToggle ? extend(Object.create(this.parent), this) : this);\n  hasValue = !isBlank(value);\n  isObj = isObject(value);\n\n  // convert the style/class objects to strings\n  if (isObj) {\n    isObj = !isClassAttr && !isStyleAttr;\n    if (isClassAttr) {\n      value = tmpl(JSON.stringify(value), this);\n    } else if (isStyleAttr) {\n      value = styleObjectToString(value);\n    }\n  }\n\n  // remove original attribute\n  if (expr.attr && (!expr.isAttrRemoved || !hasValue)) {\n    remAttr(dom, expr.attr);\n    expr.isAttrRemoved = true;\n  }\n\n  // for the boolean attributes we don't need the value\n  // we can convert it to checked=true to checked=checked\n  if (expr.bool) { value = value ? attrName : false; }\n  if (expr.isRtag) { return updateDataIs(expr, this, value) }\n  if (expr.wasParsedOnce && expr.value === value) { return }\n\n  // update the expression value\n  expr.value = value;\n  expr.wasParsedOnce = true;\n\n  // if the value is an object we can not do much more with it\n  if (isObj && !isToggle) { return }\n  // avoid to render undefined/null values\n  if (isBlank(value)) { value = ''; }\n\n  // textarea and text nodes have no attribute name\n  if (!attrName) {\n    // about #815 w/o replace: the browser converts the value to a string,\n    // the comparison by \"==\" does too, but not in the server\n    value += '';\n    // test for parent avoids error with invalid assignment to nodeValue\n    if (parent) {\n      // cache the parent node because somehow it will become null on IE\n      // on the next iteration\n      expr.parent = parent;\n      if (parent.tagName === 'TEXTAREA') {\n        parent.value = value;                    // #1113\n        if (!IE_VERSION) { dom.nodeValue = value; }  // #1625 IE throws here, nodeValue\n      }                                         // will be available on 'updated'\n      else { dom.nodeValue = value; }\n    }\n    return\n  }\n\n\n  // event handler\n  if (isFunction(value)) {\n    setEventHandler(attrName, value, dom, this);\n  // show / hide\n  } else if (isToggle) {\n    toggleVisibility(dom, attrName === HIDE_DIRECTIVE ? !value : value);\n  // handle attributes\n  } else {\n    if (expr.bool) {\n      dom[attrName] = value;\n    }\n\n    if (attrName === 'value' && dom.value !== value) {\n      dom.value = value;\n    }\n\n    if (hasValue && value !== false) {\n      setAttr(dom, attrName, value);\n    }\n\n    // make sure that in case of style changes\n    // the element stays hidden\n    if (isStyleAttr && dom.hidden) { toggleVisibility(dom, false); }\n  }\n}\n\n/**\n * Update all the expressions in a Tag instance\n * @this Tag\n * @param { Array } expressions - expression that must be re evaluated\n */\nfunction updateAllExpressions(expressions) {\n  each(expressions, updateExpression.bind(this));\n}\n\nvar IfExpr = {\n  init: function init(dom, tag, expr) {\n    remAttr(dom, CONDITIONAL_DIRECTIVE);\n    this.tag = tag;\n    this.expr = expr;\n    this.stub = document.createTextNode('');\n    this.pristine = dom;\n\n    var p = dom.parentNode;\n    p.insertBefore(this.stub, dom);\n    p.removeChild(dom);\n\n    return this\n  },\n  update: function update() {\n    this.value = tmpl(this.expr, this.tag);\n\n    if (this.value && !this.current) { // insert\n      this.current = this.pristine.cloneNode(true);\n      this.stub.parentNode.insertBefore(this.current, this.stub);\n      this.expressions = [];\n      parseExpressions.apply(this.tag, [this.current, this.expressions, true]);\n    } else if (!this.value && this.current) { // remove\n      unmountAll(this.expressions);\n      if (this.current._tag) {\n        this.current._tag.unmount();\n      } else if (this.current.parentNode) {\n        this.current.parentNode.removeChild(this.current);\n      }\n      this.current = null;\n      this.expressions = [];\n    }\n\n    if (this.value) { updateAllExpressions.call(this.tag, this.expressions); }\n  },\n  unmount: function unmount() {\n    unmountAll(this.expressions || []);\n    delete this.pristine;\n    delete this.parentNode;\n    delete this.stub;\n  }\n};\n\nvar RefExpr = {\n  init: function init(dom, parent, attrName, attrValue) {\n    this.dom = dom;\n    this.attr = attrName;\n    this.rawValue = attrValue;\n    this.parent = parent;\n    this.hasExp = tmpl.hasExpr(attrValue);\n    return this\n  },\n  update: function update() {\n    var old = this.value;\n    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n    // if the referenced element is a custom tag, then we set the tag itself, rather than DOM\n    var tagOrDom = this.tag || this.dom;\n\n    this.value = this.hasExp ? tmpl(this.rawValue, this.parent) : this.rawValue;\n\n    // the name changed, so we need to remove it from the old key (if present)\n    if (!isBlank(old) && customParent) { arrayishRemove(customParent.refs, old, tagOrDom); }\n    if (!isBlank(this.value)) {\n      // add it to the refs of parent tag (this behavior was changed >=3.0)\n      if (customParent) { arrayishAdd(\n        customParent.refs,\n        this.value,\n        tagOrDom,\n        // use an array if it's a looped node and the ref is not an expression\n        null,\n        this.parent.__.index\n      ); }\n    }\n\n    // if it's the first time we pass here let's remove the ref attribute\n    // #2329\n    if (!old) { remAttr(this.dom, this.attr); }\n  },\n  unmount: function unmount() {\n    var tagOrDom = this.tag || this.dom;\n    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n    if (!isBlank(this.value) && customParent)\n      { arrayishRemove(customParent.refs, this.value, tagOrDom); }\n    delete this.dom;\n    delete this.parent;\n  }\n};\n\n/**\n * Convert the item looped into an object used to extend the child tag properties\n * @param   { Object } expr - object containing the keys used to extend the children tags\n * @param   { * } key - value to assign to the new object returned\n * @param   { * } val - value containing the position of the item in the array\n * @param   { Object } base - prototype object for the new item\n * @returns { Object } - new object containing the values of the original item\n *\n * The variables 'key' and 'val' are arbitrary.\n * They depend on the collection type looped (Array, Object)\n * and on the expression used on the each tag\n *\n */\nfunction mkitem(expr, key, val, base) {\n  var item = base ? Object.create(base) : {};\n  item[expr.key] = key;\n  if (expr.pos) { item[expr.pos] = val; }\n  return item\n}\n\n/**\n * Unmount the redundant tags\n * @param   { Array } items - array containing the current items to loop\n * @param   { Array } tags - array containing all the children tags\n */\nfunction unmountRedundant(items, tags) {\n  var i = tags.length,\n    j = items.length;\n\n  while (i > j) {\n    i--;\n    remove.apply(tags[i], [tags, i]);\n  }\n}\n\n\n/**\n * Remove a child tag\n * @this Tag\n * @param   { Array } tags - tags collection\n * @param   { Number } i - index of the tag to remove\n */\nfunction remove(tags, i) {\n  tags.splice(i, 1);\n  this.unmount();\n  arrayishRemove(this.parent, this, this.__.tagName, true);\n}\n\n/**\n * Move the nested custom tags in non custom loop tags\n * @this Tag\n * @param   { Number } i - current position of the loop tag\n */\nfunction moveNestedTags(i) {\n  var this$1 = this;\n\n  each(Object.keys(this.tags), function (tagName) {\n    moveChildTag.apply(this$1.tags[tagName], [tagName, i]);\n  });\n}\n\n/**\n * Move a child tag\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Tag } nextTag - instance of the next tag preceding the one we want to move\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction move(root, nextTag, isVirtual) {\n  if (isVirtual)\n    { moveVirtual.apply(this, [root, nextTag]); }\n  else\n    { safeInsert(root, this.root, nextTag.root); }\n}\n\n/**\n * Insert and mount a child tag\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Tag } nextTag - instance of the next tag preceding the one we want to insert\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction insert(root, nextTag, isVirtual) {\n  if (isVirtual)\n    { makeVirtual.apply(this, [root, nextTag]); }\n  else\n    { safeInsert(root, this.root, nextTag.root); }\n}\n\n/**\n * Append a new tag into the DOM\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction append(root, isVirtual) {\n  if (isVirtual)\n    { makeVirtual.call(this, root); }\n  else\n    { root.appendChild(this.root); }\n}\n\n/**\n * Manage tags having the 'each'\n * @param   { HTMLElement } dom - DOM node we need to loop\n * @param   { Tag } parent - parent tag instance where the dom node is contained\n * @param   { String } expr - string contained in the 'each' attribute\n * @returns { Object } expression object for this each loop\n */\nfunction _each(dom, parent, expr) {\n\n  // remove the each property from the original tag\n  remAttr(dom, LOOP_DIRECTIVE);\n\n  var mustReorder = typeof getAttr(dom, LOOP_NO_REORDER_DIRECTIVE) !== T_STRING || remAttr(dom, LOOP_NO_REORDER_DIRECTIVE),\n    tagName = getTagName(dom),\n    impl = __TAG_IMPL[tagName],\n    parentNode = dom.parentNode,\n    placeholder = createDOMPlaceholder(),\n    child = getTag(dom),\n    ifExpr = getAttr(dom, CONDITIONAL_DIRECTIVE),\n    tags = [],\n    oldItems = [],\n    hasKeys,\n    isLoop = true,\n    isAnonymous = !__TAG_IMPL[tagName],\n    isVirtual = dom.tagName === 'VIRTUAL';\n\n  // parse the each expression\n  expr = tmpl.loopKeys(expr);\n  expr.isLoop = true;\n\n  if (ifExpr) { remAttr(dom, CONDITIONAL_DIRECTIVE); }\n\n  // insert a marked where the loop tags will be injected\n  parentNode.insertBefore(placeholder, dom);\n  parentNode.removeChild(dom);\n\n  expr.update = function updateEach() {\n    // get the new items collection\n    expr.value = tmpl(expr.val, parent);\n\n    var frag = createFrag(),\n      items = expr.value,\n      isObject$$1 = !isArray(items) && !isString(items),\n      root = placeholder.parentNode;\n\n    // if this DOM was removed the update here is useless\n    // this condition fixes also a weird async issue on IE in our unit test\n    if (!root) { return }\n\n    // object loop. any changes cause full redraw\n    if (isObject$$1) {\n      hasKeys = items || false;\n      items = hasKeys ?\n        Object.keys(items).map(function (key) {\n          return mkitem(expr, items[key], key)\n        }) : [];\n    } else {\n      hasKeys = false;\n    }\n\n    if (ifExpr) {\n      items = items.filter(function(item, i) {\n        if (expr.key && !isObject$$1)\n          { return !!tmpl(ifExpr, mkitem(expr, item, i, parent)) }\n\n        return !!tmpl(ifExpr, extend(Object.create(parent), item))\n      });\n    }\n\n    // loop all the new items\n    each(items, function(item, i) {\n      // reorder only if the items are objects\n      var\n        doReorder = mustReorder && typeof item === T_OBJECT && !hasKeys,\n        oldPos = oldItems.indexOf(item),\n        isNew = oldPos === -1,\n        pos = !isNew && doReorder ? oldPos : i,\n        // does a tag exist in this position?\n        tag = tags[pos],\n        mustAppend = i >= oldItems.length,\n        mustCreate =  doReorder && isNew || !doReorder && !tag;\n\n      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n\n      // new tag\n      if (mustCreate) {\n        tag = new Tag$1(impl, {\n          parent: parent,\n          isLoop: isLoop,\n          isAnonymous: isAnonymous,\n          tagName: tagName,\n          root: dom.cloneNode(isAnonymous),\n          item: item,\n          index: i,\n        }, dom.innerHTML);\n\n        // mount the tag\n        tag.mount();\n\n        if (mustAppend)\n          { append.apply(tag, [frag || root, isVirtual]); }\n        else\n          { insert.apply(tag, [root, tags[i], isVirtual]); }\n\n        if (!mustAppend) { oldItems.splice(i, 0, item); }\n        tags.splice(i, 0, tag);\n        if (child) { arrayishAdd(parent.tags, tagName, tag, true); }\n      } else if (pos !== i && doReorder) {\n        // move\n        if (contains(items, oldItems[pos])) {\n          move.apply(tag, [root, tags[i], isVirtual]);\n          // move the old tag instance\n          tags.splice(i, 0, tags.splice(pos, 1)[0]);\n          // move the old item\n          oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n        }\n\n        // update the position attribute if it exists\n        if (expr.pos) { tag[expr.pos] = i; }\n\n        // if the loop tags are not custom\n        // we need to move all their custom tags into the right position\n        if (!child && tag.tags) { moveNestedTags.call(tag, i); }\n      }\n\n      // cache the original item to use it in the events bound to this node\n      // and its children\n      tag.__.item = item;\n      tag.__.index = i;\n      tag.__.parent = parent;\n\n      if (!mustCreate) { tag.update(item); }\n    });\n\n    // remove the redundant tags\n    unmountRedundant(items, tags);\n\n    // clone the items array\n    oldItems = items.slice();\n\n    // this condition is weird u\n    root.insertBefore(frag, placeholder);\n  };\n\n  expr.unmount = function() {\n    each(tags, function(t) { t.unmount(); });\n  };\n\n  return expr\n}\n\n/**\n * Walk the tag DOM to detect the expressions to evaluate\n * @this Tag\n * @param   { HTMLElement } root - root tag where we will start digging the expressions\n * @param   { Array } expressions - empty array where the expressions will be added\n * @param   { Boolean } mustIncludeRoot - flag to decide whether the root must be parsed as well\n * @returns { Object } an object containing the root noode and the dom tree\n */\nfunction parseExpressions(root, expressions, mustIncludeRoot) {\n  var this$1 = this;\n\n  var tree = {parent: {children: expressions}};\n\n  walkNodes(root, function (dom, ctx) {\n    var type = dom.nodeType, parent = ctx.parent, attr, expr, tagImpl;\n    if (!mustIncludeRoot && dom === root) { return {parent: parent} }\n\n    // text node\n    if (type === 3 && dom.parentNode.tagName !== 'STYLE' && tmpl.hasExpr(dom.nodeValue))\n      { parent.children.push({dom: dom, expr: dom.nodeValue}); }\n\n    if (type !== 1) { return ctx } // not an element\n\n    var isVirtual = dom.tagName === 'VIRTUAL';\n\n    // loop. each does it's own thing (for now)\n    if (attr = getAttr(dom, LOOP_DIRECTIVE)) {\n      if(isVirtual) { setAttr(dom, 'loopVirtual', true); } // ignore here, handled in _each\n      parent.children.push(_each(dom, this$1, attr));\n      return false\n    }\n\n    // if-attrs become the new parent. Any following expressions (either on the current\n    // element, or below it) become children of this expression.\n    if (attr = getAttr(dom, CONDITIONAL_DIRECTIVE)) {\n      parent.children.push(Object.create(IfExpr).init(dom, this$1, attr));\n      return false\n    }\n\n    if (expr = getAttr(dom, IS_DIRECTIVE)) {\n      if (tmpl.hasExpr(expr)) {\n        parent.children.push({isRtag: true, expr: expr, dom: dom, attrs: [].slice.call(dom.attributes)});\n        return false\n      }\n    }\n\n    // if this is a tag, stop traversing here.\n    // we ignore the root, since parseExpressions is called while we're mounting that root\n    tagImpl = getTag(dom);\n    if(isVirtual) {\n      if(getAttr(dom, 'virtualized')) {dom.parentElement.removeChild(dom); } // tag created, remove from dom\n      if(!tagImpl && !getAttr(dom, 'virtualized') && !getAttr(dom, 'loopVirtual'))  // ok to create virtual tag\n        { tagImpl = { tmpl: dom.outerHTML }; }\n    }\n\n    if (tagImpl && (dom !== root || mustIncludeRoot)) {\n      if(isVirtual && !getAttr(dom, IS_DIRECTIVE)) { // handled in update\n        // can not remove attribute like directives\n        // so flag for removal after creation to prevent maximum stack error\n        setAttr(dom, 'virtualized', true);\n\n        var tag = new Tag$1({ tmpl: dom.outerHTML },\n          {root: dom, parent: this$1},\n          dom.innerHTML);\n        parent.children.push(tag); // no return, anonymous tag, keep parsing\n      } else {\n        var conf = {root: dom, parent: this$1, hasImpl: true};\n        parent.children.push(initChildTag(tagImpl, conf, dom.innerHTML, this$1));\n        return false\n      }\n    }\n\n    // attribute expressions\n    parseAttributes.apply(this$1, [dom, dom.attributes, function(attr, expr) {\n      if (!expr) { return }\n      parent.children.push(expr);\n    }]);\n\n    // whatever the parent is, all child elements get the same parent.\n    // If this element had an if-attr, that's the parent for all child elements\n    return {parent: parent}\n  }, tree);\n}\n\n/**\n * Calls `fn` for every attribute on an element. If that attr has an expression,\n * it is also passed to fn.\n * @this Tag\n * @param   { HTMLElement } dom - dom node to parse\n * @param   { Array } attrs - array of attributes\n * @param   { Function } fn - callback to exec on any iteration\n */\nfunction parseAttributes(dom, attrs, fn) {\n  var this$1 = this;\n\n  each(attrs, function (attr) {\n    var name = attr.name, bool = isBoolAttr(name), expr;\n\n    if (contains(REF_DIRECTIVES, name)) {\n      expr =  Object.create(RefExpr).init(dom, this$1, name, attr.value);\n    } else if (tmpl.hasExpr(attr.value)) {\n      expr = {dom: dom, expr: attr.value, attr: name, bool: bool};\n    }\n\n    fn(attr, expr);\n  });\n}\n\n/*\n  Includes hacks needed for the Internet Explorer version 9 and below\n  See: http://kangax.github.io/compat-table/es5/#ie8\n       http://codeplanet.io/dropping-ie8/\n*/\n\nvar reHasYield  = /<yield\\b/i;\nvar reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig;\nvar reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig;\nvar reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig;\nvar rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' };\nvar tblTags = IE_VERSION && IE_VERSION < 10 ? RE_SPECIAL_TAGS : RE_SPECIAL_TAGS_NO_OPTION;\nvar GENERIC = 'div';\n\n\n/*\n  Creates the root element for table or select child elements:\n  tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n*/\nfunction specialTags(el, tmpl, tagName) {\n\n  var\n    select = tagName[0] === 'o',\n    parent = select ? 'select>' : 'table>';\n\n  // trim() is important here, this ensures we don't have artifacts,\n  // so we can check if we have only one element inside the parent\n  el.innerHTML = '<' + parent + tmpl.trim() + '</' + parent;\n  parent = el.firstChild;\n\n  // returns the immediate parent if tr/th/td/col is the only element, if not\n  // returns the whole tree, as this can include additional elements\n  /* istanbul ignore next */\n  if (select) {\n    parent.selectedIndex = -1;  // for IE9, compatible w/current riot behavior\n  } else {\n    // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n    var tname = rootEls[tagName];\n    if (tname && parent.childElementCount === 1) { parent = $(tname, parent); }\n  }\n  return parent\n}\n\n/*\n  Replace the yield tag from any tag template with the innerHTML of the\n  original tag in the page\n*/\nfunction replaceYield(tmpl, html) {\n  // do nothing if no yield\n  if (!reHasYield.test(tmpl)) { return tmpl }\n\n  // be careful with #1343 - string on the source having `$1`\n  var src = {};\n\n  html = html && html.replace(reYieldSrc, function (_, ref, text) {\n    src[ref] = src[ref] || text;   // preserve first definition\n    return ''\n  }).trim();\n\n  return tmpl\n    .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n      return src[ref] || def || ''\n    })\n    .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n      return html || def || ''\n    })\n}\n\n/**\n * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n *\n * @param   { String } tmpl  - The template coming from the custom tag definition\n * @param   { String } html - HTML content that comes from the DOM element where you\n *           will mount the tag, mostly the original tag in the page\n * @returns { HTMLElement } DOM element with _tmpl_ merged through `YIELD` with the _html_.\n */\nfunction mkdom(tmpl, html) {\n  var match   = tmpl && tmpl.match(/^\\s*<([-\\w]+)/),\n    tagName = match && match[1].toLowerCase(),\n    el = mkEl(GENERIC);\n\n  // replace all the yield tags with the tag inner html\n  tmpl = replaceYield(tmpl, html);\n\n  /* istanbul ignore next */\n  if (tblTags.test(tagName))\n    { el = specialTags(el, tmpl, tagName); }\n  else\n    { setInnerHTML(el, tmpl); }\n\n  return el\n}\n\n/**\n * Another way to create a riot tag a bit more es6 friendly\n * @param { HTMLElement } el - tag DOM selector or DOM node/s\n * @param { Object } opts - tag logic\n * @returns { Tag } new riot tag instance\n */\nfunction Tag$2(el, opts) {\n  // get the tag properties from the class constructor\n  var ref = this;\n  var name = ref.name;\n  var tmpl = ref.tmpl;\n  var css = ref.css;\n  var attrs = ref.attrs;\n  var onCreate = ref.onCreate;\n  // register a new tag and cache the class prototype\n  if (!__TAG_IMPL[name]) {\n    tag$1(name, tmpl, css, attrs, onCreate);\n    // cache the class constructor\n    __TAG_IMPL[name].class = this.constructor;\n  }\n\n  // mount the tag using the class instance\n  mountTo(el, name, opts, this);\n  // inject the component css\n  if (css) { styleManager.inject(); }\n\n  return this\n}\n\n/**\n * Create a new riot tag implementation\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   tmpl - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nfunction tag$1(name, tmpl, css, attrs, fn) {\n  if (isFunction(attrs)) {\n    fn = attrs;\n\n    if (/^[\\w\\-]+\\s?=/.test(css)) {\n      attrs = css;\n      css = '';\n    } else\n      { attrs = ''; }\n  }\n\n  if (css) {\n    if (isFunction(css))\n      { fn = css; }\n    else\n      { styleManager.add(css); }\n  }\n\n  name = name.toLowerCase();\n  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\n  return name\n}\n\n/**\n * Create a new riot tag implementation (for use by the compiler)\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   tmpl - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nfunction tag2$1(name, tmpl, css, attrs, fn) {\n  if (css) { styleManager.add(css, name); }\n\n  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\n  return name\n}\n\n/**\n * Mount a tag using a specific tag implementation\n * @param   { * } selector - tag DOM selector or DOM node/s\n * @param   { String } tagName - tag implementation name\n * @param   { Object } opts - tag logic\n * @returns { Array } new tags instances\n */\nfunction mount$1(selector, tagName, opts) {\n  var tags = [];\n\n  function pushTagsTo(root) {\n    if (root.tagName) {\n      var riotTag = getAttr(root, IS_DIRECTIVE);\n\n      // have tagName? force riot-tag to be the same\n      if (tagName && riotTag !== tagName) {\n        riotTag = tagName;\n        setAttr(root, IS_DIRECTIVE, tagName);\n      }\n\n      var tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);\n\n      if (tag)\n        { tags.push(tag); }\n    } else if (root.length)\n      { each(root, pushTagsTo); } // assume nodeList\n  }\n\n  // inject styles into DOM\n  styleManager.inject();\n\n  if (isObject(tagName)) {\n    opts = tagName;\n    tagName = 0;\n  }\n\n  var elem;\n  var allTags;\n\n  // crawl the DOM to find the tag\n  if (isString(selector)) {\n    selector = selector === '*' ?\n      // select all registered tags\n      // & tags found with the riot-tag attribute set\n      allTags = selectTags() :\n      // or just the ones named like the selector\n      selector + selectTags(selector.split(/, */));\n\n    // make sure to pass always a selector\n    // to the querySelectorAll function\n    elem = selector ? $$(selector) : [];\n  }\n  else\n    // probably you have passed already a tag or a NodeList\n    { elem = selector; }\n\n  // select all the registered and mount them inside their root elements\n  if (tagName === '*') {\n    // get all custom tags\n    tagName = allTags || selectTags();\n    // if the root els it's just a single tag\n    if (elem.tagName)\n      { elem = $$(tagName, elem); }\n    else {\n      // select all the children for all the different root elements\n      var nodeList = [];\n\n      each(elem, function (_el) { return nodeList.push($$(tagName, _el)); });\n\n      elem = nodeList;\n    }\n    // get rid of the tagName\n    tagName = 0;\n  }\n\n  pushTagsTo(elem);\n\n  return tags\n}\n\n// Create a mixin that could be globally shared across all the tags\nvar mixins = {};\nvar globals = mixins[GLOBAL_MIXIN] = {};\nvar mixins_id = 0;\n\n/**\n * Create/Return a mixin by its name\n * @param   { String }  name - mixin name (global mixin if object)\n * @param   { Object }  mix - mixin logic\n * @param   { Boolean } g - is global?\n * @returns { Object }  the mixin logic\n */\nfunction mixin$1(name, mix, g) {\n  // Unnamed global\n  if (isObject(name)) {\n    mixin$1((\"__unnamed_\" + (mixins_id++)), name, true);\n    return\n  }\n\n  var store = g ? globals : mixins;\n\n  // Getter\n  if (!mix) {\n    if (isUndefined(store[name]))\n      { throw new Error('Unregistered mixin: ' + name) }\n\n    return store[name]\n  }\n\n  // Setter\n  store[name] = isFunction(mix) ?\n    extend(mix.prototype, store[name] || {}) && mix :\n    extend(store[name] || {}, mix);\n}\n\n/**\n * Update all the tags instances created\n * @returns { Array } all the tags instances\n */\nfunction update$1() {\n  return each(__TAGS_CACHE, function (tag) { return tag.update(); })\n}\n\nfunction unregister$1(name) {\n  delete __TAG_IMPL[name];\n}\n\nvar version$1 = 'v3.4.4';\n\n\nvar core = Object.freeze({\n\tTag: Tag$2,\n\ttag: tag$1,\n\ttag2: tag2$1,\n\tmount: mount$1,\n\tmixin: mixin$1,\n\tupdate: update$1,\n\tunregister: unregister$1,\n\tversion: version$1\n});\n\n// counter to give a unique id to all the Tag instances\nvar __uid = 0;\n\n/**\n * We need to update opts for this tag. That requires updating the expressions\n * in any attributes on the tag, and then copying the result onto opts.\n * @this Tag\n * @param   {Boolean} isLoop - is it a loop tag?\n * @param   { Tag }  parent - parent tag node\n * @param   { Boolean }  isAnonymous - is it a tag without any impl? (a tag not registered)\n * @param   { Object }  opts - tag options\n * @param   { Array }  instAttrs - tag attributes array\n */\nfunction updateOpts(isLoop, parent, isAnonymous, opts, instAttrs) {\n  // isAnonymous `each` tags treat `dom` and `root` differently. In this case\n  // (and only this case) we don't need to do updateOpts, because the regular parse\n  // will update those attrs. Plus, isAnonymous tags don't need opts anyway\n  if (isLoop && isAnonymous) { return }\n\n  var ctx = !isAnonymous && isLoop ? this : parent || this;\n  each(instAttrs, function (attr) {\n    if (attr.expr) { updateAllExpressions.call(ctx, [attr.expr]); }\n    // normalize the attribute names\n    opts[toCamel(attr.name).replace(ATTRS_PREFIX, '')] = attr.expr ? attr.expr.value : attr.value;\n  });\n}\n\n\n/**\n * Tag class\n * @constructor\n * @param { Object } impl - it contains the tag template, and logic\n * @param { Object } conf - tag options\n * @param { String } innerHTML - html that eventually we need to inject in the tag\n */\nfunction Tag$1(impl, conf, innerHTML) {\n  if ( impl === void 0 ) impl = {};\n  if ( conf === void 0 ) conf = {};\n\n  var opts = extend({}, conf.opts),\n    parent = conf.parent,\n    isLoop = conf.isLoop,\n    isAnonymous = !!conf.isAnonymous,\n    skipAnonymous = settings$1.skipAnonymousTags && isAnonymous,\n    item = cleanUpData(conf.item),\n    index = conf.index, // available only for the looped nodes\n    instAttrs = [], // All attributes on the Tag when it's first parsed\n    implAttrs = [], // expressions on this type of Tag\n    expressions = [],\n    root = conf.root,\n    tagName = conf.tagName || getTagName(root),\n    isVirtual = tagName === 'virtual',\n    propsInSyncWithParent = [],\n    dom;\n\n  // make this tag observable\n  if (!skipAnonymous) { observable$1(this); }\n  // only call unmount if we have a valid __TAG_IMPL (has name property)\n  if (impl.name && root._tag) { root._tag.unmount(true); }\n\n  // not yet mounted\n  this.isMounted = false;\n\n  defineProperty(this, '__', {\n    isAnonymous: isAnonymous,\n    instAttrs: instAttrs,\n    innerHTML: innerHTML,\n    tagName: tagName,\n    index: index,\n    isLoop: isLoop,\n    // tags having event listeners\n    // it would be better to use weak maps here but we can not introduce breaking changes now\n    listeners: [],\n    // these vars will be needed only for the virtual tags\n    virts: [],\n    tail: null,\n    head: null,\n    parent: null,\n    item: null\n  });\n\n  // create a unique id to this tag\n  // it could be handy to use it also to improve the virtual dom rendering speed\n  defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id\n  defineProperty(this, 'root', root);\n  extend(this, { opts: opts }, item);\n  // protect the \"tags\" and \"refs\" property from being overridden\n  defineProperty(this, 'parent', parent || null);\n  defineProperty(this, 'tags', {});\n  defineProperty(this, 'refs', {});\n\n  dom = isLoop && isAnonymous ? root : mkdom(impl.tmpl, innerHTML, isLoop);\n\n  /**\n   * Update the tag expressions and options\n   * @param   { * }  data - data we want to use to extend the tag properties\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'update', function tagUpdate(data) {\n    var nextOpts = {},\n      canTrigger = this.isMounted && !skipAnonymous;\n\n    // make sure the data passed will not override\n    // the component core methods\n    data = cleanUpData(data);\n    extend(this, data);\n    updateOpts.apply(this, [isLoop, parent, isAnonymous, nextOpts, instAttrs]);\n\n    if (canTrigger && this.isMounted && isFunction(this.shouldUpdate) && !this.shouldUpdate(data, nextOpts)) {\n      return this\n    }\n\n    // inherit properties from the parent, but only for isAnonymous tags\n    if (isLoop && isAnonymous) { inheritFrom.apply(this, [this.parent, propsInSyncWithParent]); }\n    extend(opts, nextOpts);\n    if (canTrigger) { this.trigger('update', data); }\n    updateAllExpressions.call(this, expressions);\n    if (canTrigger) { this.trigger('updated'); }\n\n    return this\n\n  }.bind(this));\n\n  /**\n   * Add a mixin to this tag\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'mixin', function tagMixin() {\n    var this$1 = this;\n\n    each(arguments, function (mix) {\n      var instance, obj;\n      var props = [];\n\n      // properties blacklisted and will not be bound to the tag instance\n      var propsBlacklist = ['init', '__proto__'];\n\n      mix = isString(mix) ? mixin$1(mix) : mix;\n\n      // check if the mixin is a function\n      if (isFunction(mix)) {\n        // create the new mixin instance\n        instance = new mix();\n      } else { instance = mix; }\n\n      var proto = Object.getPrototypeOf(instance);\n\n      // build multilevel prototype inheritance chain property list\n      do { props = props.concat(Object.getOwnPropertyNames(obj || instance)); }\n      while (obj = Object.getPrototypeOf(obj || instance))\n\n      // loop the keys in the function prototype or the all object keys\n      each(props, function (key) {\n        // bind methods to this\n        // allow mixins to override other properties/parent mixins\n        if (!contains(propsBlacklist, key)) {\n          // check for getters/setters\n          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key);\n          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set);\n\n          // apply method only if it does not already exist on the instance\n          if (!this$1.hasOwnProperty(key) && hasGetterSetter) {\n            Object.defineProperty(this$1, key, descriptor);\n          } else {\n            this$1[key] = isFunction(instance[key]) ?\n              instance[key].bind(this$1) :\n              instance[key];\n          }\n        }\n      });\n\n      // init method will be called automatically\n      if (instance.init)\n        { instance.init.bind(this$1)(); }\n    });\n    return this\n  }.bind(this));\n\n  /**\n   * Mount the current tag instance\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'mount', function tagMount() {\n    var this$1 = this;\n\n    root._tag = this; // keep a reference to the tag just created\n\n    // Read all the attrs on this instance. This give us the info we need for updateOpts\n    parseAttributes.apply(parent, [root, root.attributes, function (attr, expr) {\n      if (!isAnonymous && RefExpr.isPrototypeOf(expr)) { expr.tag = this$1; }\n      attr.expr = expr;\n      instAttrs.push(attr);\n    }]);\n\n    // update the root adding custom attributes coming from the compiler\n    implAttrs = [];\n    walkAttrs(impl.attrs, function (k, v) { implAttrs.push({name: k, value: v}); });\n    parseAttributes.apply(this, [root, implAttrs, function (attr, expr) {\n      if (expr) { expressions.push(expr); }\n      else { setAttr(root, attr.name, attr.value); }\n    }]);\n\n    // initialiation\n    updateOpts.apply(this, [isLoop, parent, isAnonymous, opts, instAttrs]);\n\n    // add global mixins\n    var globalMixin = mixin$1(GLOBAL_MIXIN);\n\n    if (globalMixin && !skipAnonymous) {\n      for (var i in globalMixin) {\n        if (globalMixin.hasOwnProperty(i)) {\n          this$1.mixin(globalMixin[i]);\n        }\n      }\n    }\n\n    if (impl.fn) { impl.fn.call(this, opts); }\n\n    if (!skipAnonymous) { this.trigger('before-mount'); }\n\n    // parse layout after init. fn may calculate args for nested custom tags\n    parseExpressions.apply(this, [dom, expressions, isAnonymous]);\n\n    this.update(item);\n\n    if (!isAnonymous) {\n      while (dom.firstChild) { root.appendChild(dom.firstChild); }\n    }\n\n    defineProperty(this, 'root', root);\n    defineProperty(this, 'isMounted', true);\n\n    if (skipAnonymous) { return }\n\n    // if it's not a child tag we can trigger its mount event\n    if (!this.parent) {\n      this.trigger('mount');\n    }\n    // otherwise we need to wait that the parent \"mount\" or \"updated\" event gets triggered\n    else {\n      var p = getImmediateCustomParentTag(this.parent);\n      p.one(!p.isMounted ? 'mount' : 'updated', function () {\n        this$1.trigger('mount');\n      });\n    }\n\n    return this\n\n  }.bind(this));\n\n  /**\n   * Unmount the tag instance\n   * @param { Boolean } mustKeepRoot - if it's true the root node will not be removed\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'unmount', function tagUnmount(mustKeepRoot) {\n    var this$1 = this;\n\n    var el = this.root,\n      p = el.parentNode,\n      ptag,\n      tagIndex = __TAGS_CACHE.indexOf(this);\n\n    if (!skipAnonymous) { this.trigger('before-unmount'); }\n\n    // clear all attributes coming from the mounted tag\n    walkAttrs(impl.attrs, function (name) {\n      if (startsWith(name, ATTRS_PREFIX))\n        { name = name.slice(ATTRS_PREFIX.length); }\n      remAttr(root, name);\n    });\n\n    // remove all the event listeners\n    this.__.listeners.forEach(function (dom) {\n      Object.keys(dom[RIOT_EVENTS_KEY]).forEach(function (eventName) {\n        dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][eventName]);\n      });\n    });\n\n    // remove this tag instance from the global virtualDom variable\n    if (tagIndex !== -1)\n      { __TAGS_CACHE.splice(tagIndex, 1); }\n\n    if (p || isVirtual) {\n      if (parent) {\n        ptag = getImmediateCustomParentTag(parent);\n\n        if (isVirtual) {\n          Object.keys(this.tags).forEach(function (tagName) {\n            arrayishRemove(ptag.tags, tagName, this$1.tags[tagName]);\n          });\n        } else {\n          arrayishRemove(ptag.tags, tagName, this);\n          if(parent !== ptag) // remove from _parent too\n            { arrayishRemove(parent.tags, tagName, this); }\n        }\n      } else {\n        // remove the tag contents\n        setInnerHTML(el, '');\n      }\n\n      if (p && !mustKeepRoot) { p.removeChild(el); }\n    }\n\n    if (this.__.virts) {\n      each(this.__.virts, function (v) {\n        if (v.parentNode) { v.parentNode.removeChild(v); }\n      });\n    }\n\n    // allow expressions to unmount themselves\n    unmountAll(expressions);\n    each(instAttrs, function (a) { return a.expr && a.expr.unmount && a.expr.unmount(); });\n\n    // custom internal unmount function to avoid relying on the observable\n    if (this.__.onUnmount) { this.__.onUnmount(); }\n\n    if (!skipAnonymous) {\n      this.trigger('unmount');\n      this.off('*');\n    }\n\n    defineProperty(this, 'isMounted', false);\n\n    delete this.root._tag;\n\n    return this\n\n  }.bind(this));\n}\n\n/**\n * Detect the tag implementation by a DOM node\n * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n */\nfunction getTag(dom) {\n  return dom.tagName && __TAG_IMPL[getAttr(dom, IS_DIRECTIVE) ||\n    getAttr(dom, IS_DIRECTIVE) || dom.tagName.toLowerCase()]\n}\n\n/**\n * Inherit properties from a target tag instance\n * @this Tag\n * @param   { Tag } target - tag where we will inherit properties\n * @param   { Array } propsInSyncWithParent - array of properties to sync with the target\n */\nfunction inheritFrom(target, propsInSyncWithParent) {\n  var this$1 = this;\n\n  each(Object.keys(target), function (k) {\n    // some properties must be always in sync with the parent tag\n    var mustSync = !isReservedName(k) && contains(propsInSyncWithParent, k);\n\n    if (isUndefined(this$1[k]) || mustSync) {\n      // track the property to keep in sync\n      // so we can keep it updated\n      if (!mustSync) { propsInSyncWithParent.push(k); }\n      this$1[k] = target[k];\n    }\n  });\n}\n\n/**\n * Move the position of a custom tag in its parent tag\n * @this Tag\n * @param   { String } tagName - key where the tag was stored\n * @param   { Number } newPos - index where the new tag will be stored\n */\nfunction moveChildTag(tagName, newPos) {\n  var parent = this.parent,\n    tags;\n  // no parent no move\n  if (!parent) { return }\n\n  tags = parent.tags[tagName];\n\n  if (isArray(tags))\n    { tags.splice(newPos, 0, tags.splice(tags.indexOf(this), 1)[0]); }\n  else { arrayishAdd(parent.tags, tagName, this); }\n}\n\n/**\n * Create a new child tag including it correctly into its parent\n * @param   { Object } child - child tag implementation\n * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n * @param   { String } innerHTML - inner html of the child node\n * @param   { Object } parent - instance of the parent tag including the child custom tag\n * @returns { Object } instance of the new child tag just created\n */\nfunction initChildTag(child, opts, innerHTML, parent) {\n  var tag = new Tag$1(child, opts, innerHTML),\n    tagName = opts.tagName || getTagName(opts.root, true),\n    ptag = getImmediateCustomParentTag(parent);\n  // fix for the parent attribute in the looped elements\n  defineProperty(tag, 'parent', ptag);\n  // store the real parent tag\n  // in some cases this could be different from the custom parent tag\n  // for example in nested loops\n  tag.__.parent = parent;\n\n  // add this tag to the custom parent tag\n  arrayishAdd(ptag.tags, tagName, tag);\n\n  // and also to the real parent tag\n  if (ptag !== parent)\n    { arrayishAdd(parent.tags, tagName, tag); }\n\n  // empty the child node once we got its template\n  // to avoid that its children get compiled multiple times\n  opts.root.innerHTML = '';\n\n  return tag\n}\n\n/**\n * Loop backward all the parents tree to detect the first custom parent tag\n * @param   { Object } tag - a Tag instance\n * @returns { Object } the instance of the first custom parent tag found\n */\nfunction getImmediateCustomParentTag(tag) {\n  var ptag = tag;\n  while (ptag.__.isAnonymous) {\n    if (!ptag.parent) { break }\n    ptag = ptag.parent;\n  }\n  return ptag\n}\n\n/**\n * Trigger the unmount method on all the expressions\n * @param   { Array } expressions - DOM expressions\n */\nfunction unmountAll(expressions) {\n  each(expressions, function(expr) {\n    if (expr instanceof Tag$1) { expr.unmount(true); }\n    else if (expr.tagName) { expr.tag.unmount(true); }\n    else if (expr.unmount) { expr.unmount(); }\n  });\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { Boolean } skipDataIs - hack to ignore the data-is attribute when attaching to parent\n * @returns { String } name to identify this dom node in riot\n */\nfunction getTagName(dom, skipDataIs) {\n  var child = getTag(dom),\n    namedTag = !skipDataIs && getAttr(dom, IS_DIRECTIVE);\n  return namedTag && !tmpl.hasExpr(namedTag) ?\n                namedTag :\n              child ? child.name : dom.tagName.toLowerCase()\n}\n\n/**\n * With this function we avoid that the internal Tag methods get overridden\n * @param   { Object } data - options we want to use to extend the tag instance\n * @returns { Object } clean object without containing the riot internal reserved words\n */\nfunction cleanUpData(data) {\n  if (!(data instanceof Tag$1) && !(data && isFunction(data.trigger)))\n    { return data }\n\n  var o = {};\n  for (var key in data) {\n    if (!RE_RESERVED_NAMES.test(key)) { o[key] = data[key]; }\n  }\n  return o\n}\n\n/**\n * Set the property of an object for a given key. If something already\n * exists there, then it becomes an array containing both the old and new value.\n * @param { Object } obj - object on which to set the property\n * @param { String } key - property name\n * @param { Object } value - the value of the property to be set\n * @param { Boolean } ensureArray - ensure that the property remains an array\n * @param { Number } index - add the new item in a certain array position\n */\nfunction arrayishAdd(obj, key, value, ensureArray, index) {\n  var dest = obj[key];\n  var isArr = isArray(dest);\n  var hasIndex = !isUndefined(index);\n\n  if (dest && dest === value) { return }\n\n  // if the key was never set, set it once\n  if (!dest && ensureArray) { obj[key] = [value]; }\n  else if (!dest) { obj[key] = value; }\n  // if it was an array and not yet set\n  else {\n    if (isArr) {\n      var oldIndex = dest.indexOf(value);\n      // this item never changed its position\n      if (oldIndex === index) { return }\n      // remove the item from its old position\n      if (oldIndex !== -1) { dest.splice(oldIndex, 1); }\n      // move or add the item\n      if (hasIndex) {\n        dest.splice(index, 0, value);\n      } else {\n        dest.push(value);\n      }\n    } else { obj[key] = [dest, value]; }\n  }\n}\n\n/**\n * Removes an item from an object at a given key. If the key points to an array,\n * then the item is just removed from the array.\n * @param { Object } obj - object on which to remove the property\n * @param { String } key - property name\n * @param { Object } value - the value of the property to be removed\n * @param { Boolean } ensureArray - ensure that the property remains an array\n*/\nfunction arrayishRemove(obj, key, value, ensureArray) {\n  if (isArray(obj[key])) {\n    var index = obj[key].indexOf(value);\n    if (index !== -1) { obj[key].splice(index, 1); }\n    if (!obj[key].length) { delete obj[key]; }\n    else if (obj[key].length === 1 && !ensureArray) { obj[key] = obj[key][0]; }\n  } else\n    { delete obj[key]; } // otherwise just delete the key\n}\n\n/**\n * Mount a tag creating new Tag instance\n * @param   { Object } root - dom node where the tag will be mounted\n * @param   { String } tagName - name of the riot tag we want to mount\n * @param   { Object } opts - options to pass to the Tag instance\n * @param   { Object } ctx - optional context that will be used to extend an existing class ( used in riot.Tag )\n * @returns { Tag } a new Tag instance\n */\nfunction mountTo(root, tagName, opts, ctx) {\n  var impl = __TAG_IMPL[tagName],\n    implClass = __TAG_IMPL[tagName].class,\n    tag = ctx || (implClass ? Object.create(implClass.prototype) : {}),\n    // cache the inner HTML to fix #855\n    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;\n\n  // clear the inner html\n  root.innerHTML = '';\n\n  var conf = extend({ root: root, opts: opts }, { parent: opts ? opts.parent : null });\n\n  if (impl && root) { Tag$1.apply(tag, [impl, conf, innerHTML]); }\n\n  if (tag && tag.mount) {\n    tag.mount(true);\n    // add this tag to the virtualDom variable\n    if (!contains(__TAGS_CACHE, tag)) { __TAGS_CACHE.push(tag); }\n  }\n\n  return tag\n}\n\n/**\n * makes a tag virtual and replaces a reference in the dom\n * @this Tag\n * @param { tag } the tag to make virtual\n * @param { ref } the dom reference location\n */\nfunction makeReplaceVirtual(tag, ref) {\n  var frag = createFrag();\n  makeVirtual.call(tag, frag);\n  ref.parentNode.replaceChild(frag, ref);\n}\n\n/**\n * Adds the elements for a virtual tag\n * @this Tag\n * @param { Node } src - the node that will do the inserting or appending\n * @param { Tag } target - only if inserting, insert before this tag's first child\n */\nfunction makeVirtual(src, target) {\n  var this$1 = this;\n\n  var head = createDOMPlaceholder(),\n    tail = createDOMPlaceholder(),\n    frag = createFrag(),\n    sib, el;\n\n  this.root.insertBefore(head, this.root.firstChild);\n  this.root.appendChild(tail);\n\n  this.__.head = el = head;\n  this.__.tail = tail;\n\n  while (el) {\n    sib = el.nextSibling;\n    frag.appendChild(el);\n    this$1.__.virts.push(el); // hold for unmounting\n    el = sib;\n  }\n\n  if (target)\n    { src.insertBefore(frag, target.__.head); }\n  else\n    { src.appendChild(frag); }\n}\n\n/**\n * Move virtual tag and all child nodes\n * @this Tag\n * @param { Node } src  - the node that will do the inserting\n * @param { Tag } target - insert before this tag's first child\n */\nfunction moveVirtual(src, target) {\n  var this$1 = this;\n\n  var el = this.__.head,\n    frag = createFrag(),\n    sib;\n\n  while (el) {\n    sib = el.nextSibling;\n    frag.appendChild(el);\n    el = sib;\n    if (el === this$1.__.tail) {\n      frag.appendChild(el);\n      src.insertBefore(frag, target.__.head);\n      break\n    }\n  }\n}\n\n/**\n * Get selectors for tags\n * @param   { Array } tags - tag names to select\n * @returns { String } selector\n */\nfunction selectTags(tags) {\n  // select all tags\n  if (!tags) {\n    var keys = Object.keys(__TAG_IMPL);\n    return keys + selectTags(keys)\n  }\n\n  return tags\n    .filter(function (t) { return !/[^-\\w]/.test(t); })\n    .reduce(function (list, t) {\n      var name = t.trim().toLowerCase();\n      return list + \",[\" + IS_DIRECTIVE + \"=\\\"\" + name + \"\\\"]\"\n    }, '')\n}\n\n\nvar tags = Object.freeze({\n\tgetTag: getTag,\n\tinheritFrom: inheritFrom,\n\tmoveChildTag: moveChildTag,\n\tinitChildTag: initChildTag,\n\tgetImmediateCustomParentTag: getImmediateCustomParentTag,\n\tunmountAll: unmountAll,\n\tgetTagName: getTagName,\n\tcleanUpData: cleanUpData,\n\tarrayishAdd: arrayishAdd,\n\tarrayishRemove: arrayishRemove,\n\tmountTo: mountTo,\n\tmakeReplaceVirtual: makeReplaceVirtual,\n\tmakeVirtual: makeVirtual,\n\tmoveVirtual: moveVirtual,\n\tselectTags: selectTags\n});\n\n/**\n * Riot public api\n */\nvar settings = settings$1;\nvar util = {\n  tmpl: tmpl,\n  brackets: brackets,\n  styleManager: styleManager,\n  vdom: __TAGS_CACHE,\n  styleNode: styleManager.styleNode,\n  // export the riot internal utils as well\n  dom: dom,\n  check: check,\n  misc: misc,\n  tags: tags\n};\n\n// export the core props/methods\nvar Tag$$1 = Tag$2;\nvar tag$$1 = tag$1;\nvar tag2$$1 = tag2$1;\nvar mount$$1 = mount$1;\nvar mixin$$1 = mixin$1;\nvar update$$1 = update$1;\nvar unregister$$1 = unregister$1;\nvar version$$1 = version$1;\nvar observable = observable$1;\n\nvar riot$1 = extend({}, core, {\n  observable: observable$1,\n  settings: settings,\n  util: util,\n});\n\nexports.settings = settings;\nexports.util = util;\nexports.Tag = Tag$$1;\nexports.tag = tag$$1;\nexports.tag2 = tag2$$1;\nexports.mount = mount$$1;\nexports.mixin = mixin$$1;\nexports.update = update$$1;\nexports.unregister = unregister$$1;\nexports.version = version$$1;\nexports.observable = observable;\nexports['default'] = riot$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/riot/riot.js\n// module id = 1\n// module chunks = 0","export {\n  axisLeft,\n  axisBottom,\n} from 'd3-axis'\n\nexport {\n  // curveStep,\n  line\n} from 'd3-shape'\n\nexport {\n  scaleLinear,\n  scaleTime,\n  scaleQuantile\n} from 'd3-scale'\n\nexport {\n  select,\n} from 'd3-selection'\n\nexport {\n  timeParse,\n  timeFormat\n} from 'd3-time-format'\n\nexport {\n  csvParse\n} from 'd3-dsv'\n\nexport {\n  geoPath,\n  geoMercator\n} from 'd3-geo'\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/lib/d3.js","import * as d3 from '../../scripts/lib/d3.js'\n\nconst colors = ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026']\nexport default d3.scaleQuantile().domain([5, 10]).range(colors)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/get_color.js","export default hilighted => hilighted && hilighted.classed('-hilight', false)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/unhilight_path.js","import * as d3 from '../../../scripts/lib/d3.js'\n\nconst formatDate = d3.timeFormat('%Y')\nconst parseDate = d3.timeParse('%Y')\nconst toDate = str => parseDate(str)\n\nmodule.exports = {\n  fromDate: date => formatDate(date),\n  convertDate: str => formatDate(parseDate(str)),\n  toDate,\n  years: [\n    \"2003\",\n    \"2004\",\n    \"2005\",\n    \"2006\",\n    \"2007\",\n    \"2008\",\n    \"2009\",\n    \"2010\",\n    \"2011\",\n    \"2012\",\n    \"2013\",\n    \"2014\",\n    \"2015\",\n    \"2016\"\n  ].map(y => toDate(y))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/history-chart/date.js","import * as topojson from 'topojson'\nimport * as d3 from '../scripts/lib/d3.js'\n\nconst _data = d3.csvParse(require('raw!./munis_nrw.csv'))\nconst search = str => _data.filter(d => d.search.indexOf(str) > -1 || d.plz.indexOf(str) === 0)\nconst data = {}\n_data.map(d => data[d.ags] = d)\nconst geoSrc = require('json!./nrw.topo.json')\nconst geoData = topojson.feature(geoSrc, geoSrc.objects.nrw)\ngeoData.features.map(f => {\n  const id = f.properties.AGS\n  f.data = data[id]\n  f.data.name = f.properties.GEN\n  f.id = id\n})\n\nmodule.exports = {\n  search,\n  geoData\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/entry.js","// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 7\n// module chunks = 0","// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/build/d3-color.js\n// module id = 8\n// module chunks = 0","// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = 9\n// module chunks = 0","// https://d3js.org/d3-time/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = 10\n// module chunks = 0","import './districts-map/districts-map.tag'\nimport './districts-map/districts-map-legend.tag'\nimport './map-infobox/map-infobox.tag'\nimport './map-searchbox/map-searchbox.tag'\n\nriot.tag2('cor-mj-munis-map', '<map-searchbox ref=\"searchbox\"></map-searchbox> <map-infobox ref=\"infobox\" config=\"{opts.config}\"></map-infobox> <districts-map ref=\"districts-map\"></districts-map> <districts-map-legend ref=\"districts-map-legend\"></districts-map-legend>', '', 'class=\"{getClass(\\'app-wrapper\\')}\"', function(opts) {\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/app.tag","import getColor from './get_color.js'\n\nriot.tag2('districts-map-legend', '<span class=\"{getClass(\\'annotation\\')}\">Anteil der <strong>ausschließlich</strong> geringfügig Beschäftigten am Wohnort</span> <ul class=\"{getClass(\\'list\\')}\"> <li each=\"{ticks}\" class=\"{parent.getClass(\\'list-item\\')}\"> {value}&nbsp;%<span riot-style=\"background-color:{color};\"></span> </li> </ul>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.ticks = getColor.quantiles().map(q => {\n    return {\n      color: getColor(q),\n      value: Math.round(q * 10) / 10\n    }\n  })\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/districts-map-legend.tag","import * as d3 from '../../scripts/lib/d3.js'\nimport renderMap from './render_map.js'\nimport hilight from './hilight_path.js'\nimport unhilight from './unhilight_path.js'\n\nriot.tag2('districts-map', '<div class=\"{getClass(\\'svg-wrapper\\')}\" id=\"svg-map\"></div>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.on('mount', () => {\n    this.selection = renderMap({\n      element: d3.select('#svg-map'),\n      getClass: this.getClass\n    })\n  })\n\n  riot.control.on(riot.EVT.hilight, id => this.hilighted = hilight(this.selection, id, this.hilighted))\n  riot.control.on(riot.EVT.unhilight, () => unhilight(this.hilighted))\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/districts-map.tag","import initChart from './init_history_chart.js'\nimport drawLine from './draw_line.js'\nimport updateLine from './update_line.js'\nimport transformData from './transform_data.js'\n\nriot.tag2('history-chart', '', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.drawed = false  // identify if we already drawed a line\n\n  this.on('mount', () => {\n    this.chart = initChart({\n      element: this.root,\n      getClass: this.getClass,\n    }, this.opts.config)\n  })\n\n  this.on('update', () => {\n    const {g, line} = this.chart\n    const data = transformData(this.opts.data, this.opts.config.keys)\n    if (data) {\n      if (this.drawed) {\n        updateLine({g, line, data})\n      } else {\n        drawLine({g, line, data})\n        this.drawed = true\n      }\n    }\n  })\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/history-chart/history-chart.tag","import './history-chart/history-chart.tag'\n\nriot.tag2('map-infobox', '<button class=\"{getClass(\\'close-btn\\')}\" aria-label=\"Close\" onclick=\"{close}\"></button> <header class=\"{getClass(\\'header\\')}\"> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'state\\')}\">Nordrhein-Westfalen</span> <h3 class=\"{getClass(\\'title\\')}\">{data.name}</h3> </section> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'population\\')}\"><strong>{data.t}</strong>&nbsp;Einwohner</span> <span class=\"{getClass(\\'f-ratio\\')}\">davon <strong>{data.fRatio}&nbsp;%</strong>&nbsp;Frauen</span> </section> <span class=\"-clear-\"></span> </header> <section class=\"{getClass(\\'section\\')}\"> <h4 class=\"{getClass(\\'section__title\\')}\">Anteil der Minijobber</h4> <dl> <dt>{data.pwa}&nbsp;%</dt> <dt class=\"-small\">{data.wa}</dt> <dd class=\"badge badge--e\">ausschließlich</dd> </dl> <dl> <dt>{data.pwn}&nbsp;%</dt> <dt class=\"-small\">{data.wn}</dt> <dd class=\"badge badge--i\">Nebenjob</dd> </dl> <dl> <dt>{data.pwi}&nbsp;%</dt> <dt class=\"-small\">{data.wi}</dt> <dd class=\"badge badge--t\">Gesamt</dd> </dl> <span class=\"-clear-\"></span> </section> <section class=\"{getClass(\\'section\\') + \\' \\' + getClass(\\'section--last\\')}\"> <h4 class=\"{getClass(\\'section__title\\')}\">Entwicklung seit 2003</h4> <history-chart ref=\"history-chart\" config=\"{opts.config.historyChart}\" data=\"{data}\"></history-chart> </section> <span class=\"-clear-\"></span>', '', 'if=\"{data}\" class=\"{getClass()} {-visible: visible}\"', function(opts) {\n\n  this.visible = false\n  this.data = {}\n\n  riot.control.on(riot.EVT.updateInfobox, data => {\n    data.fRatio = Math.round(data.f / data.t * 1000) / 10\n    this.update({\n      data,\n      visible: true,\n    })\n  })\n\n  riot.control.on(riot.EVT.hideInfobox, () => {\n    this.close()\n  })\n\n  this.close = () => this.update({visible: false})\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/map-infobox.tag","import {search} from '../../data/entry.js'\n\nriot.tag2('map-searchbox', '<input type=\"text\" oninput=\"{doSearch}\" class=\"{getClass(\\'input\\')}\" placeholder=\"Suche nach Deiner Stadt oder Postleitzahl...\"> <ul if=\"{results.length}\" class=\"{getClass(\\'result-list\\')}\"> <li each=\"{results}\" class=\"{parent.getClass(\\'result-list__item\\')}\" onclick=\"{handleClick}\"> {name} <span>{plz}</span> </li> </ul>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.results = []\n\n  this.doSearch = e => {\n    riot.control.trigger(riot.EVT.hideInfobox)\n    const str = e.target.value.toLowerCase()\n    if (str.length > 1) {\n      const results = search(str)\n      if (results.length === 1) {\n        this.clearResults()\n        this._jumpTo(results[0])\n      } else {\n        this.update({results})\n      }\n    } else {\n      this.clearResults()\n    }\n  }\n\n  this.handleClick = e => {\n    this.clearResults()\n    this._jumpTo(e.item)\n  }\n\n  this.clearResults = () => {\n    this.update({results: []})\n  }\n\n  riot.control.on(riot.EVT.clearResults, () => {\n    this.clearResults()\n  })\n\n  this._jumpTo = data => {\n    riot.control.trigger(riot.EVT.updateInfobox, data)\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-searchbox/map-searchbox.tag","import unhilight from './unhilight_path.js'\n\nexport default (selection, id, hilighted) => {\n  hilighted && unhilight(hilighted)\n  const path = selection.select(function(d) {\n    return d.id === id && this\n  })\n  path.node().parentNode.appendChild(path.node())\n  path.classed('-hilight', true)\n  return path\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/hilight_path.js","import * as d3 from '../../scripts/lib/d3.js'\nimport {geoData} from '../../data/entry.js'\nimport getColor from './get_color.js'\n\nexport default ({\n  element,\n  getClass\n}) => {\n  const path = d3.geoPath().projection(d3.geoMercator().fitSize([600, 600], geoData))\n\n  return element.append('svg')\n      .attr('class', getClass('svg'))\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', '0 0 600 600')\n    .append('g')\n    .selectAll('path').data(geoData.features).enter().append('path')\n      .attr('class', getClass('path'))\n      .attr('d', path)\n      .attr('fill', d => getColor(+d.data.pwa))\n      .on('mouseover', d => {\n        riot.control.trigger(riot.EVT.hilight, d.id)\n        riot.control.trigger(riot.EVT.updateInfobox, d.data)\n      })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/render_map.js","export default ({g, line, data}) => {\n  g.selectAll('.line')\n      .data(data)\n    .enter().append('path')\n      .attr('class', d => `line line--${d.id}`)\n      .attr('d', d => line(d.values))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/history-chart/draw_line.js","import * as d3 from '../../../scripts/lib/d3.js'\nimport {toDate} from './date.js'\n\nexport default ({\n  element,\n  getClass\n}, {\n  width,\n  height,\n  margin,\n  xExtent,\n  yExtent,\n  yTickValues\n}) => {\n  const x = d3.scaleTime().rangeRound([0, width])\n    .domain([toDate(xExtent[0]), toDate(xExtent[1])])\n  const y = d3.scaleLinear().rangeRound([height, 0])\n    .domain(yExtent)\n\n  const line = d3.line()\n    .x(d => x(d.year))\n    .y(d => y(d.value))\n    .defined(d => !isNaN(d.value))\n    // .curve(d3.curveStep())\n\n  const {top, right, bottom, left} = margin\n\n  const g = d3.select(element).append('svg')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', `0 0 ${width + left + right} ${height + top + bottom}`)\n      .attr('class', getClass('svg'))\n    .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n\n  g.append('g')\n      .attr('class', 'axis axis--x')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x).ticks(6))\n\n  g.append('g')\n      .attr('class', 'axis axis--y')\n      .call(d3.axisLeft(y).tickValues(yTickValues))\n    .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '0.71em')\n      .style('text-anchor', 'end')\n      .text('Anteil in %')\n\n  return {g, line}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/history-chart/init_history_chart.js","import {years} from './date.js'\n\nexport default (data, keys) => {\n  if (Object.keys(data).length > 0 && keys) {\n    return keys.map(k => {\n      return {\n        id: k,\n        values: data[k].split(',').map((d, i) => {\n          return {\n            year: years[i],\n            value: +d\n          }\n        })\n      }\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/history-chart/transform_data.js","export default ({g, line, data}) => {\n  g.selectAll('path.line')\n      .data(data)\n      .attr('class', d => `line line--${d.id}`)\n      .attr('d', d => line(d.values))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/history-chart/update_line.js","'use strict'\n\nif (module.hot) {\n  module.hot.accept()\n}\n\n// import 'babel-polyfill'\nimport '../styles/index.scss'\n\n// load config\nconst config = require('json!../config.json')\n\n// event bus\nimport './riot_event_bus.js'\n\n// setup responsiveness\n// import {getWindowWidth, getActiveBreakpointFunc} from './responsive.js'\n// const getActiveBreakpoint = getActiveBreakpointFunc(config.global.breakpoints)\n// riot.STORE.breakpoint = getActiveBreakpoint(getWindowWidth())\n// riot.STORE.getActiveBreakpoint = getActiveBreakpoint\n\n// mixins\nimport getClass from './mixins/class_name.js'\nriot.mixin(getClass(config.global.cssNamespace))\n\n// mount app\nimport '../components/app.tag'\nriot.mount('[data-riot-mount=\"cor-mj-munis-map-nrw\"]', 'cor-mj-munis-map', {config})\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/index.js","// riot mixin for computing class names\n//\n// it takes a global `cssNamespace` on init that becomes prefix for all classes.\n//\n// components can have the `ref`-attribute set to append this (say, the name for this component) to the\n// global prefix\n//\n// components then have `this.getClass` that computes the acutal class name for something, e.g:\n//    global namespace is 'foo', components ref-attr is 'bar', then\n//      `getClass('title')` results in a class named 'foo-bar__title'\n//     if ref is undefined, `getClass('title')` becomes 'foo-title'\n\nexport default cssNamespace => {\n  return {\n    getClass: function(name) {\n      const ref = this.opts.ref\n      const part = ref ? `${cssNamespace}-${ref}` : false\n      return name ?\n        part ? `${part}__${name}` : `${cssNamespace}-${name}`\n        : part\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mixins/class_name.js","import * as d3 from './lib/d3.js'\n\n// store\n// const S = {\n//   supported: false,\n//   mapbox: {\n//     map: null,\n//     containerWidth: null\n//   },\n//   breakpoint: null,\n//   getActiveBreakpoint: null\n// }\n\n// event names\nconst E = {\n  // mapMouseOver: 'mmo',\n  // mapJumpTo: 'mjt',\n  // mapClearMarker: 'mcm',\n  updateInfobox: 'uib',\n  hideInfobox: 'hib',\n  clearResults: 'cr',\n  // windowResize: 'wr',\n  // breakpointChanged: 'bc',\n  // loaded: 'l',\n  // unsupported: 'us'\n}\n\n// event bus\nconst C = riot.observable()\n\n// mouseover event chaining\n// C.on(E.mapMouseOver, data => {\n//   // C.trigger(E.clearResults)  FIXME\n//   C.trigger(E.updateInfobox, data)\n//   C.trigger(E.mapClearMarker)\n// })\n\n// trigger actual breakpoint\n// C.on(E.windowResize, width => {\n//   const bp = S.getActiveBreakpoint(width)\n//   if (S.breakpoint !== bp) {\n//     S.breakpoint = bp\n//     C.trigger(E.breakpointChanged, bp)\n//   }\n// })\n\n// unsupported extra data loading\n// C.on(E.unsupported, () => {\n//   d3.csv('./data/unsupported_data.csv', data => {\n//     S.unsupportedData = {}\n//     data.map(d => {\n//       S.unsupportedData[d.ags] = d\n//     })\n//     C.trigger(E.unsupportedDataLoaded)\n//   })\n\n//   // forward jumpto event to infobox\n//   C.on(E.mapJumpTo, ({data}) => {\n//     const _data = S.unsupportedData[data.ags]\n//     _data.gen = data.name\n//     _data.s = data.state\n//     C.trigger(E.updateInfobox, {\n//       data: _data,\n//       point: {}\n//     })\n//    })\n// })\n\n// make available\n// riot.STORE = S\nriot.EVT = E\nriot.control = C\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/riot_event_bus.js","// https://d3js.org/d3-axis/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar identity = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-axis/build/d3-axis.js\n// module id = 26\n// module chunks = 0","// https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-collection/build/d3-collection.js\n// module id = 27\n// module chunks = 0","// https://d3js.org/d3-dsv/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-dsv/build/d3-dsv.js\n// module id = 28\n// module chunks = 0","// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 29\n// module chunks = 0","// https://d3js.org/d3-geo/ Version 1.6.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range$$1, x) {\n  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nvar circle = function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$1 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoPath = index;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$1;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-geo/build/d3-geo.js\n// module id = 30\n// module chunks = 0","// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb$1 = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = d3Color.rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar number = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar string = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar value = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n      : b instanceof d3Color.color ? rgb$1\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n};\n\nvar round = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar zoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb$1;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/build/d3-interpolate.js\n// module id = 31\n// module chunks = 0","// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-path/build/d3-path.js\n// module id = 32\n// module chunks = 0","// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = d3Array.tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-scale/build/d3-scale.js\n// module id = 33\n// module chunks = 0","// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-selection/build/d3-selection.js\n// module id = 34\n// module chunks = 0","// https://d3js.org/d3-shape/ Version 1.1.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nvar constant = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x,\n      y$$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending = function(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$1 = function(series) {\n  return ascending(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-shape/build/d3-shape.js\n// module id = 35\n// module chunks = 0","module.exports = {\n\t\"global\": {\n\t\t\"cssNamespace\": \"mjmmnrw\",\n\t\t\"breakpoints\": {\n\t\t\t\"small\": 600,\n\t\t\t\"medium\": 768,\n\t\t\t\"large\": 1280\n\t\t}\n\t},\n\t\"historyChart\": {\n\t\t\"keys\": [\n\t\t\t\"pwi_h\",\n\t\t\t\"pwa_h\",\n\t\t\t\"pwn_h\"\n\t\t],\n\t\t\"width\": 300,\n\t\t\"height\": 80,\n\t\t\"margin\": {\n\t\t\t\"top\": 10,\n\t\t\t\"right\": 20,\n\t\t\t\"bottom\": 20,\n\t\t\t\"left\": 20\n\t\t},\n\t\t\"xExtent\": [\n\t\t\t\"2003\",\n\t\t\t\"2016\"\n\t\t],\n\t\t\"yExtent\": [\n\t\t\t0,\n\t\t\t15\n\t\t],\n\t\t\"yTickValues\": [\n\t\t\t0,\n\t\t\t5,\n\t\t\t10,\n\t\t\t15\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/config.json\n// module id = 37\n// module chunks = 0","module.exports = {\n\t\"type\": \"Topology\",\n\t\"arcs\": [\n\t\t[\n\t\t\t[\n\t\t\t\t3529,\n\t\t\t\t1843\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3597,\n\t\t\t\t1778\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3703,\n\t\t\t\t1712\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-171\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3766,\n\t\t\t\t1502\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3530,\n\t\t\t\t1446\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t147\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3406,\n\t\t\t\t1593\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3292,\n\t\t\t\t1624\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3260,\n\t\t\t\t1672\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t150\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3291,\n\t\t\t\t1822\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3381,\n\t\t\t\t1867\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t105,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2161,\n\t\t\t\t2900\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-192\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-161\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2245,\n\t\t\t\t2459\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2207,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2078,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-137,\n\t\t\t\t161\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2010,\n\t\t\t\t2694\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2051,\n\t\t\t\t2791\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2132,\n\t\t\t\t2838\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2110,\n\t\t\t\t2910\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2111,\n\t\t\t\t2933\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5431,\n\t\t\t\t3450\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5484,\n\t\t\t\t3365\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5475,\n\t\t\t\t3307\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5447,\n\t\t\t\t3285\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5467,\n\t\t\t\t3225\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5542,\n\t\t\t\t3251\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5583,\n\t\t\t\t3222\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t-135\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5695,\n\t\t\t\t3087\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5658,\n\t\t\t\t3041\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5635,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5591,\n\t\t\t\t3128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-277,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-222,\n\t\t\t\t-160\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5092,\n\t\t\t\t2899\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5049,\n\t\t\t\t2897\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5033,\n\t\t\t\t2962\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5053,\n\t\t\t\t3028\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t224\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5127,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5104,\n\t\t\t\t3282\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t190,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5320,\n\t\t\t\t3391\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4152,\n\t\t\t\t3384\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4323,\n\t\t\t\t3295\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4248,\n\t\t\t\t3228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-149\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4147,\n\t\t\t\t3079\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4159,\n\t\t\t\t3071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4111,\n\t\t\t\t3096\n\t\t\t],\n\t\t\t[\n\t\t\t\t-158,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3953,\n\t\t\t\t3072\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3903,\n\t\t\t\t3094\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3918,\n\t\t\t\t3192\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3945,\n\t\t\t\t3235\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3979,\n\t\t\t\t3231\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3984,\n\t\t\t\t3290\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4008,\n\t\t\t\t3339\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4036,\n\t\t\t\t3390\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4053,\n\t\t\t\t3385\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4133,\n\t\t\t\t3415\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6602,\n\t\t\t\t5166\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6618,\n\t\t\t\t5206\n\t\t\t],\n\t\t\t[\n\t\t\t\t148,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6766,\n\t\t\t\t5109\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6814,\n\t\t\t\t5122\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-163,\n\t\t\t\t-135\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6627,\n\t\t\t\t4596\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6498,\n\t\t\t\t4552\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6440,\n\t\t\t\t4552\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t136\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t96\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6282,\n\t\t\t\t4949\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6303,\n\t\t\t\t5012\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t227,\n\t\t\t\t109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6532,\n\t\t\t\t5147\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6526,\n\t\t\t\t5177\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4697,\n\t\t\t\t7537\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4843,\n\t\t\t\t7512\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4947,\n\t\t\t\t7427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-149,\n\t\t\t\t-239\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4742,\n\t\t\t\t7165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-160,\n\t\t\t\t151\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4582,\n\t\t\t\t7316\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4537,\n\t\t\t\t7369\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4502,\n\t\t\t\t7391\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4450,\n\t\t\t\t7415\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t159\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4590,\n\t\t\t\t7574\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3721,\n\t\t\t\t5031\n\t\t\t],\n\t\t\t[\n\t\t\t\t129,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t150,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4131,\n\t\t\t\t5017\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4147,\n\t\t\t\t4990\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4214,\n\t\t\t\t4891\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4235,\n\t\t\t\t4866\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4231,\n\t\t\t\t4851\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4243,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4146,\n\t\t\t\t4719\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4174,\n\t\t\t\t4598\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4118,\n\t\t\t\t4542\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4086,\n\t\t\t\t4581\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4014,\n\t\t\t\t4526\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4006,\n\t\t\t\t4485\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3941,\n\t\t\t\t4409\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3927,\n\t\t\t\t4387\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3933,\n\t\t\t\t4351\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3829,\n\t\t\t\t4344\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3837,\n\t\t\t\t4409\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3707,\n\t\t\t\t4482\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3561,\n\t\t\t\t4617\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3534,\n\t\t\t\t4615\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3465,\n\t\t\t\t4772\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3516,\n\t\t\t\t4766\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3585,\n\t\t\t\t4796\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t156\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3603,\n\t\t\t\t5048\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3662,\n\t\t\t\t5034\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3671,\n\t\t\t\t5058\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3715,\n\t\t\t\t5083\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3733,\n\t\t\t\t5063\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1961,\n\t\t\t\t809\n\t\t\t],\n\t\t\t[\n\t\t\t\t162,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2107,\n\t\t\t\t611\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2055,\n\t\t\t\t499\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2002,\n\t\t\t\t475\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1976,\n\t\t\t\t529\n\t\t\t],\n\t\t\t[\n\t\t\t\t-264,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1711,\n\t\t\t\t424\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1695,\n\t\t\t\t422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1629,\n\t\t\t\t490\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1618,\n\t\t\t\t489\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t149\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1774,\n\t\t\t\t708\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1782,\n\t\t\t\t755\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1872,\n\t\t\t\t754\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1904,\n\t\t\t\t767\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6816,\n\t\t\t\t5883\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6903,\n\t\t\t\t5895\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t146,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7227,\n\t\t\t\t5716\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7273,\n\t\t\t\t5739\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7291,\n\t\t\t\t5626\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7266,\n\t\t\t\t5447\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7238,\n\t\t\t\t5419\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7212,\n\t\t\t\t5403\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7104,\n\t\t\t\t5451\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7076,\n\t\t\t\t5471\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7054,\n\t\t\t\t5458\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7026,\n\t\t\t\t5406\n\t\t\t],\n\t\t\t[\n\t\t\t\t-181,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6758,\n\t\t\t\t5359\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6696,\n\t\t\t\t5307\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6684,\n\t\t\t\t5339\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6706,\n\t\t\t\t5349\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6700,\n\t\t\t\t5423\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6713,\n\t\t\t\t5527\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6668,\n\t\t\t\t5597\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t200\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6762,\n\t\t\t\t5853\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6755,\n\t\t\t\t5861\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1541,\n\t\t\t\t1266\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1651,\n\t\t\t\t1293\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1686,\n\t\t\t\t1216\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1644,\n\t\t\t\t1160\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1620,\n\t\t\t\t1049\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1599,\n\t\t\t\t1080\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-167,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1312,\n\t\t\t\t1133\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1274,\n\t\t\t\t1077\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1248,\n\t\t\t\t1125\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1251,\n\t\t\t\t1157\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1278,\n\t\t\t\t1170\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1303,\n\t\t\t\t1250\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1384,\n\t\t\t\t1304\n\t\t\t],\n\t\t\t[\n\t\t\t\t157,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2693,\n\t\t\t\t5064\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-177\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2731,\n\t\t\t\t4814\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2703,\n\t\t\t\t4818\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2659,\n\t\t\t\t4867\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2609,\n\t\t\t\t4876\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2542,\n\t\t\t\t4934\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2658,\n\t\t\t\t5108\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t5179\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2700,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1650,\n\t\t\t\t2175\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1770,\n\t\t\t\t2015\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1776,\n\t\t\t\t1959\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1605,\n\t\t\t\t1887\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1560,\n\t\t\t\t1937\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1518,\n\t\t\t\t2071\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1537,\n\t\t\t\t2086\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1552,\n\t\t\t\t2165\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1587,\n\t\t\t\t2233\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1324,\n\t\t\t\t5968\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1311,\n\t\t\t\t5956\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1315,\n\t\t\t\t5914\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1339,\n\t\t\t\t5903\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1477,\n\t\t\t\t5937\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-148\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1474,\n\t\t\t\t5571\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1405,\n\t\t\t\t5496\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1305,\n\t\t\t\t5537\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1313,\n\t\t\t\t5651\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1024,\n\t\t\t\t5913\n\t\t\t],\n\t\t\t[\n\t\t\t\t210,\n\t\t\t\t113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1234,\n\t\t\t\t6026\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3788,\n\t\t\t\t5304\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3777,\n\t\t\t\t5275\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3822,\n\t\t\t\t5241\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3812,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3759,\n\t\t\t\t5115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3662,\n\t\t\t\t5034\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3603,\n\t\t\t\t5048\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3530,\n\t\t\t\t5084\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3536,\n\t\t\t\t5105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3480,\n\t\t\t\t5151\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3488,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3498,\n\t\t\t\t5176\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3564,\n\t\t\t\t5181\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3714,\n\t\t\t\t5336\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2368,\n\t\t\t\t1717\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t1705\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2454,\n\t\t\t\t1644\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2474,\n\t\t\t\t1632\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2503,\n\t\t\t\t1595\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2453,\n\t\t\t\t1546\n\t\t\t],\n\t\t\t[\n\t\t\t\t-130,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t1469\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2251,\n\t\t\t\t1463\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2235,\n\t\t\t\t1424\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2127,\n\t\t\t\t1419\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t151\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2232,\n\t\t\t\t1647\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2221,\n\t\t\t\t1655\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2258,\n\t\t\t\t1715\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2333,\n\t\t\t\t1741\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2368,\n\t\t\t\t1815\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2394,\n\t\t\t\t1782\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2559,\n\t\t\t\t1587\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2555,\n\t\t\t\t1567\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2606,\n\t\t\t\t1515\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2653,\n\t\t\t\t1447\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2699,\n\t\t\t\t1350\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t1329\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-158,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2462,\n\t\t\t\t1198\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2398,\n\t\t\t\t1244\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t174\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2355,\n\t\t\t\t1424\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2503,\n\t\t\t\t1595\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6683,\n\t\t\t\t7708\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6769,\n\t\t\t\t7634\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6764,\n\t\t\t\t7615\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6719,\n\t\t\t\t7541\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6726,\n\t\t\t\t7493\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6751,\n\t\t\t\t7494\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6671,\n\t\t\t\t7398\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6655,\n\t\t\t\t7426\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6605,\n\t\t\t\t7426\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6594,\n\t\t\t\t7650\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6611,\n\t\t\t\t7733\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4537,\n\t\t\t\t7369\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4742,\n\t\t\t\t7165\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4754,\n\t\t\t\t7104\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4757,\n\t\t\t\t7079\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4676,\n\t\t\t\t7076\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4430,\n\t\t\t\t7155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4419,\n\t\t\t\t7141\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t166\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4396,\n\t\t\t\t7408\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2167,\n\t\t\t\t1532\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2136,\n\t\t\t\t1433\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2061,\n\t\t\t\t1460\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-190\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2022,\n\t\t\t\t1270\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1946,\n\t\t\t\t1240\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-132,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1705,\n\t\t\t\t1228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1686,\n\t\t\t\t1216\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1661,\n\t\t\t\t1281\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1733,\n\t\t\t\t1428\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1722,\n\t\t\t\t1455\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t131\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t141\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1983,\n\t\t\t\t1657\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1968,\n\t\t\t\t1674\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t128,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4757,\n\t\t\t\t7079\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4793,\n\t\t\t\t7048\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4886,\n\t\t\t\t6828\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4822,\n\t\t\t\t6705\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4797,\n\t\t\t\t6711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-146,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t115\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4525,\n\t\t\t\t6952\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4453,\n\t\t\t\t6950\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4520,\n\t\t\t\t7089\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2939,\n\t\t\t\t7429\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2772,\n\t\t\t\t7245\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2745,\n\t\t\t\t7260\n\t\t\t],\n\t\t\t[\n\t\t\t\t-151,\n\t\t\t\t163\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2594,\n\t\t\t\t7423\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t183\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-167\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3847,\n\t\t\t\t5630\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3872,\n\t\t\t\t5606\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3858,\n\t\t\t\t5581\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3989,\n\t\t\t\t5506\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3993,\n\t\t\t\t5459\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4018,\n\t\t\t\t5451\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4022,\n\t\t\t\t5431\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4010,\n\t\t\t\t5342\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4014,\n\t\t\t\t5271\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3907,\n\t\t\t\t5267\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3856,\n\t\t\t\t5293\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3855,\n\t\t\t\t5278\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3788,\n\t\t\t\t5304\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3694,\n\t\t\t\t5345\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3767,\n\t\t\t\t5387\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3786,\n\t\t\t\t5431\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3722,\n\t\t\t\t5527\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3730,\n\t\t\t\t5553\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3789,\n\t\t\t\t5589\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3164,\n\t\t\t\t5980\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t5823\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3331,\n\t\t\t\t5784\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3482,\n\t\t\t\t5636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3393,\n\t\t\t\t5571\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3309,\n\t\t\t\t5515\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3300,\n\t\t\t\t5500\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3259,\n\t\t\t\t5500\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3188,\n\t\t\t\t5481\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3189,\n\t\t\t\t5495\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t5554\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3036,\n\t\t\t\t5549\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2927,\n\t\t\t\t5514\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2821,\n\t\t\t\t5488\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2895,\n\t\t\t\t5543\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2898,\n\t\t\t\t5588\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2921,\n\t\t\t\t5617\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t159\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2910,\n\t\t\t\t5776\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2891,\n\t\t\t\t5811\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3029,\n\t\t\t\t5907\n\t\t\t],\n\t\t\t[\n\t\t\t\t135,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6702,\n\t\t\t\t4603\n\t\t\t],\n\t\t\t[\n\t\t\t\t156,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6933,\n\t\t\t\t4544\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6946,\n\t\t\t\t4494\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t-247\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6811,\n\t\t\t\t4247\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t-211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t-173\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6475,\n\t\t\t\t3951\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t99\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t125\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6272,\n\t\t\t\t4287\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6266,\n\t\t\t\t4312\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6249,\n\t\t\t\t4363\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t196,\n\t\t\t\t121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6498,\n\t\t\t\t4552\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1340,\n\t\t\t\t2092\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1352,\n\t\t\t\t2047\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1443,\n\t\t\t\t2062\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1462,\n\t\t\t\t2046\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1560,\n\t\t\t\t1937\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1568,\n\t\t\t\t1877\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1550,\n\t\t\t\t1809\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1542,\n\t\t\t\t1765\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1402,\n\t\t\t\t1625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1374,\n\t\t\t\t1663\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1281,\n\t\t\t\t1755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1261,\n\t\t\t\t1794\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1226,\n\t\t\t\t1976\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1242,\n\t\t\t\t2020\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1297,\n\t\t\t\t2067\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3331,\n\t\t\t\t3928\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3319,\n\t\t\t\t3828\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3349,\n\t\t\t\t3815\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3376,\n\t\t\t\t3764\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3396,\n\t\t\t\t3673\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3423,\n\t\t\t\t3660\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3449,\n\t\t\t\t3614\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3431,\n\t\t\t\t3513\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3405,\n\t\t\t\t3513\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3347,\n\t\t\t\t3509\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3328,\n\t\t\t\t3551\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3298,\n\t\t\t\t3573\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3270,\n\t\t\t\t3575\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3198,\n\t\t\t\t3521\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3175,\n\t\t\t\t3538\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3106,\n\t\t\t\t3517\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3076,\n\t\t\t\t3370\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3000,\n\t\t\t\t3379\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2973,\n\t\t\t\t3431\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2930,\n\t\t\t\t3554\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2820,\n\t\t\t\t3503\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2832,\n\t\t\t\t3603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2762,\n\t\t\t\t3653\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2743,\n\t\t\t\t3653\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2783,\n\t\t\t\t3665\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2846,\n\t\t\t\t3698\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2905,\n\t\t\t\t3795\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2940,\n\t\t\t\t3852\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2986,\n\t\t\t\t3895\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3110,\n\t\t\t\t3928\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3116,\n\t\t\t\t3868\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3143,\n\t\t\t\t3874\n\t\t\t],\n\t\t\t[\n\t\t\t\t105,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3248,\n\t\t\t\t3912\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7385,\n\t\t\t\t7760\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7443,\n\t\t\t\t7750\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7465,\n\t\t\t\t7768\n\t\t\t],\n\t\t\t[\n\t\t\t\t145,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-143,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7497,\n\t\t\t\t7482\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7509,\n\t\t\t\t7443\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7464,\n\t\t\t\t7444\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7433,\n\t\t\t\t7429\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7355,\n\t\t\t\t7441\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7345,\n\t\t\t\t7454\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7307,\n\t\t\t\t7466\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7278,\n\t\t\t\t7477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7227,\n\t\t\t\t7489\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7201,\n\t\t\t\t7478\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7198,\n\t\t\t\t7695\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7221,\n\t\t\t\t7702\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7257,\n\t\t\t\t7692\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t76\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7354,\n\t\t\t\t7782\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1057,\n\t\t\t\t4608\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1075,\n\t\t\t\t4527\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1065,\n\t\t\t\t4441\n\t\t\t],\n\t\t\t[\n\t\t\t\t-125,\n\t\t\t\t-208\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t940,\n\t\t\t\t4233\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t913,\n\t\t\t\t4127\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t836,\n\t\t\t\t4138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t139\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t304\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t864,\n\t\t\t\t4615\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4930,\n\t\t\t\t8172\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-158\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-153\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4867,\n\t\t\t\t7813\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4838,\n\t\t\t\t7721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4740,\n\t\t\t\t7755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4699,\n\t\t\t\t7804\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4655,\n\t\t\t\t7817\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4678,\n\t\t\t\t8019\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4666,\n\t\t\t\t8086\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4623,\n\t\t\t\t8119\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4636,\n\t\t\t\t8166\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4669,\n\t\t\t\t8193\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1305,\n\t\t\t\t5537\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-116\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1451,\n\t\t\t\t5360\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1500,\n\t\t\t\t5235\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1544,\n\t\t\t\t5215\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1478,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1486,\n\t\t\t\t5146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1457,\n\t\t\t\t5139\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1438,\n\t\t\t\t5200\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1380,\n\t\t\t\t5208\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1366,\n\t\t\t\t5199\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1306,\n\t\t\t\t5231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1219,\n\t\t\t\t5304\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1193,\n\t\t\t\t5381\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1211,\n\t\t\t\t5417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1154,\n\t\t\t\t5499\n\t\t\t],\n\t\t\t[\n\t\t\t\t132,\n\t\t\t\t155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1265,\n\t\t\t\t5693\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2055,\n\t\t\t\t499\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-102\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-115,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1748,\n\t\t\t\t250\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t174\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1976,\n\t\t\t\t529\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2664,\n\t\t\t\t3250\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2697,\n\t\t\t\t3248\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-124\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2681,\n\t\t\t\t2969\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2611,\n\t\t\t\t2958\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2560,\n\t\t\t\t2958\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2516,\n\t\t\t\t3092\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2489,\n\t\t\t\t3146\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2527,\n\t\t\t\t3217\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2588,\n\t\t\t\t3259\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2618,\n\t\t\t\t3246\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3479,\n\t\t\t\t1373\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3533,\n\t\t\t\t1342\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-186,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3189,\n\t\t\t\t1304\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t155,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3403,\n\t\t\t\t1354\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7104,\n\t\t\t\t5451\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7185,\n\t\t\t\t5383\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-163\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7157,\n\t\t\t\t5220\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7088,\n\t\t\t\t5200\n\t\t\t],\n\t\t\t[\n\t\t\t\t-149,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6939,\n\t\t\t\t5140\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6888,\n\t\t\t\t5113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6876,\n\t\t\t\t5126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6840,\n\t\t\t\t5209\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6824,\n\t\t\t\t5204\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6787,\n\t\t\t\t5272\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6765,\n\t\t\t\t5292\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7026,\n\t\t\t\t5406\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7076,\n\t\t\t\t5471\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1262,\n\t\t\t\t702\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1286,\n\t\t\t\t669\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1323,\n\t\t\t\t663\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1341,\n\t\t\t\t679\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1415,\n\t\t\t\t663\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t678\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1502,\n\t\t\t\t662\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1486,\n\t\t\t\t620\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1540,\n\t\t\t\t570\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1512,\n\t\t\t\t512\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1602,\n\t\t\t\t487\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1597,\n\t\t\t\t478\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1695,\n\t\t\t\t422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1632,\n\t\t\t\t409\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-181,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1346,\n\t\t\t\t311\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t138\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1055,\n\t\t\t\t639\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1089,\n\t\t\t\t672\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1134,\n\t\t\t\t681\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1230,\n\t\t\t\t708\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6760,\n\t\t\t\t3201\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-134,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6594,\n\t\t\t\t3335\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6580,\n\t\t\t\t3396\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6547,\n\t\t\t\t3447\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6535,\n\t\t\t\t3546\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6560,\n\t\t\t\t3663\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t226,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-306\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-130,\n\t\t\t\t-141\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5113,\n\t\t\t\t5384\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5135,\n\t\t\t\t5367\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-142\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5218,\n\t\t\t\t5225\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5307,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5328,\n\t\t\t\t5182\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5314,\n\t\t\t\t5181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-135\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5185,\n\t\t\t\t4961\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5099,\n\t\t\t\t4941\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4923,\n\t\t\t\t5011\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4912,\n\t\t\t\t5068\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4905,\n\t\t\t\t5140\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t98\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t139\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5884,\n\t\t\t\t2691\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5942,\n\t\t\t\t2649\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5913,\n\t\t\t\t2572\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5898,\n\t\t\t\t2584\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5892,\n\t\t\t\t2609\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5779,\n\t\t\t\t2545\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5719,\n\t\t\t\t2432\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5668,\n\t\t\t\t2374\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5639,\n\t\t\t\t2424\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5629,\n\t\t\t\t2448\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5635,\n\t\t\t\t2558\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5640,\n\t\t\t\t2630\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5590,\n\t\t\t\t2701\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5573,\n\t\t\t\t2748\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5637,\n\t\t\t\t2755\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5654,\n\t\t\t\t2781\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5700,\n\t\t\t\t2875\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2600,\n\t\t\t\t2002\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2660,\n\t\t\t\t2025\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2658,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2779,\n\t\t\t\t1863\n\t\t\t],\n\t\t\t[\n\t\t\t\t-173,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2606,\n\t\t\t\t1876\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2549,\n\t\t\t\t1903\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2561,\n\t\t\t\t1908\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2541,\n\t\t\t\t2011\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2578,\n\t\t\t\t2044\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4231,\n\t\t\t\t6879\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4359,\n\t\t\t\t6832\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4445,\n\t\t\t\t6827\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-162\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4554,\n\t\t\t\t6440\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4559,\n\t\t\t\t6375\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4536,\n\t\t\t\t6286\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4472,\n\t\t\t\t6289\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4440,\n\t\t\t\t6315\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4365,\n\t\t\t\t6304\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-132\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4395,\n\t\t\t\t6172\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4347,\n\t\t\t\t6202\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4244,\n\t\t\t\t6164\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4268,\n\t\t\t\t6151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4228,\n\t\t\t\t6109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4196,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4155,\n\t\t\t\t6067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t132\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t172\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3937,\n\t\t\t\t6439\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3865,\n\t\t\t\t6503\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3935,\n\t\t\t\t6577\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3942,\n\t\t\t\t6696\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3959,\n\t\t\t\t6699\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3946,\n\t\t\t\t6747\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3990,\n\t\t\t\t6829\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4083,\n\t\t\t\t6896\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4194,\n\t\t\t\t6917\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2928,\n\t\t\t\t2772\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2955,\n\t\t\t\t2756\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2996,\n\t\t\t\t2709\n\t\t\t],\n\t\t\t[\n\t\t\t\t190,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3186,\n\t\t\t\t2740\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3268,\n\t\t\t\t2633\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3310,\n\t\t\t\t2618\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3181,\n\t\t\t\t2461\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3142,\n\t\t\t\t2394\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3043,\n\t\t\t\t2343\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3036,\n\t\t\t\t2375\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2986,\n\t\t\t\t2430\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2915,\n\t\t\t\t2497\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2856,\n\t\t\t\t2721\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3115,\n\t\t\t\t3113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t3084\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-156\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2987,\n\t\t\t\t2920\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2951,\n\t\t\t\t2931\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2872,\n\t\t\t\t2940\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2886,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t157,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t3145\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5780,\n\t\t\t\t4748\n\t\t\t],\n\t\t\t[\n\t\t\t\t150,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5930,\n\t\t\t\t4738\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5979,\n\t\t\t\t4642\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-233\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6108,\n\t\t\t\t4360\n\t\t\t],\n\t\t\t[\n\t\t\t\t-136,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5972,\n\t\t\t\t4269\n\t\t\t],\n\t\t\t[\n\t\t\t\t-133,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5673,\n\t\t\t\t4305\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5605,\n\t\t\t\t4366\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t314\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5674,\n\t\t\t\t4739\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5691,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3850,\n\t\t\t\t1915\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3850,\n\t\t\t\t1901\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-120\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-150\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3953,\n\t\t\t\t1631\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3996,\n\t\t\t\t1620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-132,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3703,\n\t\t\t\t1712\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3653,\n\t\t\t\t1829\n\t\t\t],\n\t\t\t[\n\t\t\t\t171,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3824,\n\t\t\t\t1933\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4111,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4249,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4263,\n\t\t\t\t1989\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-151,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-112\n\t\t\t],\n\t\t\t[\n\t\t\t\t-118,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3996,\n\t\t\t\t1620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3850,\n\t\t\t\t1901\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3850,\n\t\t\t\t1915\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3849,\n\t\t\t\t1931\n\t\t\t],\n\t\t\t[\n\t\t\t\t133,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3982,\n\t\t\t\t1995\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3982,\n\t\t\t\t1987\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4062,\n\t\t\t\t2026\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1505,\n\t\t\t\t3614\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1542,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1554,\n\t\t\t\t3576\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-137\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1554,\n\t\t\t\t3328\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1565,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1483,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1433,\n\t\t\t\t3206\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1420,\n\t\t\t\t3192\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1429,\n\t\t\t\t3117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1369,\n\t\t\t\t3118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1307,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1164,\n\t\t\t\t3052\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1149,\n\t\t\t\t3108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1135,\n\t\t\t\t3149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t193\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1004,\n\t\t\t\t3342\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t997,\n\t\t\t\t3374\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1091,\n\t\t\t\t3498\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1091,\n\t\t\t\t3571\n\t\t\t],\n\t\t\t[\n\t\t\t\t203,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1399,\n\t\t\t\t3666\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5400,\n\t\t\t\t1836\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5411,\n\t\t\t\t1820\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t-219\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-162\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-144,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5144,\n\t\t\t\t1640\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5301,\n\t\t\t\t1773\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5308,\n\t\t\t\t1849\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5330,\n\t\t\t\t1846\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4999,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-194\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4954,\n\t\t\t\t2125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4940,\n\t\t\t\t2041\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t175\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4760,\n\t\t\t\t2367\n\t\t\t],\n\t\t\t[\n\t\t\t\t145,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4905,\n\t\t\t\t2363\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4970,\n\t\t\t\t2387\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8213,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8191,\n\t\t\t\t6153\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8098,\n\t\t\t\t6157\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8110,\n\t\t\t\t6246\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8034,\n\t\t\t\t6274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8015,\n\t\t\t\t6359\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8031,\n\t\t\t\t6432\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-119\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-163\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1205,\n\t\t\t\t3894\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1229,\n\t\t\t\t3898\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1321,\n\t\t\t\t3788\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1287,\n\t\t\t\t3771\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1091,\n\t\t\t\t3571\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1091,\n\t\t\t\t3539\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t982,\n\t\t\t\t3707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t930,\n\t\t\t\t3748\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t941,\n\t\t\t\t3795\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1052,\n\t\t\t\t3828\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1064,\n\t\t\t\t3923\n\t\t\t],\n\t\t\t[\n\t\t\t\t127,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1191,\n\t\t\t\t3968\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t870,\n\t\t\t\t6003\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t863,\n\t\t\t\t5918\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t884,\n\t\t\t\t5875\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t573,\n\t\t\t\t5657\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t548,\n\t\t\t\t5668\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-122,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t406,\n\t\t\t\t5669\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t436,\n\t\t\t\t5746\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t210\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t388,\n\t\t\t\t6045\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t110\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t132,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1091,\n\t\t\t\t3539\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t997,\n\t\t\t\t3374\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t939,\n\t\t\t\t3393\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t832,\n\t\t\t\t3519\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t826,\n\t\t\t\t3603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t801,\n\t\t\t\t3626\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t868,\n\t\t\t\t3660\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t907,\n\t\t\t\t3711\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t930,\n\t\t\t\t3748\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5205,\n\t\t\t\t2733\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5204,\n\t\t\t\t2714\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5245,\n\t\t\t\t2564\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5290,\n\t\t\t\t2520\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5221,\n\t\t\t\t2483\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5221,\n\t\t\t\t2464\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5175,\n\t\t\t\t2412\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5040,\n\t\t\t\t2445\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4996,\n\t\t\t\t2433\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4961,\n\t\t\t\t2408\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4926,\n\t\t\t\t2418\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4957,\n\t\t\t\t2630\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t153\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5046,\n\t\t\t\t2783\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5092,\n\t\t\t\t2789\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5173,\n\t\t\t\t2838\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t563,\n\t\t\t\t2284\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t645,\n\t\t\t\t2230\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t606,\n\t\t\t\t2219\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t620,\n\t\t\t\t2172\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t603,\n\t\t\t\t2091\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t578,\n\t\t\t\t2040\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t546,\n\t\t\t\t2058\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t509,\n\t\t\t\t2052\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t535,\n\t\t\t\t2003\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t557,\n\t\t\t\t1970\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t557,\n\t\t\t\t1933\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t548,\n\t\t\t\t1913\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t132\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t435,\n\t\t\t\t2027\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t219,\n\t\t\t\t2860\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t229,\n\t\t\t\t2812\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t191,\n\t\t\t\t2606\n\t\t\t],\n\t\t\t[\n\t\t\t\t-145,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t110\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-127\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t577,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t700,\n\t\t\t\t2890\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t811,\n\t\t\t\t2754\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t789,\n\t\t\t\t2718\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t607,\n\t\t\t\t2711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t546,\n\t\t\t\t2659\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t509,\n\t\t\t\t2668\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t490,\n\t\t\t\t2656\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t433,\n\t\t\t\t2766\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t426,\n\t\t\t\t2887\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t98\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t442,\n\t\t\t\t3063\n\t\t\t],\n\t\t\t[\n\t\t\t\t135,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t927,\n\t\t\t\t2425\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t933,\n\t\t\t\t2364\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t955,\n\t\t\t\t2355\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t965,\n\t\t\t\t2328\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t988,\n\t\t\t\t2349\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1031,\n\t\t\t\t2323\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1074,\n\t\t\t\t2222\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1070,\n\t\t\t\t2135\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1016,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t954,\n\t\t\t\t2157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t879,\n\t\t\t\t2154\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t849,\n\t\t\t\t2116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t822,\n\t\t\t\t2207\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t777,\n\t\t\t\t2273\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t846,\n\t\t\t\t2347\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3415,\n\t\t\t\t2986\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3486,\n\t\t\t\t2882\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3492,\n\t\t\t\t2856\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3441,\n\t\t\t\t2773\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3409,\n\t\t\t\t2796\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3392,\n\t\t\t\t2729\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3370,\n\t\t\t\t2719\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3186,\n\t\t\t\t2740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t141\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3177,\n\t\t\t\t2931\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3217,\n\t\t\t\t2956\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3921,\n\t\t\t\t3563\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4018,\n\t\t\t\t3599\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4052,\n\t\t\t\t3473\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4083,\n\t\t\t\t3476\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4109,\n\t\t\t\t3443\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4036,\n\t\t\t\t3390\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3984,\n\t\t\t\t3290\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3945,\n\t\t\t\t3235\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3895,\n\t\t\t\t3170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3869,\n\t\t\t\t3234\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3853,\n\t\t\t\t3243\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3751,\n\t\t\t\t3396\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3720,\n\t\t\t\t3427\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3744,\n\t\t\t\t3492\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3781,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3864,\n\t\t\t\t3605\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3899,\n\t\t\t\t3633\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4680,\n\t\t\t\t3694\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4922,\n\t\t\t\t3674\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4955,\n\t\t\t\t3656\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4986,\n\t\t\t\t3608\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4890,\n\t\t\t\t3368\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4841,\n\t\t\t\t3324\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4794,\n\t\t\t\t3355\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4682,\n\t\t\t\t3292\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4655,\n\t\t\t\t3281\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t152\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4569,\n\t\t\t\t3555\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4554,\n\t\t\t\t3610\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4625,\n\t\t\t\t3672\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6484,\n\t\t\t\t8682\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t-127\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6456,\n\t\t\t\t8300\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6445,\n\t\t\t\t8256\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6366,\n\t\t\t\t8157\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6380,\n\t\t\t\t8131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6328,\n\t\t\t\t8128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6297,\n\t\t\t\t8147\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6208,\n\t\t\t\t8177\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6196,\n\t\t\t\t8153\n\t\t\t],\n\t\t\t[\n\t\t\t\t-321,\n\t\t\t\t181\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t122\n\t\t\t],\n\t\t\t[\n\t\t\t\t150,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t170,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t124\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1677,\n\t\t\t\t3280\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1708,\n\t\t\t\t3277\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1694,\n\t\t\t\t3190\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1640,\n\t\t\t\t3093\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1547,\n\t\t\t\t3012\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1585,\n\t\t\t\t2972\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1546,\n\t\t\t\t2902\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1480,\n\t\t\t\t2857\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1453,\n\t\t\t\t2804\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1445,\n\t\t\t\t2893\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1403,\n\t\t\t\t2914\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1386,\n\t\t\t\t2907\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1381,\n\t\t\t\t3030\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1429,\n\t\t\t\t3117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1433,\n\t\t\t\t3206\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1565,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t3232\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1810,\n\t\t\t\t3284\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2006,\n\t\t\t\t3201\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2019,\n\t\t\t\t3144\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1984,\n\t\t\t\t3129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1942,\n\t\t\t\t3115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1899,\n\t\t\t\t3069\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-123\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1832,\n\t\t\t\t2774\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1691,\n\t\t\t\t2739\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t166\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1584,\n\t\t\t\t2905\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1547,\n\t\t\t\t3012\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1640,\n\t\t\t\t3093\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1708,\n\t\t\t\t3277\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1726,\n\t\t\t\t3276\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1765,\n\t\t\t\t3267\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t794,\n\t\t\t\t1865\n\t\t\t],\n\t\t\t[\n\t\t\t\t127,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1005,\n\t\t\t\t1792\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1052,\n\t\t\t\t1747\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1152,\n\t\t\t\t1708\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1176,\n\t\t\t\t1694\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-189\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1049,\n\t\t\t\t1419\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t946,\n\t\t\t\t1396\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t870,\n\t\t\t\t1479\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t817,\n\t\t\t\t1451\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t157\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t754,\n\t\t\t\t1845\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t753,\n\t\t\t\t1876\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2446,\n\t\t\t\t4163\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2524,\n\t\t\t\t4105\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2531,\n\t\t\t\t4067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2509,\n\t\t\t\t4043\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-186\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2589,\n\t\t\t\t3857\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2663,\n\t\t\t\t3876\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2660,\n\t\t\t\t3855\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2563,\n\t\t\t\t3809\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t3766\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2397,\n\t\t\t\t3761\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2348,\n\t\t\t\t3779\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t282\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2237,\n\t\t\t\t4073\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2268,\n\t\t\t\t4089\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2299,\n\t\t\t\t4082\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2345,\n\t\t\t\t4119\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3380,\n\t\t\t\t6300\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t132,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t161,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3733,\n\t\t\t\t6202\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3738,\n\t\t\t\t6157\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-138\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3752,\n\t\t\t\t6019\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3720,\n\t\t\t\t5955\n\t\t\t],\n\t\t\t[\n\t\t\t\t-192,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3387,\n\t\t\t\t5833\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3164,\n\t\t\t\t5980\n\t\t\t],\n\t\t\t[\n\t\t\t\t-156,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3008,\n\t\t\t\t6019\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2948,\n\t\t\t\t6077\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t201,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3338,\n\t\t\t\t6401\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3366,\n\t\t\t\t6333\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2729,\n\t\t\t\t4095\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2731,\n\t\t\t\t4008\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2691,\n\t\t\t\t3972\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t3917\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2663,\n\t\t\t\t3876\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2509,\n\t\t\t\t4043\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2584,\n\t\t\t\t4081\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2677,\n\t\t\t\t4112\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8213,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8263,\n\t\t\t\t6093\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-168\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8163,\n\t\t\t\t5836\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8159,\n\t\t\t\t5821\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-122,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7934,\n\t\t\t\t5821\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7922,\n\t\t\t\t5965\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7940,\n\t\t\t\t5967\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7985,\n\t\t\t\t6013\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7973,\n\t\t\t\t6040\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8021,\n\t\t\t\t6122\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8060,\n\t\t\t\t6146\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4727,\n\t\t\t\t4595\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4757,\n\t\t\t\t4537\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4833,\n\t\t\t\t4424\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-166\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4872,\n\t\t\t\t4258\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4823,\n\t\t\t\t4244\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4809,\n\t\t\t\t4267\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4728,\n\t\t\t\t4265\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4621,\n\t\t\t\t4319\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4588,\n\t\t\t\t4336\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4528,\n\t\t\t\t4349\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4484,\n\t\t\t\t4326\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4394,\n\t\t\t\t4533\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4464,\n\t\t\t\t4568\n\t\t\t],\n\t\t\t[\n\t\t\t\t143,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4607,\n\t\t\t\t4566\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4652,\n\t\t\t\t4578\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4685,\n\t\t\t\t4570\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2930,\n\t\t\t\t3554\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3000,\n\t\t\t\t3379\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3034,\n\t\t\t\t3297\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3031,\n\t\t\t\t3269\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t3293\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3093,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3126,\n\t\t\t\t3180\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3054,\n\t\t\t\t3146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2992,\n\t\t\t\t3199\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-190,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2716,\n\t\t\t\t3162\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2664,\n\t\t\t\t3250\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2588,\n\t\t\t\t3259\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2624,\n\t\t\t\t3338\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2664,\n\t\t\t\t3333\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2777,\n\t\t\t\t3426\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t4563\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1504,\n\t\t\t\t4518\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1552,\n\t\t\t\t4442\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1522,\n\t\t\t\t4357\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1457,\n\t\t\t\t4358\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1431,\n\t\t\t\t4392\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1368,\n\t\t\t\t4467\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1316,\n\t\t\t\t4555\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1365,\n\t\t\t\t4585\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1440,\n\t\t\t\t4611\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3070,\n\t\t\t\t7367\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3033,\n\t\t\t\t7322\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3130,\n\t\t\t\t7216\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2965,\n\t\t\t\t7105\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2965,\n\t\t\t\t7060\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2922,\n\t\t\t\t7062\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2868,\n\t\t\t\t7020\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2746,\n\t\t\t\t7177\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2787,\n\t\t\t\t7232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2939,\n\t\t\t\t7429\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3636,\n\t\t\t\t7762\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-252\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3771,\n\t\t\t\t7478\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3767,\n\t\t\t\t7434\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3750,\n\t\t\t\t7421\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3705,\n\t\t\t\t7481\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3597,\n\t\t\t\t7484\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t163\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3509,\n\t\t\t\t7740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3588,\n\t\t\t\t7881\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6832,\n\t\t\t\t6438\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6952,\n\t\t\t\t6381\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7022,\n\t\t\t\t6386\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7090,\n\t\t\t\t6251\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7103,\n\t\t\t\t6212\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6920,\n\t\t\t\t6134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t127\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6854,\n\t\t\t\t6261\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6768,\n\t\t\t\t6358\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2530,\n\t\t\t\t3644\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2569,\n\t\t\t\t3594\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2647,\n\t\t\t\t3566\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2659,\n\t\t\t\t3553\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t3530\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2678,\n\t\t\t\t3487\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2570,\n\t\t\t\t3458\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2545,\n\t\t\t\t3449\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2483,\n\t\t\t\t3456\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2491,\n\t\t\t\t3517\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t133,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4841,\n\t\t\t\t3324\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4906,\n\t\t\t\t3336\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-116\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5095,\n\t\t\t\t3297\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5053,\n\t\t\t\t3028\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5019,\n\t\t\t\t3016\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4934,\n\t\t\t\t3015\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4786,\n\t\t\t\t2987\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4696,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4681,\n\t\t\t\t2968\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4695,\n\t\t\t\t2995\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t169\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4667,\n\t\t\t\t3249\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4794,\n\t\t\t\t3355\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t925,\n\t\t\t\t3138\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t952,\n\t\t\t\t3118\n\t\t\t],\n\t\t\t[\n\t\t\t\t158,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1110,\n\t\t\t\t3079\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1307,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1381,\n\t\t\t\t3030\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1403,\n\t\t\t\t2914\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1445,\n\t\t\t\t2893\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1390,\n\t\t\t\t2854\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1167,\n\t\t\t\t2733\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1072,\n\t\t\t\t2718\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1018,\n\t\t\t\t2731\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1004,\n\t\t\t\t2777\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1020,\n\t\t\t\t2780\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1008,\n\t\t\t\t2823\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1011,\n\t\t\t\t2863\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t804,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t780,\n\t\t\t\t3070\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t791,\n\t\t\t\t3078\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t777,\n\t\t\t\t3096\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t806,\n\t\t\t\t3112\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t900,\n\t\t\t\t3131\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t551,\n\t\t\t\t2462\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t588,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t669,\n\t\t\t\t2386\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t657,\n\t\t\t\t2339\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t665,\n\t\t\t\t2319\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t563,\n\t\t\t\t2284\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-171,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t331,\n\t\t\t\t2456\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3189,\n\t\t\t\t5495\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3166,\n\t\t\t\t5460\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-171\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3183,\n\t\t\t\t5289\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3164,\n\t\t\t\t5292\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3125,\n\t\t\t\t5289\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3059,\n\t\t\t\t5243\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2997,\n\t\t\t\t5189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-128,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2869,\n\t\t\t\t5146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2785,\n\t\t\t\t5209\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2795,\n\t\t\t\t5210\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2794,\n\t\t\t\t5257\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t109\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2843,\n\t\t\t\t5444\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3036,\n\t\t\t\t5549\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4258,\n\t\t\t\t4763\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4308,\n\t\t\t\t4648\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4319,\n\t\t\t\t4653\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4329,\n\t\t\t\t4550\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4283,\n\t\t\t\t4524\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4249,\n\t\t\t\t4521\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4227,\n\t\t\t\t4486\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4236,\n\t\t\t\t4536\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4165,\n\t\t\t\t4586\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4146,\n\t\t\t\t4719\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1154,\n\t\t\t\t5499\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1150,\n\t\t\t\t5476\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1033,\n\t\t\t\t5472\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t903,\n\t\t\t\t5551\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t940,\n\t\t\t\t5583\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t205\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t927,\n\t\t\t\t5788\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t130\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t863,\n\t\t\t\t5918\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t870,\n\t\t\t\t6003\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-105\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2394,\n\t\t\t\t6415\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2408,\n\t\t\t\t6425\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2444,\n\t\t\t\t6368\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2488,\n\t\t\t\t6330\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2470,\n\t\t\t\t6207\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2457,\n\t\t\t\t6157\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2497,\n\t\t\t\t6097\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-129\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2519,\n\t\t\t\t5837\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2406,\n\t\t\t\t5786\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2316,\n\t\t\t\t5889\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2222,\n\t\t\t\t5903\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2156,\n\t\t\t\t5875\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2124,\n\t\t\t\t5859\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t197\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t130\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2087,\n\t\t\t\t6316\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2113,\n\t\t\t\t6344\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2167,\n\t\t\t\t6325\n\t\t\t],\n\t\t\t[\n\t\t\t\t154,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2321,\n\t\t\t\t6379\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5426,\n\t\t\t\t2174\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5526,\n\t\t\t\t2085\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5605,\n\t\t\t\t2044\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5597,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5400,\n\t\t\t\t1836\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5308,\n\t\t\t\t1849\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5255,\n\t\t\t\t1851\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5225,\n\t\t\t\t1888\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5243,\n\t\t\t\t1927\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t128\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5318,\n\t\t\t\t2111\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5340,\n\t\t\t\t2126\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5372,\n\t\t\t\t2144\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5658,\n\t\t\t\t3041\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5652,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5712,\n\t\t\t\t2934\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5700,\n\t\t\t\t2875\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5637,\n\t\t\t\t2755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5497,\n\t\t\t\t2721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5387,\n\t\t\t\t2744\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5314,\n\t\t\t\t2760\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5218,\n\t\t\t\t2687\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5205,\n\t\t\t\t2733\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5173,\n\t\t\t\t2838\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5092,\n\t\t\t\t2789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5046,\n\t\t\t\t2783\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5002,\n\t\t\t\t2779\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5030,\n\t\t\t\t2912\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5591,\n\t\t\t\t3128\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2992,\n\t\t\t\t3199\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3054,\n\t\t\t\t3146\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3083,\n\t\t\t\t3157\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2886,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2684,\n\t\t\t\t3036\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3534,\n\t\t\t\t4615\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3532,\n\t\t\t\t4504\n\t\t\t],\n\t\t\t[\n\t\t\t\t-133,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3399,\n\t\t\t\t4498\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3383,\n\t\t\t\t4442\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3316,\n\t\t\t\t4333\n\t\t\t],\n\t\t\t[\n\t\t\t\t-173,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3143,\n\t\t\t\t4359\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3080,\n\t\t\t\t4336\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3003,\n\t\t\t\t4418\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2999,\n\t\t\t\t4501\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2981,\n\t\t\t\t4568\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2958,\n\t\t\t\t4607\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3038,\n\t\t\t\t4644\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3073,\n\t\t\t\t4695\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3115,\n\t\t\t\t4699\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3171,\n\t\t\t\t4720\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3207,\n\t\t\t\t4770\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3256,\n\t\t\t\t4752\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3313,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3326,\n\t\t\t\t4794\n\t\t\t],\n\t\t\t[\n\t\t\t\t139,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4218,\n\t\t\t\t2349\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4238,\n\t\t\t\t2316\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4289,\n\t\t\t\t2278\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4313,\n\t\t\t\t2290\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4343,\n\t\t\t\t2256\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-223\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4268,\n\t\t\t\t2033\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4111,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3982,\n\t\t\t\t1987\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3983,\n\t\t\t\t2030\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3943,\n\t\t\t\t2078\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4046,\n\t\t\t\t2098\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t133\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4179,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4225,\n\t\t\t\t2364\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4488,\n\t\t\t\t2628\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4513,\n\t\t\t\t2577\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4589,\n\t\t\t\t2586\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4602,\n\t\t\t\t2424\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t2327\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4415,\n\t\t\t\t2296\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4347,\n\t\t\t\t2303\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4289,\n\t\t\t\t2278\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4238,\n\t\t\t\t2316\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4225,\n\t\t\t\t2364\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4194,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t166\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4154,\n\t\t\t\t2620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4138,\n\t\t\t\t2652\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4184,\n\t\t\t\t2666\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4256,\n\t\t\t\t2679\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4258,\n\t\t\t\t2667\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4365,\n\t\t\t\t2700\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4422,\n\t\t\t\t2693\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4111,\n\t\t\t\t3096\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4159,\n\t\t\t\t3071\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4170,\n\t\t\t\t3054\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4179,\n\t\t\t\t2989\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4173,\n\t\t\t\t2978\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-152,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3833,\n\t\t\t\t2875\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3811,\n\t\t\t\t2891\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3803,\n\t\t\t\t2951\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3859,\n\t\t\t\t3023\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3875,\n\t\t\t\t3072\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3887,\n\t\t\t\t3069\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1998,\n\t\t\t\t2001\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-191\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1931,\n\t\t\t\t1756\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1936,\n\t\t\t\t1740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-176,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1696,\n\t\t\t\t1802\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1659,\n\t\t\t\t1781\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1675,\n\t\t\t\t1759\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1595,\n\t\t\t\t1721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1593,\n\t\t\t\t1777\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1568,\n\t\t\t\t1877\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1776,\n\t\t\t\t1959\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t1976\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1927,\n\t\t\t\t1986\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2549,\n\t\t\t\t1903\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2547,\n\t\t\t\t1881\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2426,\n\t\t\t\t1844\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2379,\n\t\t\t\t1800\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2368,\n\t\t\t\t1815\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2350,\n\t\t\t\t1813\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t167\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2304,\n\t\t\t\t1980\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2345,\n\t\t\t\t2035\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2447,\n\t\t\t\t2063\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2512,\n\t\t\t\t2078\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-170\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t1951\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3442,\n\t\t\t\t1955\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3381,\n\t\t\t\t1867\n\t\t\t],\n\t\t\t[\n\t\t\t\t-115,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3266,\n\t\t\t\t1827\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3164,\n\t\t\t\t1825\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3129,\n\t\t\t\t1862\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3147,\n\t\t\t\t1904\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3176,\n\t\t\t\t1955\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3240,\n\t\t\t\t1914\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3389,\n\t\t\t\t1973\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4797,\n\t\t\t\t6711\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4869,\n\t\t\t\t6675\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4795,\n\t\t\t\t6606\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4817,\n\t\t\t\t6551\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4772,\n\t\t\t\t6539\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4692,\n\t\t\t\t6497\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4632,\n\t\t\t\t6484\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4561,\n\t\t\t\t6417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4445,\n\t\t\t\t6827\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4405,\n\t\t\t\t6836\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4453,\n\t\t\t\t6950\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3774,\n\t\t\t\t6018\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3881,\n\t\t\t\t5985\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3890,\n\t\t\t\t5989\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3997,\n\t\t\t\t5810\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3985,\n\t\t\t\t5752\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-166\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3878,\n\t\t\t\t5586\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3847,\n\t\t\t\t5630\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3789,\n\t\t\t\t5589\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3753,\n\t\t\t\t5575\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3596,\n\t\t\t\t5661\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3553,\n\t\t\t\t5623\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3504,\n\t\t\t\t5651\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3331,\n\t\t\t\t5784\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3720,\n\t\t\t\t5955\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3266,\n\t\t\t\t1827\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3260,\n\t\t\t\t1672\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3284,\n\t\t\t\t1637\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3206,\n\t\t\t\t1616\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3185,\n\t\t\t\t1649\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3084,\n\t\t\t\t1674\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3009,\n\t\t\t\t1757\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3054,\n\t\t\t\t1809\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3129,\n\t\t\t\t1862\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2906,\n\t\t\t\t6114\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3008,\n\t\t\t\t6019\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2891,\n\t\t\t\t5811\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2888,\n\t\t\t\t5800\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2755,\n\t\t\t\t5891\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2676,\n\t\t\t\t5902\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2671,\n\t\t\t\t5916\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t208\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2728,\n\t\t\t\t6124\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2767,\n\t\t\t\t6150\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2759,\n\t\t\t\t6161\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2821,\n\t\t\t\t6242\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2841,\n\t\t\t\t6248\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3838,\n\t\t\t\t2222\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t141\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3842,\n\t\t\t\t2363\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3819,\n\t\t\t\t2390\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t151,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4155,\n\t\t\t\t2389\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4046,\n\t\t\t\t2098\n\t\t\t],\n\t\t\t[\n\t\t\t\t-118,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3928,\n\t\t\t\t2101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3822,\n\t\t\t\t2178\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5019,\n\t\t\t\t3016\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5049,\n\t\t\t\t2897\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5002,\n\t\t\t\t2779\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4959,\n\t\t\t\t2643\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4907,\n\t\t\t\t2672\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4820,\n\t\t\t\t2659\n\t\t\t],\n\t\t\t[\n\t\t\t\t-156,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4664,\n\t\t\t\t2614\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4645,\n\t\t\t\t2624\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t122\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4711,\n\t\t\t\t2927\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4934,\n\t\t\t\t3015\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4820,\n\t\t\t\t2659\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4959,\n\t\t\t\t2643\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4926,\n\t\t\t\t2418\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4760,\n\t\t\t\t2367\n\t\t\t],\n\t\t\t[\n\t\t\t\t-158,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4589,\n\t\t\t\t2586\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4599,\n\t\t\t\t2582\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4434,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4407,\n\t\t\t\t2945\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4400,\n\t\t\t\t2919\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-151\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4247,\n\t\t\t\t2703\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4256,\n\t\t\t\t2679\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4138,\n\t\t\t\t2652\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4112,\n\t\t\t\t2642\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4036,\n\t\t\t\t2604\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3960,\n\t\t\t\t2564\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3911,\n\t\t\t\t2646\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3778,\n\t\t\t\t2742\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3792,\n\t\t\t\t2813\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3806,\n\t\t\t\t2838\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4173,\n\t\t\t\t2978\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4217,\n\t\t\t\t2943\n\t\t\t],\n\t\t\t[\n\t\t\t\t129,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4346,\n\t\t\t\t2991\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4375,\n\t\t\t\t3015\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5972,\n\t\t\t\t4269\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6000,\n\t\t\t\t4266\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-211\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6008,\n\t\t\t\t3883\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6020,\n\t\t\t\t3828\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-150\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5840,\n\t\t\t\t3783\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5792,\n\t\t\t\t3789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5749,\n\t\t\t\t3839\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5741,\n\t\t\t\t3812\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-159,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5453,\n\t\t\t\t3774\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5402,\n\t\t\t\t3761\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5385,\n\t\t\t\t3739\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5357,\n\t\t\t\t3744\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5366,\n\t\t\t\t3988\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5437,\n\t\t\t\t4044\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5419,\n\t\t\t\t4146\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5541,\n\t\t\t\t4253\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5553,\n\t\t\t\t4288\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5622,\n\t\t\t\t4322\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t2327\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-142,\n\t\t\t\t-219\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4263,\n\t\t\t\t1989\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4343,\n\t\t\t\t2256\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4347,\n\t\t\t\t2303\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4420,\n\t\t\t\t3553\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4432,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4564,\n\t\t\t\t3594\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4655,\n\t\t\t\t3281\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4618,\n\t\t\t\t3248\n\t\t\t],\n\t\t\t[\n\t\t\t\t-186,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4432,\n\t\t\t\t3230\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4374,\n\t\t\t\t3297\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t177\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4400,\n\t\t\t\t2919\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4477,\n\t\t\t\t2801\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t2762\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4422,\n\t\t\t\t2693\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4258,\n\t\t\t\t2667\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4662,\n\t\t\t\t2955\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4696,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4645,\n\t\t\t\t2624\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4599,\n\t\t\t\t2582\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4488,\n\t\t\t\t2628\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4477,\n\t\t\t\t2801\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4407,\n\t\t\t\t2945\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4520,\n\t\t\t\t2955\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4607,\n\t\t\t\t2987\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5497,\n\t\t\t\t2721\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5590,\n\t\t\t\t2701\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5635,\n\t\t\t\t2558\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5629,\n\t\t\t\t2448\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5540,\n\t\t\t\t2477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5538,\n\t\t\t\t2507\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5462,\n\t\t\t\t2533\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5491,\n\t\t\t\t2518\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5419,\n\t\t\t\t2452\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5351,\n\t\t\t\t2554\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5321,\n\t\t\t\t2553\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5204,\n\t\t\t\t2714\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5218,\n\t\t\t\t2687\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5314,\n\t\t\t\t2760\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3778,\n\t\t\t\t2455\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3819,\n\t\t\t\t2407\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3838,\n\t\t\t\t2222\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3818,\n\t\t\t\t2160\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3799,\n\t\t\t\t2158\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3765,\n\t\t\t\t2131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3744,\n\t\t\t\t2067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3699,\n\t\t\t\t2046\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3678,\n\t\t\t\t2080\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3592,\n\t\t\t\t2122\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3592,\n\t\t\t\t2158\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3559,\n\t\t\t\t2162\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3438,\n\t\t\t\t2293\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3488,\n\t\t\t\t2332\n\t\t\t],\n\t\t\t[\n\t\t\t\t149,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3637,\n\t\t\t\t2402\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3656,\n\t\t\t\t2460\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3685,\n\t\t\t\t2980\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3688,\n\t\t\t\t2958\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3811,\n\t\t\t\t2891\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3792,\n\t\t\t\t2813\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3742,\n\t\t\t\t2713\n\t\t\t],\n\t\t\t[\n\t\t\t\t-132,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3610,\n\t\t\t\t2647\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3542,\n\t\t\t\t2621\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3463,\n\t\t\t\t2561\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3392,\n\t\t\t\t2550\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3392,\n\t\t\t\t2729\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3441,\n\t\t\t\t2773\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3492,\n\t\t\t\t2856\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3574,\n\t\t\t\t2883\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3619,\n\t\t\t\t2947\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3559,\n\t\t\t\t2162\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3592,\n\t\t\t\t2158\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3678,\n\t\t\t\t2080\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3614,\n\t\t\t\t2043\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-149\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3521,\n\t\t\t\t1894\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t1951\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3389,\n\t\t\t\t1973\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t208\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3442,\n\t\t\t\t2181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1936,\n\t\t\t\t1740\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1722,\n\t\t\t\t1455\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1723,\n\t\t\t\t1444\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1645,\n\t\t\t\t1438\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1592,\n\t\t\t\t1460\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1574,\n\t\t\t\t1573\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1582,\n\t\t\t\t1643\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1603,\n\t\t\t\t1710\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1659,\n\t\t\t\t1781\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t911,\n\t\t\t\t5300\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t874,\n\t\t\t\t5244\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t901,\n\t\t\t\t5173\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t910,\n\t\t\t\t5161\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t892,\n\t\t\t\t5129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t881,\n\t\t\t\t5093\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t752,\n\t\t\t\t4963\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t707,\n\t\t\t\t4927\n\t\t\t],\n\t\t\t[\n\t\t\t\t-193,\n\t\t\t\t182\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t522,\n\t\t\t\t5150\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t166\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t749,\n\t\t\t\t5397\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-80\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2102,\n\t\t\t\t2053\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2231,\n\t\t\t\t2064\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2234,\n\t\t\t\t2082\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2326,\n\t\t\t\t2009\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2350,\n\t\t\t\t1813\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2258,\n\t\t\t\t1715\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2232,\n\t\t\t\t1647\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1968,\n\t\t\t\t1674\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1998,\n\t\t\t\t2001\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1950,\n\t\t\t\t2005\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t2109\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3310,\n\t\t\t\t2618\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3463,\n\t\t\t\t2561\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3518,\n\t\t\t\t2550\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3641,\n\t\t\t\t2501\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3656,\n\t\t\t\t2460\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3488,\n\t\t\t\t2332\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3434,\n\t\t\t\t2291\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3353,\n\t\t\t\t2338\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3238,\n\t\t\t\t2379\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3182,\n\t\t\t\t2394\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3193,\n\t\t\t\t2419\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3174,\n\t\t\t\t2438\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3699,\n\t\t\t\t3386\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3853,\n\t\t\t\t3243\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3895,\n\t\t\t\t3170\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3903,\n\t\t\t\t3094\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3875,\n\t\t\t\t3072\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3803,\n\t\t\t\t2951\n\t\t\t],\n\t\t\t[\n\t\t\t\t-115,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3685,\n\t\t\t\t2980\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3574,\n\t\t\t\t2883\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3415,\n\t\t\t\t2986\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3412,\n\t\t\t\t3054\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3471,\n\t\t\t\t3087\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t102\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3639,\n\t\t\t\t3294\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3626,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3699,\n\t\t\t\t3419\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2636,\n\t\t\t\t3456\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2662,\n\t\t\t\t3360\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2624,\n\t\t\t\t3338\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2588,\n\t\t\t\t3259\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2509,\n\t\t\t\t3234\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2518,\n\t\t\t\t3428\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2570,\n\t\t\t\t3458\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1505,\n\t\t\t\t4943\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1551,\n\t\t\t\t4903\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1613,\n\t\t\t\t4902\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1696,\n\t\t\t\t4827\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1702,\n\t\t\t\t4718\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1709,\n\t\t\t\t4699\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1672,\n\t\t\t\t4600\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1655,\n\t\t\t\t4575\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1588,\n\t\t\t\t4600\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1495,\n\t\t\t\t4584\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1437,\n\t\t\t\t4663\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1427,\n\t\t\t\t4765\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1453,\n\t\t\t\t4769\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t119\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t4952\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1965,\n\t\t\t\t3573\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-143\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2055,\n\t\t\t\t3434\n\t\t\t],\n\t\t\t[\n\t\t\t\t163,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2218,\n\t\t\t\t3369\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2208,\n\t\t\t\t3278\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2219,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2019,\n\t\t\t\t3137\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1810,\n\t\t\t\t3284\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1778,\n\t\t\t\t3310\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1793,\n\t\t\t\t3394\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1836,\n\t\t\t\t3413\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t180\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1842,\n\t\t\t\t3593\n\t\t\t],\n\t\t\t[\n\t\t\t\t123,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1691,\n\t\t\t\t2739\n\t\t\t],\n\t\t\t[\n\t\t\t\t141,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1832,\n\t\t\t\t2774\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1887,\n\t\t\t\t2661\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1782,\n\t\t\t\t2631\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1710,\n\t\t\t\t2590\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1648,\n\t\t\t\t2542\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1643,\n\t\t\t\t2556\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1612,\n\t\t\t\t2571\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1501,\n\t\t\t\t2559\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1482,\n\t\t\t\t2604\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1428,\n\t\t\t\t2776\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1546,\n\t\t\t\t2902\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t426,\n\t\t\t\t2887\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t394,\n\t\t\t\t2797\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t351,\n\t\t\t\t2824\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t254,\n\t\t\t\t2832\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t219,\n\t\t\t\t2860\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t122\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1260,\n\t\t\t\t2541\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1303,\n\t\t\t\t2538\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1365,\n\t\t\t\t2502\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1374,\n\t\t\t\t2504\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1388,\n\t\t\t\t2378\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1346,\n\t\t\t\t2375\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1346,\n\t\t\t\t2296\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1327,\n\t\t\t\t2209\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1230,\n\t\t\t\t2200\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1180,\n\t\t\t\t2240\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1031,\n\t\t\t\t2323\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t965,\n\t\t\t\t2328\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t933,\n\t\t\t\t2364\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t940,\n\t\t\t\t2412\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t976,\n\t\t\t\t2457\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1045,\n\t\t\t\t2496\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1145,\n\t\t\t\t2504\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1198,\n\t\t\t\t2588\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1214,\n\t\t\t\t2554\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t738,\n\t\t\t\t2226\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t786,\n\t\t\t\t2240\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t849,\n\t\t\t\t2116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t796,\n\t\t\t\t2056\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t775,\n\t\t\t\t2040\n\t\t\t],\n\t\t\t[\n\t\t\t\t-122,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t599,\n\t\t\t\t2079\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t620,\n\t\t\t\t2172\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t606,\n\t\t\t\t2219\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t659,\n\t\t\t\t2234\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1487,\n\t\t\t\t2464\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-127\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1547,\n\t\t\t\t2246\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1552,\n\t\t\t\t2165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1537,\n\t\t\t\t2086\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1462,\n\t\t\t\t2046\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1352,\n\t\t\t\t2047\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1331,\n\t\t\t\t2146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1291,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1346,\n\t\t\t\t2296\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1388,\n\t\t\t\t2378\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1412,\n\t\t\t\t2418\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1460,\n\t\t\t\t2463\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3928,\n\t\t\t\t2101\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3943,\n\t\t\t\t2078\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3983,\n\t\t\t\t2030\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3849,\n\t\t\t\t1931\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3653,\n\t\t\t\t1829\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3529,\n\t\t\t\t1843\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3614,\n\t\t\t\t2043\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3744,\n\t\t\t\t2067\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3765,\n\t\t\t\t2131\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3818,\n\t\t\t\t2160\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6045,\n\t\t\t\t6565\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t144,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6339,\n\t\t\t\t6355\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6330,\n\t\t\t\t6337\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6220,\n\t\t\t\t6271\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6219,\n\t\t\t\t6227\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6124,\n\t\t\t\t6141\n\t\t\t],\n\t\t\t[\n\t\t\t\t-128,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5996,\n\t\t\t\t6149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5892,\n\t\t\t\t6242\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5915,\n\t\t\t\t6274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5873,\n\t\t\t\t6293\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5872,\n\t\t\t\t6321\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5808,\n\t\t\t\t6387\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5833,\n\t\t\t\t6411\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5849,\n\t\t\t\t6433\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5887,\n\t\t\t\t6403\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5910,\n\t\t\t\t6498\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5883,\n\t\t\t\t6553\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5905,\n\t\t\t\t6562\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6004,\n\t\t\t\t6606\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7544,\n\t\t\t\t5867\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7645,\n\t\t\t\t5832\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7667,\n\t\t\t\t5865\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7700,\n\t\t\t\t5881\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7735,\n\t\t\t\t5850\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7747,\n\t\t\t\t5724\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7760,\n\t\t\t\t5717\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7742,\n\t\t\t\t5680\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7809,\n\t\t\t\t5685\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7760,\n\t\t\t\t5288\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7732,\n\t\t\t\t5262\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7648,\n\t\t\t\t5322\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7606,\n\t\t\t\t5331\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7502,\n\t\t\t\t5279\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7465,\n\t\t\t\t5394\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t136\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7521,\n\t\t\t\t5694\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7494,\n\t\t\t\t5739\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7459,\n\t\t\t\t5778\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7445,\n\t\t\t\t5845\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7492,\n\t\t\t\t5876\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5221,\n\t\t\t\t2464\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5233,\n\t\t\t\t2427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5228,\n\t\t\t\t2338\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5196,\n\t\t\t\t2337\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5256,\n\t\t\t\t2255\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5377,\n\t\t\t\t2254\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5340,\n\t\t\t\t2126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5243,\n\t\t\t\t1927\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5164,\n\t\t\t\t1940\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4940,\n\t\t\t\t2041\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4999,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4970,\n\t\t\t\t2387\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4996,\n\t\t\t\t2433\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5175,\n\t\t\t\t2412\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2207,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2278,\n\t\t\t\t2375\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2316,\n\t\t\t\t2333\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2280,\n\t\t\t\t2225\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2206,\n\t\t\t\t2199\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2171,\n\t\t\t\t2167\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t112\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2109,\n\t\t\t\t2352\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2030,\n\t\t\t\t2379\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7956,\n\t\t\t\t6871\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-186\n\t\t\t],\n\t\t\t[\n\t\t\t\t-123,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7883,\n\t\t\t\t6570\n\t\t\t],\n\t\t\t[\n\t\t\t\t-228,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7655,\n\t\t\t\t6603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7626,\n\t\t\t\t6666\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7632,\n\t\t\t\t6708\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7704,\n\t\t\t\t6689\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7758,\n\t\t\t\t6723\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7752,\n\t\t\t\t6821\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7742,\n\t\t\t\t6852\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7777,\n\t\t\t\t6865\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7789,\n\t\t\t\t6901\n\t\t\t],\n\t\t\t[\n\t\t\t\t167,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6783,\n\t\t\t\t6122\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6924,\n\t\t\t\t6128\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6965,\n\t\t\t\t6025\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6917,\n\t\t\t\t5897\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6755,\n\t\t\t\t5861\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6724,\n\t\t\t\t5888\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6495,\n\t\t\t\t5962\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6497,\n\t\t\t\t6066\n\t\t\t],\n\t\t\t[\n\t\t\t\t136,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6633,\n\t\t\t\t6143\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6694,\n\t\t\t\t6158\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3668,\n\t\t\t\t4003\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3729,\n\t\t\t\t3956\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3717,\n\t\t\t\t3920\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3750,\n\t\t\t\t3835\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3731,\n\t\t\t\t3809\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3705,\n\t\t\t\t3786\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3678,\n\t\t\t\t3751\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3713,\n\t\t\t\t3701\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3604,\n\t\t\t\t3687\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3558,\n\t\t\t\t3629\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3545,\n\t\t\t\t3638\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3509,\n\t\t\t\t3675\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3446,\n\t\t\t\t3629\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3423,\n\t\t\t\t3660\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3439,\n\t\t\t\t3734\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3476,\n\t\t\t\t3765\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3454,\n\t\t\t\t3869\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3447,\n\t\t\t\t3878\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3489,\n\t\t\t\t3918\n\t\t\t],\n\t\t\t[\n\t\t\t\t167,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3656,\n\t\t\t\t3969\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1127,\n\t\t\t\t4633\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1201,\n\t\t\t\t4620\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1259,\n\t\t\t\t4611\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1308,\n\t\t\t\t4545\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1431,\n\t\t\t\t4392\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1408,\n\t\t\t\t4303\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1251,\n\t\t\t\t4321\n\t\t\t],\n\t\t\t[\n\t\t\t\t-154,\n\t\t\t\t144\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1097,\n\t\t\t\t4465\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1075,\n\t\t\t\t4527\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1054,\n\t\t\t\t4628\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2034,\n\t\t\t\t6280\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-156\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1859,\n\t\t\t\t5866\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1819,\n\t\t\t\t5889\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1724,\n\t\t\t\t5901\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1671,\n\t\t\t\t5871\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1666,\n\t\t\t\t5850\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1578,\n\t\t\t\t5968\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1486,\n\t\t\t\t6078\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t216,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4014,\n\t\t\t\t5271\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4053,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4075,\n\t\t\t\t5162\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4106,\n\t\t\t\t5096\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4136,\n\t\t\t\t5064\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3721,\n\t\t\t\t5031\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3715,\n\t\t\t\t5083\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3812,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3822,\n\t\t\t\t5241\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3856,\n\t\t\t\t5293\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t791,\n\t\t\t\t3034\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1011,\n\t\t\t\t2863\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1008,\n\t\t\t\t2823\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1004,\n\t\t\t\t2777\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t983,\n\t\t\t\t2760\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t915,\n\t\t\t\t2658\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t838,\n\t\t\t\t2636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t813,\n\t\t\t\t2708\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t700,\n\t\t\t\t2890\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t666,\n\t\t\t\t2973\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2453,\n\t\t\t\t7148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t-163\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2492,\n\t\t\t\t6878\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2419,\n\t\t\t\t6823\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-141\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2334,\n\t\t\t\t6682\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2288,\n\t\t\t\t6672\n\t\t\t],\n\t\t\t[\n\t\t\t\t-270,\n\t\t\t\t186\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t121\n\t\t\t],\n\t\t\t[\n\t\t\t\t136,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t134\n\t\t\t],\n\t\t\t[\n\t\t\t\t203,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t7213\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7104,\n\t\t\t\t6798\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7197,\n\t\t\t\t6675\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7200,\n\t\t\t\t6661\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-153,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6960,\n\t\t\t\t6419\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6832,\n\t\t\t\t6438\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6836,\n\t\t\t\t6518\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6853,\n\t\t\t\t6511\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6861,\n\t\t\t\t6601\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6878,\n\t\t\t\t6631\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6875,\n\t\t\t\t6673\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6856,\n\t\t\t\t6730\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6863,\n\t\t\t\t6804\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6913,\n\t\t\t\t6783\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6971,\n\t\t\t\t6809\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7047,\n\t\t\t\t6799\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7065,\n\t\t\t\t6825\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3164,\n\t\t\t\t5292\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3214,\n\t\t\t\t5280\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3300,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3363,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3408,\n\t\t\t\t5168\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3408,\n\t\t\t\t5093\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3389,\n\t\t\t\t5032\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3313,\n\t\t\t\t4991\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3252,\n\t\t\t\t4942\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3140,\n\t\t\t\t4895\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t294\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3085,\n\t\t\t\t5189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3031,\n\t\t\t\t5220\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3125,\n\t\t\t\t5289\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5731,\n\t\t\t\t5784\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5846,\n\t\t\t\t5655\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5870,\n\t\t\t\t5567\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5832,\n\t\t\t\t5468\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5764,\n\t\t\t\t5342\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5724,\n\t\t\t\t5327\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5648,\n\t\t\t\t5320\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5588,\n\t\t\t\t5333\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5541,\n\t\t\t\t5489\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5422,\n\t\t\t\t5542\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5399,\n\t\t\t\t5582\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5425,\n\t\t\t\t5735\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5483,\n\t\t\t\t5744\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5591,\n\t\t\t\t5734\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4227,\n\t\t\t\t4486\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4202,\n\t\t\t\t4484\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4196,\n\t\t\t\t4353\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4185,\n\t\t\t\t4222\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4124,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t-203,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3921,\n\t\t\t\t4337\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3941,\n\t\t\t\t4409\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4014,\n\t\t\t\t4526\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4118,\n\t\t\t\t4542\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4165,\n\t\t\t\t4586\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2779,\n\t\t\t\t1863\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2793,\n\t\t\t\t1802\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2865,\n\t\t\t\t1746\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2843,\n\t\t\t\t1716\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2779,\n\t\t\t\t1685\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t-112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2655,\n\t\t\t\t1573\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2621,\n\t\t\t\t1558\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2559,\n\t\t\t\t1587\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2454,\n\t\t\t\t1644\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2368,\n\t\t\t\t1717\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2394,\n\t\t\t\t1782\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2379,\n\t\t\t\t1800\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2547,\n\t\t\t\t1881\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2779,\n\t\t\t\t1685\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2804,\n\t\t\t\t1672\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-196\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2798,\n\t\t\t\t1303\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2752,\n\t\t\t\t1322\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2699,\n\t\t\t\t1350\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2606,\n\t\t\t\t1515\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2655,\n\t\t\t\t1573\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1438,\n\t\t\t\t5200\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1457,\n\t\t\t\t5139\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1478,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1529,\n\t\t\t\t5196\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1579,\n\t\t\t\t5213\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-177\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1620,\n\t\t\t\t5036\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1653,\n\t\t\t\t4990\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1505,\n\t\t\t\t4943\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1433,\n\t\t\t\t4954\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1333,\n\t\t\t\t4974\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1310,\n\t\t\t\t5177\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1380,\n\t\t\t\t5208\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4601,\n\t\t\t\t4774\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4631,\n\t\t\t\t4732\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4718,\n\t\t\t\t4750\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-146\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4755,\n\t\t\t\t4604\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4652,\n\t\t\t\t4578\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4464,\n\t\t\t\t4568\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4319,\n\t\t\t\t4653\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4344,\n\t\t\t\t4652\n\t\t\t],\n\t\t\t[\n\t\t\t\t188,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4532,\n\t\t\t\t4756\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3453,\n\t\t\t\t5534\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3619,\n\t\t\t\t5403\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3564,\n\t\t\t\t5181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3488,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3455,\n\t\t\t\t5140\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3448,\n\t\t\t\t5178\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t5194\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3368,\n\t\t\t\t5198\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t166\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3284,\n\t\t\t\t5448\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3393,\n\t\t\t\t5571\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2406,\n\t\t\t\t5786\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2506,\n\t\t\t\t5801\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-127\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2491,\n\t\t\t\t5674\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2364,\n\t\t\t\t5605\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t5635\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2220,\n\t\t\t\t5660\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2159,\n\t\t\t\t5674\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2150,\n\t\t\t\t5755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2117,\n\t\t\t\t5794\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2222,\n\t\t\t\t5903\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7598,\n\t\t\t\t7002\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7634,\n\t\t\t\t6994\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7712,\n\t\t\t\t6854\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7752,\n\t\t\t\t6821\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7704,\n\t\t\t\t6689\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7632,\n\t\t\t\t6708\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7574,\n\t\t\t\t6709\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7526,\n\t\t\t\t6721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7510,\n\t\t\t\t6788\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7479,\n\t\t\t\t6809\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7447,\n\t\t\t\t6863\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7464,\n\t\t\t\t6898\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7478,\n\t\t\t\t6965\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1433,\n\t\t\t\t4954\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1453,\n\t\t\t\t4769\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1437,\n\t\t\t\t4663\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1440,\n\t\t\t\t4611\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1316,\n\t\t\t\t4555\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1308,\n\t\t\t\t4545\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1238,\n\t\t\t\t4639\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t196\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1294,\n\t\t\t\t4944\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1312,\n\t\t\t\t4983\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7307,\n\t\t\t\t7466\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7355,\n\t\t\t\t7441\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7301,\n\t\t\t\t7369\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-156\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7292,\n\t\t\t\t7213\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7269,\n\t\t\t\t7149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7073,\n\t\t\t\t7171\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6964,\n\t\t\t\t7159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6878,\n\t\t\t\t7151\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t132\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6939,\n\t\t\t\t7283\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6947,\n\t\t\t\t7331\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7005,\n\t\t\t\t7353\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7194,\n\t\t\t\t7449\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7227,\n\t\t\t\t7489\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4276,\n\t\t\t\t3726\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4386,\n\t\t\t\t3654\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4430,\n\t\t\t\t3653\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4451,\n\t\t\t\t3619\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4374,\n\t\t\t\t3297\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4339,\n\t\t\t\t3306\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4152,\n\t\t\t\t3384\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4133,\n\t\t\t\t3415\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4109,\n\t\t\t\t3443\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4052,\n\t\t\t\t3473\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4054,\n\t\t\t\t3570\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4196,\n\t\t\t\t3730\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4240,\n\t\t\t\t3760\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5099,\n\t\t\t\t4941\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5084,\n\t\t\t\t4876\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5032,\n\t\t\t\t4817\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4945,\n\t\t\t\t4770\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4898,\n\t\t\t\t4761\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4864,\n\t\t\t\t4753\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4844,\n\t\t\t\t4720\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4770,\n\t\t\t\t4789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4748,\n\t\t\t\t4812\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4715,\n\t\t\t\t4819\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4740,\n\t\t\t\t4889\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4702,\n\t\t\t\t4999\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4809,\n\t\t\t\t5061\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8159,\n\t\t\t\t5821\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8136,\n\t\t\t\t5791\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8140,\n\t\t\t\t5763\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8206,\n\t\t\t\t5657\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8203,\n\t\t\t\t5629\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-216\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8133,\n\t\t\t\t5413\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8088,\n\t\t\t\t5336\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8068,\n\t\t\t\t5255\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8035,\n\t\t\t\t5223\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7996,\n\t\t\t\t5208\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7744,\n\t\t\t\t5230\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7809,\n\t\t\t\t5685\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7742,\n\t\t\t\t5680\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7760,\n\t\t\t\t5717\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7776,\n\t\t\t\t5708\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7900,\n\t\t\t\t5762\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7958,\n\t\t\t\t6131\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7985,\n\t\t\t\t6013\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7922,\n\t\t\t\t5965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7776,\n\t\t\t\t5708\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7735,\n\t\t\t\t5850\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7667,\n\t\t\t\t5865\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7544,\n\t\t\t\t5867\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7539,\n\t\t\t\t5906\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t318,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5276,\n\t\t\t\t5926\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5362,\n\t\t\t\t5906\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5379,\n\t\t\t\t5842\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5450,\n\t\t\t\t5740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5399,\n\t\t\t\t5582\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5389,\n\t\t\t\t5557\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5269,\n\t\t\t\t5534\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5188,\n\t\t\t\t5557\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5061,\n\t\t\t\t5570\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5069,\n\t\t\t\t5607\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5008,\n\t\t\t\t5633\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5019,\n\t\t\t\t5714\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t167\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5098,\n\t\t\t\t5881\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5096,\n\t\t\t\t5928\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2660,\n\t\t\t\t3855\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-135\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2809,\n\t\t\t\t3694\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2783,\n\t\t\t\t3665\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2743,\n\t\t\t\t3653\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2756,\n\t\t\t\t3636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2679,\n\t\t\t\t3562\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2659,\n\t\t\t\t3553\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2569,\n\t\t\t\t3594\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2547,\n\t\t\t\t3668\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2562,\n\t\t\t\t3766\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6337,\n\t\t\t\t3204\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6341,\n\t\t\t\t3175\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6443,\n\t\t\t\t3077\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-175,\n\t\t\t\t-174\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6224,\n\t\t\t\t2548\n\t\t\t],\n\t\t\t[\n\t\t\t\t-132,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5929,\n\t\t\t\t2562\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5942,\n\t\t\t\t2649\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5700,\n\t\t\t\t2875\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5652,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5695,\n\t\t\t\t3087\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5790,\n\t\t\t\t3082\n\t\t\t],\n\t\t\t[\n\t\t\t\t150,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6008,\n\t\t\t\t3086\n\t\t\t],\n\t\t\t[\n\t\t\t\t141,\n\t\t\t\t150\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6149,\n\t\t\t\t3236\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6210,\n\t\t\t\t3208\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6291,\n\t\t\t\t3269\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7574,\n\t\t\t\t6709\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7626,\n\t\t\t\t6666\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7883,\n\t\t\t\t6570\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-80\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7984,\n\t\t\t\t6502\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7959,\n\t\t\t\t6492\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7952,\n\t\t\t\t6511\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7819,\n\t\t\t\t6372\n\t\t\t],\n\t\t\t[\n\t\t\t\t-159,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7660,\n\t\t\t\t6324\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7552,\n\t\t\t\t6384\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7535,\n\t\t\t\t6405\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7495,\n\t\t\t\t6399\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7492,\n\t\t\t\t6414\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t190\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7430,\n\t\t\t\t6604\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7459,\n\t\t\t\t6665\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7481,\n\t\t\t\t6723\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4437,\n\t\t\t\t3830\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4488,\n\t\t\t\t3805\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4473,\n\t\t\t\t3791\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4491,\n\t\t\t\t3746\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4595,\n\t\t\t\t3738\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4628,\n\t\t\t\t3752\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4668,\n\t\t\t\t3732\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4554,\n\t\t\t\t3610\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4432,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4451,\n\t\t\t\t3619\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4386,\n\t\t\t\t3654\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4406,\n\t\t\t\t3733\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3829,\n\t\t\t\t4344\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3803,\n\t\t\t\t4315\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3756,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3669,\n\t\t\t\t4256\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3669,\n\t\t\t\t4287\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3634,\n\t\t\t\t4236\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3574,\n\t\t\t\t4270\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3642,\n\t\t\t\t4367\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4538,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4553,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4606,\n\t\t\t\t5152\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-173\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4695,\n\t\t\t\t4997\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4674,\n\t\t\t\t4987\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4661,\n\t\t\t\t4981\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4620,\n\t\t\t\t4929\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4592,\n\t\t\t\t4943\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4508,\n\t\t\t\t4964\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4477,\n\t\t\t\t5026\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4432,\n\t\t\t\t5044\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4442,\n\t\t\t\t5056\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4423,\n\t\t\t\t5081\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4464,\n\t\t\t\t5193\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5639,\n\t\t\t\t7031\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5707,\n\t\t\t\t6976\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5725,\n\t\t\t\t6804\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5705,\n\t\t\t\t6767\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5604,\n\t\t\t\t6717\n\t\t\t],\n\t\t\t[\n\t\t\t\t-118,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5486,\n\t\t\t\t6738\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5475,\n\t\t\t\t6756\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5416,\n\t\t\t\t6716\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5339,\n\t\t\t\t6686\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5301,\n\t\t\t\t6741\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t187\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5605,\n\t\t\t\t7053\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3372,\n\t\t\t\t4159\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3425,\n\t\t\t\t4185\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3458,\n\t\t\t\t4119\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-183\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3434,\n\t\t\t\t3936\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3416,\n\t\t\t\t3945\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t3893\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3331,\n\t\t\t\t3928\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3248,\n\t\t\t\t3912\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3116,\n\t\t\t\t3868\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3130,\n\t\t\t\t3915\n\t\t\t],\n\t\t\t[\n\t\t\t\t125,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3255,\n\t\t\t\t4038\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3235,\n\t\t\t\t4158\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3294,\n\t\t\t\t4182\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t4218\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3911,\n\t\t\t\t2646\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3877,\n\t\t\t\t2604\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3736,\n\t\t\t\t2474\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3739,\n\t\t\t\t2454\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3518,\n\t\t\t\t2550\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3542,\n\t\t\t\t2621\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3742,\n\t\t\t\t2713\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3886,\n\t\t\t\t3929\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3954,\n\t\t\t\t3734\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3938,\n\t\t\t\t3705\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3896,\n\t\t\t\t3675\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3781,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3743,\n\t\t\t\t3537\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3705,\n\t\t\t\t3586\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3705,\n\t\t\t\t3557\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3680,\n\t\t\t\t3559\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3679,\n\t\t\t\t3628\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3647,\n\t\t\t\t3660\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3621,\n\t\t\t\t3641\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3585,\n\t\t\t\t3656\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3713,\n\t\t\t\t3701\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3678,\n\t\t\t\t3751\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3731,\n\t\t\t\t3809\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3751,\n\t\t\t\t3855\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3738,\n\t\t\t\t3875\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3822,\n\t\t\t\t3951\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3300,\n\t\t\t\t5500\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3368,\n\t\t\t\t5198\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3363,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3214,\n\t\t\t\t5280\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3166,\n\t\t\t\t5460\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3259,\n\t\t\t\t5500\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5996,\n\t\t\t\t6149\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6076,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-133,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5955,\n\t\t\t\t5953\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5924,\n\t\t\t\t5911\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5850,\n\t\t\t\t5858\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5740,\n\t\t\t\t5903\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5681,\n\t\t\t\t5983\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5614,\n\t\t\t\t6034\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5647,\n\t\t\t\t6038\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5688,\n\t\t\t\t6064\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t123,\n\t\t\t\t109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5826,\n\t\t\t\t6231\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5915,\n\t\t\t\t6274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7254,\n\t\t\t\t6687\n\t\t\t],\n\t\t\t[\n\t\t\t\t151,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7405,\n\t\t\t\t6624\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7492,\n\t\t\t\t6414\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7448,\n\t\t\t\t6355\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7425,\n\t\t\t\t6324\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7388,\n\t\t\t\t6283\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-138\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7261,\n\t\t\t\t6170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7214,\n\t\t\t\t6129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7161,\n\t\t\t\t6149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7022,\n\t\t\t\t6386\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7200,\n\t\t\t\t6661\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7203,\n\t\t\t\t6651\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7224,\n\t\t\t\t6657\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t394,\n\t\t\t\t2797\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t490,\n\t\t\t\t2656\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t437,\n\t\t\t\t2611\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-155\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t331,\n\t\t\t\t2456\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t143\n\t\t\t],\n\t\t\t[\n\t\t\t\t-167,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t229,\n\t\t\t\t2812\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t254,\n\t\t\t\t2832\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4588,\n\t\t\t\t4336\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4728,\n\t\t\t\t4265\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4767,\n\t\t\t\t4198\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4702,\n\t\t\t\t4086\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4628,\n\t\t\t\t4004\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4557,\n\t\t\t\t3932\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4527,\n\t\t\t\t3946\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4445,\n\t\t\t\t3945\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t352\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4528,\n\t\t\t\t4349\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3626,\n\t\t\t\t3427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3471,\n\t\t\t\t3087\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3382,\n\t\t\t\t3107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3366,\n\t\t\t\t3129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3415,\n\t\t\t\t3258\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3426,\n\t\t\t\t3341\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3443,\n\t\t\t\t3390\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3596,\n\t\t\t\t3460\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6841,\n\t\t\t\t7691\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6862,\n\t\t\t\t7692\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6857,\n\t\t\t\t7674\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6902,\n\t\t\t\t7667\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7006,\n\t\t\t\t7534\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7001,\n\t\t\t\t7433\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6947,\n\t\t\t\t7331\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6909,\n\t\t\t\t7304\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6820,\n\t\t\t\t7362\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6726,\n\t\t\t\t7493\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6764,\n\t\t\t\t7615\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6800,\n\t\t\t\t7677\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6802,\n\t\t\t\t7700\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6009,\n\t\t\t\t7160\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6003,\n\t\t\t\t7104\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5958,\n\t\t\t\t7077\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5949,\n\t\t\t\t7043\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5943,\n\t\t\t\t7029\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-94\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5746,\n\t\t\t\t6879\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5639,\n\t\t\t\t7031\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5605,\n\t\t\t\t7053\n\t\t\t],\n\t\t\t[\n\t\t\t\t157,\n\t\t\t\t178\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2427,\n\t\t\t\t3178\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2463,\n\t\t\t\t3168\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2516,\n\t\t\t\t3092\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2461,\n\t\t\t\t2928\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2411,\n\t\t\t\t3129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2359,\n\t\t\t\t3175\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2362,\n\t\t\t\t3196\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1230,\n\t\t\t\t2200\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1331,\n\t\t\t\t2146\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1340,\n\t\t\t\t2092\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1242,\n\t\t\t\t2020\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1233,\n\t\t\t\t2008\n\t\t\t],\n\t\t\t[\n\t\t\t\t-136,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1097,\n\t\t\t\t2002\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1055,\n\t\t\t\t2121\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t7452\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3336,\n\t\t\t\t7361\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3265,\n\t\t\t\t7427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3216,\n\t\t\t\t7408\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3166,\n\t\t\t\t7357\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3070,\n\t\t\t\t7367\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t176\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t234,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3233,\n\t\t\t\t7763\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-194\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5966,\n\t\t\t\t7067\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6050,\n\t\t\t\t7014\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6069,\n\t\t\t\t6960\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6129,\n\t\t\t\t6879\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5899,\n\t\t\t\t6751\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5844,\n\t\t\t\t6711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5843,\n\t\t\t\t6693\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5761,\n\t\t\t\t6700\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5739,\n\t\t\t\t6732\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5725,\n\t\t\t\t6804\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5943,\n\t\t\t\t7029\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5958,\n\t\t\t\t7077\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7189,\n\t\t\t\t4864\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7268,\n\t\t\t\t4815\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7371,\n\t\t\t\t4747\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7460,\n\t\t\t\t4709\n\t\t\t],\n\t\t\t[\n\t\t\t\t-193,\n\t\t\t\t-100\n\t\t\t],\n\t\t\t[\n\t\t\t\t139,\n\t\t\t\t-216\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-156\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-171,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6946,\n\t\t\t\t4494\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7021,\n\t\t\t\t4507\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7067,\n\t\t\t\t4598\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7130,\n\t\t\t\t4704\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7100,\n\t\t\t\t4753\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7070,\n\t\t\t\t4807\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7158,\n\t\t\t\t4831\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1238,\n\t\t\t\t4639\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1201,\n\t\t\t\t4620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1054,\n\t\t\t\t4628\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t864,\n\t\t\t\t4615\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t143\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t778,\n\t\t\t\t4789\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t139,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1140,\n\t\t\t\t4971\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4855,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-146\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4907,\n\t\t\t\t4094\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4919,\n\t\t\t\t4058\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4946,\n\t\t\t\t3977\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4917,\n\t\t\t\t3888\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4844,\n\t\t\t\t3836\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4571,\n\t\t\t\t3920\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4702,\n\t\t\t\t4086\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4767,\n\t\t\t\t4198\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4823,\n\t\t\t\t4244\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3753,\n\t\t\t\t5575\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3722,\n\t\t\t\t5527\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3786,\n\t\t\t\t5431\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3694,\n\t\t\t\t5345\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3453,\n\t\t\t\t5534\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3504,\n\t\t\t\t5651\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3553,\n\t\t\t\t5623\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2832,\n\t\t\t\t3603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2777,\n\t\t\t\t3426\n\t\t\t],\n\t\t\t[\n\t\t\t\t-115,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2636,\n\t\t\t\t3456\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t3530\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2756,\n\t\t\t\t3636\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5394,\n\t\t\t\t5196\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5440,\n\t\t\t\t5159\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5475,\n\t\t\t\t5130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5472,\n\t\t\t\t4882\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5504,\n\t\t\t\t4832\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5544,\n\t\t\t\t4806\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5415,\n\t\t\t\t4796\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5349,\n\t\t\t\t4782\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5321,\n\t\t\t\t4809\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5186,\n\t\t\t\t4789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5162,\n\t\t\t\t4835\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5086,\n\t\t\t\t4808\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5084,\n\t\t\t\t4876\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5314,\n\t\t\t\t5181\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2190,\n\t\t\t\t4057\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2211,\n\t\t\t\t4078\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2348,\n\t\t\t\t3779\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t3766\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2547,\n\t\t\t\t3668\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2491,\n\t\t\t\t3517\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2483,\n\t\t\t\t3456\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2509,\n\t\t\t\t3234\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2527,\n\t\t\t\t3217\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2427,\n\t\t\t\t3178\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2359,\n\t\t\t\t3175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2218,\n\t\t\t\t3369\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1965,\n\t\t\t\t3573\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t3702\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t153\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2019,\n\t\t\t\t4010\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2083,\n\t\t\t\t4077\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6417,\n\t\t\t\t6385\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6432,\n\t\t\t\t6360\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6463,\n\t\t\t\t6371\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6569,\n\t\t\t\t6109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-204,\n\t\t\t\t-93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6365,\n\t\t\t\t6016\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6241,\n\t\t\t\t6162\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6199,\n\t\t\t\t6196\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6219,\n\t\t\t\t6227\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6330,\n\t\t\t\t6337\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6354,\n\t\t\t\t6374\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6403,\n\t\t\t\t6399\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6443,\n\t\t\t\t5367\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6501,\n\t\t\t\t5329\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-182\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6303,\n\t\t\t\t5012\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6243,\n\t\t\t\t4974\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6211,\n\t\t\t\t5000\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6222,\n\t\t\t\t5044\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6159,\n\t\t\t\t5081\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6107,\n\t\t\t\t5233\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6130,\n\t\t\t\t5324\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6133,\n\t\t\t\t5358\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6227,\n\t\t\t\t5442\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6346,\n\t\t\t\t5409\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t783,\n\t\t\t\t2440\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t832,\n\t\t\t\t2432\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t777,\n\t\t\t\t2273\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t738,\n\t\t\t\t2226\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t659,\n\t\t\t\t2234\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t645,\n\t\t\t\t2230\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t657,\n\t\t\t\t2339\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t720,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t745,\n\t\t\t\t2441\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t763,\n\t\t\t\t2465\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1390,\n\t\t\t\t2854\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1453,\n\t\t\t\t2804\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1482,\n\t\t\t\t2604\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1502,\n\t\t\t\t2551\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1460,\n\t\t\t\t2533\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1451,\n\t\t\t\t2501\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1473,\n\t\t\t\t2496\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1412,\n\t\t\t\t2418\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1365,\n\t\t\t\t2502\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1260,\n\t\t\t\t2541\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1198,\n\t\t\t\t2588\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1106,\n\t\t\t\t2611\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1154,\n\t\t\t\t2733\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1028,\n\t\t\t\t4116\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1042,\n\t\t\t\t4006\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1065,\n\t\t\t\t4005\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-177\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t941,\n\t\t\t\t3795\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t907,\n\t\t\t\t3711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t877,\n\t\t\t\t3686\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t859,\n\t\t\t\t3792\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t773,\n\t\t\t\t3885\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t666,\n\t\t\t\t3905\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t104\n\t\t\t],\n\t\t\t[\n\t\t\t\t135,\n\t\t\t\t129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t913,\n\t\t\t\t4127\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6818,\n\t\t\t\t6605\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6853,\n\t\t\t\t6511\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6768,\n\t\t\t\t6358\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6656,\n\t\t\t\t6380\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6628,\n\t\t\t\t6445\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6669,\n\t\t\t\t6579\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6706,\n\t\t\t\t6587\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6768,\n\t\t\t\t6575\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6781,\n\t\t\t\t6623\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5339,\n\t\t\t\t6686\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5386,\n\t\t\t\t6702\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-182\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5391,\n\t\t\t\t6520\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5340,\n\t\t\t\t6547\n\t\t\t],\n\t\t\t[\n\t\t\t\t-205,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5073,\n\t\t\t\t6841\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t160,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-189\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3597,\n\t\t\t\t7484\n\t\t\t],\n\t\t\t[\n\t\t\t\t-159,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3438,\n\t\t\t\t7476\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3233,\n\t\t\t\t7763\n\t\t\t],\n\t\t\t[\n\t\t\t\t192,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t832,\n\t\t\t\t3519\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t899,\n\t\t\t\t3432\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t876,\n\t\t\t\t3423\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t716,\n\t\t\t\t3410\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-156,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t157\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t494,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t265,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t759,\n\t\t\t\t3628\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t6626\n\t\t\t],\n\t\t\t[\n\t\t\t\t163,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2486,\n\t\t\t\t6545\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t6558\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2533,\n\t\t\t\t6452\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2501,\n\t\t\t\t6464\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2416,\n\t\t\t\t6416\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2394,\n\t\t\t\t6415\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2321,\n\t\t\t\t6379\n\t\t\t],\n\t\t\t[\n\t\t\t\t-154,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2113,\n\t\t\t\t6344\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2288,\n\t\t\t\t6672\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7103,\n\t\t\t\t6212\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7214,\n\t\t\t\t6129\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7234,\n\t\t\t\t6143\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7295,\n\t\t\t\t6106\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7309,\n\t\t\t\t5967\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7269,\n\t\t\t\t5906\n\t\t\t],\n\t\t\t[\n\t\t\t\t-244,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7025,\n\t\t\t\t5883\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6972,\n\t\t\t\t5958\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5255,\n\t\t\t\t1851\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5144,\n\t\t\t\t1640\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t155\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t123\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5164,\n\t\t\t\t1940\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5311,\n\t\t\t\t3635\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5348,\n\t\t\t\t3638\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5407,\n\t\t\t\t3634\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5388,\n\t\t\t\t3480\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5104,\n\t\t\t\t3282\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4906,\n\t\t\t\t3336\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4986,\n\t\t\t\t3608\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4974,\n\t\t\t\t3610\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t137,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5245,\n\t\t\t\t3664\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7513,\n\t\t\t\t8009\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-152\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7443,\n\t\t\t\t7750\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7385,\n\t\t\t\t7760\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7257,\n\t\t\t\t7692\n\t\t\t],\n\t\t\t[\n\t\t\t\t-228,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7029,\n\t\t\t\t7758\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t150\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7206,\n\t\t\t\t8059\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7216,\n\t\t\t\t8096\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7217,\n\t\t\t\t8101\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6665,\n\t\t\t\t8364\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6681,\n\t\t\t\t8319\n\t\t\t],\n\t\t\t[\n\t\t\t\t170,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6851,\n\t\t\t\t8272\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6793,\n\t\t\t\t8142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6753,\n\t\t\t\t8051\n\t\t\t],\n\t\t\t[\n\t\t\t\t-132,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6621,\n\t\t\t\t8045\n\t\t\t],\n\t\t\t[\n\t\t\t\t-153,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6468,\n\t\t\t\t8082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6466,\n\t\t\t\t8119\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6366,\n\t\t\t\t8157\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6445,\n\t\t\t\t8256\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6448,\n\t\t\t\t8281\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6584,\n\t\t\t\t8351\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1522,\n\t\t\t\t4038\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1473,\n\t\t\t\t3889\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1481,\n\t\t\t\t3878\n\t\t\t],\n\t\t\t[\n\t\t\t\t-160,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1321,\n\t\t\t\t3788\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1229,\n\t\t\t\t3898\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1274,\n\t\t\t\t3909\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1226,\n\t\t\t\t4002\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1282,\n\t\t\t\t4043\n\t\t\t],\n\t\t\t[\n\t\t\t\t152,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1434,\n\t\t\t\t4049\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1450,\n\t\t\t\t4076\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t946,\n\t\t\t\t1396\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t885,\n\t\t\t\t1326\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t889,\n\t\t\t\t1297\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-142,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t164\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t760,\n\t\t\t\t1384\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t769,\n\t\t\t\t1380\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t908,\n\t\t\t\t1217\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t902,\n\t\t\t\t1163\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2246,\n\t\t\t\t1080\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-126\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t151,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t905\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2533,\n\t\t\t\t887\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-258,\n\t\t\t\t149\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1961,\n\t\t\t\t809\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t155\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2060,\n\t\t\t\t964\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2134,\n\t\t\t\t1028\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2152,\n\t\t\t\t1065\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2203,\n\t\t\t\t1078\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2888,\n\t\t\t\t5800\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2921,\n\t\t\t\t5617\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2898,\n\t\t\t\t5588\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2821,\n\t\t\t\t5488\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2794,\n\t\t\t\t5257\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2795,\n\t\t\t\t5210\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2759,\n\t\t\t\t5212\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2752,\n\t\t\t\t5189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t5179\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2628,\n\t\t\t\t5197\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2581,\n\t\t\t\t5225\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t5265\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2471,\n\t\t\t\t5229\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t172\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2527,\n\t\t\t\t5618\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2506,\n\t\t\t\t5801\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2600,\n\t\t\t\t5778\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2640,\n\t\t\t\t5877\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1756,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1842,\n\t\t\t\t4670\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-151\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1912,\n\t\t\t\t4519\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1917,\n\t\t\t\t4450\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1839,\n\t\t\t\t4273\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1828,\n\t\t\t\t4251\n\t\t\t],\n\t\t\t[\n\t\t\t\t-128,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1679,\n\t\t\t\t4327\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t219\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1703,\n\t\t\t\t4576\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1702,\n\t\t\t\t4718\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1716,\n\t\t\t\t4772\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t670,\n\t\t\t\t3237\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t723,\n\t\t\t\t3178\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t763,\n\t\t\t\t3131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t748,\n\t\t\t\t3118\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t780,\n\t\t\t\t3070\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t666,\n\t\t\t\t2973\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t577,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t112\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5391,\n\t\t\t\t6520\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5430,\n\t\t\t\t6503\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5528,\n\t\t\t\t6400\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5519,\n\t\t\t\t6389\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5515,\n\t\t\t\t6327\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5448,\n\t\t\t\t6268\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5426,\n\t\t\t\t6277\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5390,\n\t\t\t\t6323\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5290,\n\t\t\t\t6320\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5325,\n\t\t\t\t6459\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5326,\n\t\t\t\t6485\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2765,\n\t\t\t\t1304\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2842,\n\t\t\t\t1182\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2861,\n\t\t\t\t1184\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2811,\n\t\t\t\t1064\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2667,\n\t\t\t\t937\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2700,\n\t\t\t\t1041\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2707,\n\t\t\t\t1137\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t116\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2752,\n\t\t\t\t1322\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6020,\n\t\t\t\t3828\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6026,\n\t\t\t\t3809\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6094,\n\t\t\t\t3725\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6156,\n\t\t\t\t3740\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6165,\n\t\t\t\t3703\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6185,\n\t\t\t\t3616\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6138,\n\t\t\t\t3574\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6130,\n\t\t\t\t3552\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6162,\n\t\t\t\t3519\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-116\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6259,\n\t\t\t\t3418\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6297,\n\t\t\t\t3371\n\t\t\t],\n\t\t\t[\n\t\t\t\t-123,\n\t\t\t\t-133\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6174,\n\t\t\t\t3238\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6149,\n\t\t\t\t3236\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t-150\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5790,\n\t\t\t\t3082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5583,\n\t\t\t\t3222\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5467,\n\t\t\t\t3225\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5475,\n\t\t\t\t3307\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5517,\n\t\t\t\t3382\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t171,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5788,\n\t\t\t\t3753\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5898,\n\t\t\t\t2584\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6224,\n\t\t\t\t2548\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-110\n\t\t\t],\n\t\t\t[\n\t\t\t\t-153,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t128\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5778,\n\t\t\t\t2235\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5784,\n\t\t\t\t2257\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5699,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5697,\n\t\t\t\t2383\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5779,\n\t\t\t\t2545\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5924,\n\t\t\t\t5911\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5938,\n\t\t\t\t5867\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5989,\n\t\t\t\t5816\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6007,\n\t\t\t\t5713\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5948,\n\t\t\t\t5612\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5929,\n\t\t\t\t5604\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5913,\n\t\t\t\t5583\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5731,\n\t\t\t\t5784\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5604,\n\t\t\t\t6717\n\t\t\t],\n\t\t\t[\n\t\t\t\t135,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5761,\n\t\t\t\t6700\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5910,\n\t\t\t\t6498\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5849,\n\t\t\t\t6433\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5761,\n\t\t\t\t6448\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5622,\n\t\t\t\t6493\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5589,\n\t\t\t\t6494\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5528,\n\t\t\t\t6400\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5386,\n\t\t\t\t6702\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5475,\n\t\t\t\t6756\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4347,\n\t\t\t\t3896\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4527,\n\t\t\t\t3946\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4539,\n\t\t\t\t3943\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4515,\n\t\t\t\t3824\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4495,\n\t\t\t\t3843\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4437,\n\t\t\t\t3830\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4276,\n\t\t\t\t3726\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4240,\n\t\t\t\t3760\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4229,\n\t\t\t\t3757\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4261,\n\t\t\t\t3793\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4258,\n\t\t\t\t3911\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4290,\n\t\t\t\t3944\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6490,\n\t\t\t\t7359\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6531,\n\t\t\t\t7385\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6545,\n\t\t\t\t7387\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6579,\n\t\t\t\t7308\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6587,\n\t\t\t\t7251\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6597,\n\t\t\t\t7247\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6583,\n\t\t\t\t7187\n\t\t\t],\n\t\t\t[\n\t\t\t\t-122,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6461,\n\t\t\t\t7146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6457,\n\t\t\t\t7107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6430,\n\t\t\t\t7129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6346,\n\t\t\t\t7192\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6331,\n\t\t\t\t7238\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6322,\n\t\t\t\t7337\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6491,\n\t\t\t\t7734\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6497,\n\t\t\t\t7719\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6605,\n\t\t\t\t7426\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6580,\n\t\t\t\t7420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6573,\n\t\t\t\t7388\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6490,\n\t\t\t\t7359\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6411,\n\t\t\t\t7433\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6389,\n\t\t\t\t7457\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6258,\n\t\t\t\t7477\n\t\t\t],\n\t\t\t[\n\t\t\t\t149,\n\t\t\t\t163\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6477,\n\t\t\t\t7675\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4596,\n\t\t\t\t8228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4467,\n\t\t\t\t8052\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4219,\n\t\t\t\t8086\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4316,\n\t\t\t\t8185\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4428,\n\t\t\t\t8314\n\t\t\t],\n\t\t\t[\n\t\t\t\t168,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6987,\n\t\t\t\t8292\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t-188\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7188,\n\t\t\t\t8085\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7029,\n\t\t\t\t7758\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6992,\n\t\t\t\t7792\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6835,\n\t\t\t\t7862\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6824,\n\t\t\t\t7970\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t172\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6851,\n\t\t\t\t8272\n\t\t\t],\n\t\t\t[\n\t\t\t\t136,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3015,\n\t\t\t\t1244\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3084,\n\t\t\t\t1274\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-180,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2861,\n\t\t\t\t1184\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2961,\n\t\t\t\t1295\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4854,\n\t\t\t\t6540\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4893,\n\t\t\t\t6455\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4826,\n\t\t\t\t6285\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4735,\n\t\t\t\t6210\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4555,\n\t\t\t\t6288\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4559,\n\t\t\t\t6375\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4632,\n\t\t\t\t6484\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4772,\n\t\t\t\t6539\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4817,\n\t\t\t\t6551\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3140,\n\t\t\t\t4895\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3056,\n\t\t\t\t4893\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2962,\n\t\t\t\t5061\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2893,\n\t\t\t\t5106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2997,\n\t\t\t\t5189\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3031,\n\t\t\t\t5220\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1578,\n\t\t\t\t5968\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1541,\n\t\t\t\t5959\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1527,\n\t\t\t\t5946\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1315,\n\t\t\t\t5914\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1324,\n\t\t\t\t5968\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t149,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6365,\n\t\t\t\t6016\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6397,\n\t\t\t\t5964\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6376,\n\t\t\t\t5930\n\t\t\t],\n\t\t\t[\n\t\t\t\t-128,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6248,\n\t\t\t\t5858\n\t\t\t],\n\t\t\t[\n\t\t\t\t-142,\n\t\t\t\t-173\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6106,\n\t\t\t\t5685\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6049,\n\t\t\t\t5559\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5948,\n\t\t\t\t5612\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5989,\n\t\t\t\t5816\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5938,\n\t\t\t\t5867\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6076,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6124,\n\t\t\t\t6141\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6199,\n\t\t\t\t6196\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1150,\n\t\t\t\t5476\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1211,\n\t\t\t\t5417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1167,\n\t\t\t\t5337\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1077,\n\t\t\t\t5231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1020,\n\t\t\t\t5269\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t969,\n\t\t\t\t5246\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t806,\n\t\t\t\t5389\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t848,\n\t\t\t\t5464\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t814,\n\t\t\t\t5540\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4316,\n\t\t\t\t8185\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4082,\n\t\t\t\t8067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4028,\n\t\t\t\t8159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4012,\n\t\t\t\t8173\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t171\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t172\n\t\t\t],\n\t\t\t[\n\t\t\t\t205,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-212\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3343,\n\t\t\t\t4958\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-146\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3415,\n\t\t\t\t4812\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3313,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3207,\n\t\t\t\t4770\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3171,\n\t\t\t\t4720\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3073,\n\t\t\t\t4695\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3039,\n\t\t\t\t4717\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t154\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3004,\n\t\t\t\t4871\n\t\t\t],\n\t\t\t[\n\t\t\t\t136,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3252,\n\t\t\t\t4942\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3289,\n\t\t\t\t4978\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4113,\n\t\t\t\t3859\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4200,\n\t\t\t\t3815\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4234,\n\t\t\t\t3777\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4229,\n\t\t\t\t3757\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4054,\n\t\t\t\t3570\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3921,\n\t\t\t\t3563\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3899,\n\t\t\t\t3633\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3938,\n\t\t\t\t3705\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3996,\n\t\t\t\t3757\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7956,\n\t\t\t\t6871\n\t\t\t],\n\t\t\t[\n\t\t\t\t-167,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7777,\n\t\t\t\t6865\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7634,\n\t\t\t\t6994\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7600,\n\t\t\t\t7032\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t194\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7594,\n\t\t\t\t7226\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t127,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-118\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t-143\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6455,\n\t\t\t\t7747\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6258,\n\t\t\t\t7477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t114\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2846,\n\t\t\t\t2058\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2925,\n\t\t\t\t1994\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-171\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2907,\n\t\t\t\t1770\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2793,\n\t\t\t\t1802\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t99\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2658,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2668,\n\t\t\t\t2038\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2785,\n\t\t\t\t2057\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7247,\n\t\t\t\t7056\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t123,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7434,\n\t\t\t\t6952\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7447,\n\t\t\t\t6863\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7510,\n\t\t\t\t6788\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7459,\n\t\t\t\t6665\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7254,\n\t\t\t\t6687\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7203,\n\t\t\t\t6651\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7104,\n\t\t\t\t6798\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7080,\n\t\t\t\t6856\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7108,\n\t\t\t\t6884\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7162,\n\t\t\t\t6892\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t138\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7163,\n\t\t\t\t7030\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7167,\n\t\t\t\t7069\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4740,\n\t\t\t\t4889\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4715,\n\t\t\t\t4819\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4734,\n\t\t\t\t4798\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4601,\n\t\t\t\t4774\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4344,\n\t\t\t\t4652\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4258,\n\t\t\t\t4763\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4243,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4235,\n\t\t\t\t4866\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4240,\n\t\t\t\t4938\n\t\t\t],\n\t\t\t[\n\t\t\t\t184,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4477,\n\t\t\t\t4941\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4620,\n\t\t\t\t4929\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4674,\n\t\t\t\t4987\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4433,\n\t\t\t\t5138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4423,\n\t\t\t\t5081\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4432,\n\t\t\t\t5044\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4508,\n\t\t\t\t4964\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4240,\n\t\t\t\t4938\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4147,\n\t\t\t\t4990\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4136,\n\t\t\t\t5064\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4220,\n\t\t\t\t5035\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4265,\n\t\t\t\t5096\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4363,\n\t\t\t\t5118\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4366,\n\t\t\t\t5141\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t940,\n\t\t\t\t5583\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t903,\n\t\t\t\t5551\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t764,\n\t\t\t\t5648\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t723,\n\t\t\t\t5680\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t719,\n\t\t\t\t5664\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t672,\n\t\t\t\t5687\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t670,\n\t\t\t\t5615\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t884,\n\t\t\t\t5875\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5622,\n\t\t\t\t6493\n\t\t\t],\n\t\t\t[\n\t\t\t\t139,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5761,\n\t\t\t\t6448\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5808,\n\t\t\t\t6387\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5872,\n\t\t\t\t6321\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5873,\n\t\t\t\t6293\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5688,\n\t\t\t\t6064\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5615,\n\t\t\t\t6130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5499,\n\t\t\t\t6282\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5519,\n\t\t\t\t6389\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3625,\n\t\t\t\t7042\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3714,\n\t\t\t\t7027\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3683,\n\t\t\t\t6916\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3695,\n\t\t\t\t6854\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3555,\n\t\t\t\t6842\n\t\t\t],\n\t\t\t[\n\t\t\t\t-147,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3408,\n\t\t\t\t6901\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3418,\n\t\t\t\t6922\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3411,\n\t\t\t\t6931\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3556,\n\t\t\t\t7015\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5419,\n\t\t\t\t2452\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5462,\n\t\t\t\t2533\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5540,\n\t\t\t\t2477\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5668,\n\t\t\t\t2374\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5699,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5778,\n\t\t\t\t2235\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-171\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5605,\n\t\t\t\t2044\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5426,\n\t\t\t\t2174\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5256,\n\t\t\t\t2255\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5228,\n\t\t\t\t2338\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5233,\n\t\t\t\t2427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5290,\n\t\t\t\t2520\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5321,\n\t\t\t\t2553\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3143,\n\t\t\t\t4359\n\t\t\t],\n\t\t\t[\n\t\t\t\t173,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3316,\n\t\t\t\t4333\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3323,\n\t\t\t\t4211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3235,\n\t\t\t\t4158\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3130,\n\t\t\t\t3915\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3107,\n\t\t\t\t3979\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t124\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3091,\n\t\t\t\t4138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3065,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3020,\n\t\t\t\t4204\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3002,\n\t\t\t\t4191\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2992,\n\t\t\t\t4255\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3020,\n\t\t\t\t4332\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2000,\n\t\t\t\t4887\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2185,\n\t\t\t\t4816\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2169,\n\t\t\t\t4774\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2246,\n\t\t\t\t4505\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2236,\n\t\t\t\t4470\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-255\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2279,\n\t\t\t\t4151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2268,\n\t\t\t\t4089\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2190,\n\t\t\t\t4057\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2019,\n\t\t\t\t4010\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1922,\n\t\t\t\t4157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1878,\n\t\t\t\t4204\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1848,\n\t\t\t\t4227\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1831,\n\t\t\t\t4222\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1917,\n\t\t\t\t4450\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1842,\n\t\t\t\t4670\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1812,\n\t\t\t\t4697\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1982,\n\t\t\t\t4781\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1950,\n\t\t\t\t4925\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4251,\n\t\t\t\t4043\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4300,\n\t\t\t\t3963\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4261,\n\t\t\t\t3793\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4200,\n\t\t\t\t3815\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4102,\n\t\t\t\t3942\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4099,\n\t\t\t\t3999\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4192,\n\t\t\t\t4009\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4226,\n\t\t\t\t4022\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2124,\n\t\t\t\t5859\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2117,\n\t\t\t\t5794\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2095,\n\t\t\t\t5771\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2003,\n\t\t\t\t5778\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1907,\n\t\t\t\t5799\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2034,\n\t\t\t\t6280\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7217,\n\t\t\t\t8101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7216,\n\t\t\t\t8096\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6987,\n\t\t\t\t8292\n\t\t\t],\n\t\t\t[\n\t\t\t\t194,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t210,\n\t\t\t\t309\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-178\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-136,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6671,\n\t\t\t\t7398\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6752,\n\t\t\t\t7298\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6627,\n\t\t\t\t7222\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6587,\n\t\t\t\t7251\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6545,\n\t\t\t\t7387\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6580,\n\t\t\t\t7420\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4082,\n\t\t\t\t8067\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-173\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4251,\n\t\t\t\t7860\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-137\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4349,\n\t\t\t\t7723\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-152\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4283,\n\t\t\t\t7530\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4162,\n\t\t\t\t7580\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4121,\n\t\t\t\t7623\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t185\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4063,\n\t\t\t\t7808\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t172\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3950,\n\t\t\t\t7980\n\t\t\t],\n\t\t\t[\n\t\t\t\t-138,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3812,\n\t\t\t\t8047\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3826,\n\t\t\t\t8078\n\t\t\t],\n\t\t\t[\n\t\t\t\t159,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4012,\n\t\t\t\t8173\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5615,\n\t\t\t\t6130\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5614,\n\t\t\t\t6034\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5740,\n\t\t\t\t5903\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5483,\n\t\t\t\t5744\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5379,\n\t\t\t\t5842\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5362,\n\t\t\t\t5906\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t144\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5320,\n\t\t\t\t6050\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5435,\n\t\t\t\t6222\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5417,\n\t\t\t\t6249\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5448,\n\t\t\t\t6268\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3705,\n\t\t\t\t7481\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3777,\n\t\t\t\t7397\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-174\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3800,\n\t\t\t\t7223\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3774,\n\t\t\t\t7137\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3625,\n\t\t\t\t7042\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3566,\n\t\t\t\t7071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3458,\n\t\t\t\t7202\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3416,\n\t\t\t\t7267\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3362,\n\t\t\t\t7276\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3438,\n\t\t\t\t7476\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t145,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6475,\n\t\t\t\t3951\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6427,\n\t\t\t\t3783\n\t\t\t],\n\t\t\t[\n\t\t\t\t-161,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6266,\n\t\t\t\t3739\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6207,\n\t\t\t\t3733\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6194,\n\t\t\t\t3712\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6147,\n\t\t\t\t3752\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t224\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6128,\n\t\t\t\t4303\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6134,\n\t\t\t\t4320\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6251,\n\t\t\t\t4417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6266,\n\t\t\t\t4312\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7465,\n\t\t\t\t5394\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7502,\n\t\t\t\t5279\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7478,\n\t\t\t\t5167\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7526,\n\t\t\t\t5072\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7563,\n\t\t\t\t5071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7533,\n\t\t\t\t4998\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7535,\n\t\t\t\t4966\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7430,\n\t\t\t\t4927\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7406,\n\t\t\t\t4890\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7307,\n\t\t\t\t4820\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7189,\n\t\t\t\t4864\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7139,\n\t\t\t\t4873\n\t\t\t],\n\t\t\t[\n\t\t\t\t-173,\n\t\t\t\t131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6966,\n\t\t\t\t5004\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7088,\n\t\t\t\t5200\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7185,\n\t\t\t\t5383\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7238,\n\t\t\t\t5419\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7264,\n\t\t\t\t5463\n\t\t\t],\n\t\t\t[\n\t\t\t\t152,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6210,\n\t\t\t\t6711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6079,\n\t\t\t\t6575\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5905,\n\t\t\t\t6562\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5844,\n\t\t\t\t6711\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6129,\n\t\t\t\t6879\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1569,\n\t\t\t\t5583\n\t\t\t],\n\t\t\t[\n\t\t\t\t141,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t130,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1840,\n\t\t\t\t5485\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1929,\n\t\t\t\t5455\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1908,\n\t\t\t\t5426\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2002,\n\t\t\t\t5393\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1958,\n\t\t\t\t5260\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1945,\n\t\t\t\t5265\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1946,\n\t\t\t\t5235\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1879,\n\t\t\t\t5226\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1806,\n\t\t\t\t5197\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1760,\n\t\t\t\t5232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1742,\n\t\t\t\t5226\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1709,\n\t\t\t\t5166\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1691,\n\t\t\t\t5156\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1685,\n\t\t\t\t5181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1633,\n\t\t\t\t5164\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1529,\n\t\t\t\t5196\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1544,\n\t\t\t\t5215\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1451,\n\t\t\t\t5360\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1405,\n\t\t\t\t5496\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2511,\n\t\t\t\t2231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2497,\n\t\t\t\t2194\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-116\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2512,\n\t\t\t\t2078\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2345,\n\t\t\t\t2035\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2234,\n\t\t\t\t2082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2229,\n\t\t\t\t2124\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2175,\n\t\t\t\t2174\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2280,\n\t\t\t\t2225\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2384,\n\t\t\t\t2290\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2387,\n\t\t\t\t2281\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1274,\n\t\t\t\t3909\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1205,\n\t\t\t\t3894\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1191,\n\t\t\t\t3968\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1064,\n\t\t\t\t3923\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1042,\n\t\t\t\t4006\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1028,\n\t\t\t\t4116\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1067,\n\t\t\t\t4134\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1098,\n\t\t\t\t4188\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1157,\n\t\t\t\t4186\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1160,\n\t\t\t\t4197\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-132\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2592,\n\t\t\t\t6801\n\t\t\t],\n\t\t\t[\n\t\t\t\t209,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2801,\n\t\t\t\t6783\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2818,\n\t\t\t\t6689\n\t\t\t],\n\t\t\t[\n\t\t\t\t-221,\n\t\t\t\t-105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2560,\n\t\t\t\t6594\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t6558\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t6626\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2419,\n\t\t\t\t6823\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2529,\n\t\t\t\t6885\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2546,\n\t\t\t\t6874\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3557,\n\t\t\t\t4068\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3595,\n\t\t\t\t4063\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3614,\n\t\t\t\t4064\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3632,\n\t\t\t\t4028\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3662,\n\t\t\t\t4009\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3489,\n\t\t\t\t3918\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3458,\n\t\t\t\t4119\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3535,\n\t\t\t\t4098\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4347,\n\t\t\t\t3896\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4290,\n\t\t\t\t3944\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4251,\n\t\t\t\t4043\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4192,\n\t\t\t\t4009\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4151,\n\t\t\t\t4066\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4117,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4185,\n\t\t\t\t4222\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4202,\n\t\t\t\t4484\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4283,\n\t\t\t\t4524\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1075,\n\t\t\t\t1279\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1201,\n\t\t\t\t1332\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1206,\n\t\t\t\t1270\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1283,\n\t\t\t\t1233\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1251,\n\t\t\t\t1157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1274,\n\t\t\t\t1077\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1306,\n\t\t\t\t1064\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t-164\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1158,\n\t\t\t\t771\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1014,\n\t\t\t\t907\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t980,\n\t\t\t\t936\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t957,\n\t\t\t\t1002\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t926,\n\t\t\t\t1101\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t885,\n\t\t\t\t1326\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t985,\n\t\t\t\t1402\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t980,\n\t\t\t\t1367\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t908,\n\t\t\t\t1217\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3566,\n\t\t\t\t7071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3411,\n\t\t\t\t6931\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3364,\n\t\t\t\t6927\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3352,\n\t\t\t\t6933\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t132\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3317,\n\t\t\t\t7134\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3290,\n\t\t\t\t7253\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3416,\n\t\t\t\t7267\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3695,\n\t\t\t\t6854\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3725,\n\t\t\t\t6839\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3752,\n\t\t\t\t6755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-145,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3607,\n\t\t\t\t6673\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3620,\n\t\t\t\t6628\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3525,\n\t\t\t\t6556\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3457,\n\t\t\t\t6511\n\t\t\t],\n\t\t\t[\n\t\t\t\t-134,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3272,\n\t\t\t\t6458\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3222,\n\t\t\t\t6649\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3258,\n\t\t\t\t6672\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3386,\n\t\t\t\t6729\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3471,\n\t\t\t\t6802\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2829,\n\t\t\t\t4727\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2878,\n\t\t\t\t4621\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2981,\n\t\t\t\t4568\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3003,\n\t\t\t\t4418\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2992,\n\t\t\t\t4255\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2987,\n\t\t\t\t4181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-148,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2839,\n\t\t\t\t4131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2793,\n\t\t\t\t4125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2757,\n\t\t\t\t4140\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2584,\n\t\t\t\t4081\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2524,\n\t\t\t\t4105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2505,\n\t\t\t\t4177\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t209\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2508,\n\t\t\t\t4531\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2452,\n\t\t\t\t4590\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2514,\n\t\t\t\t4668\n\t\t\t],\n\t\t\t[\n\t\t\t\t164,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2678,\n\t\t\t\t4717\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2693,\n\t\t\t\t4805\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2703,\n\t\t\t\t4818\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1646,\n\t\t\t\t3589\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1744,\n\t\t\t\t3386\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1778,\n\t\t\t\t3310\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1726,\n\t\t\t\t3276\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t3232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1554,\n\t\t\t\t3576\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1574,\n\t\t\t\t3563\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1593,\n\t\t\t\t3604\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4229,\n\t\t\t\t6023\n\t\t\t],\n\t\t\t[\n\t\t\t\t135,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-218\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4425,\n\t\t\t\t5690\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4463,\n\t\t\t\t5694\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t5611\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4432,\n\t\t\t\t5559\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4377,\n\t\t\t\t5558\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4292,\n\t\t\t\t5519\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4256,\n\t\t\t\t5542\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4221,\n\t\t\t\t5526\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4204,\n\t\t\t\t5566\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t154\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4088,\n\t\t\t\t5720\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4083,\n\t\t\t\t5877\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t135\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4142,\n\t\t\t\t6067\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4329,\n\t\t\t\t5331\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-213\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4363,\n\t\t\t\t5118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4220,\n\t\t\t\t5035\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4106,\n\t\t\t\t5096\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4075,\n\t\t\t\t5162\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4113,\n\t\t\t\t5245\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4133,\n\t\t\t\t5254\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4184,\n\t\t\t\t5281\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4218,\n\t\t\t\t5269\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4277,\n\t\t\t\t5321\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6791,\n\t\t\t\t6859\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6883,\n\t\t\t\t6852\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6856,\n\t\t\t\t6730\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6878,\n\t\t\t\t6631\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6818,\n\t\t\t\t6605\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6781,\n\t\t\t\t6623\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6706,\n\t\t\t\t6587\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6716,\n\t\t\t\t6752\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6682,\n\t\t\t\t6835\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6699,\n\t\t\t\t6837\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6713,\n\t\t\t\t6875\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7600,\n\t\t\t\t7032\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7478,\n\t\t\t\t6965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7247,\n\t\t\t\t7056\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7269,\n\t\t\t\t7149\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7301,\n\t\t\t\t7369\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7464,\n\t\t\t\t7444\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7497,\n\t\t\t\t7482\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-164\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4140,\n\t\t\t\t7603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4202,\n\t\t\t\t7326\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4159,\n\t\t\t\t7291\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4148,\n\t\t\t\t7303\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4070,\n\t\t\t\t7282\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4056,\n\t\t\t\t7309\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3866,\n\t\t\t\t7263\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3837,\n\t\t\t\t7272\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t125\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3777,\n\t\t\t\t7397\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3767,\n\t\t\t\t7434\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3838,\n\t\t\t\t7470\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3931,\n\t\t\t\t7519\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3944,\n\t\t\t\t7541\n\t\t\t],\n\t\t\t[\n\t\t\t\t177,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4121,\n\t\t\t\t7623\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1748,\n\t\t\t\t250\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-180,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1632,\n\t\t\t\t409\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3800,\n\t\t\t\t6724\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3852,\n\t\t\t\t6677\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3942,\n\t\t\t\t6696\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3865,\n\t\t\t\t6503\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3829,\n\t\t\t\t6436\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3782,\n\t\t\t\t6439\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3768,\n\t\t\t\t6423\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3694,\n\t\t\t\t6515\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3612,\n\t\t\t\t6556\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3593,\n\t\t\t\t6554\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3607,\n\t\t\t\t6673\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3738,\n\t\t\t\t6735\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5333,\n\t\t\t\t4099\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5437,\n\t\t\t\t4044\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5357,\n\t\t\t\t3744\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5325,\n\t\t\t\t3721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5296,\n\t\t\t\t3734\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4974,\n\t\t\t\t3610\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4955,\n\t\t\t\t3656\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4931,\n\t\t\t\t3714\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4901,\n\t\t\t\t3810\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4946,\n\t\t\t\t3977\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4907,\n\t\t\t\t4094\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4974,\n\t\t\t\t4214\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t133,\n\t\t\t\t-159\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5741,\n\t\t\t\t3812\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5792,\n\t\t\t\t3789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5517,\n\t\t\t\t3382\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5431,\n\t\t\t\t3450\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5407,\n\t\t\t\t3634\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5311,\n\t\t\t\t3635\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5325,\n\t\t\t\t3721\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5402,\n\t\t\t\t3761\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1946,\n\t\t\t\t1240\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2023,\n\t\t\t\t1165\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2150,\n\t\t\t\t1117\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2134,\n\t\t\t\t1028\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1904,\n\t\t\t\t767\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1782,\n\t\t\t\t755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1760,\n\t\t\t\t769\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1667,\n\t\t\t\t891\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1621,\n\t\t\t\t869\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1608,\n\t\t\t\t926\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1626,\n\t\t\t\t987\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1608,\n\t\t\t\t1065\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1644,\n\t\t\t\t1160\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1588,\n\t\t\t\t4600\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1672,\n\t\t\t\t4600\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1679,\n\t\t\t\t4327\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1643,\n\t\t\t\t4238\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1589,\n\t\t\t\t4290\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1568,\n\t\t\t\t4332\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1563,\n\t\t\t\t4375\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1552,\n\t\t\t\t4442\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1504,\n\t\t\t\t4518\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t4563\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1495,\n\t\t\t\t4584\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2728,\n\t\t\t\t6124\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-208\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2676,\n\t\t\t\t5902\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2600,\n\t\t\t\t5778\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2497,\n\t\t\t\t6097\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2593,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2627,\n\t\t\t\t6119\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2672,\n\t\t\t\t6181\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5186,\n\t\t\t\t4789\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5145,\n\t\t\t\t4552\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5127,\n\t\t\t\t4581\n\t\t\t],\n\t\t\t[\n\t\t\t\t-123,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5004,\n\t\t\t\t4545\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4933,\n\t\t\t\t4628\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4930,\n\t\t\t\t4644\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4898,\n\t\t\t\t4761\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5032,\n\t\t\t\t4817\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5162,\n\t\t\t\t4835\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1896,\n\t\t\t\t3625\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1926,\n\t\t\t\t3603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1836,\n\t\t\t\t3413\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1646,\n\t\t\t\t3589\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1673,\n\t\t\t\t3620\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1755,\n\t\t\t\t3665\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1853,\n\t\t\t\t3718\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1869,\n\t\t\t\t3716\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1568,\n\t\t\t\t4332\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1554,\n\t\t\t\t4271\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-203\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1469,\n\t\t\t\t4067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1434,\n\t\t\t\t4049\n\t\t\t],\n\t\t\t[\n\t\t\t\t-152,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1226,\n\t\t\t\t4002\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t190\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1160,\n\t\t\t\t4197\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1229,\n\t\t\t\t4256\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1242,\n\t\t\t\t4288\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t153,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1408,\n\t\t\t\t4303\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1522,\n\t\t\t\t4357\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4204,\n\t\t\t\t5566\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4218,\n\t\t\t\t5544\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4076,\n\t\t\t\t5481\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3993,\n\t\t\t\t5459\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3858,\n\t\t\t\t5581\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3985,\n\t\t\t\t5752\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8433,\n\t\t\t\t5612\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8374,\n\t\t\t\t5572\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8300,\n\t\t\t\t5631\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8319,\n\t\t\t\t5523\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8298,\n\t\t\t\t5490\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8215,\n\t\t\t\t5412\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8166,\n\t\t\t\t5375\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8203,\n\t\t\t\t5629\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8206,\n\t\t\t\t5657\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8136,\n\t\t\t\t5791\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8263,\n\t\t\t\t6093\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-154,\n\t\t\t\t-149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8106,\n\t\t\t\t5340\n\t\t\t],\n\t\t\t[\n\t\t\t\t166,\n\t\t\t\t-186\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8272,\n\t\t\t\t5154\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8304,\n\t\t\t\t5131\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8344,\n\t\t\t\t5133\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-178\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8185,\n\t\t\t\t4729\n\t\t\t],\n\t\t\t[\n\t\t\t\t-340,\n\t\t\t\t142\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7845,\n\t\t\t\t4871\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7850,\n\t\t\t\t4925\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7886,\n\t\t\t\t4933\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7911,\n\t\t\t\t4938\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7932,\n\t\t\t\t4949\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7975,\n\t\t\t\t4937\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t207\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7999,\n\t\t\t\t5144\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7992,\n\t\t\t\t5190\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8035,\n\t\t\t\t5223\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8088,\n\t\t\t\t5336\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6535,\n\t\t\t\t3546\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6580,\n\t\t\t\t3396\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6490,\n\t\t\t\t3350\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6548,\n\t\t\t\t3266\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6478,\n\t\t\t\t3245\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6342,\n\t\t\t\t3205\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6210,\n\t\t\t\t3208\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6297,\n\t\t\t\t3371\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6162,\n\t\t\t\t3519\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6138,\n\t\t\t\t3574\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6165,\n\t\t\t\t3703\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6156,\n\t\t\t\t3740\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6207,\n\t\t\t\t3733\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6427,\n\t\t\t\t3783\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1158,\n\t\t\t\t771\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1207,\n\t\t\t\t795\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1186,\n\t\t\t\t725\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1055,\n\t\t\t\t639\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t154\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t134\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t151\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t957,\n\t\t\t\t1002\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t980,\n\t\t\t\t936\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t868,\n\t\t\t\t965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-168\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t153,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4844,\n\t\t\t\t4720\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4933,\n\t\t\t\t4628\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4890,\n\t\t\t\t4647\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4892,\n\t\t\t\t4636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4849,\n\t\t\t\t4615\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4833,\n\t\t\t\t4595\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4814,\n\t\t\t\t4528\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4757,\n\t\t\t\t4537\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4727,\n\t\t\t\t4595\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4718,\n\t\t\t\t4750\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4734,\n\t\t\t\t4798\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4748,\n\t\t\t\t4812\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3933,\n\t\t\t\t4351\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4124,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4117,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4151,\n\t\t\t\t4066\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4102,\n\t\t\t\t3942\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3996,\n\t\t\t\t3757\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3886,\n\t\t\t\t3929\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3738,\n\t\t\t\t3875\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3751,\n\t\t\t\t3855\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3717,\n\t\t\t\t3920\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3668,\n\t\t\t\t4003\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3632,\n\t\t\t\t4028\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3657,\n\t\t\t\t4095\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t157\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3678,\n\t\t\t\t4252\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3803,\n\t\t\t\t4315\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1671,\n\t\t\t\t5871\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1819,\n\t\t\t\t5889\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1907,\n\t\t\t\t5799\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2095,\n\t\t\t\t5771\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2150,\n\t\t\t\t5755\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2158,\n\t\t\t\t5658\n\t\t\t],\n\t\t\t[\n\t\t\t\t-166,\n\t\t\t\t-100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1942,\n\t\t\t\t5490\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1929,\n\t\t\t\t5455\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1569,\n\t\t\t\t5583\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1477,\n\t\t\t\t5937\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1541,\n\t\t\t\t5959\n\t\t\t],\n\t\t\t[\n\t\t\t\t125,\n\t\t\t\t-109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6147,\n\t\t\t\t3752\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6156,\n\t\t\t\t3740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6026,\n\t\t\t\t3809\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6000,\n\t\t\t\t4266\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6062,\n\t\t\t\t4310\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6468,\n\t\t\t\t8082\n\t\t\t],\n\t\t\t[\n\t\t\t\t153,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6753,\n\t\t\t\t8051\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6835,\n\t\t\t\t7862\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6652,\n\t\t\t\t7871\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6629,\n\t\t\t\t7836\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6492,\n\t\t\t\t7771\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4934,\n\t\t\t\t7635\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4838,\n\t\t\t\t7721\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4930,\n\t\t\t\t8172\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-122\n\t\t\t],\n\t\t\t[\n\t\t\t\t-138,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-281\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1595,\n\t\t\t\t1721\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1582,\n\t\t\t\t1643\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1592,\n\t\t\t\t1460\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1610,\n\t\t\t\t1456\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1397,\n\t\t\t\t1491\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1342,\n\t\t\t\t1501\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1353,\n\t\t\t\t1612\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1542,\n\t\t\t\t1765\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3950,\n\t\t\t\t7980\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t-172\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3944,\n\t\t\t\t7541\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3838,\n\t\t\t\t7470\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3636,\n\t\t\t\t7762\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3588,\n\t\t\t\t7881\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3826,\n\t\t\t\t8078\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1879,\n\t\t\t\t5226\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1946,\n\t\t\t\t5235\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1956,\n\t\t\t\t5169\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1978,\n\t\t\t\t5168\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2035,\n\t\t\t\t5039\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2028,\n\t\t\t\t5025\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1953,\n\t\t\t\t4940\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1735,\n\t\t\t\t5067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1760,\n\t\t\t\t5232\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4844,\n\t\t\t\t3836\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4931,\n\t\t\t\t3714\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4680,\n\t\t\t\t3694\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4628,\n\t\t\t\t3752\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4491,\n\t\t\t\t3746\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4488,\n\t\t\t\t3805\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4515,\n\t\t\t\t3824\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4539,\n\t\t\t\t3943\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4557,\n\t\t\t\t3932\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3336,\n\t\t\t\t7361\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3290,\n\t\t\t\t7253\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3312,\n\t\t\t\t7180\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3228,\n\t\t\t\t7165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-156,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3033,\n\t\t\t\t7322\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3216,\n\t\t\t\t7408\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4961,\n\t\t\t\t5978\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4998,\n\t\t\t\t5982\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5018,\n\t\t\t\t5962\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5019,\n\t\t\t\t5714\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5069,\n\t\t\t\t5607\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5062,\n\t\t\t\t5578\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5025,\n\t\t\t\t5522\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4972,\n\t\t\t\t5503\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4853,\n\t\t\t\t5499\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4829,\n\t\t\t\t5573\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4781,\n\t\t\t\t5581\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4724,\n\t\t\t\t5609\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4686,\n\t\t\t\t5647\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4668,\n\t\t\t\t5649\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4676,\n\t\t\t\t5719\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t146\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4619,\n\t\t\t\t5865\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4608,\n\t\t\t\t5920\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4635,\n\t\t\t\t5931\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4832,\n\t\t\t\t5956\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4852,\n\t\t\t\t6007\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4874,\n\t\t\t\t6005\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2705,\n\t\t\t\t3948\n\t\t\t],\n\t\t\t[\n\t\t\t\t123,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2828,\n\t\t\t\t3976\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2836,\n\t\t\t\t3953\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2905,\n\t\t\t\t3795\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2846,\n\t\t\t\t3698\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2660,\n\t\t\t\t3855\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2691,\n\t\t\t\t3972\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6149,\n\t\t\t\t7119\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6256,\n\t\t\t\t7104\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6258,\n\t\t\t\t7063\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6205,\n\t\t\t\t6945\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6178,\n\t\t\t\t6888\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6167,\n\t\t\t\t6896\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6050,\n\t\t\t\t7014\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5966,\n\t\t\t\t7067\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6009,\n\t\t\t\t7160\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8433,\n\t\t\t\t5612\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-141\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-80\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8304,\n\t\t\t\t5131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8106,\n\t\t\t\t5340\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8166,\n\t\t\t\t5375\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8298,\n\t\t\t\t5490\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8300,\n\t\t\t\t5631\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4472,\n\t\t\t\t6289\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4735,\n\t\t\t\t6210\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4825,\n\t\t\t\t6060\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4832,\n\t\t\t\t5956\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4635,\n\t\t\t\t5931\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4557,\n\t\t\t\t6034\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4377,\n\t\t\t\t6111\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4384,\n\t\t\t\t6181\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4365,\n\t\t\t\t6304\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6665,\n\t\t\t\t8364\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6448,\n\t\t\t\t8281\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6484,\n\t\t\t\t8682\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t230,\n\t\t\t\t124\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-182\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-193\n\t\t\t],\n\t\t\t[\n\t\t\t\t-144,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2059,\n\t\t\t\t2369\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2171,\n\t\t\t\t2167\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2229,\n\t\t\t\t2124\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2102,\n\t\t\t\t2053\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1950,\n\t\t\t\t2005\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t1976\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1650,\n\t\t\t\t2175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1628,\n\t\t\t\t2239\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t123,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1852,\n\t\t\t\t2283\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1929,\n\t\t\t\t2361\n\t\t\t],\n\t\t\t[\n\t\t\t\t130,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1643,\n\t\t\t\t2556\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1755,\n\t\t\t\t2452\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t-124\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1874,\n\t\t\t\t2328\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1628,\n\t\t\t\t2239\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1487,\n\t\t\t\t2464\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1451,\n\t\t\t\t2501\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1460,\n\t\t\t\t2533\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1502,\n\t\t\t\t2551\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1501,\n\t\t\t\t2559\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1233,\n\t\t\t\t2008\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1261,\n\t\t\t\t1794\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1196,\n\t\t\t\t1711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1193,\n\t\t\t\t1688\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1052,\n\t\t\t\t1747\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1014,\n\t\t\t\t1828\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1114,\n\t\t\t\t2000\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3272,\n\t\t\t\t6458\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t6439\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2948,\n\t\t\t\t6077\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2906,\n\t\t\t\t6114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2841,\n\t\t\t\t6248\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2850,\n\t\t\t\t6299\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t198\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2918,\n\t\t\t\t6497\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2924,\n\t\t\t\t6593\n\t\t\t],\n\t\t\t[\n\t\t\t\t279,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3203,\n\t\t\t\t6627\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1709,\n\t\t\t\t5166\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1735,\n\t\t\t\t5067\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1953,\n\t\t\t\t4940\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-104\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1812,\n\t\t\t\t4697\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1756,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1716,\n\t\t\t\t4772\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1613,\n\t\t\t\t4902\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1620,\n\t\t\t\t5036\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t128\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1685,\n\t\t\t\t5181\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2384,\n\t\t\t\t5072\n\t\t\t],\n\t\t\t[\n\t\t\t\t-125,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2259,\n\t\t\t\t4981\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2277,\n\t\t\t\t4946\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2193,\n\t\t\t\t4886\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2180,\n\t\t\t\t4861\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2000,\n\t\t\t\t4887\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1950,\n\t\t\t\t4925\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2028,\n\t\t\t\t5025\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2208,\n\t\t\t\t5082\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2348,\n\t\t\t\t5114\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4793,\n\t\t\t\t7048\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4947,\n\t\t\t\t7427\n\t\t\t],\n\t\t\t[\n\t\t\t\t177,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-179\n\t\t\t],\n\t\t\t[\n\t\t\t\t-345,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2869,\n\t\t\t\t5146\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2893,\n\t\t\t\t5106\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3056,\n\t\t\t\t4893\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3039,\n\t\t\t\t4717\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2958,\n\t\t\t\t4607\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2829,\n\t\t\t\t4727\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2693,\n\t\t\t\t5064\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2700,\n\t\t\t\t5165\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2759,\n\t\t\t\t5212\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6029,\n\t\t\t\t5010\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6044,\n\t\t\t\t5008\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6048,\n\t\t\t\t4978\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-99\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-136\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5964,\n\t\t\t\t4727\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5780,\n\t\t\t\t4748\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5691,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5711,\n\t\t\t\t4805\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5685,\n\t\t\t\t4970\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5716,\n\t\t\t\t5010\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5892,\n\t\t\t\t5027\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5919,\n\t\t\t\t5043\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5999,\n\t\t\t\t5057\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3408,\n\t\t\t\t6901\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3386,\n\t\t\t\t6729\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3258,\n\t\t\t\t6672\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2924,\n\t\t\t\t6593\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2845,\n\t\t\t\t6745\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t134\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3114,\n\t\t\t\t6885\n\t\t\t],\n\t\t\t[\n\t\t\t\t184,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3298,\n\t\t\t\t6872\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3309,\n\t\t\t\t6904\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3364,\n\t\t\t\t6927\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2006,\n\t\t\t\t5538\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2136,\n\t\t\t\t5438\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2192,\n\t\t\t\t5326\n\t\t\t],\n\t\t\t[\n\t\t\t\t136,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2328,\n\t\t\t\t5322\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2337,\n\t\t\t\t5263\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2396,\n\t\t\t\t5175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2348,\n\t\t\t\t5114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2208,\n\t\t\t\t5082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2035,\n\t\t\t\t5039\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1956,\n\t\t\t\t5169\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1958,\n\t\t\t\t5260\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1908,\n\t\t\t\t5426\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1942,\n\t\t\t\t5490\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2647,\n\t\t\t\t2710\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t130,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2870,\n\t\t\t\t2742\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2915,\n\t\t\t\t2497\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3036,\n\t\t\t\t2375\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3040,\n\t\t\t\t2290\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3075,\n\t\t\t\t2161\n\t\t\t],\n\t\t\t[\n\t\t\t\t-150,\n\t\t\t\t-167\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2846,\n\t\t\t\t2058\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2668,\n\t\t\t\t2038\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2600,\n\t\t\t\t2002\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2541,\n\t\t\t\t2011\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t183\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2511,\n\t\t\t\t2231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2384,\n\t\t\t\t2290\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2278,\n\t\t\t\t2375\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2161,\n\t\t\t\t2900\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2160,\n\t\t\t\t2926\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2194,\n\t\t\t\t2944\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2226,\n\t\t\t\t2906\n\t\t\t],\n\t\t\t[\n\t\t\t\t127,\n\t\t\t\t100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2353,\n\t\t\t\t3006\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-104\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2505,\n\t\t\t\t4177\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2345,\n\t\t\t\t4119\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2299,\n\t\t\t\t4082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2236,\n\t\t\t\t4470\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2290,\n\t\t\t\t4476\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2394,\n\t\t\t\t4513\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4070,\n\t\t\t\t7282\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4159,\n\t\t\t\t7291\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4223,\n\t\t\t\t7310\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4281,\n\t\t\t\t7272\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4298,\n\t\t\t\t7274\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4356,\n\t\t\t\t7251\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4419,\n\t\t\t\t7249\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4430,\n\t\t\t\t7155\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4405,\n\t\t\t\t6836\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4231,\n\t\t\t\t6879\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4083,\n\t\t\t\t6896\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4013,\n\t\t\t\t6942\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3992,\n\t\t\t\t7009\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3995,\n\t\t\t\t7021\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4023,\n\t\t\t\t7080\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t147\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3970,\n\t\t\t\t7227\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4781,\n\t\t\t\t5581\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4853,\n\t\t\t\t5499\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4972,\n\t\t\t\t5503\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5054,\n\t\t\t\t5454\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4905,\n\t\t\t\t5140\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4912,\n\t\t\t\t5068\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4809,\n\t\t\t\t5061\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4606,\n\t\t\t\t5152\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4538,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4464,\n\t\t\t\t5193\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4433,\n\t\t\t\t5138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4366,\n\t\t\t\t5141\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t196\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4336,\n\t\t\t\t5337\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4371,\n\t\t\t\t5335\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4430,\n\t\t\t\t5370\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4461,\n\t\t\t\t5398\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4408,\n\t\t\t\t5534\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t5611\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t5639\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4641,\n\t\t\t\t5627\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4686,\n\t\t\t\t5647\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2745,\n\t\t\t\t7260\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2787,\n\t\t\t\t7232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2868,\n\t\t\t\t7020\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2592,\n\t\t\t\t6801\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2529,\n\t\t\t\t6885\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2453,\n\t\t\t\t7148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t7213\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t113\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1975,\n\t\t\t\t3064\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2110,\n\t\t\t\t2910\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2051,\n\t\t\t\t2791\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2020,\n\t\t\t\t2727\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1919,\n\t\t\t\t2730\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1899,\n\t\t\t\t3069\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1942,\n\t\t\t\t3115\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1610,\n\t\t\t\t1456\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1723,\n\t\t\t\t1444\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1661,\n\t\t\t\t1281\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1541,\n\t\t\t\t1266\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1303,\n\t\t\t\t1250\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1206,\n\t\t\t\t1270\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1197,\n\t\t\t\t1352\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1230,\n\t\t\t\t1379\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1370,\n\t\t\t\t1405\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1363,\n\t\t\t\t1449\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t5194\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3455,\n\t\t\t\t5140\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3536,\n\t\t\t\t5105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3585,\n\t\t\t\t4796\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3516,\n\t\t\t\t4766\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3343,\n\t\t\t\t4958\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3289,\n\t\t\t\t4978\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3389,\n\t\t\t\t5032\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3408,\n\t\t\t\t5168\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1599,\n\t\t\t\t1080\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1608,\n\t\t\t\t1065\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1608,\n\t\t\t\t926\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1614,\n\t\t\t\t908\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t706\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1415,\n\t\t\t\t663\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1323,\n\t\t\t\t663\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1262,\n\t\t\t\t702\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1134,\n\t\t\t\t681\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1207,\n\t\t\t\t795\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1306,\n\t\t\t\t1064\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3558,\n\t\t\t\t3629\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3621,\n\t\t\t\t3641\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3647,\n\t\t\t\t3660\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3679,\n\t\t\t\t3628\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3680,\n\t\t\t\t3559\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3705,\n\t\t\t\t3586\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3743,\n\t\t\t\t3537\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3720,\n\t\t\t\t3427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3699,\n\t\t\t\t3386\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3626,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3626,\n\t\t\t\t3427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3443,\n\t\t\t\t3390\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3427,\n\t\t\t\t3456\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3449,\n\t\t\t\t3614\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3509,\n\t\t\t\t3675\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4377,\n\t\t\t\t5558\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4461,\n\t\t\t\t5398\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4371,\n\t\t\t\t5335\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4336,\n\t\t\t\t5337\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4277,\n\t\t\t\t5321\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4184,\n\t\t\t\t5281\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4113,\n\t\t\t\t5245\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4053,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4010,\n\t\t\t\t5342\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4022,\n\t\t\t\t5431\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4218,\n\t\t\t\t5544\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4256,\n\t\t\t\t5542\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5415,\n\t\t\t\t4796\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5592,\n\t\t\t\t4816\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5652,\n\t\t\t\t4765\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5605,\n\t\t\t\t4366\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5546,\n\t\t\t\t4390\n\t\t\t],\n\t\t\t[\n\t\t\t\t-165,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5381,\n\t\t\t\t4481\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5196,\n\t\t\t\t4512\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5162,\n\t\t\t\t4523\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5321,\n\t\t\t\t4809\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6457,\n\t\t\t\t7107\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6487,\n\t\t\t\t7101\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-99\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6641,\n\t\t\t\t6943\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6682,\n\t\t\t\t6835\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6716,\n\t\t\t\t6752\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6628,\n\t\t\t\t6445\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6417,\n\t\t\t\t6385\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6354,\n\t\t\t\t6374\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6045,\n\t\t\t\t6565\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6210,\n\t\t\t\t6711\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6178,\n\t\t\t\t6888\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6258,\n\t\t\t\t7063\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6281,\n\t\t\t\t7115\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6328,\n\t\t\t\t7130\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6888,\n\t\t\t\t5113\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7139,\n\t\t\t\t4873\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7070,\n\t\t\t\t4807\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7130,\n\t\t\t\t4704\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7021,\n\t\t\t\t4507\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6702,\n\t\t\t\t4603\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6814,\n\t\t\t\t5122\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1760,\n\t\t\t\t769\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1618,\n\t\t\t\t489\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1602,\n\t\t\t\t487\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1540,\n\t\t\t\t570\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1502,\n\t\t\t\t662\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1614,\n\t\t\t\t908\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1621,\n\t\t\t\t869\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2953,\n\t\t\t\t7058\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3085,\n\t\t\t\t6967\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3130,\n\t\t\t\t6933\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3131,\n\t\t\t\t6913\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3153,\n\t\t\t\t6894\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2845,\n\t\t\t\t6745\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2922,\n\t\t\t\t7062\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6921,\n\t\t\t\t7793\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6869,\n\t\t\t\t7721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6841,\n\t\t\t\t7691\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6800,\n\t\t\t\t7677\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6683,\n\t\t\t\t7708\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6611,\n\t\t\t\t7733\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6491,\n\t\t\t\t7734\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6455,\n\t\t\t\t7747\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6475,\n\t\t\t\t7768\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6652,\n\t\t\t\t7871\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5955,\n\t\t\t\t5252\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6057,\n\t\t\t\t5229\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6067,\n\t\t\t\t5215\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6159,\n\t\t\t\t5081\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6073,\n\t\t\t\t5066\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6029,\n\t\t\t\t5010\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5919,\n\t\t\t\t5043\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5716,\n\t\t\t\t5010\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5643,\n\t\t\t\t4984\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5613,\n\t\t\t\t5051\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5610,\n\t\t\t\t5126\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5626,\n\t\t\t\t5176\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5663,\n\t\t\t\t5185\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t154,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5907,\n\t\t\t\t5280\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6656,\n\t\t\t\t6380\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6854,\n\t\t\t\t6261\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-133\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6783,\n\t\t\t\t6122\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6633,\n\t\t\t\t6143\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6463,\n\t\t\t\t6371\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4194,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3819,\n\t\t\t\t2390\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3778,\n\t\t\t\t2455\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3739,\n\t\t\t\t2454\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3877,\n\t\t\t\t2604\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4036,\n\t\t\t\t2604\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4112,\n\t\t\t\t2642\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3185,\n\t\t\t\t1649\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3211,\n\t\t\t\t1606\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-201\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3132,\n\t\t\t\t1405\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3015,\n\t\t\t\t1244\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2961,\n\t\t\t\t1295\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2765,\n\t\t\t\t1304\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2804,\n\t\t\t\t1672\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2865,\n\t\t\t\t1746\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3009,\n\t\t\t\t1757\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1020,\n\t\t\t\t5269\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1001,\n\t\t\t\t5238\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t179,\n\t\t\t\t-132\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1185,\n\t\t\t\t4977\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t778,\n\t\t\t\t4789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t752,\n\t\t\t\t4963\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t67\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t892,\n\t\t\t\t5129\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t901,\n\t\t\t\t5173\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t911,\n\t\t\t\t5300\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t939,\n\t\t\t\t3393\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1135,\n\t\t\t\t3149\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1149,\n\t\t\t\t3108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t952,\n\t\t\t\t3118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t925,\n\t\t\t\t3138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t806,\n\t\t\t\t3112\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t777,\n\t\t\t\t3096\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t763,\n\t\t\t\t3131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t670,\n\t\t\t\t3237\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t716,\n\t\t\t\t3410\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t38\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t899,\n\t\t\t\t3432\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1219,\n\t\t\t\t5304\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1366,\n\t\t\t\t5199\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1312,\n\t\t\t\t4983\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1001,\n\t\t\t\t5238\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1167,\n\t\t\t\t5337\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1193,\n\t\t\t\t5381\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2411,\n\t\t\t\t3129\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2226,\n\t\t\t\t2906\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2160,\n\t\t\t\t2926\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1975,\n\t\t\t\t3064\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2019,\n\t\t\t\t3144\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2219,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t3856\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1584,\n\t\t\t\t3837\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1733,\n\t\t\t\t3722\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1804,\n\t\t\t\t3675\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1673,\n\t\t\t\t3620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1574,\n\t\t\t\t3563\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1505,\n\t\t\t\t3614\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-161,\n\t\t\t\t154\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1287,\n\t\t\t\t3771\n\t\t\t],\n\t\t\t[\n\t\t\t\t194,\n\t\t\t\t107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1481,\n\t\t\t\t3878\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5627,\n\t\t\t\t5254\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5622,\n\t\t\t\t5231\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5610,\n\t\t\t\t5126\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5643,\n\t\t\t\t4984\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5711,\n\t\t\t\t4805\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5592,\n\t\t\t\t4816\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5504,\n\t\t\t\t4832\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5475,\n\t\t\t\t5130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5451,\n\t\t\t\t5142\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5487,\n\t\t\t\t5240\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5565,\n\t\t\t\t5244\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3020,\n\t\t\t\t4204\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3065,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3107,\n\t\t\t\t3979\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2986,\n\t\t\t\t3895\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2836,\n\t\t\t\t3953\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2705,\n\t\t\t\t3948\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2729,\n\t\t\t\t4095\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2793,\n\t\t\t\t4125\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2987,\n\t\t\t\t4181\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1643,\n\t\t\t\t4238\n\t\t\t],\n\t\t\t[\n\t\t\t\t185,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1828,\n\t\t\t\t4251\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1848,\n\t\t\t\t4227\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1922,\n\t\t\t\t4157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1998,\n\t\t\t\t4024\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1925,\n\t\t\t\t3960\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t3911\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1794,\n\t\t\t\t3840\n\t\t\t],\n\t\t\t[\n\t\t\t\t-210,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1497,\n\t\t\t\t3856\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1522,\n\t\t\t\t4038\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1554,\n\t\t\t\t4271\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t3702\n\t\t\t],\n\t\t\t[\n\t\t\t\t-123,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1896,\n\t\t\t\t3625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1853,\n\t\t\t\t3718\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1733,\n\t\t\t\t3722\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t3911\n\t\t\t],\n\t\t\t[\n\t\t\t\t129,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1925,\n\t\t\t\t3960\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1998,\n\t\t\t\t4024\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-121\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3193,\n\t\t\t\t2419\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3238,\n\t\t\t\t2379\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3307,\n\t\t\t\t2377\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3276,\n\t\t\t\t2319\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-155\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3185,\n\t\t\t\t2164\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3154,\n\t\t\t\t2160\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3040,\n\t\t\t\t2290\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3142,\n\t\t\t\t2394\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4155,\n\t\t\t\t6067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4083,\n\t\t\t\t5877\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3890,\n\t\t\t\t5989\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3774,\n\t\t\t\t6018\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3752,\n\t\t\t\t6019\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t138\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3738,\n\t\t\t\t6157\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3778,\n\t\t\t\t6235\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3746,\n\t\t\t\t6394\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3829,\n\t\t\t\t6436\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t548,\n\t\t\t\t1913\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t540,\n\t\t\t\t1884\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t603,\n\t\t\t\t1877\n\t\t\t],\n\t\t\t[\n\t\t\t\t149,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t752,\n\t\t\t\t1894\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t817,\n\t\t\t\t1451\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t760,\n\t\t\t\t1384\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t204\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t172\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7828,\n\t\t\t\t6291\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7938,\n\t\t\t\t6152\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7539,\n\t\t\t\t5906\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7445,\n\t\t\t\t5845\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t194\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7417,\n\t\t\t\t6039\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7590,\n\t\t\t\t6215\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7776,\n\t\t\t\t6267\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7833,\n\t\t\t\t6339\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7660,\n\t\t\t\t6324\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7743,\n\t\t\t\t6337\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7733,\n\t\t\t\t6295\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7417,\n\t\t\t\t6039\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-189\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7433,\n\t\t\t\t5850\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7416,\n\t\t\t\t5880\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7373,\n\t\t\t\t5882\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7364,\n\t\t\t\t5872\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7356,\n\t\t\t\t5923\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7295,\n\t\t\t\t6106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7234,\n\t\t\t\t6143\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7388,\n\t\t\t\t6283\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7448,\n\t\t\t\t6355\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7535,\n\t\t\t\t6405\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1072,\n\t\t\t\t2718\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1106,\n\t\t\t\t2611\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1045,\n\t\t\t\t2496\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t940,\n\t\t\t\t2412\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t927,\n\t\t\t\t2425\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t783,\n\t\t\t\t2440\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t763,\n\t\t\t\t2465\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t783,\n\t\t\t\t2477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t849,\n\t\t\t\t2614\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t983,\n\t\t\t\t2760\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3317,\n\t\t\t\t3303\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3338,\n\t\t\t\t3258\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3382,\n\t\t\t\t3107\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3412,\n\t\t\t\t3054\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3217,\n\t\t\t\t2956\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3157,\n\t\t\t\t2942\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3135,\n\t\t\t\t2936\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3047,\n\t\t\t\t2925\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t159\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t3084\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3115,\n\t\t\t\t3113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3083,\n\t\t\t\t3157\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3093,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3152,\n\t\t\t\t3295\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3237,\n\t\t\t\t3315\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4618,\n\t\t\t\t3248\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4695,\n\t\t\t\t2995\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4662,\n\t\t\t\t2955\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4520,\n\t\t\t\t2955\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4434,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4375,\n\t\t\t\t3015\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4217,\n\t\t\t\t2943\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4170,\n\t\t\t\t3054\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4248,\n\t\t\t\t3228\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4339,\n\t\t\t\t3306\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t773,\n\t\t\t\t3885\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t877,\n\t\t\t\t3686\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t801,\n\t\t\t\t3626\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t759,\n\t\t\t\t3628\n\t\t\t],\n\t\t\t[\n\t\t\t\t-265,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t494,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t129\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t132\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t666,\n\t\t\t\t3905\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6909,\n\t\t\t\t7304\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6878,\n\t\t\t\t7151\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6895,\n\t\t\t\t7144\n\t\t\t],\n\t\t\t[\n\t\t\t\t-163,\n\t\t\t\t-121\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6732,\n\t\t\t\t7023\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6487,\n\t\t\t\t7101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6583,\n\t\t\t\t7187\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6752,\n\t\t\t\t7298\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1024,\n\t\t\t\t5913\n\t\t\t],\n\t\t\t[\n\t\t\t\t-123,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-205,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t232\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t218,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4666,\n\t\t\t\t8086\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4655,\n\t\t\t\t7817\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4587,\n\t\t\t\t7851\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4477,\n\t\t\t\t7974\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4465,\n\t\t\t\t8030\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4596,\n\t\t\t\t8228\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4636,\n\t\t\t\t8166\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5217,\n\t\t\t\t6370\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5287,\n\t\t\t\t6337\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5290,\n\t\t\t\t6320\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5390,\n\t\t\t\t6323\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5435,\n\t\t\t\t6222\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-112\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5320,\n\t\t\t\t6050\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-124\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5096,\n\t\t\t\t5928\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4998,\n\t\t\t\t5982\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4961,\n\t\t\t\t5978\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4852,\n\t\t\t\t6007\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4825,\n\t\t\t\t6060\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4827,\n\t\t\t\t6123\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5052,\n\t\t\t\t6165\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5053,\n\t\t\t\t6228\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5155,\n\t\t\t\t6329\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5182,\n\t\t\t\t6387\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1070,\n\t\t\t\t2135\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1097,\n\t\t\t\t2002\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1014,\n\t\t\t\t1828\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t794,\n\t\t\t\t1865\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t753,\n\t\t\t\t1876\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t752,\n\t\t\t\t1894\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t799,\n\t\t\t\t1925\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t773,\n\t\t\t\t1992\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t796,\n\t\t\t\t2056\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t954,\n\t\t\t\t2157\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2707,\n\t\t\t\t1137\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2667,\n\t\t\t\t937\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2533,\n\t\t\t\t887\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2549,\n\t\t\t\t937\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t966\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2444,\n\t\t\t\t954\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2444,\n\t\t\t\t1003\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2477,\n\t\t\t\t1088\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2665,\n\t\t\t\t1329\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6724,\n\t\t\t\t5888\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6668,\n\t\t\t\t5597\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6634,\n\t\t\t\t5599\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6524,\n\t\t\t\t5591\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6304,\n\t\t\t\t5584\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6235,\n\t\t\t\t5581\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6152,\n\t\t\t\t5568\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6106,\n\t\t\t\t5685\n\t\t\t],\n\t\t\t[\n\t\t\t\t142,\n\t\t\t\t173\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6248,\n\t\t\t\t5858\n\t\t\t],\n\t\t\t[\n\t\t\t\t128,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6397,\n\t\t\t\t5964\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6497,\n\t\t\t\t6066\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7269,\n\t\t\t\t5906\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7356,\n\t\t\t\t5923\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7304,\n\t\t\t\t5880\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7313,\n\t\t\t\t5765\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6903,\n\t\t\t\t5895\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6965,\n\t\t\t\t6025\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6972,\n\t\t\t\t5958\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2646,\n\t\t\t\t6458\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2697,\n\t\t\t\t6437\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2711,\n\t\t\t\t6332\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2735,\n\t\t\t\t6234\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2794,\n\t\t\t\t6248\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2759,\n\t\t\t\t6161\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2672,\n\t\t\t\t6181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2593,\n\t\t\t\t6121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2470,\n\t\t\t\t6207\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2444,\n\t\t\t\t6368\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2501,\n\t\t\t\t6464\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2020,\n\t\t\t\t2727\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2030,\n\t\t\t\t2379\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1929,\n\t\t\t\t2361\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1755,\n\t\t\t\t2452\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1710,\n\t\t\t\t2590\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1887,\n\t\t\t\t2661\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t838,\n\t\t\t\t2636\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t783,\n\t\t\t\t2477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t720,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t588,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t437,\n\t\t\t\t2611\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t546,\n\t\t\t\t2659\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t789,\n\t\t\t\t2718\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6211,\n\t\t\t\t5000\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6243,\n\t\t\t\t4974\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6440,\n\t\t\t\t4552\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t-93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6251,\n\t\t\t\t4417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6062,\n\t\t\t\t4310\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5979,\n\t\t\t\t4642\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6048,\n\t\t\t\t4978\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6159,\n\t\t\t\t5081\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5062,\n\t\t\t\t5578\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5188,\n\t\t\t\t5557\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5389,\n\t\t\t\t5557\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5422,\n\t\t\t\t5542\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5588,\n\t\t\t\t5333\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5568,\n\t\t\t\t5334\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5560,\n\t\t\t\t5305\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5573,\n\t\t\t\t5308\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5565,\n\t\t\t\t5244\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5451,\n\t\t\t\t5142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5394,\n\t\t\t\t5196\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5307,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5135,\n\t\t\t\t5367\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5054,\n\t\t\t\t5454\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5025,\n\t\t\t\t5522\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3612,\n\t\t\t\t6556\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3768,\n\t\t\t\t6423\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3778,\n\t\t\t\t6235\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3380,\n\t\t\t\t6300\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t6439\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3525,\n\t\t\t\t6556\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3328,\n\t\t\t\t3551\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3405,\n\t\t\t\t3513\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3427,\n\t\t\t\t3456\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3415,\n\t\t\t\t3258\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3317,\n\t\t\t\t3303\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3152,\n\t\t\t\t3295\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t3293\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3034,\n\t\t\t\t3297\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3106,\n\t\t\t\t3517\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3198,\n\t\t\t\t3521\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3270,\n\t\t\t\t3575\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3292,\n\t\t\t\t1624\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3530,\n\t\t\t\t1446\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3479,\n\t\t\t\t1373\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3189,\n\t\t\t\t1304\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3211,\n\t\t\t\t1606\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3284,\n\t\t\t\t1637\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4283,\n\t\t\t\t7530\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4273,\n\t\t\t\t7517\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4324,\n\t\t\t\t7521\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4356,\n\t\t\t\t7251\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4298,\n\t\t\t\t7274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4223,\n\t\t\t\t7310\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4140,\n\t\t\t\t7603\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4162,\n\t\t\t\t7580\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t436,\n\t\t\t\t5746\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-162\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t372,\n\t\t\t\t5584\n\t\t\t],\n\t\t\t[\n\t\t\t\t-195,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t107\n\t\t\t],\n\t\t\t[\n\t\t\t\t226,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6328,\n\t\t\t\t8128\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6492,\n\t\t\t\t7771\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6455,\n\t\t\t\t7747\n\t\t\t],\n\t\t\t[\n\t\t\t\t-156,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t150\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t170\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6208,\n\t\t\t\t8177\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t5635\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2491,\n\t\t\t\t5674\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2471,\n\t\t\t\t5229\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2387,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2337,\n\t\t\t\t5263\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2192,\n\t\t\t\t5326\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2006,\n\t\t\t\t5538\n\t\t\t],\n\t\t\t[\n\t\t\t\t152,\n\t\t\t\t120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2158,\n\t\t\t\t5658\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2159,\n\t\t\t\t5674\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1251,\n\t\t\t\t4321\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1229,\n\t\t\t\t4256\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1157,\n\t\t\t\t4186\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1067,\n\t\t\t\t4134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t130\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1065,\n\t\t\t\t4441\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3312,\n\t\t\t\t7180\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3352,\n\t\t\t\t6933\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3298,\n\t\t\t\t6872\n\t\t\t],\n\t\t\t[\n\t\t\t\t-145,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3153,\n\t\t\t\t6894\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3130,\n\t\t\t\t6933\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2953,\n\t\t\t\t7058\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2965,\n\t\t\t\t7060\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3130,\n\t\t\t\t7216\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t723,\n\t\t\t\t5680\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t764,\n\t\t\t\t5648\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t814,\n\t\t\t\t5540\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t806,\n\t\t\t\t5389\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t522,\n\t\t\t\t5150\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t161\n\t\t\t],\n\t\t\t[\n\t\t\t\t-196,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t205\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t372,\n\t\t\t\t5584\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t548,\n\t\t\t\t5668\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t672,\n\t\t\t\t5687\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3434,\n\t\t\t\t2291\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3240,\n\t\t\t\t1914\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3196,\n\t\t\t\t2044\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3212,\n\t\t\t\t2100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3276,\n\t\t\t\t2319\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3307,\n\t\t\t\t2377\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6760,\n\t\t\t\t3201\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-260,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6341,\n\t\t\t\t3175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6337,\n\t\t\t\t3204\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6478,\n\t\t\t\t3245\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6490,\n\t\t\t\t3350\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3154,\n\t\t\t\t2160\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3212,\n\t\t\t\t2100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3196,\n\t\t\t\t2044\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3176,\n\t\t\t\t1955\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3129,\n\t\t\t\t1862\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3009,\n\t\t\t\t1757\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2925,\n\t\t\t\t1994\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6668,\n\t\t\t\t5597\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6700,\n\t\t\t\t5423\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6684,\n\t\t\t\t5339\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6696,\n\t\t\t\t5307\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6787,\n\t\t\t\t5272\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6840,\n\t\t\t\t5209\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6618,\n\t\t\t\t5206\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6526,\n\t\t\t\t5177\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t152\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6443,\n\t\t\t\t5367\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6346,\n\t\t\t\t5409\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6271,\n\t\t\t\t5477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6257,\n\t\t\t\t5479\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6275,\n\t\t\t\t5520\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6249,\n\t\t\t\t5547\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6524,\n\t\t\t\t5591\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7984,\n\t\t\t\t6502\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8031,\n\t\t\t\t6432\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8034,\n\t\t\t\t6274\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8098,\n\t\t\t\t6157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8021,\n\t\t\t\t6122\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7828,\n\t\t\t\t6291\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7776,\n\t\t\t\t6267\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7743,\n\t\t\t\t6337\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7952,\n\t\t\t\t6511\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4465,\n\t\t\t\t8030\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4587,\n\t\t\t\t7851\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4740,\n\t\t\t\t7755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-279,\n\t\t\t\t-101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-158\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4359,\n\t\t\t\t7496\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4273,\n\t\t\t\t7517\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t161\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4251,\n\t\t\t\t7860\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7073,\n\t\t\t\t7171\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7167,\n\t\t\t\t7069\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7162,\n\t\t\t\t6892\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7080,\n\t\t\t\t6856\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7047,\n\t\t\t\t6799\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6913,\n\t\t\t\t6783\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6791,\n\t\t\t\t6859\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6713,\n\t\t\t\t6875\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6895,\n\t\t\t\t7144\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4347,\n\t\t\t\t6202\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4384,\n\t\t\t\t6181\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4557,\n\t\t\t\t6034\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4608,\n\t\t\t\t5920\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4676,\n\t\t\t\t5719\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4481,\n\t\t\t\t5639\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4463,\n\t\t\t\t5694\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4229,\n\t\t\t\t6023\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4228,\n\t\t\t\t6109\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4244,\n\t\t\t\t6164\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4934,\n\t\t\t\t7635\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4697,\n\t\t\t\t7537\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4450,\n\t\t\t\t7415\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4396,\n\t\t\t\t7408\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7373,\n\t\t\t\t5882\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7433,\n\t\t\t\t5850\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7494,\n\t\t\t\t5739\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7264,\n\t\t\t\t5463\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7291,\n\t\t\t\t5626\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7273,\n\t\t\t\t5739\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7304,\n\t\t\t\t5880\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5340,\n\t\t\t\t6547\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5325,\n\t\t\t\t6459\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5217,\n\t\t\t\t6370\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5182,\n\t\t\t\t6387\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5053,\n\t\t\t\t6228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4827,\n\t\t\t\t6123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4893,\n\t\t\t\t6455\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4854,\n\t\t\t\t6540\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4869,\n\t\t\t\t6675\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4886,\n\t\t\t\t6828\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t155,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3157,\n\t\t\t\t2942\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2996,\n\t\t\t\t2709\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2928,\n\t\t\t\t2772\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2943,\n\t\t\t\t2791\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2981,\n\t\t\t\t2899\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3047,\n\t\t\t\t2925\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2136,\n\t\t\t\t1433\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2235,\n\t\t\t\t1424\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t1469\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2398,\n\t\t\t\t1244\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2477,\n\t\t\t\t1088\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2444,\n\t\t\t\t954\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2549,\n\t\t\t\t937\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2246,\n\t\t\t\t1080\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2152,\n\t\t\t\t1065\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2023,\n\t\t\t\t1165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2061,\n\t\t\t\t1460\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t578,\n\t\t\t\t2040\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t775,\n\t\t\t\t2040\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t799,\n\t\t\t\t1925\n\t\t\t],\n\t\t\t[\n\t\t\t\t-196,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t540,\n\t\t\t\t1884\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t557,\n\t\t\t\t1933\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t535,\n\t\t\t\t2003\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t509,\n\t\t\t\t2052\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2539,\n\t\t\t\t4679\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2452,\n\t\t\t\t4590\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2290,\n\t\t\t\t4476\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2169,\n\t\t\t\t4774\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2193,\n\t\t\t\t4886\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2259,\n\t\t\t\t4981\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2304,\n\t\t\t\t5003\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-175\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-133\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7732,\n\t\t\t\t5262\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7992,\n\t\t\t\t5190\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7975,\n\t\t\t\t4937\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7911,\n\t\t\t\t4938\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7850,\n\t\t\t\t4925\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7835,\n\t\t\t\t4894\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7700,\n\t\t\t\t5000\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7526,\n\t\t\t\t5072\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7606,\n\t\t\t\t5331\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7835,\n\t\t\t\t4894\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8185,\n\t\t\t\t4729\n\t\t\t],\n\t\t\t[\n\t\t\t\t-208,\n\t\t\t\t-183\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t119\n\t\t\t],\n\t\t\t[\n\t\t\t\t-165,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7371,\n\t\t\t\t4747\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7406,\n\t\t\t\t4890\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7430,\n\t\t\t\t4927\n\t\t\t],\n\t\t\t[\n\t\t\t\t105,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7533,\n\t\t\t\t4998\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5127,\n\t\t\t\t4581\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5196,\n\t\t\t\t4512\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5546,\n\t\t\t\t4390\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5553,\n\t\t\t\t4288\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5419,\n\t\t\t\t4146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4974,\n\t\t\t\t4214\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4855,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4833,\n\t\t\t\t4424\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4833,\n\t\t\t\t4595\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4849,\n\t\t\t\t4615\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4890,\n\t\t\t\t4647\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t-102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6411,\n\t\t\t\t7433\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6331,\n\t\t\t\t7238\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6346,\n\t\t\t\t7192\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6328,\n\t\t\t\t7130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6281,\n\t\t\t\t7115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6149,\n\t\t\t\t7119\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t131\n\t\t\t],\n\t\t\t[\n\t\t\t\t167,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t116\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3416,\n\t\t\t\t3945\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3454,\n\t\t\t\t3869\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3439,\n\t\t\t\t3734\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3376,\n\t\t\t\t3764\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3319,\n\t\t\t\t3828\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3707,\n\t\t\t\t4482\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3574,\n\t\t\t\t4270\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3547,\n\t\t\t\t4291\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3509,\n\t\t\t\t4316\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3372,\n\t\t\t\t4159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t4218\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3383,\n\t\t\t\t4442\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3532,\n\t\t\t\t4504\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3547,\n\t\t\t\t4291\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3634,\n\t\t\t\t4236\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3669,\n\t\t\t\t4256\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3657,\n\t\t\t\t4095\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3595,\n\t\t\t\t4063\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3557,\n\t\t\t\t4068\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3509,\n\t\t\t\t4316\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2872,\n\t\t\t\t2940\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2987,\n\t\t\t\t2920\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2943,\n\t\t\t\t2791\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2647,\n\t\t\t\t2710\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-159,\n\t\t\t\t131\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2461,\n\t\t\t\t2928\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2611,\n\t\t\t\t2958\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2681,\n\t\t\t\t2969\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2684,\n\t\t\t\t3036\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2850,\n\t\t\t\t6299\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2794,\n\t\t\t\t6248\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2711,\n\t\t\t\t6332\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2646,\n\t\t\t\t6458\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2533,\n\t\t\t\t6452\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2818,\n\t\t\t\t6689\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3866,\n\t\t\t\t7263\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4023,\n\t\t\t\t7080\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3995,\n\t\t\t\t7021\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3927,\n\t\t\t\t6962\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3837,\n\t\t\t\t6981\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3805,\n\t\t\t\t6962\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3742,\n\t\t\t\t6988\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3737,\n\t\t\t\t7058\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3774,\n\t\t\t\t7137\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3800,\n\t\t\t\t7223\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6049,\n\t\t\t\t5559\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6235,\n\t\t\t\t5581\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6275,\n\t\t\t\t5520\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6271,\n\t\t\t\t5477\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6133,\n\t\t\t\t5358\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6130,\n\t\t\t\t5324\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6107,\n\t\t\t\t5233\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6067,\n\t\t\t\t5215\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5955,\n\t\t\t\t5252\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5663,\n\t\t\t\t5185\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5627,\n\t\t\t\t5254\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5560,\n\t\t\t\t5305\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5568,\n\t\t\t\t5334\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5648,\n\t\t\t\t5320\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5764,\n\t\t\t\t5342\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5870,\n\t\t\t\t5567\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5929,\n\t\t\t\t5604\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2628,\n\t\t\t\t5197\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2542,\n\t\t\t\t4934\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2659,\n\t\t\t\t4867\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2678,\n\t\t\t\t4717\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2304,\n\t\t\t\t5003\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2384,\n\t\t\t\t5072\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2396,\n\t\t\t\t5175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2387,\n\t\t\t\t5211\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t5265\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3742,\n\t\t\t\t6988\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3805,\n\t\t\t\t6962\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3927,\n\t\t\t\t6962\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4013,\n\t\t\t\t6942\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3990,\n\t\t\t\t6829\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3959,\n\t\t\t\t6699\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3800,\n\t\t\t\t6724\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3738,\n\t\t\t\t6735\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3725,\n\t\t\t\t6839\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3714,\n\t\t\t\t7027\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1374,\n\t\t\t\t1663\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1342,\n\t\t\t\t1501\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1370,\n\t\t\t\t1405\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1230,\n\t\t\t\t1379\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1197,\n\t\t\t\t1352\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1075,\n\t\t\t\t1279\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t985,\n\t\t\t\t1402\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1176,\n\t\t\t\t1694\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1196,\n\t\t\t\t1711\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6992,\n\t\t\t\t7792\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t152,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7198,\n\t\t\t\t7695\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7005,\n\t\t\t\t7353\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7001,\n\t\t\t\t7433\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t101\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6902,\n\t\t\t\t7667\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6857,\n\t\t\t\t7674\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6921,\n\t\t\t\t7793\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t10\n\t\t\t]\n\t\t]\n\t],\n\t\"transform\": {\n\t\t\"scale\": [\n\t\t\t0.0004145531070705779,\n\t\t\t0.0002480636152443112\n\t\t],\n\t\t\"translate\": [\n\t\t\t5.878025523533185,\n\t\t\t50.33856106917782\n\t\t]\n\t},\n\t\"objects\": {\n\t\t\"nrw\": {\n\t\t\t\"type\": \"GeometryCollection\",\n\t\t\t\"geometries\": [\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t6,\n\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t9\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382020\",\n\t\t\t\t\t\t\"GEN\": \"Hennef (Sieg)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t11,\n\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t17,\n\t\t\t\t\t\t\t18\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362036\",\n\t\t\t\t\t\t\"GEN\": \"Pulheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t19,\n\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t21,\n\t\t\t\t\t\t\t22,\n\t\t\t\t\t\t\t23,\n\t\t\t\t\t\t\t24,\n\t\t\t\t\t\t\t25,\n\t\t\t\t\t\t\t26,\n\t\t\t\t\t\t\t27,\n\t\t\t\t\t\t\t28,\n\t\t\t\t\t\t\t29,\n\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t31,\n\t\t\t\t\t\t\t32,\n\t\t\t\t\t\t\t33,\n\t\t\t\t\t\t\t34,\n\t\t\t\t\t\t\t35,\n\t\t\t\t\t\t\t36\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966020\",\n\t\t\t\t\t\t\"GEN\": \"Lennestadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t37,\n\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t39,\n\t\t\t\t\t\t\t40,\n\t\t\t\t\t\t\t41,\n\t\t\t\t\t\t\t42,\n\t\t\t\t\t\t\t43,\n\t\t\t\t\t\t\t44,\n\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t46,\n\t\t\t\t\t\t\t47,\n\t\t\t\t\t\t\t48,\n\t\t\t\t\t\t\t49,\n\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\t51,\n\t\t\t\t\t\t\t52\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962028\",\n\t\t\t\t\t\t\"GEN\": \"Kierspe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t53,\n\t\t\t\t\t\t\t54,\n\t\t\t\t\t\t\t55,\n\t\t\t\t\t\t\t56,\n\t\t\t\t\t\t\t57,\n\t\t\t\t\t\t\t58,\n\t\t\t\t\t\t\t59,\n\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t61,\n\t\t\t\t\t\t\t62,\n\t\t\t\t\t\t\t63\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774016\",\n\t\t\t\t\t\t\"GEN\": \"Büren\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t64,\n\t\t\t\t\t\t\t65,\n\t\t\t\t\t\t\t66,\n\t\t\t\t\t\t\t67,\n\t\t\t\t\t\t\t68,\n\t\t\t\t\t\t\t69,\n\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t71,\n\t\t\t\t\t\t\t72\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566040\",\n\t\t\t\t\t\t\"GEN\": \"Lengerich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t73,\n\t\t\t\t\t\t\t74,\n\t\t\t\t\t\t\t75,\n\t\t\t\t\t\t\t76,\n\t\t\t\t\t\t\t77,\n\t\t\t\t\t\t\t78,\n\t\t\t\t\t\t\t79,\n\t\t\t\t\t\t\t80,\n\t\t\t\t\t\t\t81,\n\t\t\t\t\t\t\t82,\n\t\t\t\t\t\t\t83,\n\t\t\t\t\t\t\t84,\n\t\t\t\t\t\t\t85,\n\t\t\t\t\t\t\t86,\n\t\t\t\t\t\t\t87,\n\t\t\t\t\t\t\t88,\n\t\t\t\t\t\t\t89,\n\t\t\t\t\t\t\t90,\n\t\t\t\t\t\t\t91,\n\t\t\t\t\t\t\t92,\n\t\t\t\t\t\t\t93,\n\t\t\t\t\t\t\t94,\n\t\t\t\t\t\t\t95,\n\t\t\t\t\t\t\t96,\n\t\t\t\t\t\t\t97,\n\t\t\t\t\t\t\t98,\n\t\t\t\t\t\t\t99,\n\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t101\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05913000\",\n\t\t\t\t\t\t\"GEN\": \"Dortmund\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t102,\n\t\t\t\t\t\t\t103,\n\t\t\t\t\t\t\t104,\n\t\t\t\t\t\t\t105,\n\t\t\t\t\t\t\t106,\n\t\t\t\t\t\t\t107,\n\t\t\t\t\t\t\t108,\n\t\t\t\t\t\t\t109,\n\t\t\t\t\t\t\t110,\n\t\t\t\t\t\t\t111,\n\t\t\t\t\t\t\t112,\n\t\t\t\t\t\t\t113,\n\t\t\t\t\t\t\t114\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366032\",\n\t\t\t\t\t\t\"GEN\": \"Nettersheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t115,\n\t\t\t\t\t\t\t116,\n\t\t\t\t\t\t\t117,\n\t\t\t\t\t\t\t118,\n\t\t\t\t\t\t\t119,\n\t\t\t\t\t\t\t120,\n\t\t\t\t\t\t\t121,\n\t\t\t\t\t\t\t122,\n\t\t\t\t\t\t\t123,\n\t\t\t\t\t\t\t124,\n\t\t\t\t\t\t\t125,\n\t\t\t\t\t\t\t126,\n\t\t\t\t\t\t\t127,\n\t\t\t\t\t\t\t128,\n\t\t\t\t\t\t\t129,\n\t\t\t\t\t\t\t130,\n\t\t\t\t\t\t\t131,\n\t\t\t\t\t\t\t132,\n\t\t\t\t\t\t\t133,\n\t\t\t\t\t\t\t134,\n\t\t\t\t\t\t\t135\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774032\",\n\t\t\t\t\t\t\"GEN\": \"Paderborn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t136,\n\t\t\t\t\t\t\t137,\n\t\t\t\t\t\t\t138,\n\t\t\t\t\t\t\t139,\n\t\t\t\t\t\t\t140,\n\t\t\t\t\t\t\t141,\n\t\t\t\t\t\t\t142,\n\t\t\t\t\t\t\t143,\n\t\t\t\t\t\t\t144,\n\t\t\t\t\t\t\t145,\n\t\t\t\t\t\t\t146,\n\t\t\t\t\t\t\t147,\n\t\t\t\t\t\t\t148\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358012\",\n\t\t\t\t\t\t\"GEN\": \"Heimbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t149,\n\t\t\t\t\t\t\t150,\n\t\t\t\t\t\t\t151,\n\t\t\t\t\t\t\t152,\n\t\t\t\t\t\t\t153,\n\t\t\t\t\t\t\t154,\n\t\t\t\t\t\t\t155,\n\t\t\t\t\t\t\t156,\n\t\t\t\t\t\t\t157\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562014\",\n\t\t\t\t\t\t\"GEN\": \"Gladbeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t158,\n\t\t\t\t\t\t\t159,\n\t\t\t\t\t\t\t160,\n\t\t\t\t\t\t\t161,\n\t\t\t\t\t\t\t162,\n\t\t\t\t\t\t\t163,\n\t\t\t\t\t\t\t164,\n\t\t\t\t\t\t\t165,\n\t\t\t\t\t\t\t166\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358040\",\n\t\t\t\t\t\t\"GEN\": \"Merzenich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t167,\n\t\t\t\t\t\t\t168,\n\t\t\t\t\t\t\t169,\n\t\t\t\t\t\t\t170,\n\t\t\t\t\t\t\t171,\n\t\t\t\t\t\t\t172,\n\t\t\t\t\t\t\t173,\n\t\t\t\t\t\t\t174,\n\t\t\t\t\t\t\t175,\n\t\t\t\t\t\t\t176,\n\t\t\t\t\t\t\t177\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154044\",\n\t\t\t\t\t\t\"GEN\": \"Rees\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t178,\n\t\t\t\t\t\t\t179,\n\t\t\t\t\t\t\t180,\n\t\t\t\t\t\t\t181,\n\t\t\t\t\t\t\t182,\n\t\t\t\t\t\t\t-99,\n\t\t\t\t\t\t\t183,\n\t\t\t\t\t\t\t184,\n\t\t\t\t\t\t\t185,\n\t\t\t\t\t\t\t186,\n\t\t\t\t\t\t\t187,\n\t\t\t\t\t\t\t188,\n\t\t\t\t\t\t\t189,\n\t\t\t\t\t\t\t190,\n\t\t\t\t\t\t\t191\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562036\",\n\t\t\t\t\t\t\"GEN\": \"Waltrop\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t192,\n\t\t\t\t\t\t\t193,\n\t\t\t\t\t\t\t194,\n\t\t\t\t\t\t\t195,\n\t\t\t\t\t\t\t196,\n\t\t\t\t\t\t\t197,\n\t\t\t\t\t\t\t198,\n\t\t\t\t\t\t\t199,\n\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t201,\n\t\t\t\t\t\t\t202,\n\t\t\t\t\t\t\t203,\n\t\t\t\t\t\t\t204,\n\t\t\t\t\t\t\t205,\n\t\t\t\t\t\t\t206,\n\t\t\t\t\t\t\t207\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366040\",\n\t\t\t\t\t\t\"GEN\": \"Weilerswist\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t208,\n\t\t\t\t\t\t\t209,\n\t\t\t\t\t\t\t210,\n\t\t\t\t\t\t\t211,\n\t\t\t\t\t\t\t212,\n\t\t\t\t\t\t\t213,\n\t\t\t\t\t\t\t214,\n\t\t\t\t\t\t\t215,\n\t\t\t\t\t\t\t216,\n\t\t\t\t\t\t\t-197,\n\t\t\t\t\t\t\t217\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382064\",\n\t\t\t\t\t\t\"GEN\": \"Swisttal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t218,\n\t\t\t\t\t\t\t219,\n\t\t\t\t\t\t\t220,\n\t\t\t\t\t\t\t221,\n\t\t\t\t\t\t\t222,\n\t\t\t\t\t\t\t223,\n\t\t\t\t\t\t\t224,\n\t\t\t\t\t\t\t225,\n\t\t\t\t\t\t\t226,\n\t\t\t\t\t\t\t227,\n\t\t\t\t\t\t\t228\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758020\",\n\t\t\t\t\t\t\"GEN\": \"Kirchlengern\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-70,\n\t\t\t\t\t\t\t229,\n\t\t\t\t\t\t\t-68,\n\t\t\t\t\t\t\t230,\n\t\t\t\t\t\t\t231,\n\t\t\t\t\t\t\t232,\n\t\t\t\t\t\t\t233,\n\t\t\t\t\t\t\t234,\n\t\t\t\t\t\t\t235,\n\t\t\t\t\t\t\t236\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566032\",\n\t\t\t\t\t\t\"GEN\": \"Ladbergen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t237,\n\t\t\t\t\t\t\t238,\n\t\t\t\t\t\t\t239,\n\t\t\t\t\t\t\t240,\n\t\t\t\t\t\t\t241,\n\t\t\t\t\t\t\t242,\n\t\t\t\t\t\t\t243,\n\t\t\t\t\t\t\t244,\n\t\t\t\t\t\t\t245,\n\t\t\t\t\t\t\t246,\n\t\t\t\t\t\t\t247,\n\t\t\t\t\t\t\t248\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366044\",\n\t\t\t\t\t\t\"GEN\": \"Zülpich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-233,\n\t\t\t\t\t\t\t249,\n\t\t\t\t\t\t\t250,\n\t\t\t\t\t\t\t251,\n\t\t\t\t\t\t\t252,\n\t\t\t\t\t\t\t253,\n\t\t\t\t\t\t\t254,\n\t\t\t\t\t\t\t255,\n\t\t\t\t\t\t\t256\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570032\",\n\t\t\t\t\t\t\"GEN\": \"Ostbevern\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t257,\n\t\t\t\t\t\t\t258,\n\t\t\t\t\t\t\t259,\n\t\t\t\t\t\t\t260\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554020\",\n\t\t\t\t\t\t\"GEN\": \"Gronau (Westf.)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t261,\n\t\t\t\t\t\t\t262,\n\t\t\t\t\t\t\t263,\n\t\t\t\t\t\t\t264,\n\t\t\t\t\t\t\t265,\n\t\t\t\t\t\t\t266,\n\t\t\t\t\t\t\t267,\n\t\t\t\t\t\t\t268,\n\t\t\t\t\t\t\t269,\n\t\t\t\t\t\t\t270,\n\t\t\t\t\t\t\t271,\n\t\t\t\t\t\t\t272,\n\t\t\t\t\t\t\t-179,\n\t\t\t\t\t\t\t273,\n\t\t\t\t\t\t\t274,\n\t\t\t\t\t\t\t275,\n\t\t\t\t\t\t\t276,\n\t\t\t\t\t\t\t277,\n\t\t\t\t\t\t\t278,\n\t\t\t\t\t\t\t279\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978032\",\n\t\t\t\t\t\t\"GEN\": \"Selm\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t280,\n\t\t\t\t\t\t\t281,\n\t\t\t\t\t\t\t282,\n\t\t\t\t\t\t\t283,\n\t\t\t\t\t\t\t284,\n\t\t\t\t\t\t\t285,\n\t\t\t\t\t\t\t286,\n\t\t\t\t\t\t\t287,\n\t\t\t\t\t\t\t288,\n\t\t\t\t\t\t\t289,\n\t\t\t\t\t\t\t290,\n\t\t\t\t\t\t\t291,\n\t\t\t\t\t\t\t292,\n\t\t\t\t\t\t\t293,\n\t\t\t\t\t\t\t294,\n\t\t\t\t\t\t\t295,\n\t\t\t\t\t\t\t296,\n\t\t\t\t\t\t\t297,\n\t\t\t\t\t\t\t298,\n\t\t\t\t\t\t\t299\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562016\",\n\t\t\t\t\t\t\"GEN\": \"Haltern am See\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t300,\n\t\t\t\t\t\t\t301,\n\t\t\t\t\t\t\t302,\n\t\t\t\t\t\t\t303,\n\t\t\t\t\t\t\t304,\n\t\t\t\t\t\t\t305,\n\t\t\t\t\t\t\t306,\n\t\t\t\t\t\t\t307,\n\t\t\t\t\t\t\t-59,\n\t\t\t\t\t\t\t308\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958012\",\n\t\t\t\t\t\t\"GEN\": \"Brilon\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t309,\n\t\t\t\t\t\t\t310,\n\t\t\t\t\t\t\t311,\n\t\t\t\t\t\t\t312,\n\t\t\t\t\t\t\t-163,\n\t\t\t\t\t\t\t313,\n\t\t\t\t\t\t\t314,\n\t\t\t\t\t\t\t315,\n\t\t\t\t\t\t\t316,\n\t\t\t\t\t\t\t317,\n\t\t\t\t\t\t\t318,\n\t\t\t\t\t\t\t319,\n\t\t\t\t\t\t\t320,\n\t\t\t\t\t\t\t321,\n\t\t\t\t\t\t\t322,\n\t\t\t\t\t\t\t323\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358008\",\n\t\t\t\t\t\t\"GEN\": \"Düren\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t324,\n\t\t\t\t\t\t\t325,\n\t\t\t\t\t\t\t326,\n\t\t\t\t\t\t\t327,\n\t\t\t\t\t\t\t328,\n\t\t\t\t\t\t\t329,\n\t\t\t\t\t\t\t330,\n\t\t\t\t\t\t\t331,\n\t\t\t\t\t\t\t332,\n\t\t\t\t\t\t\t333,\n\t\t\t\t\t\t\t334,\n\t\t\t\t\t\t\t335,\n\t\t\t\t\t\t\t336,\n\t\t\t\t\t\t\t337,\n\t\t\t\t\t\t\t338,\n\t\t\t\t\t\t\t339,\n\t\t\t\t\t\t\t340,\n\t\t\t\t\t\t\t341,\n\t\t\t\t\t\t\t342,\n\t\t\t\t\t\t\t343,\n\t\t\t\t\t\t\t344,\n\t\t\t\t\t\t\t345,\n\t\t\t\t\t\t\t346,\n\t\t\t\t\t\t\t347,\n\t\t\t\t\t\t\t348,\n\t\t\t\t\t\t\t349,\n\t\t\t\t\t\t\t350,\n\t\t\t\t\t\t\t351,\n\t\t\t\t\t\t\t352,\n\t\t\t\t\t\t\t353,\n\t\t\t\t\t\t\t354,\n\t\t\t\t\t\t\t355,\n\t\t\t\t\t\t\t356\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05124000\",\n\t\t\t\t\t\t\"GEN\": \"Wuppertal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t357,\n\t\t\t\t\t\t\t358,\n\t\t\t\t\t\t\t359,\n\t\t\t\t\t\t\t360,\n\t\t\t\t\t\t\t361,\n\t\t\t\t\t\t\t362,\n\t\t\t\t\t\t\t363,\n\t\t\t\t\t\t\t364,\n\t\t\t\t\t\t\t365,\n\t\t\t\t\t\t\t366,\n\t\t\t\t\t\t\t367,\n\t\t\t\t\t\t\t368,\n\t\t\t\t\t\t\t369,\n\t\t\t\t\t\t\t370,\n\t\t\t\t\t\t\t371,\n\t\t\t\t\t\t\t372,\n\t\t\t\t\t\t\t373\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770032\",\n\t\t\t\t\t\t\"GEN\": \"Porta Westfalica\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t374,\n\t\t\t\t\t\t\t375,\n\t\t\t\t\t\t\t376,\n\t\t\t\t\t\t\t377,\n\t\t\t\t\t\t\t378,\n\t\t\t\t\t\t\t379,\n\t\t\t\t\t\t\t380\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154052\",\n\t\t\t\t\t\t\"GEN\": \"Straelen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t381,\n\t\t\t\t\t\t\t382,\n\t\t\t\t\t\t\t383,\n\t\t\t\t\t\t\t384,\n\t\t\t\t\t\t\t385,\n\t\t\t\t\t\t\t386,\n\t\t\t\t\t\t\t387,\n\t\t\t\t\t\t\t388,\n\t\t\t\t\t\t\t389,\n\t\t\t\t\t\t\t390,\n\t\t\t\t\t\t\t391\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566092\",\n\t\t\t\t\t\t\"GEN\": \"Westerkappeln\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-175,\n\t\t\t\t\t\t\t392,\n\t\t\t\t\t\t\t393,\n\t\t\t\t\t\t\t394,\n\t\t\t\t\t\t\t395,\n\t\t\t\t\t\t\t396,\n\t\t\t\t\t\t\t397,\n\t\t\t\t\t\t\t398,\n\t\t\t\t\t\t\t399,\n\t\t\t\t\t\t\t400,\n\t\t\t\t\t\t\t401,\n\t\t\t\t\t\t\t402,\n\t\t\t\t\t\t\t403,\n\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t405,\n\t\t\t\t\t\t\t406,\n\t\t\t\t\t\t\t407\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170052\",\n\t\t\t\t\t\t\"GEN\": \"Xanten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-105,\n\t\t\t\t\t\t\t408,\n\t\t\t\t\t\t\t409,\n\t\t\t\t\t\t\t-107,\n\t\t\t\t\t\t\t410\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366008\",\n\t\t\t\t\t\t\"GEN\": \"Blankenheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t411,\n\t\t\t\t\t\t\t412,\n\t\t\t\t\t\t\t413,\n\t\t\t\t\t\t\t414,\n\t\t\t\t\t\t\t415,\n\t\t\t\t\t\t\t416,\n\t\t\t\t\t\t\t417,\n\t\t\t\t\t\t\t418,\n\t\t\t\t\t\t\t419,\n\t\t\t\t\t\t\t420\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158020\",\n\t\t\t\t\t\t\"GEN\": \"Langenfeld (Rhld.)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t421,\n\t\t\t\t\t\t\t422,\n\t\t\t\t\t\t\t423,\n\t\t\t\t\t\t\t424\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382008\",\n\t\t\t\t\t\t\"GEN\": \"Bad Honnef\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t425,\n\t\t\t\t\t\t\t426,\n\t\t\t\t\t\t\t427,\n\t\t\t\t\t\t\t428,\n\t\t\t\t\t\t\t429,\n\t\t\t\t\t\t\t430,\n\t\t\t\t\t\t\t431,\n\t\t\t\t\t\t\t432,\n\t\t\t\t\t\t\t433,\n\t\t\t\t\t\t\t434,\n\t\t\t\t\t\t\t435,\n\t\t\t\t\t\t\t-127,\n\t\t\t\t\t\t\t436,\n\t\t\t\t\t\t\t-125,\n\t\t\t\t\t\t\t437\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774012\",\n\t\t\t\t\t\t\"GEN\": \"Borchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t438,\n\t\t\t\t\t\t\t439,\n\t\t\t\t\t\t\t440,\n\t\t\t\t\t\t\t441,\n\t\t\t\t\t\t\t442,\n\t\t\t\t\t\t\t443,\n\t\t\t\t\t\t\t444,\n\t\t\t\t\t\t\t445,\n\t\t\t\t\t\t\t446,\n\t\t\t\t\t\t\t447,\n\t\t\t\t\t\t\t448,\n\t\t\t\t\t\t\t449,\n\t\t\t\t\t\t\t-109,\n\t\t\t\t\t\t\t450,\n\t\t\t\t\t\t\t451,\n\t\t\t\t\t\t\t452,\n\t\t\t\t\t\t\t453,\n\t\t\t\t\t\t\t454,\n\t\t\t\t\t\t\t455,\n\t\t\t\t\t\t\t456\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366020\",\n\t\t\t\t\t\t\"GEN\": \"Hellenthal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t457,\n\t\t\t\t\t\t\t458,\n\t\t\t\t\t\t\t459,\n\t\t\t\t\t\t\t460,\n\t\t\t\t\t\t\t461,\n\t\t\t\t\t\t\t462\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958028\",\n\t\t\t\t\t\t\"GEN\": \"Medebach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t463,\n\t\t\t\t\t\t\t464,\n\t\t\t\t\t\t\t465,\n\t\t\t\t\t\t\t466,\n\t\t\t\t\t\t\t467,\n\t\t\t\t\t\t\t468,\n\t\t\t\t\t\t\t469,\n\t\t\t\t\t\t\t470,\n\t\t\t\t\t\t\t471,\n\t\t\t\t\t\t\t472,\n\t\t\t\t\t\t\t473\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974048\",\n\t\t\t\t\t\t\"GEN\": \"Welver\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t474,\n\t\t\t\t\t\t\t475,\n\t\t\t\t\t\t\t476,\n\t\t\t\t\t\t\t477,\n\t\t\t\t\t\t\t478,\n\t\t\t\t\t\t\t479,\n\t\t\t\t\t\t\t480,\n\t\t\t\t\t\t\t481,\n\t\t\t\t\t\t\t482,\n\t\t\t\t\t\t\t483,\n\t\t\t\t\t\t\t484,\n\t\t\t\t\t\t\t485,\n\t\t\t\t\t\t\t486,\n\t\t\t\t\t\t\t487,\n\t\t\t\t\t\t\t488,\n\t\t\t\t\t\t\t489,\n\t\t\t\t\t\t\t490\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970012\",\n\t\t\t\t\t\t\"GEN\": \"Erndtebrück\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t491,\n\t\t\t\t\t\t\t492,\n\t\t\t\t\t\t\t493,\n\t\t\t\t\t\t\t494,\n\t\t\t\t\t\t\t495,\n\t\t\t\t\t\t\t496,\n\t\t\t\t\t\t\t497,\n\t\t\t\t\t\t\t498,\n\t\t\t\t\t\t\t499\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362040\",\n\t\t\t\t\t\t\"GEN\": \"Wesseling\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t501,\n\t\t\t\t\t\t\t502,\n\t\t\t\t\t\t\t503,\n\t\t\t\t\t\t\t504,\n\t\t\t\t\t\t\t505,\n\t\t\t\t\t\t\t506,\n\t\t\t\t\t\t\t507,\n\t\t\t\t\t\t\t508,\n\t\t\t\t\t\t\t509,\n\t\t\t\t\t\t\t510,\n\t\t\t\t\t\t\t511,\n\t\t\t\t\t\t\t512,\n\t\t\t\t\t\t\t513,\n\t\t\t\t\t\t\t514,\n\t\t\t\t\t\t\t515,\n\t\t\t\t\t\t\t516,\n\t\t\t\t\t\t\t517,\n\t\t\t\t\t\t\t518,\n\t\t\t\t\t\t\t519,\n\t\t\t\t\t\t\t520,\n\t\t\t\t\t\t\t521,\n\t\t\t\t\t\t\t522,\n\t\t\t\t\t\t\t523,\n\t\t\t\t\t\t\t524\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05515000\",\n\t\t\t\t\t\t\"GEN\": \"Münster\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t525,\n\t\t\t\t\t\t\t526,\n\t\t\t\t\t\t\t527,\n\t\t\t\t\t\t\t528,\n\t\t\t\t\t\t\t529,\n\t\t\t\t\t\t\t530,\n\t\t\t\t\t\t\t531,\n\t\t\t\t\t\t\t532,\n\t\t\t\t\t\t\t533,\n\t\t\t\t\t\t\t534,\n\t\t\t\t\t\t\t535,\n\t\t\t\t\t\t\t536,\n\t\t\t\t\t\t\t537\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378004\",\n\t\t\t\t\t\t\"GEN\": \"Bergisch Gladbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t538,\n\t\t\t\t\t\t\t539,\n\t\t\t\t\t\t\t540,\n\t\t\t\t\t\t\t541,\n\t\t\t\t\t\t\t542,\n\t\t\t\t\t\t\t543,\n\t\t\t\t\t\t\t544\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378008\",\n\t\t\t\t\t\t\"GEN\": \"Burscheid\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t545,\n\t\t\t\t\t\t\t546,\n\t\t\t\t\t\t\t547,\n\t\t\t\t\t\t\t548,\n\t\t\t\t\t\t\t549,\n\t\t\t\t\t\t\t550,\n\t\t\t\t\t\t\t551,\n\t\t\t\t\t\t\t552,\n\t\t\t\t\t\t\t553\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974044\",\n\t\t\t\t\t\t\"GEN\": \"Warstein\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t554,\n\t\t\t\t\t\t\t555,\n\t\t\t\t\t\t\t556,\n\t\t\t\t\t\t\t557,\n\t\t\t\t\t\t\t-3,\n\t\t\t\t\t\t\t558,\n\t\t\t\t\t\t\t559,\n\t\t\t\t\t\t\t560\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382016\",\n\t\t\t\t\t\t\"GEN\": \"Eitorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t561,\n\t\t\t\t\t\t\t562,\n\t\t\t\t\t\t\t563,\n\t\t\t\t\t\t\t564,\n\t\t\t\t\t\t\t-556,\n\t\t\t\t\t\t\t565,\n\t\t\t\t\t\t\t566,\n\t\t\t\t\t\t\t567,\n\t\t\t\t\t\t\t568,\n\t\t\t\t\t\t\t569,\n\t\t\t\t\t\t\t570\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382076\",\n\t\t\t\t\t\t\"GEN\": \"Windeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t571,\n\t\t\t\t\t\t\t572,\n\t\t\t\t\t\t\t573,\n\t\t\t\t\t\t\t574,\n\t\t\t\t\t\t\t575,\n\t\t\t\t\t\t\t576,\n\t\t\t\t\t\t\t577,\n\t\t\t\t\t\t\t578,\n\t\t\t\t\t\t\t579,\n\t\t\t\t\t\t\t580,\n\t\t\t\t\t\t\t581,\n\t\t\t\t\t\t\t582,\n\t\t\t\t\t\t\t583,\n\t\t\t\t\t\t\t584,\n\t\t\t\t\t\t\t585,\n\t\t\t\t\t\t\t586,\n\t\t\t\t\t\t\t587,\n\t\t\t\t\t\t\t588,\n\t\t\t\t\t\t\t589\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05116000\",\n\t\t\t\t\t\t\"GEN\": \"Mönchengladbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t590,\n\t\t\t\t\t\t\t591,\n\t\t\t\t\t\t\t592,\n\t\t\t\t\t\t\t593,\n\t\t\t\t\t\t\t594,\n\t\t\t\t\t\t\t595\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970008\",\n\t\t\t\t\t\t\"GEN\": \"Burbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t596,\n\t\t\t\t\t\t\t597,\n\t\t\t\t\t\t\t598,\n\t\t\t\t\t\t\t599,\n\t\t\t\t\t\t\t600,\n\t\t\t\t\t\t\t601\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970016\",\n\t\t\t\t\t\t\"GEN\": \"Freudenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t602,\n\t\t\t\t\t\t\t603,\n\t\t\t\t\t\t\t604,\n\t\t\t\t\t\t\t605,\n\t\t\t\t\t\t\t606,\n\t\t\t\t\t\t\t607,\n\t\t\t\t\t\t\t608\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766052\",\n\t\t\t\t\t\t\"GEN\": \"Lügde\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t609,\n\t\t\t\t\t\t\t610,\n\t\t\t\t\t\t\t611,\n\t\t\t\t\t\t\t612,\n\t\t\t\t\t\t\t-589,\n\t\t\t\t\t\t\t613,\n\t\t\t\t\t\t\t614,\n\t\t\t\t\t\t\t615,\n\t\t\t\t\t\t\t616,\n\t\t\t\t\t\t\t617,\n\t\t\t\t\t\t\t618,\n\t\t\t\t\t\t\t619,\n\t\t\t\t\t\t\t620\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166032\",\n\t\t\t\t\t\t\"GEN\": \"Viersen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t621,\n\t\t\t\t\t\t\t622,\n\t\t\t\t\t\t\t623,\n\t\t\t\t\t\t\t624,\n\t\t\t\t\t\t\t625,\n\t\t\t\t\t\t\t626,\n\t\t\t\t\t\t\t627,\n\t\t\t\t\t\t\t628\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154036\",\n\t\t\t\t\t\t\"GEN\": \"Kleve\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-615,\n\t\t\t\t\t\t\t629,\n\t\t\t\t\t\t\t-587,\n\t\t\t\t\t\t\t630,\n\t\t\t\t\t\t\t631,\n\t\t\t\t\t\t\t632,\n\t\t\t\t\t\t\t633,\n\t\t\t\t\t\t\t634,\n\t\t\t\t\t\t\t635,\n\t\t\t\t\t\t\t636,\n\t\t\t\t\t\t\t637\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166024\",\n\t\t\t\t\t\t\"GEN\": \"Schwalmtal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t638,\n\t\t\t\t\t\t\t639,\n\t\t\t\t\t\t\t640,\n\t\t\t\t\t\t\t641,\n\t\t\t\t\t\t\t642,\n\t\t\t\t\t\t\t643,\n\t\t\t\t\t\t\t644,\n\t\t\t\t\t\t\t645,\n\t\t\t\t\t\t\t646,\n\t\t\t\t\t\t\t647,\n\t\t\t\t\t\t\t648,\n\t\t\t\t\t\t\t649,\n\t\t\t\t\t\t\t650,\n\t\t\t\t\t\t\t651,\n\t\t\t\t\t\t\t652\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970024\",\n\t\t\t\t\t\t\"GEN\": \"Kreuztal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t653,\n\t\t\t\t\t\t\t654,\n\t\t\t\t\t\t\t655,\n\t\t\t\t\t\t\t656,\n\t\t\t\t\t\t\t657,\n\t\t\t\t\t\t\t658,\n\t\t\t\t\t\t\t659,\n\t\t\t\t\t\t\t660,\n\t\t\t\t\t\t\t661,\n\t\t\t\t\t\t\t662,\n\t\t\t\t\t\t\t663,\n\t\t\t\t\t\t\t664,\n\t\t\t\t\t\t\t665\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334016\",\n\t\t\t\t\t\t\"GEN\": \"Herzogenrath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t666,\n\t\t\t\t\t\t\t667,\n\t\t\t\t\t\t\t668\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370024\",\n\t\t\t\t\t\t\"GEN\": \"Selfkant\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t669,\n\t\t\t\t\t\t\t670,\n\t\t\t\t\t\t\t671,\n\t\t\t\t\t\t\t672,\n\t\t\t\t\t\t\t673,\n\t\t\t\t\t\t\t674,\n\t\t\t\t\t\t\t675,\n\t\t\t\t\t\t\t676,\n\t\t\t\t\t\t\t677,\n\t\t\t\t\t\t\t678,\n\t\t\t\t\t\t\t679\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370016\",\n\t\t\t\t\t\t\"GEN\": \"Heinsberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t680,\n\t\t\t\t\t\t\t681,\n\t\t\t\t\t\t\t682,\n\t\t\t\t\t\t\t683,\n\t\t\t\t\t\t\t684,\n\t\t\t\t\t\t\t685,\n\t\t\t\t\t\t\t686,\n\t\t\t\t\t\t\t687,\n\t\t\t\t\t\t\t688,\n\t\t\t\t\t\t\t689,\n\t\t\t\t\t\t\t690,\n\t\t\t\t\t\t\t691,\n\t\t\t\t\t\t\t692,\n\t\t\t\t\t\t\t693,\n\t\t\t\t\t\t\t694\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358004\",\n\t\t\t\t\t\t\"GEN\": \"Aldenhoven\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t695,\n\t\t\t\t\t\t\t696,\n\t\t\t\t\t\t\t697,\n\t\t\t\t\t\t\t698,\n\t\t\t\t\t\t\t699,\n\t\t\t\t\t\t\t700,\n\t\t\t\t\t\t\t701,\n\t\t\t\t\t\t\t-529,\n\t\t\t\t\t\t\t702,\n\t\t\t\t\t\t\t703,\n\t\t\t\t\t\t\t704\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378012\",\n\t\t\t\t\t\t\"GEN\": \"Kürten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t705,\n\t\t\t\t\t\t\t706,\n\t\t\t\t\t\t\t707,\n\t\t\t\t\t\t\t708,\n\t\t\t\t\t\t\t709,\n\t\t\t\t\t\t\t-51,\n\t\t\t\t\t\t\t710,\n\t\t\t\t\t\t\t-49,\n\t\t\t\t\t\t\t711,\n\t\t\t\t\t\t\t-47,\n\t\t\t\t\t\t\t712,\n\t\t\t\t\t\t\t713,\n\t\t\t\t\t\t\t714,\n\t\t\t\t\t\t\t715,\n\t\t\t\t\t\t\t716,\n\t\t\t\t\t\t\t717,\n\t\t\t\t\t\t\t718,\n\t\t\t\t\t\t\t719,\n\t\t\t\t\t\t\t720,\n\t\t\t\t\t\t\t721\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962012\",\n\t\t\t\t\t\t\"GEN\": \"Halver\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t722,\n\t\t\t\t\t\t\t723,\n\t\t\t\t\t\t\t724,\n\t\t\t\t\t\t\t725,\n\t\t\t\t\t\t\t726,\n\t\t\t\t\t\t\t727,\n\t\t\t\t\t\t\t728,\n\t\t\t\t\t\t\t729,\n\t\t\t\t\t\t\t730,\n\t\t\t\t\t\t\t731,\n\t\t\t\t\t\t\t732,\n\t\t\t\t\t\t\t733\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962052\",\n\t\t\t\t\t\t\"GEN\": \"Plettenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t734,\n\t\t\t\t\t\t\t735,\n\t\t\t\t\t\t\t736,\n\t\t\t\t\t\t\t737,\n\t\t\t\t\t\t\t738,\n\t\t\t\t\t\t\t739,\n\t\t\t\t\t\t\t740,\n\t\t\t\t\t\t\t741,\n\t\t\t\t\t\t\t742\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770044\",\n\t\t\t\t\t\t\"GEN\": \"Stemwede\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t743,\n\t\t\t\t\t\t\t744,\n\t\t\t\t\t\t\t745,\n\t\t\t\t\t\t\t746,\n\t\t\t\t\t\t\t747,\n\t\t\t\t\t\t\t748,\n\t\t\t\t\t\t\t749,\n\t\t\t\t\t\t\t750,\n\t\t\t\t\t\t\t751,\n\t\t\t\t\t\t\t752,\n\t\t\t\t\t\t\t753,\n\t\t\t\t\t\t\t754,\n\t\t\t\t\t\t\t755,\n\t\t\t\t\t\t\t-580,\n\t\t\t\t\t\t\t756,\n\t\t\t\t\t\t\t-578,\n\t\t\t\t\t\t\t757,\n\t\t\t\t\t\t\t-576,\n\t\t\t\t\t\t\t758,\n\t\t\t\t\t\t\t759\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162012\",\n\t\t\t\t\t\t\"GEN\": \"Jüchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t760,\n\t\t\t\t\t\t\t761,\n\t\t\t\t\t\t\t762,\n\t\t\t\t\t\t\t763,\n\t\t\t\t\t\t\t764,\n\t\t\t\t\t\t\t765,\n\t\t\t\t\t\t\t766,\n\t\t\t\t\t\t\t767,\n\t\t\t\t\t\t\t768,\n\t\t\t\t\t\t\t-748,\n\t\t\t\t\t\t\t769,\n\t\t\t\t\t\t\t770,\n\t\t\t\t\t\t\t-745,\n\t\t\t\t\t\t\t771,\n\t\t\t\t\t\t\t772,\n\t\t\t\t\t\t\t773\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162008\",\n\t\t\t\t\t\t\"GEN\": \"Grevenbroich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t774,\n\t\t\t\t\t\t\t775,\n\t\t\t\t\t\t\t776,\n\t\t\t\t\t\t\t777,\n\t\t\t\t\t\t\t778,\n\t\t\t\t\t\t\t779,\n\t\t\t\t\t\t\t780,\n\t\t\t\t\t\t\t781,\n\t\t\t\t\t\t\t782,\n\t\t\t\t\t\t\t783,\n\t\t\t\t\t\t\t784\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334032\",\n\t\t\t\t\t\t\"GEN\": \"Stolberg (Rhld.)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t785,\n\t\t\t\t\t\t\t786,\n\t\t\t\t\t\t\t787,\n\t\t\t\t\t\t\t788,\n\t\t\t\t\t\t\t789,\n\t\t\t\t\t\t\t790,\n\t\t\t\t\t\t\t791,\n\t\t\t\t\t\t\t792,\n\t\t\t\t\t\t\t793,\n\t\t\t\t\t\t\t794,\n\t\t\t\t\t\t\t795,\n\t\t\t\t\t\t\t796,\n\t\t\t\t\t\t\t797,\n\t\t\t\t\t\t\t798,\n\t\t\t\t\t\t\t799\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158028\",\n\t\t\t\t\t\t\"GEN\": \"Ratingen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t800,\n\t\t\t\t\t\t\t801,\n\t\t\t\t\t\t\t802,\n\t\t\t\t\t\t\t803,\n\t\t\t\t\t\t\t804,\n\t\t\t\t\t\t\t805,\n\t\t\t\t\t\t\t-281,\n\t\t\t\t\t\t\t806,\n\t\t\t\t\t\t\t807,\n\t\t\t\t\t\t\t808,\n\t\t\t\t\t\t\t809,\n\t\t\t\t\t\t\t810\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558016\",\n\t\t\t\t\t\t\"GEN\": \"Dülmen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t811,\n\t\t\t\t\t\t\t812,\n\t\t\t\t\t\t\t813,\n\t\t\t\t\t\t\t814,\n\t\t\t\t\t\t\t815,\n\t\t\t\t\t\t\t-789,\n\t\t\t\t\t\t\t816,\n\t\t\t\t\t\t\t817,\n\t\t\t\t\t\t\t818\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158012\",\n\t\t\t\t\t\t\"GEN\": \"Heiligenhaus\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-603,\n\t\t\t\t\t\t\t819,\n\t\t\t\t\t\t\t820,\n\t\t\t\t\t\t\t821,\n\t\t\t\t\t\t\t822,\n\t\t\t\t\t\t\t823,\n\t\t\t\t\t\t\t824,\n\t\t\t\t\t\t\t825,\n\t\t\t\t\t\t\t826,\n\t\t\t\t\t\t\t827,\n\t\t\t\t\t\t\t828,\n\t\t\t\t\t\t\t829\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762024\",\n\t\t\t\t\t\t\"GEN\": \"Marienmünster\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t830,\n\t\t\t\t\t\t\t831,\n\t\t\t\t\t\t\t832,\n\t\t\t\t\t\t\t833,\n\t\t\t\t\t\t\t834,\n\t\t\t\t\t\t\t835,\n\t\t\t\t\t\t\t836,\n\t\t\t\t\t\t\t837,\n\t\t\t\t\t\t\t838,\n\t\t\t\t\t\t\t839,\n\t\t\t\t\t\t\t840,\n\t\t\t\t\t\t\t841,\n\t\t\t\t\t\t\t842,\n\t\t\t\t\t\t\t843,\n\t\t\t\t\t\t\t844,\n\t\t\t\t\t\t\t845\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962040\",\n\t\t\t\t\t\t\"GEN\": \"Menden (Sauerland)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t846,\n\t\t\t\t\t\t\t-342,\n\t\t\t\t\t\t\t847,\n\t\t\t\t\t\t\t848,\n\t\t\t\t\t\t\t849,\n\t\t\t\t\t\t\t850,\n\t\t\t\t\t\t\t851,\n\t\t\t\t\t\t\t852,\n\t\t\t\t\t\t\t853,\n\t\t\t\t\t\t\t854,\n\t\t\t\t\t\t\t855,\n\t\t\t\t\t\t\t-412,\n\t\t\t\t\t\t\t856,\n\t\t\t\t\t\t\t-420,\n\t\t\t\t\t\t\t857,\n\t\t\t\t\t\t\t858,\n\t\t\t\t\t\t\t859,\n\t\t\t\t\t\t\t860,\n\t\t\t\t\t\t\t-344\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05122000\",\n\t\t\t\t\t\t\"GEN\": \"Solingen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t861,\n\t\t\t\t\t\t\t862,\n\t\t\t\t\t\t\t863,\n\t\t\t\t\t\t\t864,\n\t\t\t\t\t\t\t865,\n\t\t\t\t\t\t\t866,\n\t\t\t\t\t\t\t867,\n\t\t\t\t\t\t\t868,\n\t\t\t\t\t\t\t869,\n\t\t\t\t\t\t\t870\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154048\",\n\t\t\t\t\t\t\"GEN\": \"Rheurdt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t871,\n\t\t\t\t\t\t\t872,\n\t\t\t\t\t\t\t873,\n\t\t\t\t\t\t\t874,\n\t\t\t\t\t\t\t875,\n\t\t\t\t\t\t\t876,\n\t\t\t\t\t\t\t877,\n\t\t\t\t\t\t\t878,\n\t\t\t\t\t\t\t879,\n\t\t\t\t\t\t\t-258,\n\t\t\t\t\t\t\t880\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554024\",\n\t\t\t\t\t\t\"GEN\": \"Heek\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t881,\n\t\t\t\t\t\t\t882,\n\t\t\t\t\t\t\t883,\n\t\t\t\t\t\t\t884,\n\t\t\t\t\t\t\t885,\n\t\t\t\t\t\t\t886,\n\t\t\t\t\t\t\t887,\n\t\t\t\t\t\t\t888\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566060\",\n\t\t\t\t\t\t\"GEN\": \"Neuenkirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t889,\n\t\t\t\t\t\t\t890,\n\t\t\t\t\t\t\t891,\n\t\t\t\t\t\t\t892,\n\t\t\t\t\t\t\t893,\n\t\t\t\t\t\t\t894,\n\t\t\t\t\t\t\t895,\n\t\t\t\t\t\t\t896\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766004\",\n\t\t\t\t\t\t\"GEN\": \"Augustdorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t897,\n\t\t\t\t\t\t\t898,\n\t\t\t\t\t\t\t899,\n\t\t\t\t\t\t\t900,\n\t\t\t\t\t\t\t901,\n\t\t\t\t\t\t\t902,\n\t\t\t\t\t\t\t903,\n\t\t\t\t\t\t\t904,\n\t\t\t\t\t\t\t905,\n\t\t\t\t\t\t\t906\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158004\",\n\t\t\t\t\t\t\"GEN\": \"Erkrath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t907,\n\t\t\t\t\t\t\t908,\n\t\t\t\t\t\t\t909,\n\t\t\t\t\t\t\t-34,\n\t\t\t\t\t\t\t910,\n\t\t\t\t\t\t\t911,\n\t\t\t\t\t\t\t912,\n\t\t\t\t\t\t\t913,\n\t\t\t\t\t\t\t914,\n\t\t\t\t\t\t\t915,\n\t\t\t\t\t\t\t916,\n\t\t\t\t\t\t\t917,\n\t\t\t\t\t\t\t-729,\n\t\t\t\t\t\t\t918\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966004\",\n\t\t\t\t\t\t\"GEN\": \"Attendorn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t919,\n\t\t\t\t\t\t\t920,\n\t\t\t\t\t\t\t921,\n\t\t\t\t\t\t\t-582,\n\t\t\t\t\t\t\t922,\n\t\t\t\t\t\t\t923,\n\t\t\t\t\t\t\t-754,\n\t\t\t\t\t\t\t924,\n\t\t\t\t\t\t\t925,\n\t\t\t\t\t\t\t926,\n\t\t\t\t\t\t\t927,\n\t\t\t\t\t\t\t928,\n\t\t\t\t\t\t\t929,\n\t\t\t\t\t\t\t930,\n\t\t\t\t\t\t\t931,\n\t\t\t\t\t\t\t932,\n\t\t\t\t\t\t\t933,\n\t\t\t\t\t\t\t934,\n\t\t\t\t\t\t\t935,\n\t\t\t\t\t\t\t936,\n\t\t\t\t\t\t\t937,\n\t\t\t\t\t\t\t938,\n\t\t\t\t\t\t\t939\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370004\",\n\t\t\t\t\t\t\"GEN\": \"Erkelenz\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t940,\n\t\t\t\t\t\t\t941,\n\t\t\t\t\t\t\t942,\n\t\t\t\t\t\t\t943,\n\t\t\t\t\t\t\t944,\n\t\t\t\t\t\t\t945,\n\t\t\t\t\t\t\t946\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370028\",\n\t\t\t\t\t\t\"GEN\": \"Übach-Palenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-290,\n\t\t\t\t\t\t\t947,\n\t\t\t\t\t\t\t948,\n\t\t\t\t\t\t\t949,\n\t\t\t\t\t\t\t950,\n\t\t\t\t\t\t\t951,\n\t\t\t\t\t\t\t952,\n\t\t\t\t\t\t\t953,\n\t\t\t\t\t\t\t954,\n\t\t\t\t\t\t\t955,\n\t\t\t\t\t\t\t956,\n\t\t\t\t\t\t\t957,\n\t\t\t\t\t\t\t958,\n\t\t\t\t\t\t\t-292,\n\t\t\t\t\t\t\t959\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562024\",\n\t\t\t\t\t\t\"GEN\": \"Marl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t960,\n\t\t\t\t\t\t\t961,\n\t\t\t\t\t\t\t962,\n\t\t\t\t\t\t\t963,\n\t\t\t\t\t\t\t964,\n\t\t\t\t\t\t\t965,\n\t\t\t\t\t\t\t966,\n\t\t\t\t\t\t\t967,\n\t\t\t\t\t\t\t968,\n\t\t\t\t\t\t\t-81,\n\t\t\t\t\t\t\t969\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978016\",\n\t\t\t\t\t\t\"GEN\": \"Holzwickede\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-407,\n\t\t\t\t\t\t\t970,\n\t\t\t\t\t\t\t971,\n\t\t\t\t\t\t\t972,\n\t\t\t\t\t\t\t973,\n\t\t\t\t\t\t\t974,\n\t\t\t\t\t\t\t975,\n\t\t\t\t\t\t\t976,\n\t\t\t\t\t\t\t977\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154024\",\n\t\t\t\t\t\t\"GEN\": \"Kalkar\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t978,\n\t\t\t\t\t\t\t979,\n\t\t\t\t\t\t\t980,\n\t\t\t\t\t\t\t981,\n\t\t\t\t\t\t\t982,\n\t\t\t\t\t\t\t983,\n\t\t\t\t\t\t\t984,\n\t\t\t\t\t\t\t985,\n\t\t\t\t\t\t\t986,\n\t\t\t\t\t\t\t987,\n\t\t\t\t\t\t\t988,\n\t\t\t\t\t\t\t989,\n\t\t\t\t\t\t\t990,\n\t\t\t\t\t\t\t991,\n\t\t\t\t\t\t\t992,\n\t\t\t\t\t\t\t993,\n\t\t\t\t\t\t\t994\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554012\",\n\t\t\t\t\t\t\"GEN\": \"Borken\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t995,\n\t\t\t\t\t\t\t996,\n\t\t\t\t\t\t\t997,\n\t\t\t\t\t\t\t998,\n\t\t\t\t\t\t\t-591,\n\t\t\t\t\t\t\t999,\n\t\t\t\t\t\t\t-595,\n\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t1001,\n\t\t\t\t\t\t\t1002,\n\t\t\t\t\t\t\t1003,\n\t\t\t\t\t\t\t1004,\n\t\t\t\t\t\t\t1005,\n\t\t\t\t\t\t\t1006\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970044\",\n\t\t\t\t\t\t\"GEN\": \"Wilnsdorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-28,\n\t\t\t\t\t\t\t1007,\n\t\t\t\t\t\t\t1008,\n\t\t\t\t\t\t\t1009,\n\t\t\t\t\t\t\t1010,\n\t\t\t\t\t\t\t-489,\n\t\t\t\t\t\t\t1011,\n\t\t\t\t\t\t\t1012,\n\t\t\t\t\t\t\t1013,\n\t\t\t\t\t\t\t1014,\n\t\t\t\t\t\t\t1015,\n\t\t\t\t\t\t\t1016,\n\t\t\t\t\t\t\t1017,\n\t\t\t\t\t\t\t1018,\n\t\t\t\t\t\t\t1019,\n\t\t\t\t\t\t\t1020,\n\t\t\t\t\t\t\t1021,\n\t\t\t\t\t\t\t-30,\n\t\t\t\t\t\t\t1022\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966016\",\n\t\t\t\t\t\t\"GEN\": \"Kirchhundem\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1023,\n\t\t\t\t\t\t\t1024,\n\t\t\t\t\t\t\t1025,\n\t\t\t\t\t\t\t-544,\n\t\t\t\t\t\t\t1026,\n\t\t\t\t\t\t\t1027,\n\t\t\t\t\t\t\t-855\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378016\",\n\t\t\t\t\t\t\"GEN\": \"Leichlingen (Rhld.)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-94,\n\t\t\t\t\t\t\t1028,\n\t\t\t\t\t\t\t1029,\n\t\t\t\t\t\t\t1030,\n\t\t\t\t\t\t\t1031,\n\t\t\t\t\t\t\t1032,\n\t\t\t\t\t\t\t1033,\n\t\t\t\t\t\t\t1034,\n\t\t\t\t\t\t\t1035,\n\t\t\t\t\t\t\t1036,\n\t\t\t\t\t\t\t1037,\n\t\t\t\t\t\t\t1038,\n\t\t\t\t\t\t\t1039,\n\t\t\t\t\t\t\t1040,\n\t\t\t\t\t\t\t1041,\n\t\t\t\t\t\t\t1042,\n\t\t\t\t\t\t\t1043,\n\t\t\t\t\t\t\t1044,\n\t\t\t\t\t\t\t1045,\n\t\t\t\t\t\t\t1046\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05911000\",\n\t\t\t\t\t\t\"GEN\": \"Bochum\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1047,\n\t\t\t\t\t\t\t1048,\n\t\t\t\t\t\t\t1049,\n\t\t\t\t\t\t\t1050,\n\t\t\t\t\t\t\t1051,\n\t\t\t\t\t\t\t1052,\n\t\t\t\t\t\t\t-562,\n\t\t\t\t\t\t\t1053,\n\t\t\t\t\t\t\t-570,\n\t\t\t\t\t\t\t1054,\n\t\t\t\t\t\t\t1055,\n\t\t\t\t\t\t\t1056,\n\t\t\t\t\t\t\t1057,\n\t\t\t\t\t\t\t1058,\n\t\t\t\t\t\t\t1059\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374044\",\n\t\t\t\t\t\t\"GEN\": \"Waldbröl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1060,\n\t\t\t\t\t\t\t1061,\n\t\t\t\t\t\t\t1062,\n\t\t\t\t\t\t\t1063,\n\t\t\t\t\t\t\t1064,\n\t\t\t\t\t\t\t1065,\n\t\t\t\t\t\t\t1066,\n\t\t\t\t\t\t\t-1050,\n\t\t\t\t\t\t\t1067,\n\t\t\t\t\t\t\t1068,\n\t\t\t\t\t\t\t-1060,\n\t\t\t\t\t\t\t1069,\n\t\t\t\t\t\t\t1070,\n\t\t\t\t\t\t\t1071,\n\t\t\t\t\t\t\t1072,\n\t\t\t\t\t\t\t1073,\n\t\t\t\t\t\t\t1074,\n\t\t\t\t\t\t\t1075,\n\t\t\t\t\t\t\t1076,\n\t\t\t\t\t\t\t1077\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374040\",\n\t\t\t\t\t\t\"GEN\": \"Reichshof\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-43,\n\t\t\t\t\t\t\t1078,\n\t\t\t\t\t\t\t1079,\n\t\t\t\t\t\t\t1080,\n\t\t\t\t\t\t\t1081,\n\t\t\t\t\t\t\t1082,\n\t\t\t\t\t\t\t1083,\n\t\t\t\t\t\t\t1084,\n\t\t\t\t\t\t\t1085,\n\t\t\t\t\t\t\t1086,\n\t\t\t\t\t\t\t1087,\n\t\t\t\t\t\t\t1088\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374024\",\n\t\t\t\t\t\t\"GEN\": \"Marienheide\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1089,\n\t\t\t\t\t\t\t1090,\n\t\t\t\t\t\t\t1091,\n\t\t\t\t\t\t\t1092,\n\t\t\t\t\t\t\t1093,\n\t\t\t\t\t\t\t1094,\n\t\t\t\t\t\t\t1095,\n\t\t\t\t\t\t\t1096,\n\t\t\t\t\t\t\t-315,\n\t\t\t\t\t\t\t1097,\n\t\t\t\t\t\t\t-161,\n\t\t\t\t\t\t\t1098,\n\t\t\t\t\t\t\t1099,\n\t\t\t\t\t\t\t1100\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358052\",\n\t\t\t\t\t\t\"GEN\": \"Nörvenich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-497,\n\t\t\t\t\t\t\t1101,\n\t\t\t\t\t\t\t1102,\n\t\t\t\t\t\t\t1103,\n\t\t\t\t\t\t\t1104,\n\t\t\t\t\t\t\t1105,\n\t\t\t\t\t\t\t1106,\n\t\t\t\t\t\t\t1107,\n\t\t\t\t\t\t\t1108,\n\t\t\t\t\t\t\t1109,\n\t\t\t\t\t\t\t1110\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362012\",\n\t\t\t\t\t\t\"GEN\": \"Brühl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1111,\n\t\t\t\t\t\t\t1112,\n\t\t\t\t\t\t\t1113,\n\t\t\t\t\t\t\t1114,\n\t\t\t\t\t\t\t1115,\n\t\t\t\t\t\t\t1116,\n\t\t\t\t\t\t\t1117,\n\t\t\t\t\t\t\t1118,\n\t\t\t\t\t\t\t1119,\n\t\t\t\t\t\t\t1120\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382060\",\n\t\t\t\t\t\t\"GEN\": \"Siegburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-254,\n\t\t\t\t\t\t\t1121,\n\t\t\t\t\t\t\t1122,\n\t\t\t\t\t\t\t1123,\n\t\t\t\t\t\t\t1124,\n\t\t\t\t\t\t\t1125,\n\t\t\t\t\t\t\t1126,\n\t\t\t\t\t\t\t1127,\n\t\t\t\t\t\t\t1128,\n\t\t\t\t\t\t\t-503,\n\t\t\t\t\t\t\t1129,\n\t\t\t\t\t\t\t1130,\n\t\t\t\t\t\t\t1131\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570044\",\n\t\t\t\t\t\t\"GEN\": \"Telgte\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1132,\n\t\t\t\t\t\t\t1133,\n\t\t\t\t\t\t\t1134,\n\t\t\t\t\t\t\t1135,\n\t\t\t\t\t\t\t1136,\n\t\t\t\t\t\t\t1137,\n\t\t\t\t\t\t\t-262,\n\t\t\t\t\t\t\t1138,\n\t\t\t\t\t\t\t1139,\n\t\t\t\t\t\t\t1140,\n\t\t\t\t\t\t\t1141,\n\t\t\t\t\t\t\t1142,\n\t\t\t\t\t\t\t1143,\n\t\t\t\t\t\t\t-283,\n\t\t\t\t\t\t\t1144,\n\t\t\t\t\t\t\t-805,\n\t\t\t\t\t\t\t1145\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558024\",\n\t\t\t\t\t\t\"GEN\": \"Lüdinghausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1115,\n\t\t\t\t\t\t\t1146,\n\t\t\t\t\t\t\t-8,\n\t\t\t\t\t\t\t1147,\n\t\t\t\t\t\t\t1148,\n\t\t\t\t\t\t\t1149,\n\t\t\t\t\t\t\t1150,\n\t\t\t\t\t\t\t1151,\n\t\t\t\t\t\t\t1152,\n\t\t\t\t\t\t\t1153,\n\t\t\t\t\t\t\t1154\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382056\",\n\t\t\t\t\t\t\"GEN\": \"Sankt Augustin\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1155,\n\t\t\t\t\t\t\t1156,\n\t\t\t\t\t\t\t-299,\n\t\t\t\t\t\t\t1157,\n\t\t\t\t\t\t\t1158,\n\t\t\t\t\t\t\t1159,\n\t\t\t\t\t\t\t1160,\n\t\t\t\t\t\t\t1161,\n\t\t\t\t\t\t\t1162,\n\t\t\t\t\t\t\t1163,\n\t\t\t\t\t\t\t1164,\n\t\t\t\t\t\t\t1165,\n\t\t\t\t\t\t\t1166\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554044\",\n\t\t\t\t\t\t\"GEN\": \"Reken\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1167,\n\t\t\t\t\t\t\t1168,\n\t\t\t\t\t\t\t1169,\n\t\t\t\t\t\t\t1170,\n\t\t\t\t\t\t\t-1058,\n\t\t\t\t\t\t\t1171,\n\t\t\t\t\t\t\t1172,\n\t\t\t\t\t\t\t1173\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374032\",\n\t\t\t\t\t\t\"GEN\": \"Nümbrecht\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1174,\n\t\t\t\t\t\t\t-32,\n\t\t\t\t\t\t\t1175,\n\t\t\t\t\t\t\t-1021,\n\t\t\t\t\t\t\t1176,\n\t\t\t\t\t\t\t1177,\n\t\t\t\t\t\t\t1178,\n\t\t\t\t\t\t\t1179,\n\t\t\t\t\t\t\t1180,\n\t\t\t\t\t\t\t1181,\n\t\t\t\t\t\t\t1182,\n\t\t\t\t\t\t\t-913,\n\t\t\t\t\t\t\t1183\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966024\",\n\t\t\t\t\t\t\"GEN\": \"Olpe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1184,\n\t\t\t\t\t\t\t-1178,\n\t\t\t\t\t\t\t1185,\n\t\t\t\t\t\t\t-649,\n\t\t\t\t\t\t\t1186,\n\t\t\t\t\t\t\t-600,\n\t\t\t\t\t\t\t1187,\n\t\t\t\t\t\t\t-1063,\n\t\t\t\t\t\t\t1188,\n\t\t\t\t\t\t\t1189,\n\t\t\t\t\t\t\t-1180\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966028\",\n\t\t\t\t\t\t\"GEN\": \"Wenden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1190,\n\t\t\t\t\t\t\t1191,\n\t\t\t\t\t\t\t1192,\n\t\t\t\t\t\t\t1193,\n\t\t\t\t\t\t\t1194,\n\t\t\t\t\t\t\t-1073,\n\t\t\t\t\t\t\t1195,\n\t\t\t\t\t\t\t1196,\n\t\t\t\t\t\t\t1197,\n\t\t\t\t\t\t\t1198,\n\t\t\t\t\t\t\t1199,\n\t\t\t\t\t\t\t1200,\n\t\t\t\t\t\t\t1201,\n\t\t\t\t\t\t\t1202,\n\t\t\t\t\t\t\t-1083,\n\t\t\t\t\t\t\t1203,\n\t\t\t\t\t\t\t1204,\n\t\t\t\t\t\t\t1205,\n\t\t\t\t\t\t\t1206\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374012\",\n\t\t\t\t\t\t\"GEN\": \"Gummersbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-550,\n\t\t\t\t\t\t\t1207,\n\t\t\t\t\t\t\t1208,\n\t\t\t\t\t\t\t1209,\n\t\t\t\t\t\t\t1210,\n\t\t\t\t\t\t\t1211,\n\t\t\t\t\t\t\t1212,\n\t\t\t\t\t\t\t1213,\n\t\t\t\t\t\t\t1214,\n\t\t\t\t\t\t\t1215,\n\t\t\t\t\t\t\t1216,\n\t\t\t\t\t\t\t1217,\n\t\t\t\t\t\t\t1218,\n\t\t\t\t\t\t\t1219,\n\t\t\t\t\t\t\t1220,\n\t\t\t\t\t\t\t1221,\n\t\t\t\t\t\t\t1222,\n\t\t\t\t\t\t\t1223,\n\t\t\t\t\t\t\t1224\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958032\",\n\t\t\t\t\t\t\"GEN\": \"Meschede\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1225,\n\t\t\t\t\t\t\t1226,\n\t\t\t\t\t\t\t-1052,\n\t\t\t\t\t\t\t1227,\n\t\t\t\t\t\t\t1228,\n\t\t\t\t\t\t\t-1065\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374028\",\n\t\t\t\t\t\t\"GEN\": \"Morsbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1229,\n\t\t\t\t\t\t\t1230,\n\t\t\t\t\t\t\t1231,\n\t\t\t\t\t\t\t-731,\n\t\t\t\t\t\t\t1232,\n\t\t\t\t\t\t\t1233,\n\t\t\t\t\t\t\t1234,\n\t\t\t\t\t\t\t1235\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962020\",\n\t\t\t\t\t\t\"GEN\": \"Herscheid\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1236,\n\t\t\t\t\t\t\t1237,\n\t\t\t\t\t\t\t1238,\n\t\t\t\t\t\t\t1239,\n\t\t\t\t\t\t\t-1076,\n\t\t\t\t\t\t\t1240,\n\t\t\t\t\t\t\t-1193\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374004\",\n\t\t\t\t\t\t\"GEN\": \"Bergneustadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1241,\n\t\t\t\t\t\t\t-915,\n\t\t\t\t\t\t\t1242,\n\t\t\t\t\t\t\t-1182,\n\t\t\t\t\t\t\t1243,\n\t\t\t\t\t\t\t1244,\n\t\t\t\t\t\t\t-1061,\n\t\t\t\t\t\t\t1245,\n\t\t\t\t\t\t\t-1238,\n\t\t\t\t\t\t\t1246,\n\t\t\t\t\t\t\t-1192,\n\t\t\t\t\t\t\t1247,\n\t\t\t\t\t\t\t1248,\n\t\t\t\t\t\t\t1249\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966008\",\n\t\t\t\t\t\t\"GEN\": \"Drolshagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1013,\n\t\t\t\t\t\t\t1250,\n\t\t\t\t\t\t\t-487,\n\t\t\t\t\t\t\t1251,\n\t\t\t\t\t\t\t-485,\n\t\t\t\t\t\t\t1252,\n\t\t\t\t\t\t\t1253,\n\t\t\t\t\t\t\t1254,\n\t\t\t\t\t\t\t1255,\n\t\t\t\t\t\t\t1256,\n\t\t\t\t\t\t\t1257,\n\t\t\t\t\t\t\t1258,\n\t\t\t\t\t\t\t1259,\n\t\t\t\t\t\t\t1260,\n\t\t\t\t\t\t\t-640,\n\t\t\t\t\t\t\t1261,\n\t\t\t\t\t\t\t1262,\n\t\t\t\t\t\t\t1263\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970020\",\n\t\t\t\t\t\t\"GEN\": \"Hilchenbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1264,\n\t\t\t\t\t\t\t1265,\n\t\t\t\t\t\t\t-1168,\n\t\t\t\t\t\t\t1266,\n\t\t\t\t\t\t\t1267,\n\t\t\t\t\t\t\t1268,\n\t\t\t\t\t\t\t1269,\n\t\t\t\t\t\t\t1270,\n\t\t\t\t\t\t\t1271,\n\t\t\t\t\t\t\t1272,\n\t\t\t\t\t\t\t1273,\n\t\t\t\t\t\t\t1274,\n\t\t\t\t\t\t\t1275,\n\t\t\t\t\t\t\t1276,\n\t\t\t\t\t\t\t1277,\n\t\t\t\t\t\t\t1278,\n\t\t\t\t\t\t\t1279\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382036\",\n\t\t\t\t\t\t\"GEN\": \"Much\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1280,\n\t\t\t\t\t\t\t1281,\n\t\t\t\t\t\t\t-1085,\n\t\t\t\t\t\t\t1282,\n\t\t\t\t\t\t\t-1202,\n\t\t\t\t\t\t\t1283,\n\t\t\t\t\t\t\t1284,\n\t\t\t\t\t\t\t1285,\n\t\t\t\t\t\t\t1286,\n\t\t\t\t\t\t\t1287,\n\t\t\t\t\t\t\t1288,\n\t\t\t\t\t\t\t-701,\n\t\t\t\t\t\t\t1289,\n\t\t\t\t\t\t\t-699,\n\t\t\t\t\t\t\t1290,\n\t\t\t\t\t\t\t1291,\n\t\t\t\t\t\t\t1292,\n\t\t\t\t\t\t\t1293\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374020\",\n\t\t\t\t\t\t\"GEN\": \"Lindlar\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1276,\n\t\t\t\t\t\t\t1294,\n\t\t\t\t\t\t\t1295,\n\t\t\t\t\t\t\t-1273,\n\t\t\t\t\t\t\t1296,\n\t\t\t\t\t\t\t1297,\n\t\t\t\t\t\t\t1298,\n\t\t\t\t\t\t\t-1112,\n\t\t\t\t\t\t\t1299,\n\t\t\t\t\t\t\t1300,\n\t\t\t\t\t\t\t1301\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382040\",\n\t\t\t\t\t\t\"GEN\": \"Neunkirchen-Seelscheid\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1302,\n\t\t\t\t\t\t\t-247,\n\t\t\t\t\t\t\t1303,\n\t\t\t\t\t\t\t1304,\n\t\t\t\t\t\t\t1305,\n\t\t\t\t\t\t\t1306,\n\t\t\t\t\t\t\t1307,\n\t\t\t\t\t\t\t1308,\n\t\t\t\t\t\t\t1309,\n\t\t\t\t\t\t\t-1094,\n\t\t\t\t\t\t\t1310,\n\t\t\t\t\t\t\t-1092\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358060\",\n\t\t\t\t\t\t\"GEN\": \"Vettweiß\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1311,\n\t\t\t\t\t\t\t1312,\n\t\t\t\t\t\t\t1313,\n\t\t\t\t\t\t\t1314,\n\t\t\t\t\t\t\t1315,\n\t\t\t\t\t\t\t1316,\n\t\t\t\t\t\t\t1317,\n\t\t\t\t\t\t\t1318,\n\t\t\t\t\t\t\t1319,\n\t\t\t\t\t\t\t1320\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154064\",\n\t\t\t\t\t\t\"GEN\": \"Weeze\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1321,\n\t\t\t\t\t\t\t1322,\n\t\t\t\t\t\t\t1323,\n\t\t\t\t\t\t\t1324,\n\t\t\t\t\t\t\t-1107,\n\t\t\t\t\t\t\t1325,\n\t\t\t\t\t\t\t-205,\n\t\t\t\t\t\t\t1326,\n\t\t\t\t\t\t\t-203,\n\t\t\t\t\t\t\t1327,\n\t\t\t\t\t\t\t-249,\n\t\t\t\t\t\t\t1328,\n\t\t\t\t\t\t\t-1090,\n\t\t\t\t\t\t\t1329,\n\t\t\t\t\t\t\t1330,\n\t\t\t\t\t\t\t1331\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362020\",\n\t\t\t\t\t\t\"GEN\": \"Erftstadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1332,\n\t\t\t\t\t\t\t-1288,\n\t\t\t\t\t\t\t1333,\n\t\t\t\t\t\t\t1334,\n\t\t\t\t\t\t\t1335,\n\t\t\t\t\t\t\t1336,\n\t\t\t\t\t\t\t-1278,\n\t\t\t\t\t\t\t1337,\n\t\t\t\t\t\t\t1338,\n\t\t\t\t\t\t\t1339,\n\t\t\t\t\t\t\t1340,\n\t\t\t\t\t\t\t1341,\n\t\t\t\t\t\t\t1342,\n\t\t\t\t\t\t\t1343,\n\t\t\t\t\t\t\t-531\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378024\",\n\t\t\t\t\t\t\"GEN\": \"Overath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1344,\n\t\t\t\t\t\t\t-716,\n\t\t\t\t\t\t\t1345,\n\t\t\t\t\t\t\t-714,\n\t\t\t\t\t\t\t1346,\n\t\t\t\t\t\t\t-45,\n\t\t\t\t\t\t\t1347,\n\t\t\t\t\t\t\t-1088,\n\t\t\t\t\t\t\t1348,\n\t\t\t\t\t\t\t-1086,\n\t\t\t\t\t\t\t1349,\n\t\t\t\t\t\t\t-1281,\n\t\t\t\t\t\t\t1350,\n\t\t\t\t\t\t\t-1293,\n\t\t\t\t\t\t\t1351,\n\t\t\t\t\t\t\t-696,\n\t\t\t\t\t\t\t1352,\n\t\t\t\t\t\t\t1353,\n\t\t\t\t\t\t\t1354,\n\t\t\t\t\t\t\t1355,\n\t\t\t\t\t\t\t1356,\n\t\t\t\t\t\t\t1357\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374052\",\n\t\t\t\t\t\t\"GEN\": \"Wipperfürth\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1358,\n\t\t\t\t\t\t\t1359,\n\t\t\t\t\t\t\t-859,\n\t\t\t\t\t\t\t1360,\n\t\t\t\t\t\t\t1361,\n\t\t\t\t\t\t\t1362,\n\t\t\t\t\t\t\t1363,\n\t\t\t\t\t\t\t-904,\n\t\t\t\t\t\t\t1364\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158016\",\n\t\t\t\t\t\t\"GEN\": \"Hilden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1365,\n\t\t\t\t\t\t\t1366,\n\t\t\t\t\t\t\t1367,\n\t\t\t\t\t\t\t1368,\n\t\t\t\t\t\t\t1369,\n\t\t\t\t\t\t\t1370,\n\t\t\t\t\t\t\t1371,\n\t\t\t\t\t\t\t1372,\n\t\t\t\t\t\t\t1373,\n\t\t\t\t\t\t\t1374,\n\t\t\t\t\t\t\t1375,\n\t\t\t\t\t\t\t1376,\n\t\t\t\t\t\t\t1377,\n\t\t\t\t\t\t\t1378\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170020\",\n\t\t\t\t\t\t\"GEN\": \"Kamp-Lintfort\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1379,\n\t\t\t\t\t\t\t1380,\n\t\t\t\t\t\t\t1381,\n\t\t\t\t\t\t\t1382,\n\t\t\t\t\t\t\t1383,\n\t\t\t\t\t\t\t1384,\n\t\t\t\t\t\t\t-761,\n\t\t\t\t\t\t\t1385,\n\t\t\t\t\t\t\t1386,\n\t\t\t\t\t\t\t1387,\n\t\t\t\t\t\t\t1388,\n\t\t\t\t\t\t\t1389\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162024\",\n\t\t\t\t\t\t\"GEN\": \"Neuss\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-768,\n\t\t\t\t\t\t\t1390,\n\t\t\t\t\t\t\t1391,\n\t\t\t\t\t\t\t1392,\n\t\t\t\t\t\t\t1393,\n\t\t\t\t\t\t\t1394,\n\t\t\t\t\t\t\t1395,\n\t\t\t\t\t\t\t1396,\n\t\t\t\t\t\t\t1397,\n\t\t\t\t\t\t\t1398,\n\t\t\t\t\t\t\t1399,\n\t\t\t\t\t\t\t1400,\n\t\t\t\t\t\t\t-750,\n\t\t\t\t\t\t\t1401\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362004\",\n\t\t\t\t\t\t\"GEN\": \"Bedburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-679,\n\t\t\t\t\t\t\t1402,\n\t\t\t\t\t\t\t1403,\n\t\t\t\t\t\t\t1404,\n\t\t\t\t\t\t\t1405,\n\t\t\t\t\t\t\t1406\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370032\",\n\t\t\t\t\t\t\"GEN\": \"Waldfeucht\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1407,\n\t\t\t\t\t\t\t1408,\n\t\t\t\t\t\t\t1409,\n\t\t\t\t\t\t\t1410,\n\t\t\t\t\t\t\t1411,\n\t\t\t\t\t\t\t1412,\n\t\t\t\t\t\t\t1413,\n\t\t\t\t\t\t\t1414,\n\t\t\t\t\t\t\t1415,\n\t\t\t\t\t\t\t1416,\n\t\t\t\t\t\t\t-686,\n\t\t\t\t\t\t\t1417,\n\t\t\t\t\t\t\t-684,\n\t\t\t\t\t\t\t1418,\n\t\t\t\t\t\t\t-682,\n\t\t\t\t\t\t\t1419,\n\t\t\t\t\t\t\t1420,\n\t\t\t\t\t\t\t1421,\n\t\t\t\t\t\t\t1422,\n\t\t\t\t\t\t\t1423,\n\t\t\t\t\t\t\t1424,\n\t\t\t\t\t\t\t1425\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358024\",\n\t\t\t\t\t\t\"GEN\": \"Jülich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1426,\n\t\t\t\t\t\t\t1427,\n\t\t\t\t\t\t\t-692,\n\t\t\t\t\t\t\t1428,\n\t\t\t\t\t\t\t1429,\n\t\t\t\t\t\t\t1430,\n\t\t\t\t\t\t\t1431,\n\t\t\t\t\t\t\t-657,\n\t\t\t\t\t\t\t1432,\n\t\t\t\t\t\t\t1433,\n\t\t\t\t\t\t\t1434\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334004\",\n\t\t\t\t\t\t\"GEN\": \"Alsdorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1435,\n\t\t\t\t\t\t\t1436,\n\t\t\t\t\t\t\t-166,\n\t\t\t\t\t\t\t1437,\n\t\t\t\t\t\t\t1438,\n\t\t\t\t\t\t\t1439,\n\t\t\t\t\t\t\t-311,\n\t\t\t\t\t\t\t1440,\n\t\t\t\t\t\t\t1441,\n\t\t\t\t\t\t\t1442,\n\t\t\t\t\t\t\t-1414,\n\t\t\t\t\t\t\t1443,\n\t\t\t\t\t\t\t-1412,\n\t\t\t\t\t\t\t1444,\n\t\t\t\t\t\t\t1445,\n\t\t\t\t\t\t\t1446\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358048\",\n\t\t\t\t\t\t\"GEN\": \"Niederzier\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1173,\n\t\t\t\t\t\t\t1447,\n\t\t\t\t\t\t\t1448,\n\t\t\t\t\t\t\t1449,\n\t\t\t\t\t\t\t-568,\n\t\t\t\t\t\t\t1450,\n\t\t\t\t\t\t\t-560,\n\t\t\t\t\t\t\t1451,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t1452,\n\t\t\t\t\t\t\t-1298,\n\t\t\t\t\t\t\t1453,\n\t\t\t\t\t\t\t-1271,\n\t\t\t\t\t\t\t1454,\n\t\t\t\t\t\t\t1455,\n\t\t\t\t\t\t\t-1268,\n\t\t\t\t\t\t\t1456\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382052\",\n\t\t\t\t\t\t\"GEN\": \"Ruppichteroth\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1457,\n\t\t\t\t\t\t\t1458,\n\t\t\t\t\t\t\t1459,\n\t\t\t\t\t\t\t1460,\n\t\t\t\t\t\t\t1461,\n\t\t\t\t\t\t\t1462,\n\t\t\t\t\t\t\t1463,\n\t\t\t\t\t\t\t1464,\n\t\t\t\t\t\t\t1465,\n\t\t\t\t\t\t\t1466,\n\t\t\t\t\t\t\t1467,\n\t\t\t\t\t\t\t1468,\n\t\t\t\t\t\t\t1469,\n\t\t\t\t\t\t\t1470,\n\t\t\t\t\t\t\t1471,\n\t\t\t\t\t\t\t1472,\n\t\t\t\t\t\t\t1473,\n\t\t\t\t\t\t\t1474,\n\t\t\t\t\t\t\t1475\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754008\",\n\t\t\t\t\t\t\"GEN\": \"Gütersloh\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1476,\n\t\t\t\t\t\t\t1477,\n\t\t\t\t\t\t\t1478,\n\t\t\t\t\t\t\t1479,\n\t\t\t\t\t\t\t1480,\n\t\t\t\t\t\t\t1481,\n\t\t\t\t\t\t\t1482,\n\t\t\t\t\t\t\t1483,\n\t\t\t\t\t\t\t1484,\n\t\t\t\t\t\t\t1485,\n\t\t\t\t\t\t\t1486,\n\t\t\t\t\t\t\t1487,\n\t\t\t\t\t\t\t1488,\n\t\t\t\t\t\t\t1489,\n\t\t\t\t\t\t\t1490,\n\t\t\t\t\t\t\t1491,\n\t\t\t\t\t\t\t1492,\n\t\t\t\t\t\t\t1493,\n\t\t\t\t\t\t\t1494,\n\t\t\t\t\t\t\t1495\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762004\",\n\t\t\t\t\t\t\"GEN\": \"Bad Driburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1496,\n\t\t\t\t\t\t\t1497,\n\t\t\t\t\t\t\t1498,\n\t\t\t\t\t\t\t1499,\n\t\t\t\t\t\t\t1500,\n\t\t\t\t\t\t\t1501,\n\t\t\t\t\t\t\t-1006,\n\t\t\t\t\t\t\t1502,\n\t\t\t\t\t\t\t-1004,\n\t\t\t\t\t\t\t1503,\n\t\t\t\t\t\t\t1504,\n\t\t\t\t\t\t\t1505,\n\t\t\t\t\t\t\t-597,\n\t\t\t\t\t\t\t1506,\n\t\t\t\t\t\t\t1507,\n\t\t\t\t\t\t\t-647,\n\t\t\t\t\t\t\t1508,\n\t\t\t\t\t\t\t-645,\n\t\t\t\t\t\t\t1509\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970040\",\n\t\t\t\t\t\t\"GEN\": \"Siegen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1510,\n\t\t\t\t\t\t\t1511,\n\t\t\t\t\t\t\t1512,\n\t\t\t\t\t\t\t1513,\n\t\t\t\t\t\t\t1514,\n\t\t\t\t\t\t\t1515,\n\t\t\t\t\t\t\t1516,\n\t\t\t\t\t\t\t1517,\n\t\t\t\t\t\t\t-13\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362024\",\n\t\t\t\t\t\t\"GEN\": \"Frechen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1518,\n\t\t\t\t\t\t\t1519,\n\t\t\t\t\t\t\t1520,\n\t\t\t\t\t\t\t1521,\n\t\t\t\t\t\t\t1522,\n\t\t\t\t\t\t\t1523,\n\t\t\t\t\t\t\t1524,\n\t\t\t\t\t\t\t1525,\n\t\t\t\t\t\t\t1526,\n\t\t\t\t\t\t\t1527,\n\t\t\t\t\t\t\t1528\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766012\",\n\t\t\t\t\t\t\"GEN\": \"Barntrup\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1529,\n\t\t\t\t\t\t\t1530,\n\t\t\t\t\t\t\t1531,\n\t\t\t\t\t\t\t1532,\n\t\t\t\t\t\t\t-136,\n\t\t\t\t\t\t\t1533,\n\t\t\t\t\t\t\t1534,\n\t\t\t\t\t\t\t1535,\n\t\t\t\t\t\t\t1536,\n\t\t\t\t\t\t\t1537,\n\t\t\t\t\t\t\t1538\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774024\",\n\t\t\t\t\t\t\"GEN\": \"Hövelhof\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1539,\n\t\t\t\t\t\t\t1540,\n\t\t\t\t\t\t\t1541,\n\t\t\t\t\t\t\t1542,\n\t\t\t\t\t\t\t1543,\n\t\t\t\t\t\t\t1544,\n\t\t\t\t\t\t\t1545,\n\t\t\t\t\t\t\t1546,\n\t\t\t\t\t\t\t1547,\n\t\t\t\t\t\t\t1548,\n\t\t\t\t\t\t\t1549,\n\t\t\t\t\t\t\t1550,\n\t\t\t\t\t\t\t1551,\n\t\t\t\t\t\t\t1552,\n\t\t\t\t\t\t\t1553,\n\t\t\t\t\t\t\t1554,\n\t\t\t\t\t\t\t1555,\n\t\t\t\t\t\t\t1556,\n\t\t\t\t\t\t\t1557,\n\t\t\t\t\t\t\t1558\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954008\",\n\t\t\t\t\t\t\"GEN\": \"Ennepetal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1559,\n\t\t\t\t\t\t\t1560,\n\t\t\t\t\t\t\t1561,\n\t\t\t\t\t\t\t1562,\n\t\t\t\t\t\t\t-867,\n\t\t\t\t\t\t\t1563,\n\t\t\t\t\t\t\t1564,\n\t\t\t\t\t\t\t1565,\n\t\t\t\t\t\t\t1566,\n\t\t\t\t\t\t\t1567,\n\t\t\t\t\t\t\t1568\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154028\",\n\t\t\t\t\t\t\"GEN\": \"Kerken\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1569,\n\t\t\t\t\t\t\t1570,\n\t\t\t\t\t\t\t1571,\n\t\t\t\t\t\t\t1572,\n\t\t\t\t\t\t\t1573,\n\t\t\t\t\t\t\t1574,\n\t\t\t\t\t\t\t1575,\n\t\t\t\t\t\t\t1576\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554008\",\n\t\t\t\t\t\t\"GEN\": \"Bocholt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-270,\n\t\t\t\t\t\t\t1577,\n\t\t\t\t\t\t\t1578,\n\t\t\t\t\t\t\t1579,\n\t\t\t\t\t\t\t1580,\n\t\t\t\t\t\t\t1581,\n\t\t\t\t\t\t\t-74,\n\t\t\t\t\t\t\t1582,\n\t\t\t\t\t\t\t-101,\n\t\t\t\t\t\t\t1583,\n\t\t\t\t\t\t\t-182,\n\t\t\t\t\t\t\t1584,\n\t\t\t\t\t\t\t1585,\n\t\t\t\t\t\t\t-272,\n\t\t\t\t\t\t\t1586\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978024\",\n\t\t\t\t\t\t\"GEN\": \"Lünen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1587,\n\t\t\t\t\t\t\t-934,\n\t\t\t\t\t\t\t1588,\n\t\t\t\t\t\t\t1589,\n\t\t\t\t\t\t\t-931,\n\t\t\t\t\t\t\t1590,\n\t\t\t\t\t\t\t1591,\n\t\t\t\t\t\t\t1592,\n\t\t\t\t\t\t\t1593,\n\t\t\t\t\t\t\t1594,\n\t\t\t\t\t\t\t-671,\n\t\t\t\t\t\t\t1595,\n\t\t\t\t\t\t\t1596\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370020\",\n\t\t\t\t\t\t\"GEN\": \"Hückelhoven\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1597,\n\t\t\t\t\t\t\t1598,\n\t\t\t\t\t\t\t1599,\n\t\t\t\t\t\t\t1600,\n\t\t\t\t\t\t\t1601,\n\t\t\t\t\t\t\t1602\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554068\",\n\t\t\t\t\t\t\"GEN\": \"Vreden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1603,\n\t\t\t\t\t\t\t1604,\n\t\t\t\t\t\t\t1605,\n\t\t\t\t\t\t\t1606,\n\t\t\t\t\t\t\t-890,\n\t\t\t\t\t\t\t1607,\n\t\t\t\t\t\t\t1608,\n\t\t\t\t\t\t\t1609,\n\t\t\t\t\t\t\t1610,\n\t\t\t\t\t\t\t1611,\n\t\t\t\t\t\t\t1612,\n\t\t\t\t\t\t\t1613,\n\t\t\t\t\t\t\t1614,\n\t\t\t\t\t\t\t1615,\n\t\t\t\t\t\t\t1616,\n\t\t\t\t\t\t\t1617,\n\t\t\t\t\t\t\t1618\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766040\",\n\t\t\t\t\t\t\"GEN\": \"Lage\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1619,\n\t\t\t\t\t\t\t1620,\n\t\t\t\t\t\t\t1621,\n\t\t\t\t\t\t\t1622,\n\t\t\t\t\t\t\t1623,\n\t\t\t\t\t\t\t1624,\n\t\t\t\t\t\t\t1625,\n\t\t\t\t\t\t\t1626,\n\t\t\t\t\t\t\t1627,\n\t\t\t\t\t\t\t1628,\n\t\t\t\t\t\t\t1629,\n\t\t\t\t\t\t\t1630,\n\t\t\t\t\t\t\t-952,\n\t\t\t\t\t\t\t1631\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562032\",\n\t\t\t\t\t\t\"GEN\": \"Recklinghausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1632,\n\t\t\t\t\t\t\t1633,\n\t\t\t\t\t\t\t1634,\n\t\t\t\t\t\t\t1635,\n\t\t\t\t\t\t\t1636,\n\t\t\t\t\t\t\t1637,\n\t\t\t\t\t\t\t1638,\n\t\t\t\t\t\t\t1639,\n\t\t\t\t\t\t\t1640,\n\t\t\t\t\t\t\t1641,\n\t\t\t\t\t\t\t1642,\n\t\t\t\t\t\t\t1643,\n\t\t\t\t\t\t\t1644,\n\t\t\t\t\t\t\t1645\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570048\",\n\t\t\t\t\t\t\"GEN\": \"Wadersloh\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-967,\n\t\t\t\t\t\t\t1646,\n\t\t\t\t\t\t\t1647,\n\t\t\t\t\t\t\t1648,\n\t\t\t\t\t\t\t1649,\n\t\t\t\t\t\t\t1650,\n\t\t\t\t\t\t\t1651,\n\t\t\t\t\t\t\t-87,\n\t\t\t\t\t\t\t1652,\n\t\t\t\t\t\t\t-85,\n\t\t\t\t\t\t\t1653,\n\t\t\t\t\t\t\t-83,\n\t\t\t\t\t\t\t1654,\n\t\t\t\t\t\t\t1655\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978028\",\n\t\t\t\t\t\t\"GEN\": \"Schwerte\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-495,\n\t\t\t\t\t\t\t1656,\n\t\t\t\t\t\t\t1657,\n\t\t\t\t\t\t\t1658,\n\t\t\t\t\t\t\t1659,\n\t\t\t\t\t\t\t1660,\n\t\t\t\t\t\t\t1661,\n\t\t\t\t\t\t\t1662,\n\t\t\t\t\t\t\t-209,\n\t\t\t\t\t\t\t1663,\n\t\t\t\t\t\t\t-195,\n\t\t\t\t\t\t\t1664,\n\t\t\t\t\t\t\t-193,\n\t\t\t\t\t\t\t1665,\n\t\t\t\t\t\t\t1666,\n\t\t\t\t\t\t\t1667,\n\t\t\t\t\t\t\t-1103,\n\t\t\t\t\t\t\t1668\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382012\",\n\t\t\t\t\t\t\"GEN\": \"Bornheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1669,\n\t\t\t\t\t\t\t1670,\n\t\t\t\t\t\t\t1671,\n\t\t\t\t\t\t\t1672,\n\t\t\t\t\t\t\t1673,\n\t\t\t\t\t\t\t-211,\n\t\t\t\t\t\t\t1674,\n\t\t\t\t\t\t\t-1662,\n\t\t\t\t\t\t\t1675\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382004\",\n\t\t\t\t\t\t\"GEN\": \"Alfter\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1676,\n\t\t\t\t\t\t\t1677,\n\t\t\t\t\t\t\t-397,\n\t\t\t\t\t\t\t1678,\n\t\t\t\t\t\t\t1679,\n\t\t\t\t\t\t\t1680,\n\t\t\t\t\t\t\t1681,\n\t\t\t\t\t\t\t1682,\n\t\t\t\t\t\t\t-1366,\n\t\t\t\t\t\t\t1683,\n\t\t\t\t\t\t\t1684,\n\t\t\t\t\t\t\t1685,\n\t\t\t\t\t\t\t1686,\n\t\t\t\t\t\t\t1687\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170004\",\n\t\t\t\t\t\t\"GEN\": \"Alpen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1688,\n\t\t\t\t\t\t\t1689,\n\t\t\t\t\t\t\t1690,\n\t\t\t\t\t\t\t1691,\n\t\t\t\t\t\t\t-845,\n\t\t\t\t\t\t\t1692,\n\t\t\t\t\t\t\t-843,\n\t\t\t\t\t\t\t1693,\n\t\t\t\t\t\t\t-963,\n\t\t\t\t\t\t\t1694,\n\t\t\t\t\t\t\t1695,\n\t\t\t\t\t\t\t1696\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978012\",\n\t\t\t\t\t\t\"GEN\": \"Fröndenberg/Ruhr\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1697,\n\t\t\t\t\t\t\t1698,\n\t\t\t\t\t\t\t-191,\n\t\t\t\t\t\t\t1699,\n\t\t\t\t\t\t\t-189,\n\t\t\t\t\t\t\t1700,\n\t\t\t\t\t\t\t1701,\n\t\t\t\t\t\t\t1702,\n\t\t\t\t\t\t\t1703,\n\t\t\t\t\t\t\t1704,\n\t\t\t\t\t\t\t1705,\n\t\t\t\t\t\t\t-285,\n\t\t\t\t\t\t\t1706\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562008\",\n\t\t\t\t\t\t\"GEN\": \"Datteln\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-987,\n\t\t\t\t\t\t\t1707,\n\t\t\t\t\t\t\t1708,\n\t\t\t\t\t\t\t1709,\n\t\t\t\t\t\t\t1710,\n\t\t\t\t\t\t\t1711,\n\t\t\t\t\t\t\t1712,\n\t\t\t\t\t\t\t1713,\n\t\t\t\t\t\t\t1714,\n\t\t\t\t\t\t\t1715,\n\t\t\t\t\t\t\t-989,\n\t\t\t\t\t\t\t1716\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554040\",\n\t\t\t\t\t\t\"GEN\": \"Raesfeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1717,\n\t\t\t\t\t\t\t1718,\n\t\t\t\t\t\t\t1719,\n\t\t\t\t\t\t\t-1526,\n\t\t\t\t\t\t\t1720,\n\t\t\t\t\t\t\t-1524,\n\t\t\t\t\t\t\t1721,\n\t\t\t\t\t\t\t1722,\n\t\t\t\t\t\t\t1723,\n\t\t\t\t\t\t\t1724,\n\t\t\t\t\t\t\t1725,\n\t\t\t\t\t\t\t1726,\n\t\t\t\t\t\t\t1727,\n\t\t\t\t\t\t\t1728,\n\t\t\t\t\t\t\t1729\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766024\",\n\t\t\t\t\t\t\"GEN\": \"Dörentrup\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1685,\n\t\t\t\t\t\t\t1730,\n\t\t\t\t\t\t\t-1378,\n\t\t\t\t\t\t\t1731,\n\t\t\t\t\t\t\t-1376,\n\t\t\t\t\t\t\t1732,\n\t\t\t\t\t\t\t1733,\n\t\t\t\t\t\t\t-869,\n\t\t\t\t\t\t\t1734,\n\t\t\t\t\t\t\t1735,\n\t\t\t\t\t\t\t1736,\n\t\t\t\t\t\t\t1737,\n\t\t\t\t\t\t\t1738\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154020\",\n\t\t\t\t\t\t\"GEN\": \"Issum\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-367,\n\t\t\t\t\t\t\t1739,\n\t\t\t\t\t\t\t-365,\n\t\t\t\t\t\t\t1740,\n\t\t\t\t\t\t\t1741,\n\t\t\t\t\t\t\t1742,\n\t\t\t\t\t\t\t1743,\n\t\t\t\t\t\t\t1744,\n\t\t\t\t\t\t\t1745,\n\t\t\t\t\t\t\t1746,\n\t\t\t\t\t\t\t1747,\n\t\t\t\t\t\t\t1748,\n\t\t\t\t\t\t\t1749,\n\t\t\t\t\t\t\t1750,\n\t\t\t\t\t\t\t-369,\n\t\t\t\t\t\t\t1751\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758036\",\n\t\t\t\t\t\t\"GEN\": \"Vlotho\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1752,\n\t\t\t\t\t\t\t1753,\n\t\t\t\t\t\t\t1754,\n\t\t\t\t\t\t\t1755,\n\t\t\t\t\t\t\t-1236,\n\t\t\t\t\t\t\t1756,\n\t\t\t\t\t\t\t1757,\n\t\t\t\t\t\t\t-38,\n\t\t\t\t\t\t\t1758,\n\t\t\t\t\t\t\t1759,\n\t\t\t\t\t\t\t1760,\n\t\t\t\t\t\t\t-708,\n\t\t\t\t\t\t\t1761,\n\t\t\t\t\t\t\t1762,\n\t\t\t\t\t\t\t1763,\n\t\t\t\t\t\t\t1764\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962032\",\n\t\t\t\t\t\t\"GEN\": \"Lüdenscheid\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-471,\n\t\t\t\t\t\t\t1765,\n\t\t\t\t\t\t\t1766,\n\t\t\t\t\t\t\t1767,\n\t\t\t\t\t\t\t1768,\n\t\t\t\t\t\t\t1769,\n\t\t\t\t\t\t\t1770,\n\t\t\t\t\t\t\t1771,\n\t\t\t\t\t\t\t1772,\n\t\t\t\t\t\t\t1773,\n\t\t\t\t\t\t\t1774,\n\t\t\t\t\t\t\t1775,\n\t\t\t\t\t\t\t1776,\n\t\t\t\t\t\t\t1777\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974052\",\n\t\t\t\t\t\t\"GEN\": \"Werl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1778,\n\t\t\t\t\t\t\t1779,\n\t\t\t\t\t\t\t1780,\n\t\t\t\t\t\t\t1781,\n\t\t\t\t\t\t\t1782,\n\t\t\t\t\t\t\t1783,\n\t\t\t\t\t\t\t1784,\n\t\t\t\t\t\t\t1785,\n\t\t\t\t\t\t\t1786,\n\t\t\t\t\t\t\t1787,\n\t\t\t\t\t\t\t1788,\n\t\t\t\t\t\t\t-1485,\n\t\t\t\t\t\t\t1789,\n\t\t\t\t\t\t\t1790,\n\t\t\t\t\t\t\t1791,\n\t\t\t\t\t\t\t1792,\n\t\t\t\t\t\t\t1793,\n\t\t\t\t\t\t\t-823\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762016\",\n\t\t\t\t\t\t\"GEN\": \"Brakel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1794,\n\t\t\t\t\t\t\t-827,\n\t\t\t\t\t\t\t1795,\n\t\t\t\t\t\t\t-825,\n\t\t\t\t\t\t\t1796,\n\t\t\t\t\t\t\t-1793,\n\t\t\t\t\t\t\t1797,\n\t\t\t\t\t\t\t-1481,\n\t\t\t\t\t\t\t1798,\n\t\t\t\t\t\t\t-1479,\n\t\t\t\t\t\t\t1799,\n\t\t\t\t\t\t\t-1477,\n\t\t\t\t\t\t\t1800,\n\t\t\t\t\t\t\t1801\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762028\",\n\t\t\t\t\t\t\"GEN\": \"Nieheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1802,\n\t\t\t\t\t\t\t1803,\n\t\t\t\t\t\t\t1804,\n\t\t\t\t\t\t\t1805,\n\t\t\t\t\t\t\t-1643,\n\t\t\t\t\t\t\t1806,\n\t\t\t\t\t\t\t1807,\n\t\t\t\t\t\t\t1808,\n\t\t\t\t\t\t\t1809,\n\t\t\t\t\t\t\t1810,\n\t\t\t\t\t\t\t1811,\n\t\t\t\t\t\t\t1812,\n\t\t\t\t\t\t\t1813,\n\t\t\t\t\t\t\t1814,\n\t\t\t\t\t\t\t1815\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570008\",\n\t\t\t\t\t\t\"GEN\": \"Beckum\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1816,\n\t\t\t\t\t\t\t1817,\n\t\t\t\t\t\t\t1818,\n\t\t\t\t\t\t\t1819,\n\t\t\t\t\t\t\t1820,\n\t\t\t\t\t\t\t1821,\n\t\t\t\t\t\t\t1822,\n\t\t\t\t\t\t\t-899,\n\t\t\t\t\t\t\t1823,\n\t\t\t\t\t\t\t1824,\n\t\t\t\t\t\t\t1825,\n\t\t\t\t\t\t\t-792\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158024\",\n\t\t\t\t\t\t\"GEN\": \"Mettmann\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1826,\n\t\t\t\t\t\t\t1827,\n\t\t\t\t\t\t\t1828,\n\t\t\t\t\t\t\t1829,\n\t\t\t\t\t\t\t1830,\n\t\t\t\t\t\t\t-476,\n\t\t\t\t\t\t\t1831,\n\t\t\t\t\t\t\t-491,\n\t\t\t\t\t\t\t1832,\n\t\t\t\t\t\t\t-1009,\n\t\t\t\t\t\t\t1833,\n\t\t\t\t\t\t\t1834,\n\t\t\t\t\t\t\t1835,\n\t\t\t\t\t\t\t1836,\n\t\t\t\t\t\t\t1837,\n\t\t\t\t\t\t\t1838,\n\t\t\t\t\t\t\t1839\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970004\",\n\t\t\t\t\t\t\"GEN\": \"Bad Berleburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1724,\n\t\t\t\t\t\t\t1840,\n\t\t\t\t\t\t\t1841,\n\t\t\t\t\t\t\t-1520,\n\t\t\t\t\t\t\t1842,\n\t\t\t\t\t\t\t1843,\n\t\t\t\t\t\t\t1844,\n\t\t\t\t\t\t\t1845,\n\t\t\t\t\t\t\t1846,\n\t\t\t\t\t\t\t1847,\n\t\t\t\t\t\t\t1848,\n\t\t\t\t\t\t\t1849,\n\t\t\t\t\t\t\t1850,\n\t\t\t\t\t\t\t1851,\n\t\t\t\t\t\t\t1852,\n\t\t\t\t\t\t\t1853,\n\t\t\t\t\t\t\t1854\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766016\",\n\t\t\t\t\t\t\"GEN\": \"Blomberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1855,\n\t\t\t\t\t\t\t1856,\n\t\t\t\t\t\t\t1857,\n\t\t\t\t\t\t\t1858,\n\t\t\t\t\t\t\t1859,\n\t\t\t\t\t\t\t1860,\n\t\t\t\t\t\t\t1861,\n\t\t\t\t\t\t\t-733,\n\t\t\t\t\t\t\t1862,\n\t\t\t\t\t\t\t-1231,\n\t\t\t\t\t\t\t1863,\n\t\t\t\t\t\t\t1864,\n\t\t\t\t\t\t\t-1754,\n\t\t\t\t\t\t\t1865,\n\t\t\t\t\t\t\t1866\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962060\",\n\t\t\t\t\t\t\"GEN\": \"Werdohl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-90,\n\t\t\t\t\t\t\t1867,\n\t\t\t\t\t\t\t1868,\n\t\t\t\t\t\t\t1869,\n\t\t\t\t\t\t\t1870,\n\t\t\t\t\t\t\t1871,\n\t\t\t\t\t\t\t1872,\n\t\t\t\t\t\t\t1873,\n\t\t\t\t\t\t\t1874\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954020\",\n\t\t\t\t\t\t\"GEN\": \"Herdecke\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1875,\n\t\t\t\t\t\t\t1876,\n\t\t\t\t\t\t\t1877,\n\t\t\t\t\t\t\t1878,\n\t\t\t\t\t\t\t1879,\n\t\t\t\t\t\t\t1880,\n\t\t\t\t\t\t\t1881,\n\t\t\t\t\t\t\t1882,\n\t\t\t\t\t\t\t1883,\n\t\t\t\t\t\t\t1884,\n\t\t\t\t\t\t\t1885,\n\t\t\t\t\t\t\t1886,\n\t\t\t\t\t\t\t1887,\n\t\t\t\t\t\t\t1888\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978008\",\n\t\t\t\t\t\t\"GEN\": \"Bönen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1889,\n\t\t\t\t\t\t\t1890,\n\t\t\t\t\t\t\t1891,\n\t\t\t\t\t\t\t1892,\n\t\t\t\t\t\t\t1893,\n\t\t\t\t\t\t\t1894,\n\t\t\t\t\t\t\t1895,\n\t\t\t\t\t\t\t1896,\n\t\t\t\t\t\t\t1897,\n\t\t\t\t\t\t\t1898,\n\t\t\t\t\t\t\t1899\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754048\",\n\t\t\t\t\t\t\"GEN\": \"Versmold\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1900,\n\t\t\t\t\t\t\t1901,\n\t\t\t\t\t\t\t1902,\n\t\t\t\t\t\t\t1903,\n\t\t\t\t\t\t\t1904,\n\t\t\t\t\t\t\t1905,\n\t\t\t\t\t\t\t1906,\n\t\t\t\t\t\t\t1907,\n\t\t\t\t\t\t\t-355,\n\t\t\t\t\t\t\t1908,\n\t\t\t\t\t\t\t1909,\n\t\t\t\t\t\t\t1910,\n\t\t\t\t\t\t\t1911,\n\t\t\t\t\t\t\t1912,\n\t\t\t\t\t\t\t1913\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954028\",\n\t\t\t\t\t\t\"GEN\": \"Sprockhövel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1914,\n\t\t\t\t\t\t\t1915,\n\t\t\t\t\t\t\t1916,\n\t\t\t\t\t\t\t1917,\n\t\t\t\t\t\t\t-1335,\n\t\t\t\t\t\t\t1918,\n\t\t\t\t\t\t\t1919,\n\t\t\t\t\t\t\t-1285,\n\t\t\t\t\t\t\t1920,\n\t\t\t\t\t\t\t-1200\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374008\",\n\t\t\t\t\t\t\"GEN\": \"Engelskirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1921,\n\t\t\t\t\t\t\t1922,\n\t\t\t\t\t\t\t1923,\n\t\t\t\t\t\t\t1924,\n\t\t\t\t\t\t\t-720,\n\t\t\t\t\t\t\t1925,\n\t\t\t\t\t\t\t1926,\n\t\t\t\t\t\t\t1927,\n\t\t\t\t\t\t\t1928,\n\t\t\t\t\t\t\t1929,\n\t\t\t\t\t\t\t1930,\n\t\t\t\t\t\t\t1931,\n\t\t\t\t\t\t\t1932,\n\t\t\t\t\t\t\t1933,\n\t\t\t\t\t\t\t-1547,\n\t\t\t\t\t\t\t1934,\n\t\t\t\t\t\t\t1935,\n\t\t\t\t\t\t\t-1544,\n\t\t\t\t\t\t\t1936,\n\t\t\t\t\t\t\t1937,\n\t\t\t\t\t\t\t1938,\n\t\t\t\t\t\t\t1939\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954004\",\n\t\t\t\t\t\t\"GEN\": \"Breckerfeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1940,\n\t\t\t\t\t\t\t-1705,\n\t\t\t\t\t\t\t1941,\n\t\t\t\t\t\t\t1942,\n\t\t\t\t\t\t\t-1621,\n\t\t\t\t\t\t\t1943,\n\t\t\t\t\t\t\t-949,\n\t\t\t\t\t\t\t1944,\n\t\t\t\t\t\t\t-288,\n\t\t\t\t\t\t\t1945\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562028\",\n\t\t\t\t\t\t\"GEN\": \"Oer-Erkenschwick\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1464,\n\t\t\t\t\t\t\t1946,\n\t\t\t\t\t\t\t1947,\n\t\t\t\t\t\t\t1948,\n\t\t\t\t\t\t\t1949,\n\t\t\t\t\t\t\t1950,\n\t\t\t\t\t\t\t1951,\n\t\t\t\t\t\t\t1952,\n\t\t\t\t\t\t\t1953,\n\t\t\t\t\t\t\t1954,\n\t\t\t\t\t\t\t1955,\n\t\t\t\t\t\t\t1956,\n\t\t\t\t\t\t\t1957\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754028\",\n\t\t\t\t\t\t\"GEN\": \"Rheda-Wiedenbrück\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1958,\n\t\t\t\t\t\t\t1959,\n\t\t\t\t\t\t\t-1852,\n\t\t\t\t\t\t\t1960,\n\t\t\t\t\t\t\t1961,\n\t\t\t\t\t\t\t1962,\n\t\t\t\t\t\t\t1963,\n\t\t\t\t\t\t\t1964,\n\t\t\t\t\t\t\t1965,\n\t\t\t\t\t\t\t1966,\n\t\t\t\t\t\t\t-892,\n\t\t\t\t\t\t\t1967,\n\t\t\t\t\t\t\t-1606,\n\t\t\t\t\t\t\t1968,\n\t\t\t\t\t\t\t1969,\n\t\t\t\t\t\t\t1970\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766020\",\n\t\t\t\t\t\t\"GEN\": \"Detmold\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1404,\n\t\t\t\t\t\t\t1971,\n\t\t\t\t\t\t\t-677,\n\t\t\t\t\t\t\t1972,\n\t\t\t\t\t\t\t1973,\n\t\t\t\t\t\t\t1974,\n\t\t\t\t\t\t\t-668,\n\t\t\t\t\t\t\t1975,\n\t\t\t\t\t\t\t1976\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370008\",\n\t\t\t\t\t\t\"GEN\": \"Gangelt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1977,\n\t\t\t\t\t\t\t-837,\n\t\t\t\t\t\t\t1978,\n\t\t\t\t\t\t\t1979,\n\t\t\t\t\t\t\t1980,\n\t\t\t\t\t\t\t1981,\n\t\t\t\t\t\t\t1982,\n\t\t\t\t\t\t\t1983,\n\t\t\t\t\t\t\t1984,\n\t\t\t\t\t\t\t-840,\n\t\t\t\t\t\t\t1985\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962016\",\n\t\t\t\t\t\t\"GEN\": \"Hemer\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1986,\n\t\t\t\t\t\t\t-1355,\n\t\t\t\t\t\t\t1987,\n\t\t\t\t\t\t\t1988,\n\t\t\t\t\t\t\t1989,\n\t\t\t\t\t\t\t1990,\n\t\t\t\t\t\t\t1991,\n\t\t\t\t\t\t\t1992,\n\t\t\t\t\t\t\t1993\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374016\",\n\t\t\t\t\t\t\"GEN\": \"Hückeswagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1994,\n\t\t\t\t\t\t\t1995,\n\t\t\t\t\t\t\t1996,\n\t\t\t\t\t\t\t1997,\n\t\t\t\t\t\t\t1998,\n\t\t\t\t\t\t\t1999,\n\t\t\t\t\t\t\t2000,\n\t\t\t\t\t\t\t2001,\n\t\t\t\t\t\t\t2002,\n\t\t\t\t\t\t\t-223,\n\t\t\t\t\t\t\t2003,\n\t\t\t\t\t\t\t-221,\n\t\t\t\t\t\t\t2004,\n\t\t\t\t\t\t\t2005,\n\t\t\t\t\t\t\t2006\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758024\",\n\t\t\t\t\t\t\"GEN\": \"Löhne\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2007,\n\t\t\t\t\t\t\t2008,\n\t\t\t\t\t\t\t2009,\n\t\t\t\t\t\t\t2010,\n\t\t\t\t\t\t\t2011,\n\t\t\t\t\t\t\t2012,\n\t\t\t\t\t\t\t-1890,\n\t\t\t\t\t\t\t2013,\n\t\t\t\t\t\t\t2014\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754004\",\n\t\t\t\t\t\t\"GEN\": \"Borgholzhausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2015,\n\t\t\t\t\t\t\t2016,\n\t\t\t\t\t\t\t-417,\n\t\t\t\t\t\t\t2017,\n\t\t\t\t\t\t\t2018,\n\t\t\t\t\t\t\t2019,\n\t\t\t\t\t\t\t2020,\n\t\t\t\t\t\t\t2021\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158026\",\n\t\t\t\t\t\t\"GEN\": \"Monheim am Rhein\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2022,\n\t\t\t\t\t\t\t-1442,\n\t\t\t\t\t\t\t2023,\n\t\t\t\t\t\t\t2024,\n\t\t\t\t\t\t\t-323,\n\t\t\t\t\t\t\t2025,\n\t\t\t\t\t\t\t2026,\n\t\t\t\t\t\t\t2027,\n\t\t\t\t\t\t\t2028,\n\t\t\t\t\t\t\t-1416\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358020\",\n\t\t\t\t\t\t\"GEN\": \"Inden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2029,\n\t\t\t\t\t\t\t2030,\n\t\t\t\t\t\t\t2031,\n\t\t\t\t\t\t\t2032,\n\t\t\t\t\t\t\t2033,\n\t\t\t\t\t\t\t2034,\n\t\t\t\t\t\t\t2035\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566068\",\n\t\t\t\t\t\t\"GEN\": \"Ochtrup\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2036,\n\t\t\t\t\t\t\t2037,\n\t\t\t\t\t\t\t2038,\n\t\t\t\t\t\t\t2039,\n\t\t\t\t\t\t\t2040,\n\t\t\t\t\t\t\t2041,\n\t\t\t\t\t\t\t2042,\n\t\t\t\t\t\t\t2043,\n\t\t\t\t\t\t\t2044,\n\t\t\t\t\t\t\t-1892,\n\t\t\t\t\t\t\t2045,\n\t\t\t\t\t\t\t-2012,\n\t\t\t\t\t\t\t2046,\n\t\t\t\t\t\t\t-2010,\n\t\t\t\t\t\t\t2047\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754012\",\n\t\t\t\t\t\t\"GEN\": \"Halle (Westf.)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2048,\n\t\t\t\t\t\t\t2049,\n\t\t\t\t\t\t\t2050,\n\t\t\t\t\t\t\t2051,\n\t\t\t\t\t\t\t-303,\n\t\t\t\t\t\t\t2052,\n\t\t\t\t\t\t\t2053,\n\t\t\t\t\t\t\t2054,\n\t\t\t\t\t\t\t2055,\n\t\t\t\t\t\t\t2056,\n\t\t\t\t\t\t\t2057,\n\t\t\t\t\t\t\t2058\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958024\",\n\t\t\t\t\t\t\"GEN\": \"Marsberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1737,\n\t\t\t\t\t\t\t2059,\n\t\t\t\t\t\t\t-1561,\n\t\t\t\t\t\t\t2060,\n\t\t\t\t\t\t\t-1569,\n\t\t\t\t\t\t\t2061,\n\t\t\t\t\t\t\t-381,\n\t\t\t\t\t\t\t2062,\n\t\t\t\t\t\t\t2063,\n\t\t\t\t\t\t\t2064\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154012\",\n\t\t\t\t\t\t\"GEN\": \"Geldern\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2065,\n\t\t\t\t\t\t\t2066,\n\t\t\t\t\t\t\t2067,\n\t\t\t\t\t\t\t2068,\n\t\t\t\t\t\t\t2069,\n\t\t\t\t\t\t\t2070,\n\t\t\t\t\t\t\t2071,\n\t\t\t\t\t\t\t-1981,\n\t\t\t\t\t\t\t2072,\n\t\t\t\t\t\t\t2073,\n\t\t\t\t\t\t\t-835,\n\t\t\t\t\t\t\t2074\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962008\",\n\t\t\t\t\t\t\"GEN\": \"Balve\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1141,\n\t\t\t\t\t\t\t2075,\n\t\t\t\t\t\t\t-278,\n\t\t\t\t\t\t\t2076,\n\t\t\t\t\t\t\t2077,\n\t\t\t\t\t\t\t-275,\n\t\t\t\t\t\t\t2078,\n\t\t\t\t\t\t\t-1698,\n\t\t\t\t\t\t\t2079,\n\t\t\t\t\t\t\t-1144,\n\t\t\t\t\t\t\t2080,\n\t\t\t\t\t\t\t2081\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558036\",\n\t\t\t\t\t\t\"GEN\": \"Olfen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-346,\n\t\t\t\t\t\t\t2082,\n\t\t\t\t\t\t\t-861,\n\t\t\t\t\t\t\t2083,\n\t\t\t\t\t\t\t-1359,\n\t\t\t\t\t\t\t2084,\n\t\t\t\t\t\t\t-902,\n\t\t\t\t\t\t\t2085,\n\t\t\t\t\t\t\t-1821,\n\t\t\t\t\t\t\t2086\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158008\",\n\t\t\t\t\t\t\"GEN\": \"Haan\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2087,\n\t\t\t\t\t\t\t2088,\n\t\t\t\t\t\t\t2089,\n\t\t\t\t\t\t\t2090,\n\t\t\t\t\t\t\t2091,\n\t\t\t\t\t\t\t2092,\n\t\t\t\t\t\t\t2093,\n\t\t\t\t\t\t\t2094,\n\t\t\t\t\t\t\t2095,\n\t\t\t\t\t\t\t2096,\n\t\t\t\t\t\t\t2097,\n\t\t\t\t\t\t\t2098,\n\t\t\t\t\t\t\t2099,\n\t\t\t\t\t\t\t-469,\n\t\t\t\t\t\t\t2100\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974040\",\n\t\t\t\t\t\t\"GEN\": \"Soest\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2101,\n\t\t\t\t\t\t\t2102,\n\t\t\t\t\t\t\t-796,\n\t\t\t\t\t\t\t2103,\n\t\t\t\t\t\t\t-794,\n\t\t\t\t\t\t\t2104,\n\t\t\t\t\t\t\t-1825,\n\t\t\t\t\t\t\t2105,\n\t\t\t\t\t\t\t-907,\n\t\t\t\t\t\t\t2106,\n\t\t\t\t\t\t\t2107,\n\t\t\t\t\t\t\t-1363,\n\t\t\t\t\t\t\t2108,\n\t\t\t\t\t\t\t2109,\n\t\t\t\t\t\t\t-2016,\n\t\t\t\t\t\t\t2110,\n\t\t\t\t\t\t\t-2021,\n\t\t\t\t\t\t\t2111,\n\t\t\t\t\t\t\t-1382,\n\t\t\t\t\t\t\t2112,\n\t\t\t\t\t\t\t-1380,\n\t\t\t\t\t\t\t2113,\n\t\t\t\t\t\t\t2114,\n\t\t\t\t\t\t\t2115,\n\t\t\t\t\t\t\t2116\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05111000\",\n\t\t\t\t\t\t\"GEN\": \"Düsseldorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2117,\n\t\t\t\t\t\t\t2118,\n\t\t\t\t\t\t\t2119,\n\t\t\t\t\t\t\t2120,\n\t\t\t\t\t\t\t2121,\n\t\t\t\t\t\t\t2122,\n\t\t\t\t\t\t\t2123,\n\t\t\t\t\t\t\t2124,\n\t\t\t\t\t\t\t-1460,\n\t\t\t\t\t\t\t2125,\n\t\t\t\t\t\t\t2126,\n\t\t\t\t\t\t\t2127\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754044\",\n\t\t\t\t\t\t\"GEN\": \"Verl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2128,\n\t\t\t\t\t\t\t2129,\n\t\t\t\t\t\t\t-62,\n\t\t\t\t\t\t\t2130,\n\t\t\t\t\t\t\t2131,\n\t\t\t\t\t\t\t2132,\n\t\t\t\t\t\t\t2133,\n\t\t\t\t\t\t\t2134,\n\t\t\t\t\t\t\t2135,\n\t\t\t\t\t\t\t2136,\n\t\t\t\t\t\t\t2137,\n\t\t\t\t\t\t\t2138,\n\t\t\t\t\t\t\t2139\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974020\",\n\t\t\t\t\t\t\"GEN\": \"Geseke\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2140,\n\t\t\t\t\t\t\t2141,\n\t\t\t\t\t\t\t-694,\n\t\t\t\t\t\t\t2142,\n\t\t\t\t\t\t\t-1427,\n\t\t\t\t\t\t\t2143,\n\t\t\t\t\t\t\t2144,\n\t\t\t\t\t\t\t2145,\n\t\t\t\t\t\t\t-944,\n\t\t\t\t\t\t\t2146,\n\t\t\t\t\t\t\t2147,\n\t\t\t\t\t\t\t2148,\n\t\t\t\t\t\t\t2149\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334008\",\n\t\t\t\t\t\t\"GEN\": \"Baesweiler\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2150,\n\t\t\t\t\t\t\t2151,\n\t\t\t\t\t\t\t-1400,\n\t\t\t\t\t\t\t2152,\n\t\t\t\t\t\t\t2153,\n\t\t\t\t\t\t\t2154,\n\t\t\t\t\t\t\t2155,\n\t\t\t\t\t\t\t2156,\n\t\t\t\t\t\t\t-1446,\n\t\t\t\t\t\t\t2157,\n\t\t\t\t\t\t\t-1410,\n\t\t\t\t\t\t\t2158,\n\t\t\t\t\t\t\t-1408,\n\t\t\t\t\t\t\t2159,\n\t\t\t\t\t\t\t-1425,\n\t\t\t\t\t\t\t2160,\n\t\t\t\t\t\t\t2161,\n\t\t\t\t\t\t\t2162,\n\t\t\t\t\t\t\t-927\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358056\",\n\t\t\t\t\t\t\"GEN\": \"Titz\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2163,\n\t\t\t\t\t\t\t2164,\n\t\t\t\t\t\t\t2165,\n\t\t\t\t\t\t\t-618,\n\t\t\t\t\t\t\t2166,\n\t\t\t\t\t\t\t2167,\n\t\t\t\t\t\t\t2168,\n\t\t\t\t\t\t\t2169,\n\t\t\t\t\t\t\t2170,\n\t\t\t\t\t\t\t2171,\n\t\t\t\t\t\t\t-379,\n\t\t\t\t\t\t\t2172\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166016\",\n\t\t\t\t\t\t\"GEN\": \"Nettetal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2173,\n\t\t\t\t\t\t\t-1610,\n\t\t\t\t\t\t\t2174,\n\t\t\t\t\t\t\t-1608,\n\t\t\t\t\t\t\t-897,\n\t\t\t\t\t\t\t2175,\n\t\t\t\t\t\t\t2176,\n\t\t\t\t\t\t\t2177,\n\t\t\t\t\t\t\t2178,\n\t\t\t\t\t\t\t2179,\n\t\t\t\t\t\t\t2180,\n\t\t\t\t\t\t\t2181\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766056\",\n\t\t\t\t\t\t\"GEN\": \"Oerlinghausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1898,\n\t\t\t\t\t\t\t2182,\n\t\t\t\t\t\t\t2183,\n\t\t\t\t\t\t\t2184,\n\t\t\t\t\t\t\t2185,\n\t\t\t\t\t\t\t2186\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570036\",\n\t\t\t\t\t\t\"GEN\": \"Sassenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-887,\n\t\t\t\t\t\t\t2187,\n\t\t\t\t\t\t\t2188,\n\t\t\t\t\t\t\t-2036,\n\t\t\t\t\t\t\t2189\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566096\",\n\t\t\t\t\t\t\"GEN\": \"Wettringen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-633,\n\t\t\t\t\t\t\t2190,\n\t\t\t\t\t\t\t2191,\n\t\t\t\t\t\t\t2192,\n\t\t\t\t\t\t\t2193,\n\t\t\t\t\t\t\t2194,\n\t\t\t\t\t\t\t2195\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166020\",\n\t\t\t\t\t\t\"GEN\": \"Niederkrüchten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2196,\n\t\t\t\t\t\t\t2197,\n\t\t\t\t\t\t\t2198,\n\t\t\t\t\t\t\t2199,\n\t\t\t\t\t\t\t2200,\n\t\t\t\t\t\t\t2201,\n\t\t\t\t\t\t\t-979,\n\t\t\t\t\t\t\t2202,\n\t\t\t\t\t\t\t2203,\n\t\t\t\t\t\t\t-993,\n\t\t\t\t\t\t\t2204,\n\t\t\t\t\t\t\t2205\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554060\",\n\t\t\t\t\t\t\"GEN\": \"Südlohn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2206,\n\t\t\t\t\t\t\t-1966,\n\t\t\t\t\t\t\t2207,\n\t\t\t\t\t\t\t2208,\n\t\t\t\t\t\t\t2209,\n\t\t\t\t\t\t\t2210,\n\t\t\t\t\t\t\t2211,\n\t\t\t\t\t\t\t2212,\n\t\t\t\t\t\t\t2213,\n\t\t\t\t\t\t\t-894\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766064\",\n\t\t\t\t\t\t\"GEN\": \"Schlangen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1002,\n\t\t\t\t\t\t\t2214,\n\t\t\t\t\t\t\t-593,\n\t\t\t\t\t\t\t2215,\n\t\t\t\t\t\t\t2216\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970036\",\n\t\t\t\t\t\t\"GEN\": \"Neunkirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2217,\n\t\t\t\t\t\t\t2218,\n\t\t\t\t\t\t\t2219,\n\t\t\t\t\t\t\t2220,\n\t\t\t\t\t\t\t-36,\n\t\t\t\t\t\t\t2221,\n\t\t\t\t\t\t\t-909,\n\t\t\t\t\t\t\t2222,\n\t\t\t\t\t\t\t-726,\n\t\t\t\t\t\t\t2223,\n\t\t\t\t\t\t\t2224,\n\t\t\t\t\t\t\t2225\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966012\",\n\t\t\t\t\t\t\"GEN\": \"Finnentrop\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2226,\n\t\t\t\t\t\t\t-359,\n\t\t\t\t\t\t\t2227,\n\t\t\t\t\t\t\t2228,\n\t\t\t\t\t\t\t-373,\n\t\t\t\t\t\t\t2229,\n\t\t\t\t\t\t\t2230,\n\t\t\t\t\t\t\t2231,\n\t\t\t\t\t\t\t2232,\n\t\t\t\t\t\t\t2233\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770024\",\n\t\t\t\t\t\t\"GEN\": \"Minden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2234,\n\t\t\t\t\t\t\t2235,\n\t\t\t\t\t\t\t2236,\n\t\t\t\t\t\t\t2237,\n\t\t\t\t\t\t\t2238,\n\t\t\t\t\t\t\t2239,\n\t\t\t\t\t\t\t2240,\n\t\t\t\t\t\t\t2241,\n\t\t\t\t\t\t\t-738,\n\t\t\t\t\t\t\t2242,\n\t\t\t\t\t\t\t2243,\n\t\t\t\t\t\t\t2244,\n\t\t\t\t\t\t\t2245\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770008\",\n\t\t\t\t\t\t\"GEN\": \"Espelkamp\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2246,\n\t\t\t\t\t\t\t2247,\n\t\t\t\t\t\t\t2248,\n\t\t\t\t\t\t\t2249,\n\t\t\t\t\t\t\t2250,\n\t\t\t\t\t\t\t2251,\n\t\t\t\t\t\t\t2252,\n\t\t\t\t\t\t\t2253,\n\t\t\t\t\t\t\t2254,\n\t\t\t\t\t\t\t2255\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166028\",\n\t\t\t\t\t\t\"GEN\": \"Tönisvorst\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2256,\n\t\t\t\t\t\t\t2257,\n\t\t\t\t\t\t\t2258,\n\t\t\t\t\t\t\t2259,\n\t\t\t\t\t\t\t2260,\n\t\t\t\t\t\t\t-781\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334024\",\n\t\t\t\t\t\t\"GEN\": \"Roetgen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2263,\n\t\t\t\t\t\t\t2264,\n\t\t\t\t\t\t\t2265,\n\t\t\t\t\t\t\t-103,\n\t\t\t\t\t\t\t2266,\n\t\t\t\t\t\t\t2267,\n\t\t\t\t\t\t\t2268,\n\t\t\t\t\t\t\t2269,\n\t\t\t\t\t\t\t2270\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366004\",\n\t\t\t\t\t\t\"GEN\": \"Bad Münstereifel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1159,\n\t\t\t\t\t\t\t2271,\n\t\t\t\t\t\t\t-297,\n\t\t\t\t\t\t\t2272,\n\t\t\t\t\t\t\t2273,\n\t\t\t\t\t\t\t-294,\n\t\t\t\t\t\t\t2274,\n\t\t\t\t\t\t\t-958,\n\t\t\t\t\t\t\t2275,\n\t\t\t\t\t\t\t2276,\n\t\t\t\t\t\t\t2277,\n\t\t\t\t\t\t\t2278,\n\t\t\t\t\t\t\t2279,\n\t\t\t\t\t\t\t2280,\n\t\t\t\t\t\t\t2281,\n\t\t\t\t\t\t\t2282,\n\t\t\t\t\t\t\t2283,\n\t\t\t\t\t\t\t2284,\n\t\t\t\t\t\t\t2285,\n\t\t\t\t\t\t\t2286,\n\t\t\t\t\t\t\t2287\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562012\",\n\t\t\t\t\t\t\"GEN\": \"Dorsten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2288,\n\t\t\t\t\t\t\t2289,\n\t\t\t\t\t\t\t2290,\n\t\t\t\t\t\t\t2291,\n\t\t\t\t\t\t\t2292,\n\t\t\t\t\t\t\t2293,\n\t\t\t\t\t\t\t2294,\n\t\t\t\t\t\t\t2295,\n\t\t\t\t\t\t\t-1370,\n\t\t\t\t\t\t\t2296,\n\t\t\t\t\t\t\t2297\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170024\",\n\t\t\t\t\t\t\"GEN\": \"Moers\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2298,\n\t\t\t\t\t\t\t2299,\n\t\t\t\t\t\t\t2300,\n\t\t\t\t\t\t\t2301,\n\t\t\t\t\t\t\t-936,\n\t\t\t\t\t\t\t2302,\n\t\t\t\t\t\t\t-1597,\n\t\t\t\t\t\t\t2303,\n\t\t\t\t\t\t\t2304\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370036\",\n\t\t\t\t\t\t\"GEN\": \"Wassenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2305,\n\t\t\t\t\t\t\t2306,\n\t\t\t\t\t\t\t2307,\n\t\t\t\t\t\t\t2308,\n\t\t\t\t\t\t\t2309,\n\t\t\t\t\t\t\t2310,\n\t\t\t\t\t\t\t2311,\n\t\t\t\t\t\t\t2312,\n\t\t\t\t\t\t\t2313,\n\t\t\t\t\t\t\t2314,\n\t\t\t\t\t\t\t2315\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570012\",\n\t\t\t\t\t\t\"GEN\": \"Beelen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2316,\n\t\t\t\t\t\t\t2317,\n\t\t\t\t\t\t\t2318,\n\t\t\t\t\t\t\t2319,\n\t\t\t\t\t\t\t2320,\n\t\t\t\t\t\t\t2321,\n\t\t\t\t\t\t\t2322,\n\t\t\t\t\t\t\t2323\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382032\",\n\t\t\t\t\t\t\"GEN\": \"Meckenheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2324,\n\t\t\t\t\t\t\t2325,\n\t\t\t\t\t\t\t2326,\n\t\t\t\t\t\t\t2327,\n\t\t\t\t\t\t\t2328,\n\t\t\t\t\t\t\t2329,\n\t\t\t\t\t\t\t2330,\n\t\t\t\t\t\t\t2331,\n\t\t\t\t\t\t\t2332,\n\t\t\t\t\t\t\t2333,\n\t\t\t\t\t\t\t2334,\n\t\t\t\t\t\t\t2335,\n\t\t\t\t\t\t\t2336,\n\t\t\t\t\t\t\t-1836,\n\t\t\t\t\t\t\t2337,\n\t\t\t\t\t\t\t-26,\n\t\t\t\t\t\t\t2338,\n\t\t\t\t\t\t\t-24,\n\t\t\t\t\t\t\t2339,\n\t\t\t\t\t\t\t-22,\n\t\t\t\t\t\t\t2340,\n\t\t\t\t\t\t\t2341,\n\t\t\t\t\t\t\t2342,\n\t\t\t\t\t\t\t-1211\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958040\",\n\t\t\t\t\t\t\"GEN\": \"Schmallenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-478,\n\t\t\t\t\t\t\t2343,\n\t\t\t\t\t\t\t-1830,\n\t\t\t\t\t\t\t2344,\n\t\t\t\t\t\t\t2345,\n\t\t\t\t\t\t\t2346,\n\t\t\t\t\t\t\t2347,\n\t\t\t\t\t\t\t2348,\n\t\t\t\t\t\t\t-480,\n\t\t\t\t\t\t\t2349\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970028\",\n\t\t\t\t\t\t\"GEN\": \"Bad Laasphe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2350,\n\t\t\t\t\t\t\t2351,\n\t\t\t\t\t\t\t2352,\n\t\t\t\t\t\t\t2353,\n\t\t\t\t\t\t\t2354,\n\t\t\t\t\t\t\t2355,\n\t\t\t\t\t\t\t2356,\n\t\t\t\t\t\t\t-1633,\n\t\t\t\t\t\t\t2357,\n\t\t\t\t\t\t\t-1950\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754024\",\n\t\t\t\t\t\t\"GEN\": \"Langenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1894,\n\t\t\t\t\t\t\t2358,\n\t\t\t\t\t\t\t-2044,\n\t\t\t\t\t\t\t2359,\n\t\t\t\t\t\t\t-1473,\n\t\t\t\t\t\t\t2360,\n\t\t\t\t\t\t\t-1471,\n\t\t\t\t\t\t\t2361,\n\t\t\t\t\t\t\t2362,\n\t\t\t\t\t\t\t2363,\n\t\t\t\t\t\t\t2364,\n\t\t\t\t\t\t\t2365,\n\t\t\t\t\t\t\t-2306,\n\t\t\t\t\t\t\t-2184,\n\t\t\t\t\t\t\t2366,\n\t\t\t\t\t\t\t-1896,\n\t\t\t\t\t\t\t2367\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754016\",\n\t\t\t\t\t\t\"GEN\": \"Harsewinkel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2368,\n\t\t\t\t\t\t\t-1984,\n\t\t\t\t\t\t\t2369,\n\t\t\t\t\t\t\t2370,\n\t\t\t\t\t\t\t2371,\n\t\t\t\t\t\t\t2372,\n\t\t\t\t\t\t\t2373,\n\t\t\t\t\t\t\t-1866,\n\t\t\t\t\t\t\t-1753,\n\t\t\t\t\t\t\t2374,\n\t\t\t\t\t\t\t2375,\n\t\t\t\t\t\t\t2376,\n\t\t\t\t\t\t\t2377,\n\t\t\t\t\t\t\t2378,\n\t\t\t\t\t\t\t2379\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962004\",\n\t\t\t\t\t\t\"GEN\": \"Altena\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2380,\n\t\t\t\t\t\t\t2381,\n\t\t\t\t\t\t\t2382,\n\t\t\t\t\t\t\t2383,\n\t\t\t\t\t\t\t2384,\n\t\t\t\t\t\t\t2385,\n\t\t\t\t\t\t\t2386,\n\t\t\t\t\t\t\t2387,\n\t\t\t\t\t\t\t2388,\n\t\t\t\t\t\t\t2389,\n\t\t\t\t\t\t\t2390,\n\t\t\t\t\t\t\t2391,\n\t\t\t\t\t\t\t2392\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758008\",\n\t\t\t\t\t\t\"GEN\": \"Enger\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2393,\n\t\t\t\t\t\t\t2394,\n\t\t\t\t\t\t\t-227,\n\t\t\t\t\t\t\t2395,\n\t\t\t\t\t\t\t2396,\n\t\t\t\t\t\t\t2397,\n\t\t\t\t\t\t\t-2381,\n\t\t\t\t\t\t\t2398,\n\t\t\t\t\t\t\t2399,\n\t\t\t\t\t\t\t2400,\n\t\t\t\t\t\t\t2401,\n\t\t\t\t\t\t\t2402\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758004\",\n\t\t\t\t\t\t\"GEN\": \"Bünde\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2403,\n\t\t\t\t\t\t\t2404,\n\t\t\t\t\t\t\t2405,\n\t\t\t\t\t\t\t2406,\n\t\t\t\t\t\t\t2407\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566072\",\n\t\t\t\t\t\t\"GEN\": \"Recke\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2408,\n\t\t\t\t\t\t\t2409,\n\t\t\t\t\t\t\t-2231,\n\t\t\t\t\t\t\t2410,\n\t\t\t\t\t\t\t2411,\n\t\t\t\t\t\t\t2412,\n\t\t\t\t\t\t\t2413,\n\t\t\t\t\t\t\t-2237,\n\t\t\t\t\t\t\t2414\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770012\",\n\t\t\t\t\t\t\"GEN\": \"Hille\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2415,\n\t\t\t\t\t\t\t2416,\n\t\t\t\t\t\t\t-2319,\n\t\t\t\t\t\t\t2417,\n\t\t\t\t\t\t\t2418\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382072\",\n\t\t\t\t\t\t\"GEN\": \"Wachtberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2419,\n\t\t\t\t\t\t\t2420,\n\t\t\t\t\t\t\t2421,\n\t\t\t\t\t\t\t2422,\n\t\t\t\t\t\t\t2423,\n\t\t\t\t\t\t\t-505,\n\t\t\t\t\t\t\t2424,\n\t\t\t\t\t\t\t-1128,\n\t\t\t\t\t\t\t2425,\n\t\t\t\t\t\t\t-1126,\n\t\t\t\t\t\t\t2426,\n\t\t\t\t\t\t\t2427\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570024\",\n\t\t\t\t\t\t\"GEN\": \"Everswinkel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1629,\n\t\t\t\t\t\t\t2428,\n\t\t\t\t\t\t\t2429,\n\t\t\t\t\t\t\t2430,\n\t\t\t\t\t\t\t2431,\n\t\t\t\t\t\t\t-954,\n\t\t\t\t\t\t\t2432,\n\t\t\t\t\t\t\t2433\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562020\",\n\t\t\t\t\t\t\"GEN\": \"Herten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1576,\n\t\t\t\t\t\t\t2434,\n\t\t\t\t\t\t\t2435,\n\t\t\t\t\t\t\t2436,\n\t\t\t\t\t\t\t-170,\n\t\t\t\t\t\t\t2437,\n\t\t\t\t\t\t\t-168,\n\t\t\t\t\t\t\t2438\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554032\",\n\t\t\t\t\t\t\"GEN\": \"Isselburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2122,\n\t\t\t\t\t\t\t2439,\n\t\t\t\t\t\t\t2440,\n\t\t\t\t\t\t\t2441,\n\t\t\t\t\t\t\t2442,\n\t\t\t\t\t\t\t2443,\n\t\t\t\t\t\t\t2444,\n\t\t\t\t\t\t\t2445,\n\t\t\t\t\t\t\t-2353,\n\t\t\t\t\t\t\t2446,\n\t\t\t\t\t\t\t2447,\n\t\t\t\t\t\t\t-1948,\n\t\t\t\t\t\t\t2448,\n\t\t\t\t\t\t\t2449,\n\t\t\t\t\t\t\t2450\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754032\",\n\t\t\t\t\t\t\"GEN\": \"Rietberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-972,\n\t\t\t\t\t\t\t2451,\n\t\t\t\t\t\t\t2452,\n\t\t\t\t\t\t\t2453,\n\t\t\t\t\t\t\t2454,\n\t\t\t\t\t\t\t2455,\n\t\t\t\t\t\t\t2456,\n\t\t\t\t\t\t\t2457,\n\t\t\t\t\t\t\t2458,\n\t\t\t\t\t\t\t2459\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154056\",\n\t\t\t\t\t\t\"GEN\": \"Uedem\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2407,\n\t\t\t\t\t\t\t2460,\n\t\t\t\t\t\t\t2461,\n\t\t\t\t\t\t\t2462,\n\t\t\t\t\t\t\t2463\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566020\",\n\t\t\t\t\t\t\"GEN\": \"Hopsten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2464,\n\t\t\t\t\t\t\t2465,\n\t\t\t\t\t\t\t-1046,\n\t\t\t\t\t\t\t2466,\n\t\t\t\t\t\t\t-1044,\n\t\t\t\t\t\t\t2467,\n\t\t\t\t\t\t\t2468,\n\t\t\t\t\t\t\t-1041,\n\t\t\t\t\t\t\t2469,\n\t\t\t\t\t\t\t2470,\n\t\t\t\t\t\t\t2471,\n\t\t\t\t\t\t\t-1628,\n\t\t\t\t\t\t\t2472,\n\t\t\t\t\t\t\t2473\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05916000\",\n\t\t\t\t\t\t\"GEN\": \"Herne\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2474,\n\t\t\t\t\t\t\t2475,\n\t\t\t\t\t\t\t2476,\n\t\t\t\t\t\t\t2477,\n\t\t\t\t\t\t\t-1763,\n\t\t\t\t\t\t\t2478,\n\t\t\t\t\t\t\t-706,\n\t\t\t\t\t\t\t2479,\n\t\t\t\t\t\t\t2480,\n\t\t\t\t\t\t\t-1924,\n\t\t\t\t\t\t\t2481,\n\t\t\t\t\t\t\t2482\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962056\",\n\t\t\t\t\t\t\"GEN\": \"Schalksmühle\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2483,\n\t\t\t\t\t\t\t-1528,\n\t\t\t\t\t\t\t2484,\n\t\t\t\t\t\t\t-1719,\n\t\t\t\t\t\t\t2485,\n\t\t\t\t\t\t\t2486,\n\t\t\t\t\t\t\t2487\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766028\",\n\t\t\t\t\t\t\"GEN\": \"Extertal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2488,\n\t\t\t\t\t\t\t-2402,\n\t\t\t\t\t\t\t2489\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758028\",\n\t\t\t\t\t\t\"GEN\": \"Rödinghausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2490,\n\t\t\t\t\t\t\t2491,\n\t\t\t\t\t\t\t2492,\n\t\t\t\t\t\t\t2493,\n\t\t\t\t\t\t\t2494,\n\t\t\t\t\t\t\t2495,\n\t\t\t\t\t\t\t2496\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382044\",\n\t\t\t\t\t\t\"GEN\": \"Niederkassel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2497,\n\t\t\t\t\t\t\t2498,\n\t\t\t\t\t\t\t-1728,\n\t\t\t\t\t\t\t2499,\n\t\t\t\t\t\t\t-1726,\n\t\t\t\t\t\t\t2500,\n\t\t\t\t\t\t\t-1854,\n\t\t\t\t\t\t\t2501,\n\t\t\t\t\t\t\t-1959,\n\t\t\t\t\t\t\t2502,\n\t\t\t\t\t\t\t-1970,\n\t\t\t\t\t\t\t2503,\n\t\t\t\t\t\t\t-1604,\n\t\t\t\t\t\t\t2504,\n\t\t\t\t\t\t\t2505,\n\t\t\t\t\t\t\t2506,\n\t\t\t\t\t\t\t2507,\n\t\t\t\t\t\t\t2508,\n\t\t\t\t\t\t\t2509\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766044\",\n\t\t\t\t\t\t\"GEN\": \"Lemgo\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1776,\n\t\t\t\t\t\t\t2510,\n\t\t\t\t\t\t\t2511,\n\t\t\t\t\t\t\t2512,\n\t\t\t\t\t\t\t-1689,\n\t\t\t\t\t\t\t2513,\n\t\t\t\t\t\t\t-1696,\n\t\t\t\t\t\t\t2514,\n\t\t\t\t\t\t\t-961,\n\t\t\t\t\t\t\t2515,\n\t\t\t\t\t\t\t2516,\n\t\t\t\t\t\t\t-78,\n\t\t\t\t\t\t\t2517,\n\t\t\t\t\t\t\t2518,\n\t\t\t\t\t\t\t2519,\n\t\t\t\t\t\t\t-1882,\n\t\t\t\t\t\t\t2520,\n\t\t\t\t\t\t\t-1880,\n\t\t\t\t\t\t\t2521\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978036\",\n\t\t\t\t\t\t\"GEN\": \"Unna\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2522,\n\t\t\t\t\t\t\t2523,\n\t\t\t\t\t\t\t-1886,\n\t\t\t\t\t\t\t2524,\n\t\t\t\t\t\t\t-1884,\n\t\t\t\t\t\t\t2525,\n\t\t\t\t\t\t\t-2519,\n\t\t\t\t\t\t\t2526,\n\t\t\t\t\t\t\t-76,\n\t\t\t\t\t\t\t2527,\n\t\t\t\t\t\t\t2528,\n\t\t\t\t\t\t\t2529,\n\t\t\t\t\t\t\t2530,\n\t\t\t\t\t\t\t2531,\n\t\t\t\t\t\t\t2532\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978020\",\n\t\t\t\t\t\t\"GEN\": \"Kamen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-975,\n\t\t\t\t\t\t\t2533,\n\t\t\t\t\t\t\t2534,\n\t\t\t\t\t\t\t2535,\n\t\t\t\t\t\t\t2536,\n\t\t\t\t\t\t\t2537,\n\t\t\t\t\t\t\t2538,\n\t\t\t\t\t\t\t2539,\n\t\t\t\t\t\t\t-624,\n\t\t\t\t\t\t\t2540\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154004\",\n\t\t\t\t\t\t\"GEN\": \"Bedburg-Hau\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2364,\n\t\t\t\t\t\t\t2541,\n\t\t\t\t\t\t\t2542,\n\t\t\t\t\t\t\t-1469,\n\t\t\t\t\t\t\t2543,\n\t\t\t\t\t\t\t2544,\n\t\t\t\t\t\t\t2545,\n\t\t\t\t\t\t\t-1956,\n\t\t\t\t\t\t\t2546,\n\t\t\t\t\t\t\t2547,\n\t\t\t\t\t\t\t2548,\n\t\t\t\t\t\t\t-2309,\n\t\t\t\t\t\t\t2549\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754020\",\n\t\t\t\t\t\t\"GEN\": \"Herzebrock-Clarholz\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2550,\n\t\t\t\t\t\t\t2551,\n\t\t\t\t\t\t\t2552,\n\t\t\t\t\t\t\t2553,\n\t\t\t\t\t\t\t2554,\n\t\t\t\t\t\t\t2555,\n\t\t\t\t\t\t\t2556,\n\t\t\t\t\t\t\t2557,\n\t\t\t\t\t\t\t2558\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566036\",\n\t\t\t\t\t\t\"GEN\": \"Laer\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1259,\n\t\t\t\t\t\t\t2559,\n\t\t\t\t\t\t\t-1257,\n\t\t\t\t\t\t\t2560,\n\t\t\t\t\t\t\t-1255,\n\t\t\t\t\t\t\t2561,\n\t\t\t\t\t\t\t-482,\n\t\t\t\t\t\t\t2562,\n\t\t\t\t\t\t\t-2348,\n\t\t\t\t\t\t\t2563,\n\t\t\t\t\t\t\t-2346,\n\t\t\t\t\t\t\t2564,\n\t\t\t\t\t\t\t-998,\n\t\t\t\t\t\t\t2565,\n\t\t\t\t\t\t\t-996,\n\t\t\t\t\t\t\t2566,\n\t\t\t\t\t\t\t-1501,\n\t\t\t\t\t\t\t2567,\n\t\t\t\t\t\t\t-1499,\n\t\t\t\t\t\t\t2568,\n\t\t\t\t\t\t\t2569,\n\t\t\t\t\t\t\t-642,\n\t\t\t\t\t\t\t2570,\n\t\t\t\t\t\t\t2571\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970032\",\n\t\t\t\t\t\t\"GEN\": \"Netphen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1034,\n\t\t\t\t\t\t\t2572,\n\t\t\t\t\t\t\t2573,\n\t\t\t\t\t\t\t2574,\n\t\t\t\t\t\t\t-1912,\n\t\t\t\t\t\t\t2575,\n\t\t\t\t\t\t\t-1910,\n\t\t\t\t\t\t\t2576,\n\t\t\t\t\t\t\t2577,\n\t\t\t\t\t\t\t2578,\n\t\t\t\t\t\t\t2579,\n\t\t\t\t\t\t\t2580,\n\t\t\t\t\t\t\t2581,\n\t\t\t\t\t\t\t2582,\n\t\t\t\t\t\t\t2583\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954016\",\n\t\t\t\t\t\t\"GEN\": \"Hattingen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2584,\n\t\t\t\t\t\t\t2585,\n\t\t\t\t\t\t\t2586,\n\t\t\t\t\t\t\t2587,\n\t\t\t\t\t\t\t2588,\n\t\t\t\t\t\t\t2589,\n\t\t\t\t\t\t\t2590,\n\t\t\t\t\t\t\t-2102,\n\t\t\t\t\t\t\t2591,\n\t\t\t\t\t\t\t-2116,\n\t\t\t\t\t\t\t2592,\n\t\t\t\t\t\t\t2593,\n\t\t\t\t\t\t\t2594,\n\t\t\t\t\t\t\t2595,\n\t\t\t\t\t\t\t2596,\n\t\t\t\t\t\t\t-2292,\n\t\t\t\t\t\t\t2597,\n\t\t\t\t\t\t\t-2290,\n\t\t\t\t\t\t\t2598,\n\t\t\t\t\t\t\t2599,\n\t\t\t\t\t\t\t2600,\n\t\t\t\t\t\t\t2601\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05112000\",\n\t\t\t\t\t\t\"GEN\": \"Duisburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2602,\n\t\t\t\t\t\t\t2603,\n\t\t\t\t\t\t\t-2378,\n\t\t\t\t\t\t\t2604,\n\t\t\t\t\t\t\t-2476,\n\t\t\t\t\t\t\t2605,\n\t\t\t\t\t\t\t2606,\n\t\t\t\t\t\t\t2607,\n\t\t\t\t\t\t\t2608,\n\t\t\t\t\t\t\t2609\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962044\",\n\t\t\t\t\t\t\"GEN\": \"Nachrodt-Wiblingwerde\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-991,\n\t\t\t\t\t\t\t2610,\n\t\t\t\t\t\t\t2611,\n\t\t\t\t\t\t\t2612,\n\t\t\t\t\t\t\t2613,\n\t\t\t\t\t\t\t2614,\n\t\t\t\t\t\t\t-1570,\n\t\t\t\t\t\t\t2615\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554048\",\n\t\t\t\t\t\t\"GEN\": \"Rhede\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2234,\n\t\t\t\t\t\t\t2616,\n\t\t\t\t\t\t\t2617,\n\t\t\t\t\t\t\t-2409,\n\t\t\t\t\t\t\t2618\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770028\",\n\t\t\t\t\t\t\"GEN\": \"Petershagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-225,\n\t\t\t\t\t\t\t2619,\n\t\t\t\t\t\t\t2620,\n\t\t\t\t\t\t\t2621,\n\t\t\t\t\t\t\t-2385,\n\t\t\t\t\t\t\t2622,\n\t\t\t\t\t\t\t-2383,\n\t\t\t\t\t\t\t2623,\n\t\t\t\t\t\t\t-2397,\n\t\t\t\t\t\t\t2624\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758016\",\n\t\t\t\t\t\t\"GEN\": \"Hiddenhausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2462,\n\t\t\t\t\t\t\t2625,\n\t\t\t\t\t\t\t2626,\n\t\t\t\t\t\t\t2627,\n\t\t\t\t\t\t\t2628,\n\t\t\t\t\t\t\t2629,\n\t\t\t\t\t\t\t2630,\n\t\t\t\t\t\t\t2631,\n\t\t\t\t\t\t\t2632,\n\t\t\t\t\t\t\t2633,\n\t\t\t\t\t\t\t2634,\n\t\t\t\t\t\t\t2635\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566016\",\n\t\t\t\t\t\t\"GEN\": \"Hörstel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2548,\n\t\t\t\t\t\t\t2636,\n\t\t\t\t\t\t\t-1954,\n\t\t\t\t\t\t\t2637,\n\t\t\t\t\t\t\t-1952,\n\t\t\t\t\t\t\t2638,\n\t\t\t\t\t\t\t-1645,\n\t\t\t\t\t\t\t2639,\n\t\t\t\t\t\t\t-1805,\n\t\t\t\t\t\t\t2640,\n\t\t\t\t\t\t\t2641,\n\t\t\t\t\t\t\t2642,\n\t\t\t\t\t\t\t2643,\n\t\t\t\t\t\t\t2644,\n\t\t\t\t\t\t\t-2311,\n\t\t\t\t\t\t\t2645\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570028\",\n\t\t\t\t\t\t\"GEN\": \"Oelde\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2646,\n\t\t\t\t\t\t\t2647,\n\t\t\t\t\t\t\t2648,\n\t\t\t\t\t\t\t2649,\n\t\t\t\t\t\t\t-2551,\n\t\t\t\t\t\t\t2650,\n\t\t\t\t\t\t\t2651,\n\t\t\t\t\t\t\t2652,\n\t\t\t\t\t\t\t2653,\n\t\t\t\t\t\t\t2654,\n\t\t\t\t\t\t\t2655\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566084\",\n\t\t\t\t\t\t\"GEN\": \"Steinfurt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-305,\n\t\t\t\t\t\t\t2656,\n\t\t\t\t\t\t\t2657,\n\t\t\t\t\t\t\t2658,\n\t\t\t\t\t\t\t2659,\n\t\t\t\t\t\t\t2660,\n\t\t\t\t\t\t\t2661,\n\t\t\t\t\t\t\t2662,\n\t\t\t\t\t\t\t2663,\n\t\t\t\t\t\t\t2664,\n\t\t\t\t\t\t\t-307,\n\t\t\t\t\t\t\t2665\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958036\",\n\t\t\t\t\t\t\"GEN\": \"Olsberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2666,\n\t\t\t\t\t\t\t2667,\n\t\t\t\t\t\t\t2668,\n\t\t\t\t\t\t\t2669,\n\t\t\t\t\t\t\t2670,\n\t\t\t\t\t\t\t2671,\n\t\t\t\t\t\t\t2672,\n\t\t\t\t\t\t\t2673,\n\t\t\t\t\t\t\t2674,\n\t\t\t\t\t\t\t2675,\n\t\t\t\t\t\t\t-2049,\n\t\t\t\t\t\t\t2676,\n\t\t\t\t\t\t\t2677,\n\t\t\t\t\t\t\t2678,\n\t\t\t\t\t\t\t-429,\n\t\t\t\t\t\t\t2679,\n\t\t\t\t\t\t\t-427,\n\t\t\t\t\t\t\t2680,\n\t\t\t\t\t\t\t-122,\n\t\t\t\t\t\t\t2681,\n\t\t\t\t\t\t\t2682\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774028\",\n\t\t\t\t\t\t\"GEN\": \"Lichtenau\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2683,\n\t\t\t\t\t\t\t2684,\n\t\t\t\t\t\t\t-1475,\n\t\t\t\t\t\t\t2685,\n\t\t\t\t\t\t\t-2042,\n\t\t\t\t\t\t\t2686,\n\t\t\t\t\t\t\t-2040,\n\t\t\t\t\t\t\t2687\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754040\",\n\t\t\t\t\t\t\"GEN\": \"Steinhagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2688,\n\t\t\t\t\t\t\t2689,\n\t\t\t\t\t\t\t2690,\n\t\t\t\t\t\t\t2691,\n\t\t\t\t\t\t\t2692,\n\t\t\t\t\t\t\t2693,\n\t\t\t\t\t\t\t2694,\n\t\t\t\t\t\t\t2695,\n\t\t\t\t\t\t\t2696,\n\t\t\t\t\t\t\t2697,\n\t\t\t\t\t\t\t2698,\n\t\t\t\t\t\t\t2699,\n\t\t\t\t\t\t\t2700,\n\t\t\t\t\t\t\t2701,\n\t\t\t\t\t\t\t2702,\n\t\t\t\t\t\t\t2703,\n\t\t\t\t\t\t\t-1680,\n\t\t\t\t\t\t\t2704,\n\t\t\t\t\t\t\t2705,\n\t\t\t\t\t\t\t-394,\n\t\t\t\t\t\t\t2706,\n\t\t\t\t\t\t\t2707\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170048\",\n\t\t\t\t\t\t\"GEN\": \"Wesel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2708,\n\t\t\t\t\t\t\t2709,\n\t\t\t\t\t\t\t2710,\n\t\t\t\t\t\t\t-1109,\n\t\t\t\t\t\t\t2711,\n\t\t\t\t\t\t\t-1324,\n\t\t\t\t\t\t\t2712,\n\t\t\t\t\t\t\t2713,\n\t\t\t\t\t\t\t2714,\n\t\t\t\t\t\t\t-1514,\n\t\t\t\t\t\t\t2715,\n\t\t\t\t\t\t\t2716,\n\t\t\t\t\t\t\t2717\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362028\",\n\t\t\t\t\t\t\"GEN\": \"Hürth\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2718,\n\t\t\t\t\t\t\t2719,\n\t\t\t\t\t\t\t2720,\n\t\t\t\t\t\t\t2721,\n\t\t\t\t\t\t\t-2165,\n\t\t\t\t\t\t\t2722,\n\t\t\t\t\t\t\t2723,\n\t\t\t\t\t\t\t2724,\n\t\t\t\t\t\t\t2725,\n\t\t\t\t\t\t\t2726,\n\t\t\t\t\t\t\t2727\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166008\",\n\t\t\t\t\t\t\"GEN\": \"Grefrath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2728,\n\t\t\t\t\t\t\t2729,\n\t\t\t\t\t\t\t2730,\n\t\t\t\t\t\t\t2731,\n\t\t\t\t\t\t\t2732,\n\t\t\t\t\t\t\t-2197,\n\t\t\t\t\t\t\t2733,\n\t\t\t\t\t\t\t-1600,\n\t\t\t\t\t\t\t2734,\n\t\t\t\t\t\t\t2735,\n\t\t\t\t\t\t\t2736\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554056\",\n\t\t\t\t\t\t\"GEN\": \"Stadtlohn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2737,\n\t\t\t\t\t\t\t2738,\n\t\t\t\t\t\t\t2739,\n\t\t\t\t\t\t\t2740,\n\t\t\t\t\t\t\t2741,\n\t\t\t\t\t\t\t-1558,\n\t\t\t\t\t\t\t2742,\n\t\t\t\t\t\t\t-1903,\n\t\t\t\t\t\t\t2743,\n\t\t\t\t\t\t\t2744\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954012\",\n\t\t\t\t\t\t\"GEN\": \"Gevelsberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-841,\n\t\t\t\t\t\t\t-1985,\n\t\t\t\t\t\t\t-2369,\n\t\t\t\t\t\t\t2745,\n\t\t\t\t\t\t\t2746,\n\t\t\t\t\t\t\t-2603,\n\t\t\t\t\t\t\t2747,\n\t\t\t\t\t\t\t-2609,\n\t\t\t\t\t\t\t2748,\n\t\t\t\t\t\t\t2749,\n\t\t\t\t\t\t\t2750,\n\t\t\t\t\t\t\t-1650,\n\t\t\t\t\t\t\t2751,\n\t\t\t\t\t\t\t-1648,\n\t\t\t\t\t\t\t2752,\n\t\t\t\t\t\t\t-965,\n\t\t\t\t\t\t\t2753\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962024\",\n\t\t\t\t\t\t\"GEN\": \"Iserlohn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2754,\n\t\t\t\t\t\t\t2755,\n\t\t\t\t\t\t\t2756,\n\t\t\t\t\t\t\t2757,\n\t\t\t\t\t\t\t-146,\n\t\t\t\t\t\t\t2758,\n\t\t\t\t\t\t\t-144,\n\t\t\t\t\t\t\t2759,\n\t\t\t\t\t\t\t2760,\n\t\t\t\t\t\t\t2761,\n\t\t\t\t\t\t\t2762,\n\t\t\t\t\t\t\t2763,\n\t\t\t\t\t\t\t2764,\n\t\t\t\t\t\t\t2765,\n\t\t\t\t\t\t\t-2258,\n\t\t\t\t\t\t\t2766,\n\t\t\t\t\t\t\t2767,\n\t\t\t\t\t\t\t2768\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334028\",\n\t\t\t\t\t\t\"GEN\": \"Simmerath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2652,\n\t\t\t\t\t\t\t2770,\n\t\t\t\t\t\t\t-2558,\n\t\t\t\t\t\t\t2771,\n\t\t\t\t\t\t\t2772,\n\t\t\t\t\t\t\t2773,\n\t\t\t\t\t\t\t2774,\n\t\t\t\t\t\t\t2775,\n\t\t\t\t\t\t\t-2654,\n\t\t\t\t\t\t\t2776\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566024\",\n\t\t\t\t\t\t\"GEN\": \"Horstmar\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2554,\n\t\t\t\t\t\t\t2777,\n\t\t\t\t\t\t\t2778,\n\t\t\t\t\t\t\t2779,\n\t\t\t\t\t\t\t2780,\n\t\t\t\t\t\t\t2781,\n\t\t\t\t\t\t\t2782,\n\t\t\t\t\t\t\t2783,\n\t\t\t\t\t\t\t2784,\n\t\t\t\t\t\t\t2785,\n\t\t\t\t\t\t\t2786,\n\t\t\t\t\t\t\t2787,\n\t\t\t\t\t\t\t2788\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558008\",\n\t\t\t\t\t\t\"GEN\": \"Billerbeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2789,\n\t\t\t\t\t\t\t2790,\n\t\t\t\t\t\t\t-1038,\n\t\t\t\t\t\t\t2791,\n\t\t\t\t\t\t\t-1036,\n\t\t\t\t\t\t\t2792,\n\t\t\t\t\t\t\t-2583,\n\t\t\t\t\t\t\t2793,\n\t\t\t\t\t\t\t2794,\n\t\t\t\t\t\t\t2795,\n\t\t\t\t\t\t\t2796,\n\t\t\t\t\t\t\t2797,\n\t\t\t\t\t\t\t-818,\n\t\t\t\t\t\t\t2798,\n\t\t\t\t\t\t\t-787,\n\t\t\t\t\t\t\t2799,\n\t\t\t\t\t\t\t2800,\n\t\t\t\t\t\t\t2801,\n\t\t\t\t\t\t\t2802,\n\t\t\t\t\t\t\t2803,\n\t\t\t\t\t\t\t2804,\n\t\t\t\t\t\t\t2805,\n\t\t\t\t\t\t\t2806\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05113000\",\n\t\t\t\t\t\t\"GEN\": \"Essen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2807,\n\t\t\t\t\t\t\t2808,\n\t\t\t\t\t\t\t-1387,\n\t\t\t\t\t\t\t2809,\n\t\t\t\t\t\t\t-773,\n\t\t\t\t\t\t\t2810,\n\t\t\t\t\t\t\t-760,\n\t\t\t\t\t\t\t2811,\n\t\t\t\t\t\t\t-574,\n\t\t\t\t\t\t\t2812,\n\t\t\t\t\t\t\t2813,\n\t\t\t\t\t\t\t2814\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162020\",\n\t\t\t\t\t\t\"GEN\": \"Korschenbroich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2815,\n\t\t\t\t\t\t\t2816,\n\t\t\t\t\t\t\t2817,\n\t\t\t\t\t\t\t2818,\n\t\t\t\t\t\t\t2819,\n\t\t\t\t\t\t\t2820,\n\t\t\t\t\t\t\t2821,\n\t\t\t\t\t\t\t2822,\n\t\t\t\t\t\t\t2823,\n\t\t\t\t\t\t\t2824,\n\t\t\t\t\t\t\t2825,\n\t\t\t\t\t\t\t2826,\n\t\t\t\t\t\t\t2827\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558004\",\n\t\t\t\t\t\t\"GEN\": \"Ascheberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2828,\n\t\t\t\t\t\t\t2829,\n\t\t\t\t\t\t\t-2530,\n\t\t\t\t\t\t\t2830,\n\t\t\t\t\t\t\t2831,\n\t\t\t\t\t\t\t2832,\n\t\t\t\t\t\t\t2833,\n\t\t\t\t\t\t\t2834,\n\t\t\t\t\t\t\t2835,\n\t\t\t\t\t\t\t2836,\n\t\t\t\t\t\t\t2837\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978004\",\n\t\t\t\t\t\t\"GEN\": \"Bergkamen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2838,\n\t\t\t\t\t\t\t2839,\n\t\t\t\t\t\t\t-1614,\n\t\t\t\t\t\t\t2840,\n\t\t\t\t\t\t\t-1612,\n\t\t\t\t\t\t\t2841,\n\t\t\t\t\t\t\t2842,\n\t\t\t\t\t\t\t2843,\n\t\t\t\t\t\t\t-2180,\n\t\t\t\t\t\t\t2844,\n\t\t\t\t\t\t\t2845,\n\t\t\t\t\t\t\t2846,\n\t\t\t\t\t\t\t2847,\n\t\t\t\t\t\t\t2848\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766048\",\n\t\t\t\t\t\t\"GEN\": \"Leopoldshöhe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2487,\n\t\t\t\t\t\t\t2849,\n\t\t\t\t\t\t\t-1730,\n\t\t\t\t\t\t\t2850,\n\t\t\t\t\t\t\t-2498,\n\t\t\t\t\t\t\t2851,\n\t\t\t\t\t\t\t2852,\n\t\t\t\t\t\t\t-1742,\n\t\t\t\t\t\t\t2853,\n\t\t\t\t\t\t\t-363,\n\t\t\t\t\t\t\t2854,\n\t\t\t\t\t\t\t-361,\n\t\t\t\t\t\t\t2855\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766036\",\n\t\t\t\t\t\t\"GEN\": \"Kalletal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2856,\n\t\t\t\t\t\t\t2857,\n\t\t\t\t\t\t\t2858,\n\t\t\t\t\t\t\t2859,\n\t\t\t\t\t\t\t2860,\n\t\t\t\t\t\t\t2861,\n\t\t\t\t\t\t\t2862,\n\t\t\t\t\t\t\t2863,\n\t\t\t\t\t\t\t2864,\n\t\t\t\t\t\t\t-884,\n\t\t\t\t\t\t\t2865,\n\t\t\t\t\t\t\t2866,\n\t\t\t\t\t\t\t2867,\n\t\t\t\t\t\t\t2868,\n\t\t\t\t\t\t\t2869\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566008\",\n\t\t\t\t\t\t\"GEN\": \"Emsdetten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-410,\n\t\t\t\t\t\t\t2870,\n\t\t\t\t\t\t\t-452,\n\t\t\t\t\t\t\t2871\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366012\",\n\t\t\t\t\t\t\"GEN\": \"Dahlem\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2872,\n\t\t\t\t\t\t\t2873,\n\t\t\t\t\t\t\t2874,\n\t\t\t\t\t\t\t-518,\n\t\t\t\t\t\t\t2875,\n\t\t\t\t\t\t\t2876,\n\t\t\t\t\t\t\t2877,\n\t\t\t\t\t\t\t2878,\n\t\t\t\t\t\t\t2879,\n\t\t\t\t\t\t\t2880,\n\t\t\t\t\t\t\t2881,\n\t\t\t\t\t\t\t-2781,\n\t\t\t\t\t\t\t2882,\n\t\t\t\t\t\t\t2883\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558020\",\n\t\t\t\t\t\t\"GEN\": \"Havixbeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2884,\n\t\t\t\t\t\t\t2885,\n\t\t\t\t\t\t\t-1219,\n\t\t\t\t\t\t\t2886,\n\t\t\t\t\t\t\t2887,\n\t\t\t\t\t\t\t2888,\n\t\t\t\t\t\t\t-2225,\n\t\t\t\t\t\t\t2889,\n\t\t\t\t\t\t\t2890,\n\t\t\t\t\t\t\t2891,\n\t\t\t\t\t\t\t2892,\n\t\t\t\t\t\t\t-2069,\n\t\t\t\t\t\t\t2893,\n\t\t\t\t\t\t\t-2067,\n\t\t\t\t\t\t\t2894,\n\t\t\t\t\t\t\t2895\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958044\",\n\t\t\t\t\t\t\"GEN\": \"Sundern (Sauerland)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2896,\n\t\t\t\t\t\t\t-1213,\n\t\t\t\t\t\t\t2897,\n\t\t\t\t\t\t\t-2342,\n\t\t\t\t\t\t\t2898,\n\t\t\t\t\t\t\t-20,\n\t\t\t\t\t\t\t2899,\n\t\t\t\t\t\t\t-2220,\n\t\t\t\t\t\t\t2900,\n\t\t\t\t\t\t\t-2218,\n\t\t\t\t\t\t\t2901,\n\t\t\t\t\t\t\t-2888,\n\t\t\t\t\t\t\t2902,\n\t\t\t\t\t\t\t-1217,\n\t\t\t\t\t\t\t2903,\n\t\t\t\t\t\t\t-1215\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958016\",\n\t\t\t\t\t\t\"GEN\": \"Eslohe (Sauerland)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2904,\n\t\t\t\t\t\t\t2905,\n\t\t\t\t\t\t\t2906,\n\t\t\t\t\t\t\t-2269,\n\t\t\t\t\t\t\t2907,\n\t\t\t\t\t\t\t-2267,\n\t\t\t\t\t\t\t-115,\n\t\t\t\t\t\t\t2908,\n\t\t\t\t\t\t\t-113,\n\t\t\t\t\t\t\t2909,\n\t\t\t\t\t\t\t2910,\n\t\t\t\t\t\t\t2911,\n\t\t\t\t\t\t\t2912,\n\t\t\t\t\t\t\t2913,\n\t\t\t\t\t\t\t2914,\n\t\t\t\t\t\t\t2915,\n\t\t\t\t\t\t\t-140,\n\t\t\t\t\t\t\t2916,\n\t\t\t\t\t\t\t-242\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366028\",\n\t\t\t\t\t\t\"GEN\": \"Mechernich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2917,\n\t\t\t\t\t\t\t-1372,\n\t\t\t\t\t\t\t2918,\n\t\t\t\t\t\t\t-2295,\n\t\t\t\t\t\t\t2919,\n\t\t\t\t\t\t\t2920,\n\t\t\t\t\t\t\t2921,\n\t\t\t\t\t\t\t2922,\n\t\t\t\t\t\t\t2923,\n\t\t\t\t\t\t\t2924,\n\t\t\t\t\t\t\t2925,\n\t\t\t\t\t\t\t2926,\n\t\t\t\t\t\t\t2927\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170028\",\n\t\t\t\t\t\t\"GEN\": \"Neukirchen-Vluyn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1163,\n\t\t\t\t\t\t\t2928,\n\t\t\t\t\t\t\t-1161,\n\t\t\t\t\t\t\t2929,\n\t\t\t\t\t\t\t-2287,\n\t\t\t\t\t\t\t2930,\n\t\t\t\t\t\t\t-985,\n\t\t\t\t\t\t\t2931,\n\t\t\t\t\t\t\t2932,\n\t\t\t\t\t\t\t2933,\n\t\t\t\t\t\t\t2934\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554028\",\n\t\t\t\t\t\t\"GEN\": \"Heiden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2935,\n\t\t\t\t\t\t\t2936,\n\t\t\t\t\t\t\t2937,\n\t\t\t\t\t\t\t2938,\n\t\t\t\t\t\t\t2939,\n\t\t\t\t\t\t\t2940,\n\t\t\t\t\t\t\t-1770,\n\t\t\t\t\t\t\t2941,\n\t\t\t\t\t\t\t-1768,\n\t\t\t\t\t\t\t2942,\n\t\t\t\t\t\t\t-2098,\n\t\t\t\t\t\t\t2943\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974012\",\n\t\t\t\t\t\t\"GEN\": \"Ense\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2944,\n\t\t\t\t\t\t\t2945,\n\t\t\t\t\t\t\t-1389,\n\t\t\t\t\t\t\t2946,\n\t\t\t\t\t\t\t-2808,\n\t\t\t\t\t\t\t2947,\n\t\t\t\t\t\t\t2948,\n\t\t\t\t\t\t\t2949,\n\t\t\t\t\t\t\t2950,\n\t\t\t\t\t\t\t2951\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162016\",\n\t\t\t\t\t\t\"GEN\": \"Kaarst\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2923,\n\t\t\t\t\t\t\t2952,\n\t\t\t\t\t\t\t2953,\n\t\t\t\t\t\t\t2954,\n\t\t\t\t\t\t\t-2255,\n\t\t\t\t\t\t\t2955,\n\t\t\t\t\t\t\t-2253,\n\t\t\t\t\t\t\t2956,\n\t\t\t\t\t\t\t2957,\n\t\t\t\t\t\t\t2958,\n\t\t\t\t\t\t\t2959,\n\t\t\t\t\t\t\t2960,\n\t\t\t\t\t\t\t-865,\n\t\t\t\t\t\t\t2961\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166012\",\n\t\t\t\t\t\t\"GEN\": \"Kempen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2825,\n\t\t\t\t\t\t\t2962,\n\t\t\t\t\t\t\t2963,\n\t\t\t\t\t\t\t2964,\n\t\t\t\t\t\t\t-266,\n\t\t\t\t\t\t\t2965,\n\t\t\t\t\t\t\t-264,\n\t\t\t\t\t\t\t2966,\n\t\t\t\t\t\t\t-1137,\n\t\t\t\t\t\t\t2967\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558028\",\n\t\t\t\t\t\t\"GEN\": \"Nordkirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2968,\n\t\t\t\t\t\t\t2969,\n\t\t\t\t\t\t\t2970,\n\t\t\t\t\t\t\t2971,\n\t\t\t\t\t\t\t2972,\n\t\t\t\t\t\t\t2973,\n\t\t\t\t\t\t\t2974,\n\t\t\t\t\t\t\t-1783,\n\t\t\t\t\t\t\t2975,\n\t\t\t\t\t\t\t2976,\n\t\t\t\t\t\t\t-1780,\n\t\t\t\t\t\t\t2977,\n\t\t\t\t\t\t\t-821,\n\t\t\t\t\t\t\t2978\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762020\",\n\t\t\t\t\t\t\"GEN\": \"Höxter\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2979,\n\t\t\t\t\t\t\t2980,\n\t\t\t\t\t\t\t2981,\n\t\t\t\t\t\t\t2982,\n\t\t\t\t\t\t\t2983,\n\t\t\t\t\t\t\t2984,\n\t\t\t\t\t\t\t2985,\n\t\t\t\t\t\t\t2986,\n\t\t\t\t\t\t\t2987,\n\t\t\t\t\t\t\t2988,\n\t\t\t\t\t\t\t2989,\n\t\t\t\t\t\t\t2990,\n\t\t\t\t\t\t\t2991,\n\t\t\t\t\t\t\t-1787,\n\t\t\t\t\t\t\t2992,\n\t\t\t\t\t\t\t-1785,\n\t\t\t\t\t\t\t2993\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762012\",\n\t\t\t\t\t\t\"GEN\": \"Borgentreich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-462,\n\t\t\t\t\t\t\t2994,\n\t\t\t\t\t\t\t-460,\n\t\t\t\t\t\t\t2995,\n\t\t\t\t\t\t\t2996,\n\t\t\t\t\t\t\t2997,\n\t\t\t\t\t\t\t2998,\n\t\t\t\t\t\t\t2999,\n\t\t\t\t\t\t\t-1839,\n\t\t\t\t\t\t\t3000,\n\t\t\t\t\t\t\t-2335,\n\t\t\t\t\t\t\t3001,\n\t\t\t\t\t\t\t-2333,\n\t\t\t\t\t\t\t3002,\n\t\t\t\t\t\t\t-2331,\n\t\t\t\t\t\t\t3003,\n\t\t\t\t\t\t\t-2329,\n\t\t\t\t\t\t\t3004,\n\t\t\t\t\t\t\t3005,\n\t\t\t\t\t\t\t-2660,\n\t\t\t\t\t\t\t3006,\n\t\t\t\t\t\t\t-2658,\n\t\t\t\t\t\t\t3007\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958048\",\n\t\t\t\t\t\t\"GEN\": \"Winterberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-2762,\n\t\t\t\t\t\t\t\t3008,\n\t\t\t\t\t\t\t\t3009,\n\t\t\t\t\t\t\t\t3010,\n\t\t\t\t\t\t\t\t-454,\n\t\t\t\t\t\t\t\t3011,\n\t\t\t\t\t\t\t\t-2765,\n\t\t\t\t\t\t\t\t3012,\n\t\t\t\t\t\t\t\t3013\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t3014\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334020\",\n\t\t\t\t\t\t\"GEN\": \"Monschau\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1772,\n\t\t\t\t\t\t\t3015,\n\t\t\t\t\t\t\t-2940,\n\t\t\t\t\t\t\t3016,\n\t\t\t\t\t\t\t3017,\n\t\t\t\t\t\t\t3018,\n\t\t\t\t\t\t\t3019,\n\t\t\t\t\t\t\t3020,\n\t\t\t\t\t\t\t3021,\n\t\t\t\t\t\t\t3022,\n\t\t\t\t\t\t\t3023,\n\t\t\t\t\t\t\t-1691,\n\t\t\t\t\t\t\t3024,\n\t\t\t\t\t\t\t3025,\n\t\t\t\t\t\t\t3026\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974056\",\n\t\t\t\t\t\t\"GEN\": \"Wickede (Ruhr)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3027,\n\t\t\t\t\t\t\t-1651,\n\t\t\t\t\t\t\t3028,\n\t\t\t\t\t\t\t3029,\n\t\t\t\t\t\t\t3030,\n\t\t\t\t\t\t\t-2607,\n\t\t\t\t\t\t\t3031,\n\t\t\t\t\t\t\t-2483,\n\t\t\t\t\t\t\t3032,\n\t\t\t\t\t\t\t-1922,\n\t\t\t\t\t\t\t3033,\n\t\t\t\t\t\t\t-1939,\n\t\t\t\t\t\t\t3034,\n\t\t\t\t\t\t\t3035,\n\t\t\t\t\t\t\t-1542,\n\t\t\t\t\t\t\t3036,\n\t\t\t\t\t\t\t-1540,\n\t\t\t\t\t\t\t3037,\n\t\t\t\t\t\t\t-2741,\n\t\t\t\t\t\t\t3038,\n\t\t\t\t\t\t\t3039,\n\t\t\t\t\t\t\t3040,\n\t\t\t\t\t\t\t-1869,\n\t\t\t\t\t\t\t3041\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05914000\",\n\t\t\t\t\t\t\"GEN\": \"Hagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1574,\n\t\t\t\t\t\t\t3042,\n\t\t\t\t\t\t\t-1572,\n\t\t\t\t\t\t\t3043,\n\t\t\t\t\t\t\t3044,\n\t\t\t\t\t\t\t-2613,\n\t\t\t\t\t\t\t3045,\n\t\t\t\t\t\t\t3046,\n\t\t\t\t\t\t\t3047,\n\t\t\t\t\t\t\t3048,\n\t\t\t\t\t\t\t3049,\n\t\t\t\t\t\t\t-2689,\n\t\t\t\t\t\t\t3050,\n\t\t\t\t\t\t\t-172,\n\t\t\t\t\t\t\t3051,\n\t\t\t\t\t\t\t-2436,\n\t\t\t\t\t\t\t3052\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170012\",\n\t\t\t\t\t\t\"GEN\": \"Hamminkeln\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2662,\n\t\t\t\t\t\t\t3053,\n\t\t\t\t\t\t\t3054,\n\t\t\t\t\t\t\t-2326,\n\t\t\t\t\t\t\t3055,\n\t\t\t\t\t\t\t-1209,\n\t\t\t\t\t\t\t3056,\n\t\t\t\t\t\t\t3057\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958008\",\n\t\t\t\t\t\t\"GEN\": \"Bestwig\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3058,\n\t\t\t\t\t\t\t-2239,\n\t\t\t\t\t\t\t3059,\n\t\t\t\t\t\t\t-2413,\n\t\t\t\t\t\t\t3060,\n\t\t\t\t\t\t\t3061,\n\t\t\t\t\t\t\t3062,\n\t\t\t\t\t\t\t3063\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770020\",\n\t\t\t\t\t\t\"GEN\": \"Lübbecke\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3064,\n\t\t\t\t\t\t\t3065,\n\t\t\t\t\t\t\t-382,\n\t\t\t\t\t\t\t3066\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566048\",\n\t\t\t\t\t\t\"GEN\": \"Lotte\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3067,\n\t\t\t\t\t\t\t-1309,\n\t\t\t\t\t\t\t3068,\n\t\t\t\t\t\t\t-1307,\n\t\t\t\t\t\t\t3069,\n\t\t\t\t\t\t\t3070,\n\t\t\t\t\t\t\t3071,\n\t\t\t\t\t\t\t3072,\n\t\t\t\t\t\t\t3073,\n\t\t\t\t\t\t\t-317,\n\t\t\t\t\t\t\t3074,\n\t\t\t\t\t\t\t-1096\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358028\",\n\t\t\t\t\t\t\"GEN\": \"Kreuzau\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2633,\n\t\t\t\t\t\t\t3075,\n\t\t\t\t\t\t\t-2631,\n\t\t\t\t\t\t\t-2869,\n\t\t\t\t\t\t\t3076,\n\t\t\t\t\t\t\t-2867,\n\t\t\t\t\t\t\t3077,\n\t\t\t\t\t\t\t-882,\n\t\t\t\t\t\t\t3078,\n\t\t\t\t\t\t\t3079,\n\t\t\t\t\t\t\t3080\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566076\",\n\t\t\t\t\t\t\"GEN\": \"Rheine\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2697,\n\t\t\t\t\t\t\t3081,\n\t\t\t\t\t\t\t3082,\n\t\t\t\t\t\t\t3083,\n\t\t\t\t\t\t\t3084,\n\t\t\t\t\t\t\t3085,\n\t\t\t\t\t\t\t3086,\n\t\t\t\t\t\t\t3087,\n\t\t\t\t\t\t\t3088,\n\t\t\t\t\t\t\t-2699,\n\t\t\t\t\t\t\t3089\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170044\",\n\t\t\t\t\t\t\"GEN\": \"Voerde (Niederrhein)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2071,\n\t\t\t\t\t\t\t3090,\n\t\t\t\t\t\t\t-2892,\n\t\t\t\t\t\t\t3091,\n\t\t\t\t\t\t\t-723,\n\t\t\t\t\t\t\t3092,\n\t\t\t\t\t\t\t-1861,\n\t\t\t\t\t\t\t3093,\n\t\t\t\t\t\t\t-1859,\n\t\t\t\t\t\t\t3094,\n\t\t\t\t\t\t\t-1857,\n\t\t\t\t\t\t\t3095,\n\t\t\t\t\t\t\t-2372,\n\t\t\t\t\t\t\t3096,\n\t\t\t\t\t\t\t3097,\n\t\t\t\t\t\t\t3098\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962048\",\n\t\t\t\t\t\t\"GEN\": \"Neuenrade\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2031,\n\t\t\t\t\t\t\t3099,\n\t\t\t\t\t\t\t-2776,\n\t\t\t\t\t\t\t3100,\n\t\t\t\t\t\t\t3101,\n\t\t\t\t\t\t\t3102,\n\t\t\t\t\t\t\t3103,\n\t\t\t\t\t\t\t-2033,\n\t\t\t\t\t\t\t3104\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566052\",\n\t\t\t\t\t\t\"GEN\": \"Metelen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3105,\n\t\t\t\t\t\t\t3106,\n\t\t\t\t\t\t\t3107,\n\t\t\t\t\t\t\t-1814,\n\t\t\t\t\t\t\t3108,\n\t\t\t\t\t\t\t-1812,\n\t\t\t\t\t\t\t3109,\n\t\t\t\t\t\t\t3110,\n\t\t\t\t\t\t\t3111,\n\t\t\t\t\t\t\t3112,\n\t\t\t\t\t\t\t3113,\n\t\t\t\t\t\t\t3114,\n\t\t\t\t\t\t\t3115,\n\t\t\t\t\t\t\t3116,\n\t\t\t\t\t\t\t3117,\n\t\t\t\t\t\t\t3118,\n\t\t\t\t\t\t\t3119,\n\t\t\t\t\t\t\t3120,\n\t\t\t\t\t\t\t3121,\n\t\t\t\t\t\t\t3122,\n\t\t\t\t\t\t\t3123,\n\t\t\t\t\t\t\t3124,\n\t\t\t\t\t\t\t3125\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570004\",\n\t\t\t\t\t\t\"GEN\": \"Ahlen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3126,\n\t\t\t\t\t\t\t3127,\n\t\t\t\t\t\t\t3128,\n\t\t\t\t\t\t\t-351,\n\t\t\t\t\t\t\t3129,\n\t\t\t\t\t\t\t3130,\n\t\t\t\t\t\t\t-1817,\n\t\t\t\t\t\t\t3131,\n\t\t\t\t\t\t\t-814,\n\t\t\t\t\t\t\t3132\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158036\",\n\t\t\t\t\t\t\"GEN\": \"Wülfrath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3133,\n\t\t\t\t\t\t\t3134,\n\t\t\t\t\t\t\t3135,\n\t\t\t\t\t\t\t3136,\n\t\t\t\t\t\t\t3137,\n\t\t\t\t\t\t\t3138,\n\t\t\t\t\t\t\t-2038,\n\t\t\t\t\t\t\t3139,\n\t\t\t\t\t\t\t3140,\n\t\t\t\t\t\t\t-2008,\n\t\t\t\t\t\t\t3141\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754052\",\n\t\t\t\t\t\t\"GEN\": \"Werther (Westf.)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2969,\n\t\t\t\t\t\t\t3142,\n\t\t\t\t\t\t\t-2982,\n\t\t\t\t\t\t\t3143,\n\t\t\t\t\t\t\t-2980,\n\t\t\t\t\t\t\t3144,\n\t\t\t\t\t\t\t3145,\n\t\t\t\t\t\t\t-2973,\n\t\t\t\t\t\t\t3146,\n\t\t\t\t\t\t\t-2971,\n\t\t\t\t\t\t\t3147\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762008\",\n\t\t\t\t\t\t\"GEN\": \"Beverungen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-507,\n\t\t\t\t\t\t\t3148,\n\t\t\t\t\t\t\t-2423,\n\t\t\t\t\t\t\t3149,\n\t\t\t\t\t\t\t3150,\n\t\t\t\t\t\t\t3151,\n\t\t\t\t\t\t\t3152,\n\t\t\t\t\t\t\t3153,\n\t\t\t\t\t\t\t3154,\n\t\t\t\t\t\t\t3155,\n\t\t\t\t\t\t\t-509,\n\t\t\t\t\t\t\t3156\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570040\",\n\t\t\t\t\t\t\"GEN\": \"Sendenhorst\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2235,\n\t\t\t\t\t\t\t3157,\n\t\t\t\t\t\t\t-2245,\n\t\t\t\t\t\t\t3158,\n\t\t\t\t\t\t\t-735,\n\t\t\t\t\t\t\t3159\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770040\",\n\t\t\t\t\t\t\"GEN\": \"Rahden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3160,\n\t\t\t\t\t\t\t-1516,\n\t\t\t\t\t\t\t3161,\n\t\t\t\t\t\t\t-2714,\n\t\t\t\t\t\t\t3162,\n\t\t\t\t\t\t\t-1322,\n\t\t\t\t\t\t\t3163,\n\t\t\t\t\t\t\t-1331,\n\t\t\t\t\t\t\t3164,\n\t\t\t\t\t\t\t-1100,\n\t\t\t\t\t\t\t3165,\n\t\t\t\t\t\t\t-159,\n\t\t\t\t\t\t\t3166,\n\t\t\t\t\t\t\t3167,\n\t\t\t\t\t\t\t3168,\n\t\t\t\t\t\t\t3169\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362032\",\n\t\t\t\t\t\t\"GEN\": \"Kerpen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1397,\n\t\t\t\t\t\t\t3170,\n\t\t\t\t\t\t\t3171,\n\t\t\t\t\t\t\t3172,\n\t\t\t\t\t\t\t-3168,\n\t\t\t\t\t\t\t3173,\n\t\t\t\t\t\t\t-1436,\n\t\t\t\t\t\t\t3174,\n\t\t\t\t\t\t\t-2156,\n\t\t\t\t\t\t\t3175,\n\t\t\t\t\t\t\t3176,\n\t\t\t\t\t\t\t3177,\n\t\t\t\t\t\t\t3178\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362016\",\n\t\t\t\t\t\t\"GEN\": \"Elsdorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3179,\n\t\t\t\t\t\t\t-321,\n\t\t\t\t\t\t\t3180,\n\t\t\t\t\t\t\t3181,\n\t\t\t\t\t\t\t3182,\n\t\t\t\t\t\t\t-777,\n\t\t\t\t\t\t\t3183,\n\t\t\t\t\t\t\t3184,\n\t\t\t\t\t\t\t3185\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358032\",\n\t\t\t\t\t\t\"GEN\": \"Langerwehe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2785,\n\t\t\t\t\t\t\t3186,\n\t\t\t\t\t\t\t3187,\n\t\t\t\t\t\t\t-809,\n\t\t\t\t\t\t\t3188,\n\t\t\t\t\t\t\t3189,\n\t\t\t\t\t\t\t3190,\n\t\t\t\t\t\t\t3191,\n\t\t\t\t\t\t\t3192,\n\t\t\t\t\t\t\t3193,\n\t\t\t\t\t\t\t3194\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558012\",\n\t\t\t\t\t\t\"GEN\": \"Coesfeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2701,\n\t\t\t\t\t\t\t3195,\n\t\t\t\t\t\t\t3196,\n\t\t\t\t\t\t\t3197,\n\t\t\t\t\t\t\t-2600,\n\t\t\t\t\t\t\t3198,\n\t\t\t\t\t\t\t3199,\n\t\t\t\t\t\t\t3200,\n\t\t\t\t\t\t\t-1368,\n\t\t\t\t\t\t\t3201,\n\t\t\t\t\t\t\t-1682,\n\t\t\t\t\t\t\t3202,\n\t\t\t\t\t\t\t-2703,\n\t\t\t\t\t\t\t3203\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170032\",\n\t\t\t\t\t\t\"GEN\": \"Rheinberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3204,\n\t\t\t\t\t\t\t3205,\n\t\t\t\t\t\t\t3206,\n\t\t\t\t\t\t\t3207,\n\t\t\t\t\t\t\t3208,\n\t\t\t\t\t\t\t-2585,\n\t\t\t\t\t\t\t3209,\n\t\t\t\t\t\t\t3210,\n\t\t\t\t\t\t\t-3087,\n\t\t\t\t\t\t\t3211,\n\t\t\t\t\t\t\t3212,\n\t\t\t\t\t\t\t3213\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170008\",\n\t\t\t\t\t\t\"GEN\": \"Dinslaken\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3214,\n\t\t\t\t\t\t\t-231,\n\t\t\t\t\t\t\t-67,\n\t\t\t\t\t\t\t3215\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566044\",\n\t\t\t\t\t\t\"GEN\": \"Lienen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-955,\n\t\t\t\t\t\t\t3216,\n\t\t\t\t\t\t\t3217,\n\t\t\t\t\t\t\t-2430,\n\t\t\t\t\t\t\t3218,\n\t\t\t\t\t\t\t-2471,\n\t\t\t\t\t\t\t3219,\n\t\t\t\t\t\t\t-1039,\n\t\t\t\t\t\t\t3220,\n\t\t\t\t\t\t\t-2790,\n\t\t\t\t\t\t\t3221,\n\t\t\t\t\t\t\t-150,\n\t\t\t\t\t\t\t3222,\n\t\t\t\t\t\t\t3223,\n\t\t\t\t\t\t\t-2278,\n\t\t\t\t\t\t\t3224\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05513000\",\n\t\t\t\t\t\t\"GEN\": \"Gelsenkirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3225,\n\t\t\t\t\t\t\t3226,\n\t\t\t\t\t\t\t3227,\n\t\t\t\t\t\t\t3228,\n\t\t\t\t\t\t\t-546,\n\t\t\t\t\t\t\t3229,\n\t\t\t\t\t\t\t3230,\n\t\t\t\t\t\t\t3231,\n\t\t\t\t\t\t\t3232,\n\t\t\t\t\t\t\t3233,\n\t\t\t\t\t\t\t3234,\n\t\t\t\t\t\t\t3235,\n\t\t\t\t\t\t\t3236\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974004\",\n\t\t\t\t\t\t\"GEN\": \"Anröchte\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2556,\n\t\t\t\t\t\t\t3237,\n\t\t\t\t\t\t\t-2788,\n\t\t\t\t\t\t\t3238,\n\t\t\t\t\t\t\t3239,\n\t\t\t\t\t\t\t-3194,\n\t\t\t\t\t\t\t3240,\n\t\t\t\t\t\t\t3241,\n\t\t\t\t\t\t\t3242,\n\t\t\t\t\t\t\t3243,\n\t\t\t\t\t\t\t3244,\n\t\t\t\t\t\t\t-2773,\n\t\t\t\t\t\t\t3245\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558040\",\n\t\t\t\t\t\t\"GEN\": \"Rosendahl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3246,\n\t\t\t\t\t\t\t3247,\n\t\t\t\t\t\t\t3248,\n\t\t\t\t\t\t\t3249,\n\t\t\t\t\t\t\t3250,\n\t\t\t\t\t\t\t3251,\n\t\t\t\t\t\t\t3252,\n\t\t\t\t\t\t\t3253,\n\t\t\t\t\t\t\t3254,\n\t\t\t\t\t\t\t-3084,\n\t\t\t\t\t\t\t3255,\n\t\t\t\t\t\t\t-2694,\n\t\t\t\t\t\t\t3256,\n\t\t\t\t\t\t\t-2692,\n\t\t\t\t\t\t\t3257,\n\t\t\t\t\t\t\t3258\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170016\",\n\t\t\t\t\t\t\"GEN\": \"Hünxe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3259,\n\t\t\t\t\t\t\t3260,\n\t\t\t\t\t\t\t-537,\n\t\t\t\t\t\t\t3261,\n\t\t\t\t\t\t\t-535,\n\t\t\t\t\t\t\t3262,\n\t\t\t\t\t\t\t3263,\n\t\t\t\t\t\t\t3264,\n\t\t\t\t\t\t\t-2491,\n\t\t\t\t\t\t\t3265,\n\t\t\t\t\t\t\t-2496,\n\t\t\t\t\t\t\t3266,\n\t\t\t\t\t\t\t-492,\n\t\t\t\t\t\t\t3267,\n\t\t\t\t\t\t\t-499,\n\t\t\t\t\t\t\t3268,\n\t\t\t\t\t\t\t-2709,\n\t\t\t\t\t\t\t3269,\n\t\t\t\t\t\t\t-2717,\n\t\t\t\t\t\t\t3270,\n\t\t\t\t\t\t\t-1512,\n\t\t\t\t\t\t\t3271,\n\t\t\t\t\t\t\t-11,\n\t\t\t\t\t\t\t3272,\n\t\t\t\t\t\t\t3273,\n\t\t\t\t\t\t\t3274,\n\t\t\t\t\t\t\t3275,\n\t\t\t\t\t\t\t3276\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05315000\",\n\t\t\t\t\t\t\"GEN\": \"Köln\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2801,\n\t\t\t\t\t\t\t3277,\n\t\t\t\t\t\t\t-800,\n\t\t\t\t\t\t\t3278,\n\t\t\t\t\t\t\t3279,\n\t\t\t\t\t\t\t-2589,\n\t\t\t\t\t\t\t3280,\n\t\t\t\t\t\t\t3281,\n\t\t\t\t\t\t\t3282\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05117000\",\n\t\t\t\t\t\t\"GEN\": \"Mülheim an der Ruhr\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2861,\n\t\t\t\t\t\t\t3283,\n\t\t\t\t\t\t\t-2859,\n\t\t\t\t\t\t\t3284,\n\t\t\t\t\t\t\t3285,\n\t\t\t\t\t\t\t3286,\n\t\t\t\t\t\t\t3287,\n\t\t\t\t\t\t\t3288,\n\t\t\t\t\t\t\t3289,\n\t\t\t\t\t\t\t-235,\n\t\t\t\t\t\t\t3290,\n\t\t\t\t\t\t\t-256,\n\t\t\t\t\t\t\t-1131,\n\t\t\t\t\t\t\t3291,\n\t\t\t\t\t\t\t-501,\n\t\t\t\t\t\t\t3292,\n\t\t\t\t\t\t\t-524,\n\t\t\t\t\t\t\t3293,\n\t\t\t\t\t\t\t3294,\n\t\t\t\t\t\t\t3295,\n\t\t\t\t\t\t\t3296,\n\t\t\t\t\t\t\t3297,\n\t\t\t\t\t\t\t3298\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566012\",\n\t\t\t\t\t\t\"GEN\": \"Greven\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3116,\n\t\t\t\t\t\t\t3299,\n\t\t\t\t\t\t\t-3114,\n\t\t\t\t\t\t\t3300,\n\t\t\t\t\t\t\t3301,\n\t\t\t\t\t\t\t3302,\n\t\t\t\t\t\t\t-474,\n\t\t\t\t\t\t\t3303,\n\t\t\t\t\t\t\t3304,\n\t\t\t\t\t\t\t3305,\n\t\t\t\t\t\t\t-1878,\n\t\t\t\t\t\t\t3306,\n\t\t\t\t\t\t\t-1876,\n\t\t\t\t\t\t\t3307,\n\t\t\t\t\t\t\t3308,\n\t\t\t\t\t\t\t3309,\n\t\t\t\t\t\t\t3310,\n\t\t\t\t\t\t\t3311,\n\t\t\t\t\t\t\t3312,\n\t\t\t\t\t\t\t3313,\n\t\t\t\t\t\t\t3314,\n\t\t\t\t\t\t\t3315,\n\t\t\t\t\t\t\t-2819,\n\t\t\t\t\t\t\t3316,\n\t\t\t\t\t\t\t3317,\n\t\t\t\t\t\t\t3318,\n\t\t\t\t\t\t\t-3118,\n\t\t\t\t\t\t\t3319\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05915000\",\n\t\t\t\t\t\t\"GEN\": \"Hamm\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-260,\n\t\t\t\t\t\t\t3320,\n\t\t\t\t\t\t\t3321,\n\t\t\t\t\t\t\t-878,\n\t\t\t\t\t\t\t3322,\n\t\t\t\t\t\t\t-2729,\n\t\t\t\t\t\t\t3323,\n\t\t\t\t\t\t\t-2736,\n\t\t\t\t\t\t\t3324,\n\t\t\t\t\t\t\t-1598,\n\t\t\t\t\t\t\t3325,\n\t\t\t\t\t\t\t3326\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554004\",\n\t\t\t\t\t\t\"GEN\": \"Ahaus\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3327,\n\t\t\t\t\t\t\t-18,\n\t\t\t\t\t\t\t3328,\n\t\t\t\t\t\t\t-16,\n\t\t\t\t\t\t\t3329,\n\t\t\t\t\t\t\t3330,\n\t\t\t\t\t\t\t3331,\n\t\t\t\t\t\t\t-766,\n\t\t\t\t\t\t\t3332,\n\t\t\t\t\t\t\t3333\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162028\",\n\t\t\t\t\t\t\"GEN\": \"Rommerskirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3334,\n\t\t\t\t\t\t\t-1305,\n\t\t\t\t\t\t\t3335,\n\t\t\t\t\t\t\t-245,\n\t\t\t\t\t\t\t3336,\n\t\t\t\t\t\t\t-137,\n\t\t\t\t\t\t\t3337,\n\t\t\t\t\t\t\t-148,\n\t\t\t\t\t\t\t3338,\n\t\t\t\t\t\t\t-2757,\n\t\t\t\t\t\t\t3339,\n\t\t\t\t\t\t\t3340,\n\t\t\t\t\t\t\t3341,\n\t\t\t\t\t\t\t3342,\n\t\t\t\t\t\t\t3343,\n\t\t\t\t\t\t\t-3071\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358044\",\n\t\t\t\t\t\t\"GEN\": \"Nideggen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3344,\n\t\t\t\t\t\t\t-1702,\n\t\t\t\t\t\t\t3345,\n\t\t\t\t\t\t\t-187,\n\t\t\t\t\t\t\t3346,\n\t\t\t\t\t\t\t-185,\n\t\t\t\t\t\t\t-97,\n\t\t\t\t\t\t\t3347,\n\t\t\t\t\t\t\t3348,\n\t\t\t\t\t\t\t-2465,\n\t\t\t\t\t\t\t3349,\n\t\t\t\t\t\t\t3350,\n\t\t\t\t\t\t\t-1626,\n\t\t\t\t\t\t\t3351,\n\t\t\t\t\t\t\t-1624,\n\t\t\t\t\t\t\t3352\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562004\",\n\t\t\t\t\t\t\"GEN\": \"Castrop-Rauxel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3353,\n\t\t\t\t\t\t\t3354,\n\t\t\t\t\t\t\t-2914,\n\t\t\t\t\t\t\t3355,\n\t\t\t\t\t\t\t3356,\n\t\t\t\t\t\t\t3357,\n\t\t\t\t\t\t\t-443,\n\t\t\t\t\t\t\t3358,\n\t\t\t\t\t\t\t-441,\n\t\t\t\t\t\t\t3359,\n\t\t\t\t\t\t\t-439,\n\t\t\t\t\t\t\t3360,\n\t\t\t\t\t\t\t-456,\n\t\t\t\t\t\t\t3361,\n\t\t\t\t\t\t\t-3010,\n\t\t\t\t\t\t\t3362,\n\t\t\t\t\t\t\t-2761,\n\t\t\t\t\t\t\t3363,\n\t\t\t\t\t\t\t-142\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366036\",\n\t\t\t\t\t\t\"GEN\": \"Schleiden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1549,\n\t\t\t\t\t\t\t3364,\n\t\t\t\t\t\t\t-1933,\n\t\t\t\t\t\t\t3365,\n\t\t\t\t\t\t\t3366,\n\t\t\t\t\t\t\t3367,\n\t\t\t\t\t\t\t3368,\n\t\t\t\t\t\t\t-1928,\n\t\t\t\t\t\t\t3369,\n\t\t\t\t\t\t\t3370,\n\t\t\t\t\t\t\t-718,\n\t\t\t\t\t\t\t3371,\n\t\t\t\t\t\t\t3372,\n\t\t\t\t\t\t\t-1357,\n\t\t\t\t\t\t\t3373,\n\t\t\t\t\t\t\t3374,\n\t\t\t\t\t\t\t-1993,\n\t\t\t\t\t\t\t3375,\n\t\t\t\t\t\t\t3376,\n\t\t\t\t\t\t\t-331,\n\t\t\t\t\t\t\t3377,\n\t\t\t\t\t\t\t-1551,\n\t\t\t\t\t\t\t3378\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374036\",\n\t\t\t\t\t\t\"GEN\": \"Radevormwald\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3379,\n\t\t\t\t\t\t\t-3315,\n\t\t\t\t\t\t\t3380,\n\t\t\t\t\t\t\t-3313,\n\t\t\t\t\t\t\t3381,\n\t\t\t\t\t\t\t3382,\n\t\t\t\t\t\t\t-2838,\n\t\t\t\t\t\t\t3383,\n\t\t\t\t\t\t\t-2836,\n\t\t\t\t\t\t\t3384,\n\t\t\t\t\t\t\t-2834,\n\t\t\t\t\t\t\t3385,\n\t\t\t\t\t\t\t3386,\n\t\t\t\t\t\t\t3387,\n\t\t\t\t\t\t\t3388,\n\t\t\t\t\t\t\t-2964,\n\t\t\t\t\t\t\t3389,\n\t\t\t\t\t\t\t-2823,\n\t\t\t\t\t\t\t3390,\n\t\t\t\t\t\t\t-2821\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978040\",\n\t\t\t\t\t\t\"GEN\": \"Werne\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2094,\n\t\t\t\t\t\t\t3391,\n\t\t\t\t\t\t\t3392,\n\t\t\t\t\t\t\t3393,\n\t\t\t\t\t\t\t-552,\n\t\t\t\t\t\t\t3394,\n\t\t\t\t\t\t\t3395,\n\t\t\t\t\t\t\t3396,\n\t\t\t\t\t\t\t3397,\n\t\t\t\t\t\t\t3398,\n\t\t\t\t\t\t\t-2936,\n\t\t\t\t\t\t\t-2096,\n\t\t\t\t\t\t\t3399\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974032\",\n\t\t\t\t\t\t\"GEN\": \"Möhnesee\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2389,\n\t\t\t\t\t\t\t3400,\n\t\t\t\t\t\t\t3401,\n\t\t\t\t\t\t\t3402,\n\t\t\t\t\t\t\t-2847,\n\t\t\t\t\t\t\t3403,\n\t\t\t\t\t\t\t3404,\n\t\t\t\t\t\t\t-2178,\n\t\t\t\t\t\t\t3405,\n\t\t\t\t\t\t\t-2118,\n\t\t\t\t\t\t\t3406,\n\t\t\t\t\t\t\t-2127,\n\t\t\t\t\t\t\t3407,\n\t\t\t\t\t\t\t-1458,\n\t\t\t\t\t\t\t3408,\n\t\t\t\t\t\t\t-2684,\n\t\t\t\t\t\t\t3409,\n\t\t\t\t\t\t\t-3138,\n\t\t\t\t\t\t\t3410,\n\t\t\t\t\t\t\t-3136,\n\t\t\t\t\t\t\t3411,\n\t\t\t\t\t\t\t3412,\n\t\t\t\t\t\t\t3413\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05711000\",\n\t\t\t\t\t\t\"GEN\": \"Bielefeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-431,\n\t\t\t\t\t\t\t3414,\n\t\t\t\t\t\t\t-2678,\n\t\t\t\t\t\t\t3415,\n\t\t\t\t\t\t\t-2058,\n\t\t\t\t\t\t\t3416,\n\t\t\t\t\t\t\t-2056,\n\t\t\t\t\t\t\t3417,\n\t\t\t\t\t\t\t-2054,\n\t\t\t\t\t\t\t3418,\n\t\t\t\t\t\t\t-301,\n\t\t\t\t\t\t\t3419,\n\t\t\t\t\t\t\t-57,\n\t\t\t\t\t\t\t3420\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774040\",\n\t\t\t\t\t\t\"GEN\": \"Bad Wünnenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3421,\n\t\t\t\t\t\t\t-111,\n\t\t\t\t\t\t\t3422,\n\t\t\t\t\t\t\t-449,\n\t\t\t\t\t\t\t3423,\n\t\t\t\t\t\t\t-447,\n\t\t\t\t\t\t\t3424,\n\t\t\t\t\t\t\t-445,\n\t\t\t\t\t\t\t3425,\n\t\t\t\t\t\t\t-3357,\n\t\t\t\t\t\t\t3426,\n\t\t\t\t\t\t\t3427,\n\t\t\t\t\t\t\t-2911\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366024\",\n\t\t\t\t\t\t\"GEN\": \"Kall\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3428,\n\t\t\t\t\t\t\t3429,\n\t\t\t\t\t\t\t3430,\n\t\t\t\t\t\t\t3431,\n\t\t\t\t\t\t\t3432,\n\t\t\t\t\t\t\t-3242,\n\t\t\t\t\t\t\t3433,\n\t\t\t\t\t\t\t-3323,\n\t\t\t\t\t\t\t-877,\n\t\t\t\t\t\t\t3434\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554036\",\n\t\t\t\t\t\t\"GEN\": \"Legden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3435,\n\t\t\t\t\t\t\t3436,\n\t\t\t\t\t\t\t-1995,\n\t\t\t\t\t\t\t3437,\n\t\t\t\t\t\t\t-2006,\n\t\t\t\t\t\t\t3438,\n\t\t\t\t\t\t\t-219,\n\t\t\t\t\t\t\t3439,\n\t\t\t\t\t\t\t3440,\n\t\t\t\t\t\t\t-2394,\n\t\t\t\t\t\t\t3441,\n\t\t\t\t\t\t\t3442,\n\t\t\t\t\t\t\t3443,\n\t\t\t\t\t\t\t-3062,\n\t\t\t\t\t\t\t3444\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770016\",\n\t\t\t\t\t\t\"GEN\": \"Hüllhorst\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3445,\n\t\t\t\t\t\t\t3446,\n\t\t\t\t\t\t\t3447,\n\t\t\t\t\t\t\t3448,\n\t\t\t\t\t\t\t3449,\n\t\t\t\t\t\t\t-3226,\n\t\t\t\t\t\t\t3450,\n\t\t\t\t\t\t\t-3236,\n\t\t\t\t\t\t\t3451,\n\t\t\t\t\t\t\t-3234,\n\t\t\t\t\t\t\t3452,\n\t\t\t\t\t\t\t3453,\n\t\t\t\t\t\t\t3454,\n\t\t\t\t\t\t\t3455,\n\t\t\t\t\t\t\t3456,\n\t\t\t\t\t\t\t3457,\n\t\t\t\t\t\t\t3458\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974016\",\n\t\t\t\t\t\t\"GEN\": \"Erwitte\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3459,\n\t\t\t\t\t\t\t3460,\n\t\t\t\t\t\t\t-1530,\n\t\t\t\t\t\t\t3461,\n\t\t\t\t\t\t\t-1538,\n\t\t\t\t\t\t\t3462,\n\t\t\t\t\t\t\t-2120,\n\t\t\t\t\t\t\t3463\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754036\",\n\t\t\t\t\t\t\"GEN\": \"Schloß Holte-Stukenbrock\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1071,\n\t\t\t\t\t\t\t3464,\n\t\t\t\t\t\t\t-1170,\n\t\t\t\t\t\t\t3465,\n\t\t\t\t\t\t\t-1265,\n\t\t\t\t\t\t\t3466,\n\t\t\t\t\t\t\t3467,\n\t\t\t\t\t\t\t-1916,\n\t\t\t\t\t\t\t3468,\n\t\t\t\t\t\t\t-1198,\n\t\t\t\t\t\t\t3469,\n\t\t\t\t\t\t\t3470\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374048\",\n\t\t\t\t\t\t\"GEN\": \"Wiehl\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1151,\n\t\t\t\t\t\t\t3471,\n\t\t\t\t\t\t\t3472,\n\t\t\t\t\t\t\t3473,\n\t\t\t\t\t\t\t-2416,\n\t\t\t\t\t\t\t3474,\n\t\t\t\t\t\t\t3475,\n\t\t\t\t\t\t\t-2317,\n\t\t\t\t\t\t\t3476,\n\t\t\t\t\t\t\t-1671,\n\t\t\t\t\t\t\t3477,\n\t\t\t\t\t\t\t-1659,\n\t\t\t\t\t\t\t3478,\n\t\t\t\t\t\t\t3479\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05314000\",\n\t\t\t\t\t\t\"GEN\": \"Bonn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2456,\n\t\t\t\t\t\t\t3480,\n\t\t\t\t\t\t\t3481,\n\t\t\t\t\t\t\t3482,\n\t\t\t\t\t\t\t-2064,\n\t\t\t\t\t\t\t3483,\n\t\t\t\t\t\t\t-1318,\n\t\t\t\t\t\t\t3484,\n\t\t\t\t\t\t\t-1316,\n\t\t\t\t\t\t\t3485,\n\t\t\t\t\t\t\t-1314,\n\t\t\t\t\t\t\t3486,\n\t\t\t\t\t\t\t-1312,\n\t\t\t\t\t\t\t3487\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154032\",\n\t\t\t\t\t\t\"GEN\": \"Kevelaer\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3488,\n\t\t\t\t\t\t\t-585,\n\t\t\t\t\t\t\t3489,\n\t\t\t\t\t\t\t3490,\n\t\t\t\t\t\t\t-921,\n\t\t\t\t\t\t\t3491,\n\t\t\t\t\t\t\t3492,\n\t\t\t\t\t\t\t-939,\n\t\t\t\t\t\t\t3493,\n\t\t\t\t\t\t\t3494,\n\t\t\t\t\t\t\t-2301,\n\t\t\t\t\t\t\t3495,\n\t\t\t\t\t\t\t-2299,\n\t\t\t\t\t\t\t3496,\n\t\t\t\t\t\t\t3497,\n\t\t\t\t\t\t\t-2192,\n\t\t\t\t\t\t\t3498\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370040\",\n\t\t\t\t\t\t\"GEN\": \"Wegberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3499,\n\t\t\t\t\t\t\t-402,\n\t\t\t\t\t\t\t3500,\n\t\t\t\t\t\t\t-1686,\n\t\t\t\t\t\t\t-1739,\n\t\t\t\t\t\t\t3501,\n\t\t\t\t\t\t\t-3482,\n\t\t\t\t\t\t\t3502,\n\t\t\t\t\t\t\t-2454,\n\t\t\t\t\t\t\t3503,\n\t\t\t\t\t\t\t3504\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170040\",\n\t\t\t\t\t\t\"GEN\": \"Sonsbeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3505,\n\t\t\t\t\t\t\t-3276,\n\t\t\t\t\t\t\t3506,\n\t\t\t\t\t\t\t-3274,\n\t\t\t\t\t\t\t3507,\n\t\t\t\t\t\t\t-3328,\n\t\t\t\t\t\t\t3508,\n\t\t\t\t\t\t\t-763,\n\t\t\t\t\t\t\t3509,\n\t\t\t\t\t\t\t-1384,\n\t\t\t\t\t\t\t3510\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162004\",\n\t\t\t\t\t\t\"GEN\": \"Dormagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3511,\n\t\t\t\t\t\t\t3512,\n\t\t\t\t\t\t\t3513,\n\t\t\t\t\t\t\t3514,\n\t\t\t\t\t\t\t-2949,\n\t\t\t\t\t\t\t3515,\n\t\t\t\t\t\t\t-2814,\n\t\t\t\t\t\t\t3516,\n\t\t\t\t\t\t\t-572,\n\t\t\t\t\t\t\t3517,\n\t\t\t\t\t\t\t3518,\n\t\t\t\t\t\t\t3519\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166036\",\n\t\t\t\t\t\t\"GEN\": \"Willich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3520,\n\t\t\t\t\t\t\t3521,\n\t\t\t\t\t\t\t-3456,\n\t\t\t\t\t\t\t3522,\n\t\t\t\t\t\t\t-3454,\n\t\t\t\t\t\t\t3523,\n\t\t\t\t\t\t\t-3232,\n\t\t\t\t\t\t\t3524,\n\t\t\t\t\t\t\t-3393,\n\t\t\t\t\t\t\t3525,\n\t\t\t\t\t\t\t-2092,\n\t\t\t\t\t\t\t3526,\n\t\t\t\t\t\t\t-2090,\n\t\t\t\t\t\t\t3527,\n\t\t\t\t\t\t\t3528,\n\t\t\t\t\t\t\t3529,\n\t\t\t\t\t\t\t3530\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974008\",\n\t\t\t\t\t\t\"GEN\": \"Bad Sassendorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3531,\n\t\t\t\t\t\t\t3532,\n\t\t\t\t\t\t\t-2578,\n\t\t\t\t\t\t\t3533,\n\t\t\t\t\t\t\t-353,\n\t\t\t\t\t\t\t3534,\n\t\t\t\t\t\t\t-3129,\n\t\t\t\t\t\t\t3535,\n\t\t\t\t\t\t\t-3127,\n\t\t\t\t\t\t\t3536,\n\t\t\t\t\t\t\t-812,\n\t\t\t\t\t\t\t3537,\n\t\t\t\t\t\t\t-2797,\n\t\t\t\t\t\t\t3538,\n\t\t\t\t\t\t\t-2795,\n\t\t\t\t\t\t\t3539,\n\t\t\t\t\t\t\t-2581\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158032\",\n\t\t\t\t\t\t\"GEN\": \"Velbert\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3540,\n\t\t\t\t\t\t\t3541,\n\t\t\t\t\t\t\t-2596,\n\t\t\t\t\t\t\t3542,\n\t\t\t\t\t\t\t-2594,\n\t\t\t\t\t\t\t3543,\n\t\t\t\t\t\t\t3544,\n\t\t\t\t\t\t\t3545,\n\t\t\t\t\t\t\t3546,\n\t\t\t\t\t\t\t3547,\n\t\t\t\t\t\t\t-3512,\n\t\t\t\t\t\t\t3548,\n\t\t\t\t\t\t\t-2247,\n\t\t\t\t\t\t\t3549,\n\t\t\t\t\t\t\t-2954,\n\t\t\t\t\t\t\t3550,\n\t\t\t\t\t\t\t-2921\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05114000\",\n\t\t\t\t\t\t\"GEN\": \"Krefeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3551,\n\t\t\t\t\t\t\t-2945,\n\t\t\t\t\t\t\t3552,\n\t\t\t\t\t\t\t-2951,\n\t\t\t\t\t\t\t3553,\n\t\t\t\t\t\t\t-3514,\n\t\t\t\t\t\t\t3554,\n\t\t\t\t\t\t\t-3547,\n\t\t\t\t\t\t\t3555,\n\t\t\t\t\t\t\t3556,\n\t\t\t\t\t\t\t3557\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162022\",\n\t\t\t\t\t\t\"GEN\": \"Meerbusch\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1343,\n\t\t\t\t\t\t\t3558,\n\t\t\t\t\t\t\t-1341,\n\t\t\t\t\t\t\t3559,\n\t\t\t\t\t\t\t3560,\n\t\t\t\t\t\t\t3561,\n\t\t\t\t\t\t\t3562,\n\t\t\t\t\t\t\t3563,\n\t\t\t\t\t\t\t-3264,\n\t\t\t\t\t\t\t3564,\n\t\t\t\t\t\t\t-533,\n\t\t\t\t\t\t\t3565\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378028\",\n\t\t\t\t\t\t\"GEN\": \"Rösrath\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-516,\n\t\t\t\t\t\t\t3566,\n\t\t\t\t\t\t\t-2827,\n\t\t\t\t\t\t\t3567,\n\t\t\t\t\t\t\t-1135,\n\t\t\t\t\t\t\t3568,\n\t\t\t\t\t\t\t-1133,\n\t\t\t\t\t\t\t3569,\n\t\t\t\t\t\t\t3570,\n\t\t\t\t\t\t\t3571,\n\t\t\t\t\t\t\t3572,\n\t\t\t\t\t\t\t3573,\n\t\t\t\t\t\t\t-2877,\n\t\t\t\t\t\t\t3574\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558044\",\n\t\t\t\t\t\t\"GEN\": \"Senden\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-665,\n\t\t\t\t\t\t\t3575,\n\t\t\t\t\t\t\t3576,\n\t\t\t\t\t\t\t3577,\n\t\t\t\t\t\t\t3578,\n\t\t\t\t\t\t\t-783,\n\t\t\t\t\t\t\t3579,\n\t\t\t\t\t\t\t-2260,\n\t\t\t\t\t\t\t3580\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334002\",\n\t\t\t\t\t\t\"GEN\": \"Aachen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3581,\n\t\t\t\t\t\t\t3582,\n\t\t\t\t\t\t\t-1802,\n\t\t\t\t\t\t\t3583,\n\t\t\t\t\t\t\t-1495,\n\t\t\t\t\t\t\t3584,\n\t\t\t\t\t\t\t3585,\n\t\t\t\t\t\t\t3586,\n\t\t\t\t\t\t\t3587,\n\t\t\t\t\t\t\t3588\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762032\",\n\t\t\t\t\t\t\"GEN\": \"Steinheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1848,\n\t\t\t\t\t\t\t3589,\n\t\t\t\t\t\t\t3590,\n\t\t\t\t\t\t\t3591,\n\t\t\t\t\t\t\t-3586,\n\t\t\t\t\t\t\t3592,\n\t\t\t\t\t\t\t3593,\n\t\t\t\t\t\t\t3594,\n\t\t\t\t\t\t\t3595,\n\t\t\t\t\t\t\t3596,\n\t\t\t\t\t\t\t3597,\n\t\t\t\t\t\t\t-2210,\n\t\t\t\t\t\t\t3598,\n\t\t\t\t\t\t\t3599,\n\t\t\t\t\t\t\t-1964,\n\t\t\t\t\t\t\t3600,\n\t\t\t\t\t\t\t-1962,\n\t\t\t\t\t\t\t3601,\n\t\t\t\t\t\t\t-1850,\n\t\t\t\t\t\t\t3602\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766032\",\n\t\t\t\t\t\t\"GEN\": \"Horn-Bad Meinberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-929,\n\t\t\t\t\t\t\t3603,\n\t\t\t\t\t\t\t-2162,\n\t\t\t\t\t\t\t3604,\n\t\t\t\t\t\t\t-1423,\n\t\t\t\t\t\t\t3605,\n\t\t\t\t\t\t\t-1421,\n\t\t\t\t\t\t\t3606,\n\t\t\t\t\t\t\t3607,\n\t\t\t\t\t\t\t-2141,\n\t\t\t\t\t\t\t3608,\n\t\t\t\t\t\t\t3609,\n\t\t\t\t\t\t\t3610,\n\t\t\t\t\t\t\t3611,\n\t\t\t\t\t\t\t-1592,\n\t\t\t\t\t\t\t3612\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358036\",\n\t\t\t\t\t\t\"GEN\": \"Linnich\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3613,\n\t\t\t\t\t\t\t3614,\n\t\t\t\t\t\t\t-1989,\n\t\t\t\t\t\t\t3615,\n\t\t\t\t\t\t\t3616,\n\t\t\t\t\t\t\t3617,\n\t\t\t\t\t\t\t3618,\n\t\t\t\t\t\t\t3619,\n\t\t\t\t\t\t\t3620,\n\t\t\t\t\t\t\t3621,\n\t\t\t\t\t\t\t3622,\n\t\t\t\t\t\t\t3623,\n\t\t\t\t\t\t\t-852,\n\t\t\t\t\t\t\t3624,\n\t\t\t\t\t\t\t3625,\n\t\t\t\t\t\t\t3626\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378032\",\n\t\t\t\t\t\t\"GEN\": \"Wermelskirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1234,\n\t\t\t\t\t\t\t3627,\n\t\t\t\t\t\t\t-917,\n\t\t\t\t\t\t\t3628,\n\t\t\t\t\t\t\t3629,\n\t\t\t\t\t\t\t-1249,\n\t\t\t\t\t\t\t3630,\n\t\t\t\t\t\t\t3631,\n\t\t\t\t\t\t\t3632,\n\t\t\t\t\t\t\t-1205,\n\t\t\t\t\t\t\t3633,\n\t\t\t\t\t\t\t-1081,\n\t\t\t\t\t\t\t3634,\n\t\t\t\t\t\t\t-40,\n\t\t\t\t\t\t\t3635,\n\t\t\t\t\t\t\t3636\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962036\",\n\t\t\t\t\t\t\"GEN\": \"Meinerzhagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3637,\n\t\t\t\t\t\t\t-2169,\n\t\t\t\t\t\t\t3638,\n\t\t\t\t\t\t\t-635,\n\t\t\t\t\t\t\t3639,\n\t\t\t\t\t\t\t3640,\n\t\t\t\t\t\t\t3641,\n\t\t\t\t\t\t\t3642\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166004\",\n\t\t\t\t\t\t\"GEN\": \"Brüggen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2002,\n\t\t\t\t\t\t\t3643,\n\t\t\t\t\t\t\t-1747,\n\t\t\t\t\t\t\t3644,\n\t\t\t\t\t\t\t3645,\n\t\t\t\t\t\t\t3646,\n\t\t\t\t\t\t\t-3402,\n\t\t\t\t\t\t\t3647,\n\t\t\t\t\t\t\t-2387,\n\t\t\t\t\t\t\t3648,\n\t\t\t\t\t\t\t-2621,\n\t\t\t\t\t\t\t3649\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758012\",\n\t\t\t\t\t\t\"GEN\": \"Herford\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-177,\n\t\t\t\t\t\t\t3650\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154008\",\n\t\t\t\t\t\t\"GEN\": \"Emmerich am Rhein\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-389,\n\t\t\t\t\t\t\t3651,\n\t\t\t\t\t\t\t-387,\n\t\t\t\t\t\t\t3652,\n\t\t\t\t\t\t\t3653,\n\t\t\t\t\t\t\t3654,\n\t\t\t\t\t\t\t3655,\n\t\t\t\t\t\t\t-2404,\n\t\t\t\t\t\t\t3656,\n\t\t\t\t\t\t\t-391,\n\t\t\t\t\t\t\t3657\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566056\",\n\t\t\t\t\t\t\"GEN\": \"Mettingen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3658,\n\t\t\t\t\t\t\t3659,\n\t\t\t\t\t\t\t3660,\n\t\t\t\t\t\t\t3661,\n\t\t\t\t\t\t\t-2644,\n\t\t\t\t\t\t\t3662,\n\t\t\t\t\t\t\t3663,\n\t\t\t\t\t\t\t-1816,\n\t\t\t\t\t\t\t3664,\n\t\t\t\t\t\t\t-3107,\n\t\t\t\t\t\t\t3665,\n\t\t\t\t\t\t\t3666,\n\t\t\t\t\t\t\t-3125,\n\t\t\t\t\t\t\t3667,\n\t\t\t\t\t\t\t3668,\n\t\t\t\t\t\t\t3669,\n\t\t\t\t\t\t\t3670,\n\t\t\t\t\t\t\t3671,\n\t\t\t\t\t\t\t3672,\n\t\t\t\t\t\t\t3673\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570020\",\n\t\t\t\t\t\t\"GEN\": \"Ennigerloh\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-688,\n\t\t\t\t\t\t\t3674,\n\t\t\t\t\t\t\t-2028,\n\t\t\t\t\t\t\t3675,\n\t\t\t\t\t\t\t-3185,\n\t\t\t\t\t\t\t3676,\n\t\t\t\t\t\t\t-775,\n\t\t\t\t\t\t\t3677,\n\t\t\t\t\t\t\t3678,\n\t\t\t\t\t\t\t3679,\n\t\t\t\t\t\t\t3680,\n\t\t\t\t\t\t\t3681,\n\t\t\t\t\t\t\t3682,\n\t\t\t\t\t\t\t-690,\n\t\t\t\t\t\t\t3683\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334012\",\n\t\t\t\t\t\t\"GEN\": \"Eschweiler\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2323,\n\t\t\t\t\t\t\t3684,\n\t\t\t\t\t\t\t-2321,\n\t\t\t\t\t\t\t3685,\n\t\t\t\t\t\t\t3686,\n\t\t\t\t\t\t\t3687,\n\t\t\t\t\t\t\t3688,\n\t\t\t\t\t\t\t3689,\n\t\t\t\t\t\t\t3690,\n\t\t\t\t\t\t\t3691,\n\t\t\t\t\t\t\t-214,\n\t\t\t\t\t\t\t3692,\n\t\t\t\t\t\t\t-1673\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382048\",\n\t\t\t\t\t\t\"GEN\": \"Rheinbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1535,\n\t\t\t\t\t\t\t3693,\n\t\t\t\t\t\t\t-134,\n\t\t\t\t\t\t\t3694,\n\t\t\t\t\t\t\t3695,\n\t\t\t\t\t\t\t3696,\n\t\t\t\t\t\t\t3697,\n\t\t\t\t\t\t\t3698,\n\t\t\t\t\t\t\t3699,\n\t\t\t\t\t\t\t3700,\n\t\t\t\t\t\t\t3701,\n\t\t\t\t\t\t\t-2441,\n\t\t\t\t\t\t\t3702,\n\t\t\t\t\t\t\t3703\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774020\",\n\t\t\t\t\t\t\"GEN\": \"Delbrück\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2212,\n\t\t\t\t\t\t\t3704,\n\t\t\t\t\t\t\t3705,\n\t\t\t\t\t\t\t3706,\n\t\t\t\t\t\t\t3707,\n\t\t\t\t\t\t\t-117,\n\t\t\t\t\t\t\t3708,\n\t\t\t\t\t\t\t-1532,\n\t\t\t\t\t\t\t3709,\n\t\t\t\t\t\t\t3710\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774008\",\n\t\t\t\t\t\t\"GEN\": \"Bad Lippspringe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3711,\n\t\t\t\t\t\t\t3712,\n\t\t\t\t\t\t\t3713,\n\t\t\t\t\t\t\t3714,\n\t\t\t\t\t\t\t3715,\n\t\t\t\t\t\t\t-1165,\n\t\t\t\t\t\t\t3716,\n\t\t\t\t\t\t\t3717,\n\t\t\t\t\t\t\t-2933,\n\t\t\t\t\t\t\t3718,\n\t\t\t\t\t\t\t-983,\n\t\t\t\t\t\t\t3719,\n\t\t\t\t\t\t\t-981,\n\t\t\t\t\t\t\t3720,\n\t\t\t\t\t\t\t-2201,\n\t\t\t\t\t\t\t3721\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554064\",\n\t\t\t\t\t\t\"GEN\": \"Velen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3331,\n\t\t\t\t\t\t\t3722,\n\t\t\t\t\t\t\t-14,\n\t\t\t\t\t\t\t-1518,\n\t\t\t\t\t\t\t3723,\n\t\t\t\t\t\t\t-3170,\n\t\t\t\t\t\t\t3724,\n\t\t\t\t\t\t\t-3172,\n\t\t\t\t\t\t\t3725,\n\t\t\t\t\t\t\t-1395,\n\t\t\t\t\t\t\t3726,\n\t\t\t\t\t\t\t-1393,\n\t\t\t\t\t\t\t3727\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362008\",\n\t\t\t\t\t\t\"GEN\": \"Bergheim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1594,\n\t\t\t\t\t\t\t3728,\n\t\t\t\t\t\t\t-3611,\n\t\t\t\t\t\t\t3729,\n\t\t\t\t\t\t\t-2148,\n\t\t\t\t\t\t\t3730,\n\t\t\t\t\t\t\t-942,\n\t\t\t\t\t\t\t3731,\n\t\t\t\t\t\t\t-947,\n\t\t\t\t\t\t\t-1974,\n\t\t\t\t\t\t\t3732,\n\t\t\t\t\t\t\t-675,\n\t\t\t\t\t\t\t3733,\n\t\t\t\t\t\t\t-673,\n\t\t\t\t\t\t\t3734\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370012\",\n\t\t\t\t\t\t\"GEN\": \"Geilenkirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2133,\n\t\t\t\t\t\t\t3735,\n\t\t\t\t\t\t\t3736,\n\t\t\t\t\t\t\t-60,\n\t\t\t\t\t\t\t3737,\n\t\t\t\t\t\t\t3738,\n\t\t\t\t\t\t\t-2663,\n\t\t\t\t\t\t\t-3058,\n\t\t\t\t\t\t\t3739,\n\t\t\t\t\t\t\t-548,\n\t\t\t\t\t\t\t3740,\n\t\t\t\t\t\t\t-3228,\n\t\t\t\t\t\t\t3741,\n\t\t\t\t\t\t\t-3449,\n\t\t\t\t\t\t\t3742\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974036\",\n\t\t\t\t\t\t\"GEN\": \"Rüthen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3743,\n\t\t\t\t\t\t\t-1810,\n\t\t\t\t\t\t\t3744,\n\t\t\t\t\t\t\t-1808,\n\t\t\t\t\t\t\t3745,\n\t\t\t\t\t\t\t3746,\n\t\t\t\t\t\t\t-1640,\n\t\t\t\t\t\t\t3747,\n\t\t\t\t\t\t\t3748,\n\t\t\t\t\t\t\t3749,\n\t\t\t\t\t\t\t3750,\n\t\t\t\t\t\t\t3751,\n\t\t\t\t\t\t\t-3529,\n\t\t\t\t\t\t\t3752,\n\t\t\t\t\t\t\t-2088,\n\t\t\t\t\t\t\t3753,\n\t\t\t\t\t\t\t-467,\n\t\t\t\t\t\t\t3754,\n\t\t\t\t\t\t\t-465,\n\t\t\t\t\t\t\t3755,\n\t\t\t\t\t\t\t3756,\n\t\t\t\t\t\t\t3757\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974024\",\n\t\t\t\t\t\t\"GEN\": \"Lippetal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2881,\n\t\t\t\t\t\t\t3758,\n\t\t\t\t\t\t\t-2879,\n\t\t\t\t\t\t\t3759,\n\t\t\t\t\t\t\t-3573,\n\t\t\t\t\t\t\t3760,\n\t\t\t\t\t\t\t-801,\n\t\t\t\t\t\t\t3761,\n\t\t\t\t\t\t\t-810,\n\t\t\t\t\t\t\t-3188,\n\t\t\t\t\t\t\t3762,\n\t\t\t\t\t\t\t-2783,\n\t\t\t\t\t\t\t3763\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558032\",\n\t\t\t\t\t\t\"GEN\": \"Nottuln\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-335,\n\t\t\t\t\t\t\t3764,\n\t\t\t\t\t\t\t-333,\n\t\t\t\t\t\t\t3765,\n\t\t\t\t\t\t\t3766,\n\t\t\t\t\t\t\t-1991,\n\t\t\t\t\t\t\t3767,\n\t\t\t\t\t\t\t-3614,\n\t\t\t\t\t\t\t3768,\n\t\t\t\t\t\t\t-3626,\n\t\t\t\t\t\t\t3769,\n\t\t\t\t\t\t\t3770,\n\t\t\t\t\t\t\t-849,\n\t\t\t\t\t\t\t3771,\n\t\t\t\t\t\t\t-340,\n\t\t\t\t\t\t\t3772,\n\t\t\t\t\t\t\t-338,\n\t\t\t\t\t\t\t3773,\n\t\t\t\t\t\t\t3774\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05120000\",\n\t\t\t\t\t\t\"GEN\": \"Remscheid\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3775,\n\t\t\t\t\t\t\t-5,\n\t\t\t\t\t\t\t3776,\n\t\t\t\t\t\t\t-422,\n\t\t\t\t\t\t\t3777,\n\t\t\t\t\t\t\t-424,\n\t\t\t\t\t\t\t3778,\n\t\t\t\t\t\t\t-3473,\n\t\t\t\t\t\t\t3779,\n\t\t\t\t\t\t\t-1149,\n\t\t\t\t\t\t\t3780\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382024\",\n\t\t\t\t\t\t\"GEN\": \"Königswinter\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3781,\n\t\t\t\t\t\t\t3782,\n\t\t\t\t\t\t\t3783,\n\t\t\t\t\t\t\t-3289,\n\t\t\t\t\t\t\t3784,\n\t\t\t\t\t\t\t3785,\n\t\t\t\t\t\t\t-3286,\n\t\t\t\t\t\t\t3786,\n\t\t\t\t\t\t\t-2857,\n\t\t\t\t\t\t\t3787,\n\t\t\t\t\t\t\t3788\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566080\",\n\t\t\t\t\t\t\"GEN\": \"Saerbeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-628,\n\t\t\t\t\t\t\t3789,\n\t\t\t\t\t\t\t3790\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154040\",\n\t\t\t\t\t\t\"GEN\": \"Kranenburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-740,\n\t\t\t\t\t\t\t3791,\n\t\t\t\t\t\t\t-2241,\n\t\t\t\t\t\t\t-3064,\n\t\t\t\t\t\t\t3792,\n\t\t\t\t\t\t\t-3443,\n\t\t\t\t\t\t\t3793,\n\t\t\t\t\t\t\t-742,\n\t\t\t\t\t\t\t3794\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770036\",\n\t\t\t\t\t\t\"GEN\": \"Preußisch Oldendorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1712,\n\t\t\t\t\t\t\t3795,\n\t\t\t\t\t\t\t-1710,\n\t\t\t\t\t\t\t3796,\n\t\t\t\t\t\t\t-2284,\n\t\t\t\t\t\t\t3797,\n\t\t\t\t\t\t\t3798,\n\t\t\t\t\t\t\t3799,\n\t\t\t\t\t\t\t-3249,\n\t\t\t\t\t\t\t3800,\n\t\t\t\t\t\t\t-3247,\n\t\t\t\t\t\t\t3801,\n\t\t\t\t\t\t\t3802,\n\t\t\t\t\t\t\t3803\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170036\",\n\t\t\t\t\t\t\"GEN\": \"Schermbeck\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1566,\n\t\t\t\t\t\t\t3804,\n\t\t\t\t\t\t\t-2959,\n\t\t\t\t\t\t\t3805,\n\t\t\t\t\t\t\t3806,\n\t\t\t\t\t\t\t-2725,\n\t\t\t\t\t\t\t3807,\n\t\t\t\t\t\t\t-377,\n\t\t\t\t\t\t\t3808\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154060\",\n\t\t\t\t\t\t\"GEN\": \"Wachtendonk\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3102,\n\t\t\t\t\t\t\t3809,\n\t\t\t\t\t\t\t-2774,\n\t\t\t\t\t\t\t3810,\n\t\t\t\t\t\t\t-3244,\n\t\t\t\t\t\t\t3811,\n\t\t\t\t\t\t\t3812,\n\t\t\t\t\t\t\t-3431,\n\t\t\t\t\t\t\t3813,\n\t\t\t\t\t\t\t-3429,\n\t\t\t\t\t\t\t3814,\n\t\t\t\t\t\t\t3815,\n\t\t\t\t\t\t\t-874,\n\t\t\t\t\t\t\t3816\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554052\",\n\t\t\t\t\t\t\"GEN\": \"Schöppingen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2537,\n\t\t\t\t\t\t\t3817,\n\t\t\t\t\t\t\t3818,\n\t\t\t\t\t\t\t3819,\n\t\t\t\t\t\t\t-2458,\n\t\t\t\t\t\t\t3820,\n\t\t\t\t\t\t\t-1320,\n\t\t\t\t\t\t\t3821,\n\t\t\t\t\t\t\t3822,\n\t\t\t\t\t\t\t-626,\n\t\t\t\t\t\t\t3823,\n\t\t\t\t\t\t\t-2539,\n\t\t\t\t\t\t\t3824\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154016\",\n\t\t\t\t\t\t\"GEN\": \"Goch\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1339,\n\t\t\t\t\t\t\t3825,\n\t\t\t\t\t\t\t-1301,\n\t\t\t\t\t\t\t-1120,\n\t\t\t\t\t\t\t3826,\n\t\t\t\t\t\t\t3827,\n\t\t\t\t\t\t\t3828,\n\t\t\t\t\t\t\t-3562,\n\t\t\t\t\t\t\t3829,\n\t\t\t\t\t\t\t3830\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382028\",\n\t\t\t\t\t\t\"GEN\": \"Lohmar\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-458,\n\t\t\t\t\t\t\t3831,\n\t\t\t\t\t\t\t-1828,\n\t\t\t\t\t\t\t3832,\n\t\t\t\t\t\t\t3833,\n\t\t\t\t\t\t\t-2999,\n\t\t\t\t\t\t\t3834,\n\t\t\t\t\t\t\t-2997,\n\t\t\t\t\t\t\t3835\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958020\",\n\t\t\t\t\t\t\"GEN\": \"Hallenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3836,\n\t\t\t\t\t\t\t3837,\n\t\t\t\t\t\t\t3838,\n\t\t\t\t\t\t\t3839,\n\t\t\t\t\t\t\t-1117,\n\t\t\t\t\t\t\t3840,\n\t\t\t\t\t\t\t-1153,\n\t\t\t\t\t\t\t3841,\n\t\t\t\t\t\t\t-2492,\n\t\t\t\t\t\t\t3842\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382068\",\n\t\t\t\t\t\t\"GEN\": \"Troisdorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3695,\n\t\t\t\t\t\t\t3843,\n\t\t\t\t\t\t\t-132,\n\t\t\t\t\t\t\t3844,\n\t\t\t\t\t\t\t-130,\n\t\t\t\t\t\t\t3845,\n\t\t\t\t\t\t\t3846,\n\t\t\t\t\t\t\t-435,\n\t\t\t\t\t\t\t3847,\n\t\t\t\t\t\t\t-433,\n\t\t\t\t\t\t\t3848,\n\t\t\t\t\t\t\t-55,\n\t\t\t\t\t\t\t3849,\n\t\t\t\t\t\t\t-64,\n\t\t\t\t\t\t\t3850,\n\t\t\t\t\t\t\t-2129,\n\t\t\t\t\t\t\t3851,\n\t\t\t\t\t\t\t3852,\n\t\t\t\t\t\t\t3853,\n\t\t\t\t\t\t\t3854,\n\t\t\t\t\t\t\t3855,\n\t\t\t\t\t\t\t3856,\n\t\t\t\t\t\t\t-3697,\n\t\t\t\t\t\t\t3857\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774036\",\n\t\t\t\t\t\t\"GEN\": \"Salzkotten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1844,\n\t\t\t\t\t\t\t3858,\n\t\t\t\t\t\t\t3859,\n\t\t\t\t\t\t\t-607,\n\t\t\t\t\t\t\t3860,\n\t\t\t\t\t\t\t-605,\n\t\t\t\t\t\t\t3861,\n\t\t\t\t\t\t\t-829,\n\t\t\t\t\t\t\t3862,\n\t\t\t\t\t\t\t-3582,\n\t\t\t\t\t\t\t3863,\n\t\t\t\t\t\t\t-3588,\n\t\t\t\t\t\t\t3864,\n\t\t\t\t\t\t\t-3591,\n\t\t\t\t\t\t\t3865,\n\t\t\t\t\t\t\t-1846,\n\t\t\t\t\t\t\t3866\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766060\",\n\t\t\t\t\t\t\"GEN\": \"Schieder-Schwalenberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2405,\n\t\t\t\t\t\t\t-3656,\n\t\t\t\t\t\t\t3867,\n\t\t\t\t\t\t\t-3654,\n\t\t\t\t\t\t\t3868,\n\t\t\t\t\t\t\t-385,\n\t\t\t\t\t\t\t3869,\n\t\t\t\t\t\t\t3870,\n\t\t\t\t\t\t\t-3783,\n\t\t\t\t\t\t\t3871,\n\t\t\t\t\t\t\t-2627,\n\t\t\t\t\t\t\t3872\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566028\",\n\t\t\t\t\t\t\"GEN\": \"Ibbenbüren\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3873,\n\t\t\t\t\t\t\t3874,\n\t\t\t\t\t\t\t-2508,\n\t\t\t\t\t\t\t3875,\n\t\t\t\t\t\t\t-2506,\n\t\t\t\t\t\t\t3876,\n\t\t\t\t\t\t\t-1618,\n\t\t\t\t\t\t\t3877,\n\t\t\t\t\t\t\t-1616,\n\t\t\t\t\t\t\t3878,\n\t\t\t\t\t\t\t-2839,\n\t\t\t\t\t\t\t3879,\n\t\t\t\t\t\t\t3880,\n\t\t\t\t\t\t\t-3646,\n\t\t\t\t\t\t\t3881,\n\t\t\t\t\t\t\t-1745\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766008\",\n\t\t\t\t\t\t\"GEN\": \"Bad Salzuflen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3882,\n\t\t\t\t\t\t\t3883,\n\t\t\t\t\t\t\t-3154,\n\t\t\t\t\t\t\t3884,\n\t\t\t\t\t\t\t3885,\n\t\t\t\t\t\t\t-3120,\n\t\t\t\t\t\t\t3886,\n\t\t\t\t\t\t\t-3318,\n\t\t\t\t\t\t\t3887,\n\t\t\t\t\t\t\t3888,\n\t\t\t\t\t\t\t-2816,\n\t\t\t\t\t\t\t3889,\n\t\t\t\t\t\t\t-514,\n\t\t\t\t\t\t\t3890,\n\t\t\t\t\t\t\t-512,\n\t\t\t\t\t\t\t3891\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570016\",\n\t\t\t\t\t\t\"GEN\": \"Drensteinfurt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3065,\n\t\t\t\t\t\t\t3892,\n\t\t\t\t\t\t\t-65,\n\t\t\t\t\t\t\t3893,\n\t\t\t\t\t\t\t-72,\n\t\t\t\t\t\t\t3894,\n\t\t\t\t\t\t\t3895,\n\t\t\t\t\t\t\t-3870,\n\t\t\t\t\t\t\t-384\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566088\",\n\t\t\t\t\t\t\"GEN\": \"Tecklenburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3596,\n\t\t\t\t\t\t\t3896,\n\t\t\t\t\t\t\t-3594,\n\t\t\t\t\t\t\t3897,\n\t\t\t\t\t\t\t-1493,\n\t\t\t\t\t\t\t3898,\n\t\t\t\t\t\t\t-1491,\n\t\t\t\t\t\t\t-2683,\n\t\t\t\t\t\t\t3899,\n\t\t\t\t\t\t\t-120,\n\t\t\t\t\t\t\t3900,\n\t\t\t\t\t\t\t3901,\n\t\t\t\t\t\t\t-3707,\n\t\t\t\t\t\t\t3902\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774004\",\n\t\t\t\t\t\t\"GEN\": \"Altenbeken\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2186,\n\t\t\t\t\t\t\t3903,\n\t\t\t\t\t\t\t-2315,\n\t\t\t\t\t\t\t3904,\n\t\t\t\t\t\t\t-3659,\n\t\t\t\t\t\t\t3905,\n\t\t\t\t\t\t\t3906,\n\t\t\t\t\t\t\t-3672,\n\t\t\t\t\t\t\t3907,\n\t\t\t\t\t\t\t-3670,\n\t\t\t\t\t\t\t3908,\n\t\t\t\t\t\t\t-2421,\n\t\t\t\t\t\t\t3909,\n\t\t\t\t\t\t\t3910,\n\t\t\t\t\t\t\t-1123,\n\t\t\t\t\t\t\t3911,\n\t\t\t\t\t\t\t-252,\n\t\t\t\t\t\t\t3912\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570052\",\n\t\t\t\t\t\t\"GEN\": \"Warendorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3619,\n\t\t\t\t\t\t\t3913,\n\t\t\t\t\t\t\t-703,\n\t\t\t\t\t\t\t-528,\n\t\t\t\t\t\t\t3914,\n\t\t\t\t\t\t\t-526,\n\t\t\t\t\t\t\t3915,\n\t\t\t\t\t\t\t3916,\n\t\t\t\t\t\t\t3917,\n\t\t\t\t\t\t\t3918\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378020\",\n\t\t\t\t\t\t\"GEN\": \"Odenthal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3919,\n\t\t\t\t\t\t\t-201,\n\t\t\t\t\t\t\t3920,\n\t\t\t\t\t\t\t-199,\n\t\t\t\t\t\t\t3921,\n\t\t\t\t\t\t\t-216,\n\t\t\t\t\t\t\t3922,\n\t\t\t\t\t\t\t-3692,\n\t\t\t\t\t\t\t3923,\n\t\t\t\t\t\t\t-3690,\n\t\t\t\t\t\t\t3924,\n\t\t\t\t\t\t\t-3688,\n\t\t\t\t\t\t\t3925,\n\t\t\t\t\t\t\t-2264,\n\t\t\t\t\t\t\t3926,\n\t\t\t\t\t\t\t-2270,\n\t\t\t\t\t\t\t3927,\n\t\t\t\t\t\t\t-2906,\n\t\t\t\t\t\t\t3928,\n\t\t\t\t\t\t\t-240,\n\t\t\t\t\t\t\t3929\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366016\",\n\t\t\t\t\t\t\"GEN\": \"Euskirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-659,\n\t\t\t\t\t\t\t3930,\n\t\t\t\t\t\t\t-1431,\n\t\t\t\t\t\t\t3931,\n\t\t\t\t\t\t\t-3681,\n\t\t\t\t\t\t\t3932,\n\t\t\t\t\t\t\t-3577,\n\t\t\t\t\t\t\t3933,\n\t\t\t\t\t\t\t3934,\n\t\t\t\t\t\t\t-662,\n\t\t\t\t\t\t\t3935,\n\t\t\t\t\t\t\t3936\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334036\",\n\t\t\t\t\t\t\"GEN\": \"Würselen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3937,\n\t\t\t\t\t\t\t-2803,\n\t\t\t\t\t\t\t3938,\n\t\t\t\t\t\t\t-3282,\n\t\t\t\t\t\t\t3939,\n\t\t\t\t\t\t\t-2587,\n\t\t\t\t\t\t\t3940,\n\t\t\t\t\t\t\t-3208,\n\t\t\t\t\t\t\t3941,\n\t\t\t\t\t\t\t-3206,\n\t\t\t\t\t\t\t3942,\n\t\t\t\t\t\t\t3943\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05119000\",\n\t\t\t\t\t\t\"GEN\": \"Oberhausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1487,\n\t\t\t\t\t\t\t3944,\n\t\t\t\t\t\t\t-1788,\n\t\t\t\t\t\t\t-2992,\n\t\t\t\t\t\t\t3945,\n\t\t\t\t\t\t\t-2990,\n\t\t\t\t\t\t\t3946,\n\t\t\t\t\t\t\t-2988,\n\t\t\t\t\t\t\t3947,\n\t\t\t\t\t\t\t-2986,\n\t\t\t\t\t\t\t3948,\n\t\t\t\t\t\t\t3949,\n\t\t\t\t\t\t\t3950,\n\t\t\t\t\t\t\t-2670,\n\t\t\t\t\t\t\t3951,\n\t\t\t\t\t\t\t-2668,\n\t\t\t\t\t\t\t-1489,\n\t\t\t\t\t\t\t3952\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762040\",\n\t\t\t\t\t\t\"GEN\": \"Willebadessen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3950,\n\t\t\t\t\t\t\t3953,\n\t\t\t\t\t\t\t-2984,\n\t\t\t\t\t\t\t3954,\n\t\t\t\t\t\t\t-2051,\n\t\t\t\t\t\t\t3955,\n\t\t\t\t\t\t\t-2675,\n\t\t\t\t\t\t\t3956,\n\t\t\t\t\t\t\t3957,\n\t\t\t\t\t\t\t-2672,\n\t\t\t\t\t\t\t3958\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762036\",\n\t\t\t\t\t\t\"GEN\": \"Warburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2938,\n\t\t\t\t\t\t\t3959,\n\t\t\t\t\t\t\t-3398,\n\t\t\t\t\t\t\t3960,\n\t\t\t\t\t\t\t-3396,\n\t\t\t\t\t\t\t3961,\n\t\t\t\t\t\t\t-1224,\n\t\t\t\t\t\t\t3962,\n\t\t\t\t\t\t\t-1222,\n\t\t\t\t\t\t\t3963,\n\t\t\t\t\t\t\t-2896,\n\t\t\t\t\t\t\t3964,\n\t\t\t\t\t\t\t3965,\n\t\t\t\t\t\t\t-833,\n\t\t\t\t\t\t\t3966,\n\t\t\t\t\t\t\t-3021,\n\t\t\t\t\t\t\t3967,\n\t\t\t\t\t\t\t3968,\n\t\t\t\t\t\t\t-3018,\n\t\t\t\t\t\t\t3969\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958004\",\n\t\t\t\t\t\t\"GEN\": \"Arnsberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2400,\n\t\t\t\t\t\t\t3970,\n\t\t\t\t\t\t\t-2392,\n\t\t\t\t\t\t\t3971,\n\t\t\t\t\t\t\t3972,\n\t\t\t\t\t\t\t3973,\n\t\t\t\t\t\t\t3974,\n\t\t\t\t\t\t\t-3134,\n\t\t\t\t\t\t\t3975\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758032\",\n\t\t\t\t\t\t\"GEN\": \"Spenge\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3976,\n\t\t\t\t\t\t\t-1556,\n\t\t\t\t\t\t\t3977,\n\t\t\t\t\t\t\t-1554,\n\t\t\t\t\t\t\t3978,\n\t\t\t\t\t\t\t-328,\n\t\t\t\t\t\t\t3979,\n\t\t\t\t\t\t\t-326,\n\t\t\t\t\t\t\t3980,\n\t\t\t\t\t\t\t-1905\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954024\",\n\t\t\t\t\t\t\"GEN\": \"Schwelm\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-92,\n\t\t\t\t\t\t\t3981,\n\t\t\t\t\t\t\t-1874,\n\t\t\t\t\t\t\t3982,\n\t\t\t\t\t\t\t3983,\n\t\t\t\t\t\t\t3984,\n\t\t\t\t\t\t\t-1901,\n\t\t\t\t\t\t\t3985,\n\t\t\t\t\t\t\t3986,\n\t\t\t\t\t\t\t-2574,\n\t\t\t\t\t\t\t-1032,\n\t\t\t\t\t\t\t3987,\n\t\t\t\t\t\t\t-1030,\n\t\t\t\t\t\t\t3988\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954036\",\n\t\t\t\t\t\t\"GEN\": \"Witten\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t3989,\n\t\t\t\t\t\t\t3990,\n\t\t\t\t\t\t\t-1871,\n\t\t\t\t\t\t\t3991,\n\t\t\t\t\t\t\t-3040,\n\t\t\t\t\t\t\t3992,\n\t\t\t\t\t\t\t-2739,\n\t\t\t\t\t\t\t3993,\n\t\t\t\t\t\t\t3994,\n\t\t\t\t\t\t\t-2744,\n\t\t\t\t\t\t\t-1902,\n\t\t\t\t\t\t\t-3985,\n\t\t\t\t\t\t\t3995\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954032\",\n\t\t\t\t\t\t\"GEN\": \"Wetter (Ruhr)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-543,\n\t\t\t\t\t\t\t3996,\n\t\t\t\t\t\t\t-541,\n\t\t\t\t\t\t\t3997,\n\t\t\t\t\t\t\t-3917,\n\t\t\t\t\t\t\t3998,\n\t\t\t\t\t\t\t-3260,\n\t\t\t\t\t\t\t3999,\n\t\t\t\t\t\t\t4000,\n\t\t\t\t\t\t\t-415,\n\t\t\t\t\t\t\t4001,\n\t\t\t\t\t\t\t4002,\n\t\t\t\t\t\t\t4003\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05316000\",\n\t\t\t\t\t\t\"GEN\": \"Leverkusen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-3192,\n\t\t\t\t\t\t\t4004,\n\t\t\t\t\t\t\t4005,\n\t\t\t\t\t\t\t-3714,\n\t\t\t\t\t\t\t4006,\n\t\t\t\t\t\t\t-3712,\n\t\t\t\t\t\t\t4007,\n\t\t\t\t\t\t\t4008,\n\t\t\t\t\t\t\t-2731,\n\t\t\t\t\t\t\t4009\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554016\",\n\t\t\t\t\t\t\"GEN\": \"Gescher\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2863,\n\t\t\t\t\t\t\t4010,\n\t\t\t\t\t\t\t-3298,\n\t\t\t\t\t\t\t4011,\n\t\t\t\t\t\t\t4012,\n\t\t\t\t\t\t\t4013,\n\t\t\t\t\t\t\t4014,\n\t\t\t\t\t\t\t4015,\n\t\t\t\t\t\t\t4016,\n\t\t\t\t\t\t\t4017,\n\t\t\t\t\t\t\t4018,\n\t\t\t\t\t\t\t4019\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566064\",\n\t\t\t\t\t\t\"GEN\": \"Nordwalde\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t4020,\n\t\t\t\t\t\t\t-3699,\n\t\t\t\t\t\t\t4021,\n\t\t\t\t\t\t\t-3856,\n\t\t\t\t\t\t\t4022,\n\t\t\t\t\t\t\t-3854,\n\t\t\t\t\t\t\t4023,\n\t\t\t\t\t\t\t-2138,\n\t\t\t\t\t\t\t4024,\n\t\t\t\t\t\t\t4025,\n\t\t\t\t\t\t\t4026,\n\t\t\t\t\t\t\t4027,\n\t\t\t\t\t\t\t-3446,\n\t\t\t\t\t\t\t4028,\n\t\t\t\t\t\t\t-3458,\n\t\t\t\t\t\t\t4029,\n\t\t\t\t\t\t\t-3521,\n\t\t\t\t\t\t\t4030,\n\t\t\t\t\t\t\t-3750,\n\t\t\t\t\t\t\t4031,\n\t\t\t\t\t\t\t4032,\n\t\t\t\t\t\t\t4033,\n\t\t\t\t\t\t\t-1637,\n\t\t\t\t\t\t\t4034,\n\t\t\t\t\t\t\t-1635,\n\t\t\t\t\t\t\t4035,\n\t\t\t\t\t\t\t-2356,\n\t\t\t\t\t\t\t4036\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974028\",\n\t\t\t\t\t\t\"GEN\": \"Lippstadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-2281,\n\t\t\t\t\t\t\t4037,\n\t\t\t\t\t\t\t-155,\n\t\t\t\t\t\t\t4038,\n\t\t\t\t\t\t\t-153,\n\t\t\t\t\t\t\t4039,\n\t\t\t\t\t\t\t-2805,\n\t\t\t\t\t\t\t4040,\n\t\t\t\t\t\t\t-3944,\n\t\t\t\t\t\t\t4041,\n\t\t\t\t\t\t\t4042,\n\t\t\t\t\t\t\t4043,\n\t\t\t\t\t\t\t4044,\n\t\t\t\t\t\t\t4045\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05512000\",\n\t\t\t\t\t\t\"GEN\": \"Bottrop\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t4046,\n\t\t\t\t\t\t\t4047,\n\t\t\t\t\t\t\t-4014,\n\t\t\t\t\t\t\t4048,\n\t\t\t\t\t\t\t-3295,\n\t\t\t\t\t\t\t4049,\n\t\t\t\t\t\t\t4050,\n\t\t\t\t\t\t\t-521,\n\t\t\t\t\t\t\t4051,\n\t\t\t\t\t\t\t-2873,\n\t\t\t\t\t\t\t4052,\n\t\t\t\t\t\t\t4053,\n\t\t\t\t\t\t\t-2779,\n\t\t\t\t\t\t\t4054,\n\t\t\t\t\t\t\t-2552,\n\t\t\t\t\t\t\t4055,\n\t\t\t\t\t\t\t-4017\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566004\",\n\t\t\t\t\t\t\"GEN\": \"Altenberge\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-319,\n\t\t\t\t\t\t\t4056,\n\t\t\t\t\t\t\t-3073,\n\t\t\t\t\t\t\t4057,\n\t\t\t\t\t\t\t-3343,\n\t\t\t\t\t\t\t4058,\n\t\t\t\t\t\t\t4059,\n\t\t\t\t\t\t\t4060,\n\t\t\t\t\t\t\t-2755,\n\t\t\t\t\t\t\t4061,\n\t\t\t\t\t\t\t-2768,\n\t\t\t\t\t\t\t4062,\n\t\t\t\t\t\t\t-779,\n\t\t\t\t\t\t\t4063,\n\t\t\t\t\t\t\t-3182,\n\t\t\t\t\t\t\t4064\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358016\",\n\t\t\t\t\t\t\"GEN\": \"Hürtgenwald\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t4065,\n\t\t\t\t\t\t\t-371,\n\t\t\t\t\t\t\t4066,\n\t\t\t\t\t\t\t-1750,\n\t\t\t\t\t\t\t4067,\n\t\t\t\t\t\t\t4068,\n\t\t\t\t\t\t\t-1998,\n\t\t\t\t\t\t\t4069,\n\t\t\t\t\t\t\t4070,\n\t\t\t\t\t\t\t-3436,\n\t\t\t\t\t\t\t4071\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770004\",\n\t\t\t\t\t\t\"GEN\": \"Bad Oeynhausen\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"crs\": {\n\t\t\"type\": \"name\",\n\t\t\"properties\": {\n\t\t\t\"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/data/nrw.topo.json\n// module id = 38\n// module chunks = 0","module.exports = \"ags,t,m,f,plz,ags,pwi,pwa,pwn,pan,paa,ai,aa,an,wi,wa,wn,pai,pwi_h,pwa_h,pwn_h,search\\n05111000,612178,295896,316282,40213,05111000,8.9,5.8,3.1,4.0,7.8,72031,47574,24457,54669,35525,19144,11.8,\\\"6.7,8.5,8.6,8.9,9.1,9.2,9.3,9.3,9.4,9.4,9.2,9.1,8.9\\\",\\\"5.0,5.9,5.9,6.0,6.0,6.0,6.1,6.0,6.0,5.9,6.1,6.0,5.8\\\",\\\"1.7,2.6,2.7,2.9,3.1,3.2,3.3,3.3,3.4,3.4,3.1,3.1,3.1\\\",\\\"düsseldorf, stadt\\\"\\n05112000,491231,241417,249814,47051,05112000,8.5,6.3,2.2,1.9,5.5,36694,27259,9435,41813,31151,10662,7.5,\\\"6.7,7.9,8.1,8.3,8.6,8.7,8.8,8.8,8.9,8.9,8.7,8.8,8.5\\\",\\\"5.7,6.3,6.3,6.5,6.5,6.5,6.6,6.5,6.5,6.5,6.6,6.7,6.3\\\",\\\"1.0,1.6,1.7,1.8,2.0,2.2,2.3,2.3,2.4,2.4,2.1,2.2,2.2\\\",\\\"duisburg, stadt\\\"\\n05113000,582624,282565,300059,45127,05113000,8.7,6.4,2.3,2.8,7.6,60185,44104,16081,50674,37211,13463,10.3,\\\"6.5,7.8,7.8,8.1,8.3,8.5,8.8,8.9,9.0,9.1,8.9,9.0,8.7\\\",\\\"5.4,6.0,6.0,6.2,6.2,6.3,6.4,6.5,6.5,6.5,6.7,6.7,6.4\\\",\\\"1.1,1.8,1.8,2.0,2.1,2.3,2.4,2.5,2.6,2.6,2.2,2.3,2.3\\\",\\\"essen, stadt\\\"\\n05114000,225144,109487,115657,47803,05114000,9.7,6.8,2.9,2.8,6.3,20602,14291,6311,21928,15373,6555,9.2,\\\"6.9,8.4,8.4,8.8,9.1,9.4,9.5,9.6,9.6,10.1,9.9,9.9,9.7\\\",\\\"5.5,6.3,6.3,6.4,6.6,6.7,6.7,6.7,6.6,6.9,7.1,7.0,6.8\\\",\\\"1.3,2.0,2.2,2.4,2.5,2.7,2.7,2.8,2.9,3.2,2.8,2.9,2.9\\\",\\\"krefeld, stadt\\\"\\n05116000,259996,127512,132484,41061,05116000,10.3,7.1,3.2,3.2,7.6,28082,19638,8444,26669,18472,8197,10.8,\\\"7.4,9.0,9.0,9.4,9.7,9.9,10.1,10.2,10.5,10.5,10.5,10.4,10.3\\\",\\\"6.0,6.9,6.8,7.0,7.1,7.1,7.2,7.2,7.3,7.2,7.5,7.3,7.1\\\",\\\"1.4,2.1,2.3,2.4,2.6,2.9,2.9,3.0,3.3,3.3,3.0,3.1,3.2\\\",\\\"mönchengladbach, stadt\\\"\\n05117000,169278,81461,87817,45468,05117000,8.7,6.2,2.5,2.5,6.7,15589,11307,4282,14694,10465,4229,9.2,\\\"6.9,8.2,8.3,8.6,8.8,9.0,9.3,9.4,9.3,9.3,9.1,9.0,8.7\\\",\\\"5.6,6.3,6.3,6.5,6.5,6.5,6.7,6.7,6.6,6.5,6.6,6.5,6.2\\\",\\\"1.2,1.9,1.9,2.1,2.3,2.5,2.6,2.7,2.8,2.8,2.5,2.5,2.5\\\",\\\"mülheim an der ruhr, stadt\\\"\\n05119000,210934,103284,107650,46045,05119000,9.0,6.7,2.2,2.4,7.1,20051,15028,5023,18889,14196,4693,9.5,\\\"6.9,8.2,8.2,8.5,8.7,8.9,9.2,9.3,9.4,9.3,9.3,9.3,9.0\\\",\\\"5.9,6.5,6.5,6.6,6.6,6.7,6.9,6.9,6.9,6.9,7.1,7.1,6.7\\\",\\\"1.1,1.6,1.7,1.9,2.1,2.2,2.3,2.4,2.5,2.5,2.2,2.2,2.2\\\",\\\"oberhausen, stadt\\\"\\n05120000,109499,53725,55774,42853,05120000,10.5,6.9,3.5,3.6,7.2,11750,7852,3898,11448,7570,3878,10.7,\\\"8.3,9.8,9.7,10.3,10.6,10.8,10.4,10.9,11.0,10.8,10.6,10.7,10.5\\\",\\\"6.3,7.0,6.9,7.1,7.2,7.3,7.1,7.4,7.3,7.0,7.1,7.1,6.9\\\",\\\"2.0,2.8,2.9,3.2,3.4,3.6,3.4,3.4,3.8,3.8,3.5,3.6,3.5\\\",\\\"remscheid, stadt\\\"\\n05122000,158726,76948,81778,42651,05122000,9.8,6.4,3.4,3.1,5.7,13891,9044,4847,15546,10121,5425,8.8,\\\"7.5,9.0,8.9,9.3,9.7,10.0,9.6,9.8,10.0,10.1,10.0,10.2,9.8\\\",\\\"5.8,6.5,6.3,6.5,6.6,6.7,6.5,6.6,6.5,6.5,6.7,6.8,6.4\\\",\\\"1.7,2.5,2.6,2.8,3.0,3.3,3.1,3.2,3.4,3.6,3.3,3.4,3.4\\\",\\\"solingen, klingenstadt\\\"\\n05124000,350046,170822,179224,42275,05124000,9.5,6.6,2.9,2.8,6.6,32897,22974,9923,33360,23110,10250,9.4,\\\"7.3,8.6,8.7,9.1,9.4,9.6,9.7,9.7,9.8,10.0,9.8,9.8,9.5\\\",\\\"5.7,6.3,6.4,6.5,6.6,6.7,6.8,6.7,6.6,6.7,7.0,6.9,6.6\\\",\\\"1.6,2.3,2.4,2.6,2.8,3.0,2.9,3.1,3.2,3.2,2.8,2.9,2.9\\\",\\\"wuppertal, stadt\\\"\\n05154004,13033,6701,6332,47551,05154004,9.9,6.7,3.2,2.3,5.4,1001,700,301,1292,870,422,7.7,\\\"7.2,9.1,9.3,9.6,10.2,10.1,10.2,10.0,10.1,10.7,10.4,10.3,9.9\\\",\\\"5.9,7.0,7.0,7.2,7.5,7.3,7.2,7.0,7.1,7.4,7.3,7.1,6.7\\\",\\\"1.3,2.1,2.3,2.4,2.7,2.9,3.1,3.1,3.0,3.3,3.1,3.2,3.2\\\",bedburg-hau\\n05154008,30968,15705,15263,46446,05154008,9.7,7.3,2.5,2.4,7.3,2999,2271,728,3011,2250,761,9.7,\\\"8.8,9.9,10.2,10.7,10.8,10.8,10.8,10.5,10.6,10.4,10.4,10.5,9.7\\\",\\\"7.4,7.9,8.1,8.3,8.3,8.1,8.0,7.8,7.8,7.6,8.0,8.0,7.3\\\",\\\"1.4,2.0,2.1,2.4,2.6,2.7,2.8,2.7,2.7,2.8,2.4,2.5,2.5\\\",\\\"emmerich am rhein, stadt\\\"\\n05154012,33841,17037,16804,47608,05154012,11.1,7.8,3.3,4.1,10.5,4960,3569,1391,3770,2648,1122,14.7,\\\"9.2,10.7,10.7,11.6,11.6,12.0,12.3,12.3,12.3,12.5,12.3,12.1,11.1\\\",\\\"7.6,8.4,8.2,8.7,8.5,8.7,8.7,8.7,8.7,8.7,9.0,8.6,7.8\\\",\\\"1.5,2.3,2.5,3.0,3.1,3.3,3.6,3.6,3.6,3.8,3.3,3.4,3.3\\\",\\\"geldern, stadt\\\"\\n05154016,33889,16990,16899,47574,05154016,11.1,7.7,3.3,3.0,7.0,3422,2389,1033,3745,2626,1119,10.1,\\\"8.7,10.0,10.1,10.4,10.8,11.1,11.4,11.4,11.3,11.7,11.8,11.7,11.1\\\",\\\"7.3,8.0,8.0,8.0,8.2,8.3,8.4,8.3,8.2,8.3,8.6,8.4,7.7\\\",\\\"1.4,2.0,2.2,2.4,2.6,2.8,3.0,3.1,3.1,3.4,3.2,3.3,3.3\\\",\\\"goch, stadt\\\"\\n05154020,12037,5896,6141,47661,05154020,11.0,7.9,3.1,2.0,5.9,960,715,245,1321,953,368,8.0,\\\"8.4,10.2,10.0,10.6,10.8,11.1,11.4,11.5,11.7,11.4,11.3,11.4,11.0\\\",\\\"7.0,8.1,8.0,8.2,8.3,8.4,8.5,8.5,8.4,8.2,8.6,8.6,7.9\\\",\\\"1.3,2.1,2.0,2.4,2.5,2.6,2.8,3.0,3.3,3.2,2.7,2.8,3.1\\\",issum\\n05154024,13854,6884,6970,47546,05154024,12.8,9.3,3.5,4.0,9.0,1793,1243,550,1775,1291,484,12.9,\\\"9.5,10.9,11.0,11.3,12.0,12.0,12.8,12.8,13.2,13.2,13.2,13.4,12.8\\\",\\\"8.0,8.7,8.6,8.6,9.1,9.0,9.6,9.3,9.4,9.3,9.8,10.0,9.3\\\",\\\"1.6,2.2,2.3,2.7,2.9,3.0,3.2,3.5,3.8,3.9,3.4,3.4,3.5\\\",\\\"kalkar, stadt\\\"\\n05154028,13262,6670,6592,47647,05154028,10.1,7.2,2.9,2.2,5.8,1069,774,295,1338,957,381,8.1,\\\"8.3,9.9,10.0,10.3,10.7,11.0,11.2,11.8,11.3,11.3,10.9,11.3,10.1\\\",\\\"7.0,7.7,7.8,7.9,8.1,8.3,8.4,8.5,8.2,8.3,8.0,8.3,7.2\\\",\\\"1.4,2.1,2.3,2.4,2.6,2.7,2.8,3.2,3.1,3.0,3.0,3.0,2.9\\\",kerken\\n05154032,28311,13925,14386,47623,05154032,11.8,8.5,3.3,3.2,8.1,3183,2291,892,3334,2394,940,11.2,\\\"9.3,10.9,11.1,11.6,12.0,12.5,12.8,12.9,12.7,12.9,12.9,12.9,11.8\\\",\\\"7.8,8.8,8.8,9.0,9.1,9.4,9.7,9.5,9.5,9.3,9.5,9.4,8.5\\\",\\\"1.5,2.1,2.3,2.6,2.9,3.1,3.2,3.4,3.3,3.6,3.4,3.6,3.3\\\",\\\"kevelaer, stadt\\\"\\n05154036,49729,24457,25272,47533,05154036,10.8,7.7,3.1,3.9,9.3,6561,4641,1920,5385,3849,1536,13.2,\\\"8.4,9.9,10.0,10.4,10.6,10.9,10.7,10.6,10.8,11.2,11.2,11.2,10.8\\\",\\\"6.9,7.7,7.7,7.9,8.0,8.0,7.8,7.7,7.7,7.9,8.2,8.1,7.7\\\",\\\"1.5,2.2,2.3,2.5,2.6,2.9,2.9,2.9,3.1,3.3,3.0,3.1,3.1\\\",\\\"kleve, stadt\\\"\\n05154040,10648,5444,5204,47559,05154040,10.0,6.9,3.0,3.1,5.6,923,594,329,1061,740,321,8.7,\\\"7.6,9.1,9.1,9.7,9.6,9.9,9.7,9.9,10.1,10.4,10.3,10.5,10.0\\\",\\\"6.6,7.2,7.1,7.2,7.2,7.3,7.0,6.9,7.0,7.0,7.1,7.2,6.9\\\",\\\"1.0,1.9,2.0,2.5,2.4,2.5,2.7,2.9,3.1,3.4,3.2,3.2,3.0\\\",kranenburg\\n05154044,21349,10608,10741,46459,05154044,12.1,8.9,3.2,2.3,6.5,1875,1390,485,2581,1895,686,8.8,\\\"8.9,10.0,9.9,10.5,11.0,11.1,11.3,11.5,11.9,12.1,12.2,12.2,12.1\\\",\\\"7.5,7.9,7.9,8.2,8.6,8.5,8.5,8.5,8.7,8.9,9.2,9.1,8.9\\\",\\\"1.5,2.1,2.0,2.3,2.4,2.7,2.8,3.0,3.2,3.2,3.0,3.0,3.2\\\",\\\"rees, stadt\\\"\\n05154048,6709,3327,3382,47509,05154048,9.5,7.0,2.5,1.4,4.5,394,299,95,636,467,169,5.9,\\\"6.6,8.5,9.1,9.4,9.5,9.0,9.2,9.5,9.7,9.6,9.8,9.8,9.5\\\",\\\"5.6,6.7,7.2,7.2,7.0,6.6,7.0,7.1,7.2,7.1,7.5,7.3,7.0\\\",\\\"1.1,1.8,1.9,2.2,2.5,2.4,2.2,2.4,2.5,2.6,2.3,2.5,2.5\\\",rheurdt\\n05154052,15641,7768,7873,47638,05154052,12.7,8.6,4.2,4.2,8.6,2012,1351,661,1993,1341,652,12.9,\\\"10.5,12.8,12.6,13.1,13.1,13.2,13.8,13.9,14.5,14.0,14.0,13.8,12.7\\\",\\\"8.5,9.7,9.5,9.5,9.5,9.4,9.7,9.7,9.9,9.3,9.4,9.2,8.6\\\",\\\"2.0,3.1,3.1,3.6,3.6,3.8,4.1,4.3,4.6,4.7,4.6,4.6,4.2\\\",\\\"straelen, stadt\\\"\\n05154056,8266,4111,4155,47589,05154056,11.5,7.9,3.6,2.6,6.3,730,517,213,950,649,301,8.8,\\\"8.2,9.9,10.3,10.5,10.7,11.2,11.7,12.4,12.7,12.3,12.3,12.3,11.5\\\",\\\"7.1,8.0,8.0,7.9,7.7,8.3,8.4,8.9,8.8,8.4,8.8,8.7,7.9\\\",\\\"1.1,1.9,2.3,2.5,2.9,2.9,3.3,3.6,3.9,3.9,3.5,3.6,3.6\\\",uedem\\n05154060,8189,4115,4074,47669,05154060,11.1,7.7,3.4,3.2,7.5,876,613,263,913,632,281,10.7,\\\"8.5,9.8,10.3,11.1,11.1,12.0,12.5,11.9,11.4,11.6,11.8,11.7,11.1\\\",\\\"7.3,7.9,7.9,8.5,7.9,8.4,9.1,8.5,7.9,7.9,8.4,8.3,7.7\\\",\\\"1.3,1.9,2.4,2.6,3.2,3.6,3.4,3.4,3.5,3.7,3.5,3.4,3.4\\\",wachtendonk\\n05154064,10611,5350,5261,47652,05154064,10.9,8.1,2.8,2.9,5.8,918,615,303,1159,861,298,8.7,\\\"9.3,10.8,11.4,11.6,11.3,11.5,11.8,11.8,11.1,11.7,11.9,11.8,10.9\\\",\\\"8.1,8.8,9.5,9.5,9.0,8.8,8.9,8.8,8.1,8.8,9.0,8.8,8.1\\\",\\\"1.2,2.0,2.0,2.1,2.3,2.7,3.0,3.0,3.0,3.0,2.9,3.0,2.8\\\",weeze\\n05158004,44086,21054,23032,40699,05158004,9.9,6.7,3.2,3.2,6.5,4252,2849,1403,4349,2959,1390,9.6,\\\"6.8,8.2,8.4,8.7,9.0,9.5,9.8,9.7,9.8,10.4,10.0,10.0,9.9\\\",\\\"5.3,6.1,6.1,6.2,6.3,6.5,6.9,6.8,6.7,6.9,6.9,6.9,6.7\\\",\\\"1.5,2.2,2.4,2.5,2.7,3.0,2.9,3.0,3.2,3.5,3.1,3.1,3.2\\\",\\\"erkrath, fundort des neanderthalers, stadt\\\"\\n05158008,30410,14579,15831,42781,05158008,9.3,6.3,3.0,3.4,6.0,2849,1829,1020,2817,1910,907,9.4,\\\"7.4,8.9,8.8,9.1,9.4,9.8,9.8,9.7,10.0,9.8,9.5,9.7,9.3\\\",\\\"5.9,6.6,6.3,6.6,6.5,6.6,6.5,6.6,6.8,6.5,6.4,6.6,6.3\\\",\\\"1.5,2.4,2.5,2.5,2.9,3.2,3.2,3.1,3.2,3.3,3.1,3.2,3.0\\\",\\\"haan, stadt\\\"\\n05158012,25793,12654,13139,42579,05158012,10.1,6.5,3.6,2.8,5.4,2108,1394,714,2610,1677,933,8.2,\\\"8.0,9.4,9.5,10.0,10.5,10.8,10.0,10.6,10.5,10.6,10.7,10.5,10.1\\\",\\\"6.2,6.7,6.8,6.9,7.1,7.2,6.9,7.1,6.8,6.8,7.0,7.0,6.5\\\",\\\"1.9,2.7,2.7,3.1,3.5,3.7,3.2,3.5,3.7,3.8,3.6,3.6,3.6\\\",\\\"heiligenhaus, stadt\\\"\\n05158016,55185,26620,28565,40721,05158016,9.8,6.4,3.5,3.6,6.8,5777,3774,2003,5435,3506,1929,10.5,\\\"7.4,8.6,9.1,9.2,9.6,9.9,10.0,10.1,10.2,10.4,10.3,10.3,9.8\\\",\\\"5.6,6.1,6.3,6.2,6.3,6.4,6.5,6.6,6.5,6.5,6.8,6.7,6.4\\\",\\\"1.8,2.5,2.8,3.0,3.3,3.5,3.5,3.6,3.6,3.9,3.6,3.6,3.5\\\",\\\"hilden, stadt\\\"\\n05158020,58033,28239,29794,40764,05158020,9.3,6.1,3.1,3.9,7.3,6525,4264,2261,5384,3567,1817,11.2,\\\"6.7,8.1,8.3,8.7,9.0,9.1,9.2,9.4,9.5,9.8,9.7,9.8,9.3\\\",\\\"5.4,6.0,6.0,6.2,6.3,6.3,6.3,6.4,6.3,6.4,6.6,6.6,6.1\\\",\\\"1.3,2.1,2.3,2.5,2.7,2.8,2.8,3.0,3.2,3.4,3.1,3.1,3.1\\\",\\\"langenfeld (rheinland), stadt\\\"\\n05158024,38291,18413,19878,40822,05158024,9.0,6.2,2.8,2.6,5.6,3124,2132,992,3460,2376,1084,8.2,\\\"6.4,7.8,7.9,8.3,8.4,8.6,8.6,8.9,9.1,9.5,9.4,9.4,9.0\\\",\\\"5.1,5.9,5.8,6.1,6.1,6.0,5.9,6.0,6.0,6.4,6.4,6.4,6.2\\\",\\\"1.2,1.9,2.1,2.2,2.3,2.7,2.8,2.8,3.0,3.1,2.9,3.0,2.8\\\",\\\"mettmann, stadt\\\"\\n05158026,40885,19650,21235,40789,05158026,9.8,6.7,3.2,2.1,4.4,2673,1805,868,4026,2736,1290,6.5,\\\"7.2,8.6,8.6,9.2,9.4,9.8,9.8,9.6,10.0,10.8,10.3,10.3,9.8\\\",\\\"5.8,6.4,6.3,6.6,6.6,6.6,6.7,6.4,6.6,7.0,7.1,7.1,6.7\\\",\\\"1.4,2.2,2.3,2.6,2.8,3.1,3.2,3.2,3.4,3.8,3.2,3.2,3.2\\\",\\\"monheim am rhein, stadt\\\"\\n05158028,87943,42217,45726,40878,05158028,9.7,6.4,3.3,3.3,6.5,8656,5720,2936,8521,5644,2877,9.8,\\\"7.0,8.3,8.7,9.1,9.4,9.6,9.6,9.6,9.6,10.1,10.1,10.0,9.7\\\",\\\"5.5,6.0,6.2,6.3,6.4,6.4,6.5,6.4,6.4,6.7,6.8,6.8,6.4\\\",\\\"1.6,2.3,2.5,2.8,2.9,3.2,3.1,3.2,3.2,3.5,3.2,3.2,3.3\\\",\\\"ratingen, stadt\\\"\\n05158032,81430,39660,41770,42551,05158032,10.1,6.6,3.4,3.2,6.7,8060,5420,2640,8202,5400,2802,9.9,\\\"7.7,9.3,9.4,9.9,10.4,10.5,10.1,10.3,10.4,10.6,10.7,10.7,10.1\\\",\\\"5.9,6.7,6.6,6.7,7.0,7.1,6.9,6.9,6.8,6.9,7.3,7.3,6.6\\\",\\\"1.8,2.6,2.7,3.1,3.4,3.5,3.2,3.4,3.6,3.7,3.4,3.5,3.4\\\",\\\"velbert, stadt\\\"\\n05158036,21223,10362,10861,42489,05158036,9.7,6.6,3.1,2.6,5.9,1798,1248,550,2064,1399,665,8.5,\\\"7.3,8.5,8.9,9.3,9.7,9.9,9.8,10.0,10.2,10.3,10.1,10.1,9.7\\\",\\\"5.7,6.2,6.5,6.6,6.8,6.9,6.8,7.0,7.0,7.0,7.0,6.9,6.6\\\",\\\"1.5,2.3,2.4,2.7,2.9,3.0,2.9,3.0,3.2,3.3,3.1,3.3,3.1\\\",\\\"wülfrath, stadt\\\"\\n05162004,64064,31816,32248,41539,05162004,8.9,6.1,2.8,2.2,4.8,4487,3094,1393,5692,3926,1766,7.0,\\\"7.1,8.1,8.2,8.5,8.7,8.8,9.0,9.2,9.3,9.3,9.2,9.1,8.9\\\",\\\"5.8,6.2,6.2,6.3,6.3,6.3,6.4,6.5,6.4,6.3,6.5,6.4,6.1\\\",\\\"1.3,1.9,2.0,2.1,2.4,2.5,2.6,2.7,2.9,3.0,2.7,2.8,2.8\\\",\\\"dormagen, stadt\\\"\\n05162008,63051,30723,32328,41515,05162008,9.5,6.6,2.9,2.4,5.4,4941,3432,1509,6007,4147,1860,7.8,\\\"7.0,8.3,8.6,8.8,9.0,9.4,9.6,9.7,10.1,10.3,10.1,10.0,9.5\\\",\\\"5.6,6.2,6.3,6.4,6.5,6.7,6.9,6.9,7.0,7.1,7.1,7.1,6.6\\\",\\\"1.4,2.1,2.2,2.4,2.5,2.7,2.7,2.9,3.1,3.2,3.0,2.9,2.9\\\",\\\"grevenbroich, stadt\\\"\\n05162012,23260,11590,11670,41363,05162012,9.3,6.5,2.8,2.9,6.3,2123,1455,668,2172,1519,653,9.1,\\\"7.2,8.2,8.2,8.3,8.5,8.9,9.2,9.3,9.3,9.5,9.6,9.6,9.3\\\",\\\"6.0,6.4,6.4,6.4,6.5,6.6,6.8,6.8,6.6,6.7,6.8,6.8,6.5\\\",\\\"1.2,1.8,1.8,1.9,2.0,2.2,2.4,2.5,2.7,2.8,2.8,2.7,2.8\\\",jüchen\\n05162016,43286,20812,22474,41564,05162016,8.6,5.8,2.8,2.3,5.1,3180,2195,985,3729,2531,1198,7.3,\\\"6.9,8.4,8.4,8.6,9.0,9.2,9.4,9.1,9.3,9.2,9.2,8.9,8.6\\\",\\\"5.5,6.2,6.2,6.2,6.3,6.4,6.5,6.3,6.3,6.1,6.3,6.1,5.8\\\",\\\"1.3,2.2,2.2,2.4,2.6,2.8,2.9,2.8,3.1,3.1,2.8,2.8,2.8\\\",\\\"kaarst, stadt\\\"\\n05162020,32922,16085,16837,41352,05162020,9.0,6.3,2.7,2.6,5.7,2709,1868,841,2953,2067,886,8.2,\\\"6.5,7.7,8.0,8.3,8.7,8.8,9.0,8.8,9.2,9.6,9.4,9.5,9.0\\\",\\\"5.2,5.8,6.0,6.1,6.3,6.2,6.3,6.1,6.2,6.5,6.4,6.5,6.3\\\",\\\"1.2,1.8,2.0,2.3,2.5,2.6,2.7,2.7,3.0,3.1,2.9,3.0,2.7\\\",\\\"korschenbroich, stadt\\\"\\n05162022,54892,26183,28709,40667,05162022,8.5,5.8,2.7,2.7,5.6,4570,3066,1504,4692,3199,1493,8.3,\\\"6.1,7.4,7.6,8.1,8.4,8.6,8.6,8.8,8.9,8.9,8.8,8.8,8.5\\\",\\\"4.8,5.6,5.6,5.8,6.0,6.0,6.0,6.1,6.1,6.0,6.1,6.1,5.8\\\",\\\"1.2,1.8,2.1,2.2,2.4,2.6,2.6,2.7,2.8,2.8,2.6,2.7,2.7\\\",\\\"meerbusch, stadt\\\"\\n05162024,155414,75929,79485,41460,05162024,9.8,6.4,3.3,3.0,6.1,14161,9535,4626,15158,10019,5139,9.1,\\\"7.7,9.1,9.4,9.7,10.0,10.0,10.1,10.1,10.2,10.3,10.1,10.1,9.8\\\",\\\"6.1,6.7,6.8,6.9,6.9,6.8,6.8,6.7,6.7,6.7,6.8,6.7,6.4\\\",\\\"1.6,2.4,2.6,2.8,3.0,3.2,3.2,3.3,3.5,3.6,3.3,3.4,3.3\\\",\\\"neuss, stadt\\\"\\n05162028,13137,6512,6625,41569,05162028,8.6,6.0,2.6,2.0,4.0,790,529,261,1131,785,346,6.0,\\\"6.7,7.7,8.0,8.5,8.5,8.6,8.7,8.9,9.3,9.5,9.4,8.9,8.6\\\",\\\"5.6,6.1,6.2,6.4,6.4,6.4,6.4,6.5,6.6,6.6,6.6,6.3,6.0\\\",\\\"1.1,1.6,1.8,2.1,2.1,2.2,2.3,2.4,2.7,2.9,2.7,2.7,2.6\\\",rommerskirchen\\n05166004,15648,7677,7971,41379,05166004,11.3,7.6,3.7,3.6,7.0,1657,1098,559,1765,1192,573,10.6,\\\"8.3,9.8,9.8,10.5,11.0,11.2,11.5,11.5,11.6,11.9,11.6,11.8,11.3\\\",\\\"6.8,7.6,7.5,7.9,8.0,8.0,8.2,8.2,8.1,8.2,8.1,8.3,7.6\\\",\\\"1.5,2.3,2.3,2.6,2.9,3.2,3.3,3.3,3.5,3.7,3.5,3.5,3.7\\\",\\\"brüggen, burggemeinde\\\"\\n05166008,14914,7342,7572,47929,05166008,10.1,6.8,3.3,2.0,5.0,1041,743,298,1509,1016,493,7.0,\\\"7.1,8.4,8.6,9.2,9.3,9.4,10.0,10.0,10.0,10.6,10.6,10.5,10.1\\\",\\\"5.7,6.4,6.2,6.6,6.8,6.7,6.9,6.9,6.8,7.0,7.2,7.1,6.8\\\",\\\"1.3,2.1,2.4,2.6,2.4,2.8,3.1,3.0,3.2,3.5,3.3,3.4,3.3\\\",\\\"grefrath, sport- und freizeitgemeinde\\\"\\n05166012,34837,16911,17926,47906,05166012,10.2,6.9,3.3,3.8,8.2,4161,2842,1319,3555,2419,1136,11.9,\\\"7.8,9.3,9.5,9.7,9.9,10.3,10.3,10.3,10.5,10.7,10.6,10.5,10.2\\\",\\\"6.4,7.0,7.0,7.1,7.2,7.3,7.3,7.1,7.2,7.3,7.4,7.3,6.9\\\",\\\"1.4,2.3,2.5,2.7,2.7,3.1,3.0,3.2,3.3,3.4,3.2,3.2,3.3\\\",\\\"kempen, stadt\\\"\\n05166016,41964,20769,21195,41334,05166016,10.6,7.5,3.1,2.7,6.9,4026,2881,1145,4447,3133,1314,9.6,\\\"8.1,9.3,9.6,10.2,10.7,10.9,11.0,11.2,11.3,11.0,11.2,11.3,10.6\\\",\\\"6.5,7.0,7.1,7.5,7.8,7.8,7.8,7.8,7.8,7.7,8.0,8.0,7.5\\\",\\\"1.6,2.3,2.5,2.8,2.9,3.1,3.2,3.4,3.5,3.3,3.2,3.3,3.1\\\",\\\"nettetal, stadt\\\"\\n05166020,15184,7487,7697,41372,05166020,9.6,6.4,3.2,2.4,4.9,1106,742,364,1454,974,480,7.3,\\\"6.8,8.4,8.6,9.4,9.4,9.8,9.8,9.8,9.9,10.2,10.0,10.1,9.6\\\",\\\"5.6,6.4,6.5,6.8,6.7,6.8,6.8,6.6,6.7,6.8,6.9,7.0,6.4\\\",\\\"1.2,2.0,2.1,2.5,2.7,3.0,3.0,3.2,3.2,3.3,3.1,3.2,3.2\\\",niederkrüchten\\n05166024,19139,9441,9698,41366,05166024,9.9,6.8,3.1,3.0,5.5,1637,1059,578,1893,1298,595,8.6,\\\"7.6,9.1,9.5,9.8,10.2,10.5,10.7,10.7,11.0,10.4,10.6,10.7,9.9\\\",\\\"6.2,6.9,7.0,7.3,7.6,7.6,7.5,7.4,7.4,7.0,7.3,7.4,6.8\\\",\\\"1.4,2.2,2.5,2.5,2.7,3.0,3.2,3.3,3.6,3.4,3.3,3.3,3.1\\\",schwalmtal\\n05166028,29296,14301,14995,47918,05166028,9.7,6.4,3.3,3.2,6.7,2901,1968,933,2847,1879,968,9.9,\\\"7.1,8.5,8.7,9.0,9.2,9.8,9.8,9.9,9.9,10.0,9.9,10.0,9.7\\\",\\\"5.7,6.3,6.2,6.5,6.4,7.0,6.8,6.7,6.6,6.6,6.8,6.7,6.4\\\",\\\"1.4,2.2,2.5,2.5,2.7,2.9,3.0,3.2,3.3,3.4,3.1,3.3,3.3\\\",\\\"tönisvorst, stadt\\\"\\n05166032,75931,36727,39204,41747,05166032,9.8,6.8,3.0,2.8,6.3,6864,4758,2106,7412,5132,2280,9.0,\\\"7.4,8.7,8.7,9.2,9.4,9.7,9.8,9.9,9.9,10.0,10.2,10.2,9.8\\\",\\\"6.0,6.7,6.6,6.8,6.9,6.9,6.9,7.0,6.9,6.9,7.3,7.1,6.8\\\",\\\"1.3,2.1,2.1,2.4,2.5,2.7,2.9,2.9,3.0,3.2,3.0,3.1,3.0\\\",\\\"viersen, stadt\\\"\\n05166036,50748,24815,25933,47877,05166036,9.7,6.5,3.3,3.4,6.5,5002,3277,1725,4947,3286,1661,9.9,\\\"6.7,8.0,8.2,8.5,8.8,8.9,9.4,9.6,9.8,10.0,9.9,10.1,9.7\\\",\\\"5.4,6.0,6.1,6.2,6.4,6.2,6.6,6.6,6.6,6.6,6.8,6.8,6.5\\\",\\\"1.2,2.0,2.1,2.3,2.4,2.8,2.8,3.0,3.2,3.4,3.1,3.3,3.3\\\",\\\"willich, stadt\\\"\\n05170004,12798,6375,6423,46519,05170004,10.3,7.5,2.9,2.3,6.2,1089,792,297,1321,955,366,8.5,\\\"7.9,9.4,9.1,9.6,10.0,10.2,10.7,10.5,10.8,10.8,10.6,10.4,10.3\\\",\\\"6.6,7.4,7.2,7.5,7.6,7.7,7.9,7.7,7.7,7.7,7.7,7.5,7.5\\\",\\\"1.3,2.0,1.9,2.1,2.5,2.5,2.7,2.8,3.0,3.1,2.8,2.8,2.9\\\",alpen\\n05170008,67452,32635,34817,46535,05170008,9.4,7.0,2.4,3.1,9.1,8264,6142,2122,6363,4741,1622,12.3,\\\"6.9,8.1,8.1,8.5,8.7,8.9,9.1,9.2,9.3,9.5,9.5,9.6,9.4\\\",\\\"5.8,6.4,6.3,6.6,6.6,6.7,6.8,6.9,6.8,6.9,7.1,7.2,7.0\\\",\\\"1.1,1.7,1.8,1.9,2.1,2.2,2.3,2.3,2.5,2.5,2.4,2.5,2.4\\\",\\\"dinslaken, stadt\\\"\\n05170012,26996,13477,13519,46499,05170012,11.3,8.2,3.2,2.8,6.8,2594,1834,760,3060,2206,854,9.6,\\\"8.3,9.6,9.9,10.2,10.5,10.9,11.1,11.0,11.2,11.6,12.0,11.9,11.3\\\",\\\"6.9,7.6,7.6,7.9,8.0,8.1,8.2,8.1,8.1,8.4,8.8,8.7,8.2\\\",\\\"1.4,2.0,2.3,2.4,2.5,2.7,2.9,3.0,3.1,3.1,3.2,3.1,3.2\\\",\\\"hamminkeln, stadt\\\"\\n05170016,13771,6767,7004,46569,05170016,9.3,6.8,2.5,2.4,6.7,1253,916,337,1275,934,341,9.1,\\\"7.3,8.0,8.1,8.7,9.0,9.4,9.1,9.4,9.7,9.7,9.7,9.6,9.3\\\",\\\"6.2,6.5,6.3,6.8,6.7,7.0,6.8,6.9,7.0,7.1,7.1,7.0,6.8\\\",\\\"1.1,1.5,1.8,1.9,2.2,2.4,2.3,2.5,2.7,2.6,2.7,2.5,2.5\\\",hünxe\\n05170020,37683,18588,19095,47475,05170020,10.5,8.2,2.3,2.8,8.2,4131,3085,1046,3965,3084,881,11.0,\\\"7.8,8.9,8.9,9.2,9.5,9.8,10.0,10.3,10.4,10.7,10.7,10.8,10.5\\\",\\\"6.6,7.3,7.1,7.3,7.4,7.7,7.8,8.0,8.1,8.1,8.4,8.5,8.2\\\",\\\"1.1,1.6,1.7,1.9,2.1,2.1,2.2,2.2,2.3,2.6,2.2,2.3,2.3\\\",\\\"kamp-lintfort, stadt\\\"\\n05170024,104529,50973,53556,47441,05170024,9.1,6.8,2.3,2.3,7.2,9964,7550,2414,9546,7138,2408,9.5,\\\"6.6,7.8,8.0,8.3,8.5,8.6,8.9,9.2,9.2,9.4,9.5,9.6,9.1\\\",\\\"5.6,6.2,6.3,6.5,6.6,6.5,6.7,6.9,6.8,6.9,7.3,7.2,6.8\\\",\\\"1.0,1.6,1.7,1.8,1.9,2.1,2.2,2.3,2.4,2.5,2.2,2.3,2.3\\\",\\\"moers, stadt\\\"\\n05170028,27178,13184,13994,47506,05170028,9.6,7.2,2.4,2.5,6.8,2509,1838,671,2614,1968,646,9.2,\\\"7.0,8.3,8.3,8.6,8.9,9.1,9.6,9.6,9.6,9.9,10.0,10.0,9.6\\\",\\\"5.9,6.5,6.4,6.5,6.8,6.9,7.2,7.0,6.8,7.1,7.5,7.5,7.2\\\",\\\"1.1,1.8,1.9,2.1,2.2,2.2,2.4,2.6,2.7,2.8,2.5,2.5,2.4\\\",\\\"neukirchen-vluyn, stadt\\\"\\n05170032,31023,15140,15883,47495,05170032,9.5,6.9,2.6,1.8,5.3,2203,1634,569,2950,2142,808,7.1,\\\"6.9,8.2,8.4,8.8,9.0,9.3,9.5,9.6,9.5,9.8,9.5,9.8,9.5\\\",\\\"5.7,6.5,6.5,6.7,6.8,6.7,6.9,6.9,6.9,7.0,7.0,7.2,6.9\\\",\\\"1.2,1.7,2.0,2.1,2.2,2.6,2.6,2.6,2.6,2.8,2.4,2.6,2.6\\\",\\\"rheinberg, stadt\\\"\\n05170036,13635,6750,6885,46514,05170036,11.0,7.9,3.1,3.3,8.0,1542,1094,448,1498,1080,418,11.3,\\\"8.0,9.4,9.5,9.9,10.2,10.7,10.8,10.9,11.0,11.2,11.1,11.1,11.0\\\",\\\"6.9,7.6,7.6,7.8,8.1,8.5,8.2,8.1,8.0,8.1,8.2,8.1,7.9\\\",\\\"1.1,1.8,1.9,2.1,2.1,2.3,2.6,2.8,3.0,3.2,2.8,3.1,3.1\\\",schermbeck\\n05170040,8819,4363,4456,47665,05170040,11.3,7.8,3.5,4.7,11.3,1409,994,415,997,691,306,16.0,\\\"8.7,9.9,9.8,10.0,10.3,10.8,11.4,11.2,11.4,11.3,10.8,11.5,11.3\\\",\\\"7.3,7.9,7.6,7.4,7.6,8.0,8.3,8.0,8.0,8.0,7.8,8.1,7.8\\\",\\\"1.4,2.1,2.2,2.6,2.7,2.8,3.1,3.2,3.4,3.3,3.0,3.4,3.5\\\",sonsbeck\\n05170044,36675,18073,18602,46562,05170044,9.5,7.2,2.3,1.6,4.9,2362,1789,573,3478,2625,853,6.4,\\\"7.5,8.7,8.9,9.2,9.5,10.0,10.2,10.1,10.2,10.2,9.9,10.0,9.5\\\",\\\"6.2,6.9,7.1,7.2,7.4,7.6,7.7,7.5,7.5,7.4,7.6,7.5,7.2\\\",\\\"1.2,1.9,1.8,2.0,2.1,2.4,2.5,2.6,2.7,2.7,2.3,2.4,2.3\\\",\\\"voerde (niederrhein), stadt\\\"\\n05170048,60595,29522,31073,46483,05170048,10.0,7.3,2.7,2.8,8.1,6595,4909,1686,6048,4435,1613,10.9,\\\"7.9,9.2,9.3,9.5,9.8,10.1,10.3,10.4,10.6,10.6,10.5,10.5,10.0\\\",\\\"6.6,7.3,7.3,7.4,7.6,7.6,7.6,7.6,7.6,7.6,7.9,7.8,7.3\\\",\\\"1.3,1.9,2.0,2.1,2.3,2.5,2.6,2.8,3.0,2.9,2.7,2.7,2.7\\\",\\\"wesel, stadt\\\"\\n05170052,21510,10549,10961,46509,05170052,10.9,7.9,3.0,2.5,7.1,2055,1528,527,2339,1695,644,9.6,\\\"8.2,9.7,9.7,10.0,10.5,10.8,11.0,11.1,11.1,10.9,10.9,10.8,10.9\\\",\\\"6.9,7.8,7.7,7.8,7.8,8.1,8.1,8.1,8.1,7.9,8.2,7.9,7.9\\\",\\\"1.2,1.9,2.0,2.1,2.6,2.7,2.9,3.0,2.9,3.0,2.8,2.9,3.0\\\",\\\"xanten, stadt\\\"\\n05314000,318809,151954,166855,53111,05314000,9.2,6.3,3.0,3.7,8.1,37808,25881,11927,29483,19926,9557,11.9,\\\"6.4,7.8,7.9,8.2,8.4,8.6,8.9,8.8,8.9,9.6,9.3,9.4,9.2\\\",\\\"4.8,5.5,5.5,5.6,5.6,5.7,5.8,5.7,5.7,6.1,6.4,6.4,6.3\\\",\\\"1.6,2.3,2.4,2.6,2.7,2.9,3.0,3.1,3.2,3.4,2.9,3.0,3.0\\\",\\\"bonn, stadt\\\"\\n05315000,1060582,516976,543606,50667,05315000,9.3,6.2,3.1,3.5,7.1,112571,75417,37154,98699,66046,32653,10.6,\\\"6.6,8.1,8.2,8.6,8.8,9.1,9.3,9.4,9.6,9.6,9.4,9.5,9.3\\\",\\\"5.1,5.9,5.8,6.0,6.1,6.1,6.2,6.2,6.2,6.2,6.4,6.4,6.2\\\",\\\"1.5,2.3,2.4,2.6,2.7,3.0,3.1,3.2,3.3,3.4,2.9,3.0,3.1\\\",\\\"köln, stadt\\\"\\n05316000,163487,79590,83897,51373,05316000,8.6,6.0,2.7,2.4,5.4,12744,8877,3867,14107,9741,4366,7.8,\\\"6.6,7.8,8.0,8.2,8.5,8.6,8.9,9.0,9.1,9.1,8.8,8.8,8.6\\\",\\\"5.3,5.8,5.8,6.0,6.1,6.0,6.2,6.2,6.2,6.1,6.1,6.1,6.0\\\",\\\"1.3,2.0,2.1,2.2,2.4,2.6,2.7,2.8,2.9,3.0,2.6,2.7,2.7\\\",\\\"leverkusen, stadt\\\"\\n05334002,245885,127613,118272,52062,05334002,11.4,8.7,2.7,3.6,10.6,34989,26111,8878,28020,21347,6673,14.2,\\\"*,*,*,*,*,*,*,10.5,10.8,11.8,11.6,11.7,11.4\\\",\\\"*,*,*,*,*,*,*,7.6,7.7,8.4,8.9,9.0,8.7\\\",\\\"*,*,*,*,*,*,*,2.9,3.1,3.4,2.7,2.8,2.7\\\",\\\"aachen, stadt\\\"\\n05334004,46880,23281,23599,52477,05334004,10.3,7.4,2.9,2.0,5.3,3440,2488,952,4831,3460,1371,7.3,\\\"*,*,*,*,*,*,*,11.2,11.2,10.9,10.9,10.7,10.3\\\",\\\"*,*,*,*,*,*,*,8.3,8.1,7.8,7.9,7.8,7.4\\\",\\\"*,*,*,*,*,*,*,2.9,3.1,3.1,2.9,2.9,2.9\\\",\\\"alsdorf, stadt\\\"\\n05334008,26819,13120,13699,52499,05334008,10.5,7.4,3.1,2.2,5.8,2162,1566,596,2807,1985,822,8.1,\\\"*,*,*,*,*,*,*,10.2,10.5,10.9,11.1,10.9,10.5\\\",\\\"*,*,*,*,*,*,*,7.5,7.6,7.7,8.1,7.9,7.4\\\",\\\"*,*,*,*,*,*,*,2.7,2.9,3.1,2.9,3.1,3.1\\\",\\\"baesweiler, stadt\\\"\\n05334012,55909,27322,28587,52249,05334012,10.1,7.3,2.8,2.6,6.7,5155,3727,1428,5674,4102,1572,9.2,\\\"*,*,*,*,*,*,*,10.4,10.5,10.5,10.2,10.4,10.1\\\",\\\"*,*,*,*,*,*,*,7.7,7.5,7.5,7.6,7.6,7.3\\\",\\\"*,*,*,*,*,*,*,2.8,3.0,3.0,2.6,2.8,2.8\\\",\\\"eschweiler, stadt\\\"\\n05334016,46583,22665,23918,52134,05334016,9.5,6.7,2.8,1.8,4.7,3029,2190,839,4447,3123,1324,6.5,\\\"*,*,*,*,*,*,*,10.3,10.1,9.9,9.7,10.1,9.5\\\",\\\"*,*,*,*,*,*,*,7.3,7.1,6.9,7.0,7.1,6.7\\\",\\\"*,*,*,*,*,*,*,3.0,3.0,3.0,2.8,3.0,2.8\\\",\\\"herzogenrath, stadt\\\"\\n05334020,12352,6234,6118,52156,05334020,13.1,8.7,4.4,5.1,11.9,2098,1474,624,1613,1071,542,17.0,\\\"*,*,*,*,*,*,*,13.2,13.3,13.9,13.7,14.1,13.1\\\",\\\"*,*,*,*,*,*,*,9.1,9.1,9.3,9.7,9.8,8.7\\\",\\\"*,*,*,*,*,*,*,4.2,4.2,4.6,4.0,4.3,4.4\\\",\\\"monschau, stadt\\\"\\n05334024,8527,4214,4313,52159,05334024,9.4,6.5,2.9,2.5,5.6,691,475,216,804,554,250,8.1,\\\"*,*,*,*,*,*,*,9.6,9.6,9.3,9.4,9.2,9.4\\\",\\\"*,*,*,*,*,*,*,6.9,6.8,6.5,7.0,6.5,6.5\\\",\\\"*,*,*,*,*,*,*,2.7,2.8,2.8,2.5,2.7,2.9\\\",\\\"roetgen, tor zur eifel\\\"\\n05334028,15266,7583,7683,52152,05334028,13.2,8.7,4.4,3.7,7.3,1677,1114,563,2008,1332,676,11.0,\\\"*,*,*,*,*,*,*,13.5,13.2,13.5,13.5,13.8,13.2\\\",\\\"*,*,*,*,*,*,*,9.5,9.1,9.1,9.2,9.2,8.7\\\",\\\"*,*,*,*,*,*,*,3.9,4.0,4.4,4.3,4.6,4.4\\\",simmerath\\n05334032,56739,28112,28627,52222,05334032,10.3,7.2,3.1,2.5,5.8,4677,3281,1396,5872,4098,1774,8.2,\\\"*,*,*,*,*,*,*,10.6,10.6,10.9,10.7,10.7,10.3\\\",\\\"*,*,*,*,*,*,*,7.5,7.3,7.5,7.7,7.7,7.2\\\",\\\"*,*,*,*,*,*,*,3.1,3.2,3.4,3.1,3.1,3.1\\\",\\\"stolberg (rhld.), kupferstadt\\\"\\n05334036,38962,19116,19846,52146,05334036,9.4,6.5,3.0,3.0,6.4,3646,2476,1170,3679,2515,1164,9.4,\\\"*,*,*,*,*,*,*,10.0,10.2,9.9,9.8,9.8,9.4\\\",\\\"*,*,*,*,*,*,*,7.0,6.9,6.6,6.7,6.8,6.5\\\",\\\"*,*,*,*,*,*,*,3.0,3.3,3.3,3.1,3.1,3.0\\\",\\\"würselen, stadt\\\"\\n05358004,13932,6995,6937,52457,05358004,10.8,7.9,2.9,2.2,5.7,1097,794,303,1509,1101,408,7.9,\\\"8.0,9.4,9.7,10.7,10.8,10.9,11.0,11.1,11.4,11.2,11.1,11.2,10.8\\\",\\\"6.8,7.4,7.4,8.2,8.0,8.0,8.0,8.0,8.2,8.1,8.0,8.1,7.9\\\",\\\"1.2,2.0,2.3,2.5,2.7,2.9,3.0,3.1,3.2,3.1,3.1,3.1,2.9\\\",aldenhoven\\n05358008,90244,44599,45645,52349,05358008,10.1,7.3,2.8,3.9,10.0,12583,9042,3541,9134,6590,2544,13.9,\\\"7.2,8.5,8.7,9.3,9.4,9.6,9.7,9.9,10.0,10.4,10.4,10.4,10.1\\\",\\\"5.8,6.6,6.6,7.0,6.9,6.9,7.1,7.1,7.2,7.4,7.7,7.5,7.3\\\",\\\"1.3,1.9,2.2,2.3,2.4,2.6,2.6,2.7,2.8,3.0,2.7,2.9,2.8\\\",\\\"düren, stadt\\\"\\n05358012,4366,2203,2163,52396,05358012,11.9,8.7,3.2,3.2,7.6,473,332,141,518,379,139,10.8,\\\"9.2,10.0,9.9,10.8,10.5,11.4,11.5,11.2,11.9,11.7,11.5,12.1,11.9\\\",\\\"7.4,7.9,7.8,8.3,8.2,8.6,8.4,8.2,8.3,8.1,8.7,8.9,8.7\\\",\\\"1.9,2.1,2.0,2.6,2.3,2.8,3.1,3.0,3.5,3.6,2.8,3.2,3.2\\\",\\\"heimbach, stadt\\\"\\n05358016,8780,4426,4354,52393,05358016,10.3,6.8,3.4,2.3,4.3,577,378,199,902,600,302,6.6,\\\"6.5,8.0,7.8,8.7,9.3,9.4,10.0,10.0,10.0,10.8,10.9,10.8,10.3\\\",\\\"5.4,6.0,5.9,6.4,6.8,6.6,6.9,7.1,6.7,7.1,7.5,7.1,6.8\\\",\\\"1.1,2.0,2.0,2.3,2.6,2.8,3.0,2.8,3.3,3.7,3.4,3.7,3.4\\\",hürtgenwald\\n05358020,7272,3579,3693,52459,05358020,9.5,6.4,3.2,1.9,4.9,496,356,140,694,463,231,6.8,\\\"7.6,9.1,9.3,9.5,9.6,10.3,11.0,11.2,11.2,10.4,10.5,10.6,9.5\\\",\\\"6.1,6.9,7.0,7.3,7.1,7.4,7.9,7.8,7.7,6.9,7.2,7.0,6.4\\\",\\\"1.4,2.2,2.3,2.3,2.5,2.9,3.2,3.4,3.4,3.5,3.2,3.5,3.2\\\",inden\\n05358024,32601,16318,16283,52428,05358024,9.8,7.1,2.7,2.7,7.3,3258,2389,869,3189,2322,867,10.0,\\\"7.4,8.7,8.8,9.1,9.6,9.9,10.0,9.9,10.0,10.2,10.3,10.3,9.8\\\",\\\"6.2,6.7,6.8,7.0,7.3,7.3,7.4,7.3,7.3,7.3,7.6,7.5,7.1\\\",\\\"1.2,2.0,2.0,2.1,2.3,2.6,2.6,2.6,2.7,2.9,2.6,2.7,2.7\\\",\\\"jülich, stadt\\\"\\n05358028,17441,8579,8862,52372,05358028,10.7,7.5,3.3,2.1,5.2,1265,903,362,1869,1300,569,7.3,\\\"7.2,8.7,8.9,9.4,9.7,9.8,9.8,10.1,10.4,10.9,11.1,11.0,10.7\\\",\\\"6.1,6.9,6.9,7.1,7.2,7.3,7.1,7.5,7.6,7.7,8.0,7.8,7.5\\\",\\\"1.1,1.9,2.0,2.3,2.5,2.5,2.7,2.7,2.8,3.1,3.1,3.2,3.3\\\",kreuzau\\n05358032,13791,6871,6920,52379,05358032,10.3,7.4,2.9,1.8,5.0,937,685,252,1419,1018,401,6.8,\\\"6.4,7.9,8.1,9.0,9.2,9.4,9.7,10.2,10.2,10.5,10.4,10.4,10.3\\\",\\\"5.4,6.2,6.1,6.8,6.9,6.8,7.2,7.4,7.3,7.4,7.4,7.4,7.4\\\",\\\"1.0,1.7,2.0,2.2,2.2,2.6,2.5,2.8,2.9,3.1,2.9,3.0,2.9\\\",langerwehe\\n05358036,12591,6253,6338,52441,05358036,10.5,7.5,3.0,2.1,4.6,843,577,266,1323,943,380,6.7,\\\"7.2,8.7,8.4,8.9,9.1,9.2,9.3,9.1,9.6,10.3,10.3,10.4,10.5\\\",\\\"6.1,6.8,6.6,6.8,6.8,6.7,6.6,6.6,6.9,7.3,7.6,7.6,7.5\\\",\\\"1.1,1.9,1.8,2.1,2.3,2.5,2.7,2.5,2.7,3.0,2.7,2.8,3.0\\\",\\\"linnich, stadt\\\"\\n05358040,9950,4948,5002,52399,05358040,9.9,7.0,2.9,7.7,13.7,2130,1359,771,986,693,293,21.4,\\\"7.3,8.8,8.9,9.7,10.0,10.0,10.5,10.3,10.3,10.1,9.5,10.2,9.9\\\",\\\"6.1,6.9,6.6,7.0,7.4,7.1,7.5,7.2,7.0,6.8,6.7,7.1,7.0\\\",\\\"1.2,1.9,2.3,2.6,2.6,2.9,3.1,3.1,3.3,3.2,2.8,3.1,2.9\\\",merzenich\\n05358044,9893,4832,5061,52385,05358044,11.5,8.2,3.3,2.5,6.1,845,601,244,1135,808,327,8.5,\\\"7.2,8.5,8.9,9.3,9.8,9.8,10.1,10.2,10.5,11.3,11.4,11.6,11.5\\\",\\\"6.0,6.7,6.9,7.2,7.5,7.4,7.6,7.5,7.7,8.1,8.3,8.3,8.2\\\",\\\"1.2,1.8,1.9,2.1,2.3,2.5,2.5,2.7,2.8,3.3,3.1,3.4,3.3\\\",\\\"nideggen, stadt\\\"\\n05358048,13915,6876,7039,52382,05358048,10.5,7.4,3.1,2.2,5.4,1060,754,306,1466,1028,438,7.6,\\\"7.6,9.0,9.1,9.7,10.0,10.1,10.3,10.6,10.9,10.9,10.7,10.6,10.5\\\",\\\"6.3,7.0,7.1,7.2,7.4,7.5,7.5,7.8,7.7,7.5,7.5,7.4,7.4\\\",\\\"1.3,2.0,2.0,2.5,2.6,2.7,2.7,2.8,3.2,3.4,3.3,3.3,3.1\\\",niederzier\\n05358052,10552,5249,5303,52388,05358052,10.5,7.2,3.3,1.5,3.9,565,407,158,1104,760,344,5.4,\\\"7.1,8.4,8.5,9.2,9.6,9.6,9.8,9.7,9.8,10.6,10.4,10.5,10.5\\\",\\\"6.0,6.7,6.6,6.9,7.2,6.8,6.9,7.0,6.6,7.0,7.2,7.3,7.2\\\",\\\"1.0,1.7,1.9,2.3,2.4,2.8,2.8,2.7,3.2,3.6,3.2,3.1,3.3\\\",nörvenich\\n05358056,8277,4150,4127,52445,05358056,9.0,6.2,2.8,1.6,4.1,477,341,136,749,516,233,5.8,\\\"7.4,8.4,8.6,9.1,9.2,9.9,10.0,9.9,9.6,9.5,9.5,9.6,9.0\\\",\\\"6.2,6.6,6.6,6.8,6.7,7.1,7.0,7.1,6.8,6.4,6.8,6.6,6.2\\\",\\\"1.2,1.8,2.0,2.2,2.5,2.8,2.9,2.7,2.9,3.2,2.7,3.0,2.8\\\",titz\\n05358060,9223,4644,4579,52391,05358060,10.5,7.6,3.0,1.7,3.7,492,337,155,971,698,273,5.3,\\\"7.3,8.8,9.2,9.7,10.4,10.9,10.6,10.9,11.3,11.4,11.0,11.1,10.5\\\",\\\"6.2,6.9,7.0,7.6,7.9,8.1,8.0,8.1,8.2,7.9,8.0,8.1,7.6\\\",\\\"1.1,1.9,2.2,2.1,2.5,2.8,2.6,2.8,3.1,3.5,3.0,3.0,3.0\\\",vettweiß\\n05362004,23334,11676,11658,50181,05362004,9.7,6.8,2.9,2.5,5.8,1922,1348,574,2266,1590,676,8.2,\\\"6.7,7.9,8.1,8.1,8.5,8.7,9.2,9.6,9.8,10.3,10.2,10.1,9.7\\\",\\\"5.6,6.3,6.4,6.2,6.5,6.6,7.0,7.2,7.1,7.4,7.5,7.4,6.8\\\",\\\"1.1,1.6,1.7,1.9,2.0,2.0,2.2,2.3,2.7,2.9,2.6,2.7,2.9\\\",\\\"bedburg, stadt\\\"\\n05362008,60390,29779,30611,50126,05362008,9.8,6.8,3.0,2.8,6.1,5382,3701,1681,5892,4090,1802,8.9,\\\"6.9,8.4,8.5,8.6,9.0,9.2,9.6,9.6,9.8,10.0,10.0,10.0,9.8\\\",\\\"5.6,6.4,6.4,6.4,6.6,6.6,6.9,6.8,6.9,6.9,7.2,7.1,6.8\\\",\\\"1.3,2.0,2.0,2.2,2.4,2.6,2.7,2.8,2.9,3.1,2.8,2.9,3.0\\\",\\\"bergheim, stadt\\\"\\n05362012,44768,21443,23325,50321,05362012,9.0,6.1,2.9,2.8,5.6,3764,2502,1262,4048,2732,1316,8.4,\\\"6.6,7.6,7.7,8.2,8.3,8.5,8.8,8.9,8.9,8.9,9.0,9.0,9.0\\\",\\\"5.3,5.7,5.6,5.8,5.7,5.9,6.0,5.9,5.9,5.9,6.2,6.2,6.1\\\",\\\"1.3,1.9,2.0,2.3,2.6,2.6,2.7,3.1,3.1,3.0,2.7,2.8,2.9\\\",\\\"brühl, stadt\\\"\\n05362016,21232,10453,10779,50189,05362016,9.1,6.3,2.9,2.3,5.0,1551,1071,480,1942,1329,613,7.3,\\\"6.7,7.9,7.6,8.2,8.5,8.8,9.1,9.2,9.2,9.4,9.6,9.5,9.1\\\",\\\"5.5,6.0,5.7,6.0,6.0,6.3,6.4,6.4,6.3,6.3,6.8,6.7,6.3\\\",\\\"1.3,1.9,2.0,2.2,2.5,2.6,2.7,2.8,2.9,3.1,2.8,2.9,2.9\\\",\\\"elsdorf, stadt\\\"\\n05362020,49786,24168,25618,50374,05362020,8.6,6.0,2.6,2.3,5.2,3723,2602,1121,4273,2966,1307,7.5,\\\"6.1,7.4,7.4,7.6,8.0,8.2,8.6,8.9,8.9,8.9,8.8,8.8,8.6\\\",\\\"5.0,5.6,5.6,5.6,5.9,5.8,6.2,6.3,6.2,6.1,6.2,6.1,6.0\\\",\\\"1.1,1.7,1.8,2.0,2.1,2.4,2.5,2.6,2.7,2.8,2.6,2.6,2.6\\\",\\\"erftstadt, stadt\\\"\\n05362024,51999,25311,26688,50226,05362024,9.4,6.2,3.2,3.4,6.2,4984,3215,1769,4883,3207,1676,9.6,\\\"7.2,8.5,8.6,9.0,9.2,9.4,9.9,9.8,9.7,9.9,9.7,9.6,9.4\\\",\\\"5.7,6.3,6.2,6.4,6.3,6.4,6.6,6.5,6.4,6.5,6.5,6.5,6.2\\\",\\\"1.5,2.2,2.4,2.6,2.9,3.0,3.2,3.3,3.3,3.4,3.1,3.1,3.2\\\",\\\"frechen, stadt\\\"\\n05362028,59496,29173,30323,50354,05362028,9.6,6.3,3.3,3.3,6.3,5744,3764,1980,5691,3729,1962,9.7,\\\"7.2,8.6,8.8,8.9,9.2,9.4,9.6,9.7,9.7,10.2,9.7,9.9,9.6\\\",\\\"5.8,6.5,6.4,6.4,6.4,6.5,6.4,6.5,6.3,6.6,6.6,6.5,6.3\\\",\\\"1.4,2.1,2.3,2.5,2.7,3.0,3.2,3.2,3.5,3.7,3.1,3.3,3.3\\\",\\\"hürth, stadt\\\"\\n05362032,65477,32337,33140,50171,05362032,9.8,6.6,3.2,3.9,6.3,6680,4154,2526,6388,4289,2099,10.2,\\\"7.2,8.6,8.7,9.0,9.4,9.7,9.8,9.8,10.0,10.3,10.1,10.0,9.8\\\",\\\"5.8,6.6,6.5,6.6,6.8,6.7,6.8,6.7,6.8,6.9,7.0,6.9,6.6\\\",\\\"1.3,2.0,2.2,2.4,2.7,3.0,3.0,3.0,3.2,3.4,3.1,3.1,3.2\\\",\\\"kerpen, kolpingstadt\\\"\\n05362036,54200,26267,27933,50259,05362036,8.4,5.6,2.8,3.5,6.7,5525,3643,1882,4563,3058,1505,10.2,\\\"6.3,7.3,7.6,7.8,7.9,8.1,8.5,8.6,8.5,8.7,8.5,8.7,8.4\\\",\\\"5.1,5.6,5.6,5.7,5.7,5.7,5.9,6.0,5.8,6.0,5.9,6.0,5.6\\\",\\\"1.2,1.7,2.0,2.2,2.2,2.4,2.6,2.6,2.7,2.8,2.7,2.7,2.8\\\",\\\"pulheim, stadt\\\"\\n05362040,35975,17843,18132,50389,05362040,9.9,6.7,3.1,2.6,5.2,2797,1856,941,3544,2428,1116,7.8,\\\"7.3,8.5,8.6,9.4,10.0,10.2,10.5,10.4,10.5,10.5,10.2,10.1,9.9\\\",\\\"5.8,6.2,6.3,6.6,6.9,7.0,7.0,7.0,6.9,7.0,7.0,7.0,6.7\\\",\\\"1.5,2.3,2.4,2.8,3.1,3.3,3.4,3.4,3.6,3.5,3.2,3.1,3.1\\\",\\\"wesseling, stadt\\\"\\n05366004,17367,8536,8831,53902,05366004,10.5,7.2,3.3,2.6,5.8,1447,1000,447,1825,1248,577,8.3,\\\"6.8,8.0,8.7,8.9,9.1,9.4,9.6,10.0,10.1,10.3,10.4,10.8,10.5\\\",\\\"5.7,6.3,6.7,6.9,6.8,6.9,6.8,7.0,7.0,7.1,7.3,7.4,7.2\\\",\\\"1.1,1.7,2.0,2.1,2.3,2.6,2.8,3.0,3.0,3.2,3.1,3.4,3.3\\\",\\\"bad münstereifel, stadt\\\"\\n05366008,8471,4343,4128,53945,05366008,10.1,6.9,3.2,3.0,5.8,752,494,258,856,587,269,8.9,\\\"7.5,8.7,9.0,9.2,9.5,9.9,10.0,10.0,10.2,10.0,10.2,10.1,10.1\\\",\\\"6.3,6.9,7.0,7.0,7.3,7.4,7.4,7.0,7.1,7.0,7.1,6.9,6.9\\\",\\\"1.2,1.8,2.0,2.2,2.2,2.5,2.6,3.0,3.0,3.0,3.1,3.1,3.2\\\",blankenheim\\n05366012,4236,2085,2151,53949,05366012,11.9,8.4,3.5,1.9,5.4,311,229,82,502,354,148,7.3,\\\"8.5,9.3,9.3,10.0,10.5,10.2,11.0,11.4,11.7,11.2,11.7,11.9,11.9\\\",\\\"6.7,7.4,7.3,8.1,8.1,7.8,8.1,8.3,8.5,7.7,8.4,8.4,8.4\\\",\\\"1.8,1.9,2.0,1.9,2.4,2.5,2.9,3.1,3.2,3.5,3.4,3.5,3.5\\\",dahlem\\n05366016,56769,27854,28915,53879,05366016,9.8,6.7,3.1,3.0,6.7,5497,3783,1714,5587,3803,1784,9.7,\\\"7.4,8.6,8.9,9.5,9.8,10.0,10.0,10.1,10.2,10.0,9.9,10.1,9.8\\\",\\\"6.0,6.5,6.6,6.9,7.0,7.1,6.9,6.9,7.0,6.7,6.9,6.9,6.7\\\",\\\"1.4,2.1,2.2,2.5,2.7,2.9,3.1,3.2,3.2,3.3,3.0,3.2,3.1\\\",\\\"euskirchen, stadt\\\"\\n05366020,8094,4125,3969,53940,05366020,11.5,7.6,3.9,2.4,4.5,565,367,198,929,615,314,7.0,\\\"8.0,9.5,9.9,10.2,10.8,11.0,11.0,11.5,11.9,12.0,11.9,11.8,11.5\\\",\\\"6.4,6.9,7.3,7.4,8.1,7.9,7.8,8.1,8.3,7.9,8.2,7.7,7.6\\\",\\\"1.6,2.5,2.5,2.9,2.7,3.1,3.3,3.4,3.6,4.2,3.7,4.0,3.9\\\",hellenthal\\n05366024,11229,5606,5623,53925,05366024,10.8,7.3,3.5,6.1,9.7,1768,1085,683,1216,822,394,15.7,\\\"7.6,9.0,9.0,9.4,9.7,10.0,10.0,10.0,10.4,10.8,11.1,11.1,10.8\\\",\\\"6.3,7.1,7.1,7.3,7.4,7.3,7.3,7.3,7.2,7.5,7.9,7.6,7.3\\\",\\\"1.3,1.9,2.0,2.1,2.4,2.7,2.7,2.8,3.1,3.2,3.2,3.5,3.5\\\",kall\\n05366028,27170,13551,13619,53894,05366028,10.0,6.9,3.1,2.7,5.5,2205,1482,723,2729,1880,849,8.1,\\\"7.6,8.6,8.7,9.1,9.3,9.6,9.7,10.0,10.3,10.6,10.3,10.3,10.0\\\",\\\"6.1,6.5,6.6,6.8,6.8,7.0,7.0,7.1,7.1,7.3,7.4,7.3,6.9\\\",\\\"1.5,2.1,2.2,2.3,2.5,2.6,2.7,2.9,3.2,3.3,2.9,3.0,3.1\\\",\\\"mechernich, stadt\\\"\\n05366032,7469,3713,3756,53947,05366032,11.2,7.2,4.0,2.8,5.2,598,392,206,839,541,298,8.0,\\\"7.6,8.9,8.8,8.9,9.2,10.3,9.9,10.2,10.4,10.7,11.2,11.1,11.2\\\",\\\"6.2,6.9,6.8,6.7,6.9,7.4,6.9,7.0,7.1,7.3,7.5,7.5,7.2\\\",\\\"1.4,2.0,2.1,2.2,2.3,2.9,3.0,3.2,3.4,3.4,3.6,3.6,4.0\\\",nettersheim\\n05366036,13272,6623,6649,53937,05366036,11.4,7.7,3.7,3.5,7.7,1496,1028,468,1513,1021,492,11.3,\\\"8.5,10.0,10.2,10.9,11.0,11.1,11.5,12.0,11.9,12.3,11.8,12.1,11.4\\\",\\\"6.8,7.5,7.7,8.1,7.8,7.8,8.0,8.6,8.4,8.3,8.2,8.3,7.7\\\",\\\"1.7,2.4,2.5,2.8,3.2,3.3,3.4,3.4,3.6,4.1,3.7,3.7,3.7\\\",\\\"schleiden, stadt\\\"\\n05366040,16997,8404,8593,53919,05366040,9.2,6.0,3.2,1.9,4.0,998,683,315,1571,1027,544,5.9,\\\"6.4,7.7,7.7,8.3,8.5,8.8,9.2,9.2,9.1,9.3,9.2,9.5,9.2\\\",\\\"5.3,6.0,5.7,6.0,6.0,6.1,6.2,6.2,6.0,6.2,6.1,6.4,6.0\\\",\\\"1.1,1.8,2.1,2.3,2.6,2.8,3.0,3.0,3.1,3.1,3.0,3.1,3.2\\\",weilerswist\\n05366044,20091,9919,10172,53909,05366044,10.3,7.0,3.3,3.1,6.1,1853,1231,622,2079,1415,664,9.2,\\\"7.7,8.7,9.1,9.6,9.6,10.2,10.2,10.1,10.3,10.5,10.5,10.9,10.3\\\",\\\"6.3,6.7,6.8,7.1,7.1,7.3,7.3,7.1,7.2,7.0,7.3,7.5,7.0\\\",\\\"1.3,2.0,2.2,2.4,2.5,2.9,2.9,3.0,3.1,3.4,3.2,3.4,3.3\\\",\\\"zülpich, stadt\\\"\\n05370004,43350,21170,22180,41812,05370004,10.1,7.1,3.1,3.0,7.7,4665,3352,1313,4386,3058,1328,10.8,\\\"8.2,9.3,9.2,9.5,9.8,9.9,9.9,10.1,10.3,10.6,10.6,10.6,10.1\\\",\\\"6.9,7.4,7.3,7.4,7.5,7.4,7.3,7.4,7.4,7.4,7.7,7.6,7.1\\\",\\\"1.3,1.9,2.0,2.1,2.3,2.5,2.7,2.7,2.9,3.1,2.9,3.1,3.1\\\",\\\"erkelenz, stadt\\\"\\n05370008,12015,6002,6013,52538,05370008,9.9,7.0,2.8,2.5,7.4,1190,885,305,1187,847,340,9.9,\\\"7.9,9.0,9.2,9.4,9.6,10.0,10.1,10.6,10.5,10.1,10.2,10.3,9.9\\\",\\\"6.8,7.5,7.5,7.8,7.6,7.7,7.8,7.9,7.8,7.5,7.7,7.6,7.0\\\",\\\"1.1,1.5,1.6,1.6,2.1,2.3,2.3,2.7,2.7,2.6,2.5,2.7,2.8\\\",gangelt\\n05370012,26963,13424,13539,52511,05370012,11.1,7.9,3.2,3.1,7.8,2941,2096,845,3006,2135,871,10.9,\\\"8.0,9.1,8.9,9.2,9.7,9.9,10.2,10.0,10.5,11.2,11.2,11.2,11.1\\\",\\\"6.9,7.4,7.1,7.3,7.4,7.4,7.6,7.2,7.5,7.8,8.0,7.9,7.9\\\",\\\"1.1,1.8,1.8,2.0,2.3,2.6,2.6,2.9,3.0,3.3,3.2,3.3,3.2\\\",\\\"geilenkirchen, stadt\\\"\\n05370016,41538,20387,21151,52525,05370016,10.4,7.6,2.9,3.4,9.6,5378,3980,1398,4323,3139,1184,12.9,\\\"9.3,10.6,10.6,10.7,10.7,10.8,11.0,11.2,11.1,10.9,10.8,10.7,10.4\\\",\\\"8.1,8.9,8.7,8.7,8.5,8.5,8.4,8.5,8.3,8.1,8.2,8.0,7.6\\\",\\\"1.3,1.7,1.8,2.0,2.2,2.3,2.6,2.7,2.8,2.8,2.6,2.7,2.9\\\",\\\"heinsberg, stadt\\\"\\n05370020,39531,19537,19994,41836,05370020,10.0,7.3,2.7,2.0,5.9,3134,2324,810,3967,2903,1064,7.9,\\\"8.1,9.5,9.6,10.0,10.3,10.6,10.4,10.6,10.7,10.7,10.7,10.6,10.0\\\",\\\"7.1,7.9,7.9,7.9,8.1,8.2,8.0,8.0,8.0,7.8,8.0,7.8,7.3\\\",\\\"1.1,1.7,1.8,2.1,2.1,2.4,2.4,2.6,2.7,2.9,2.7,2.7,2.7\\\",\\\"hückelhoven, stadt\\\"\\n05370024,10167,5173,4994,52538,05370024,7.8,6.1,1.7,1.5,5.7,730,577,153,794,623,171,7.2,\\\"6.0,7.1,7.1,7.4,7.7,7.9,8.2,8.3,8.4,8.1,8.0,7.9,7.8\\\",\\\"5.1,6.0,5.8,6.2,6.2,6.4,6.5,6.6,6.6,6.4,6.4,6.2,6.1\\\",\\\"0.9,1.1,1.3,1.2,1.4,1.5,1.7,1.6,1.9,1.7,1.6,1.7,1.7\\\",selfkant\\n05370028,24377,12270,12107,52531,05370028,10.6,7.9,2.7,2.3,6.8,2215,1650,565,2594,1932,662,9.1,\\\"9.0,10.2,10.1,10.7,10.8,11.3,11.4,11.0,11.1,11.2,11.6,11.5,10.6\\\",\\\"7.8,8.3,8.2,8.6,8.5,9.0,8.9,8.2,8.2,8.4,8.8,8.7,7.9\\\",\\\"1.2,1.8,1.9,2.1,2.2,2.3,2.5,2.8,2.9,2.8,2.8,2.7,2.7\\\",\\\"übach-palenberg, stadt\\\"\\n05370032,8861,4447,4414,52525,05370032,9.9,7.5,2.4,1.8,6.2,709,553,156,876,665,211,8.0,\\\"7.8,8.4,8.8,8.9,9.1,9.7,9.7,10.2,10.5,10.7,10.3,10.3,9.9\\\",\\\"6.8,7.0,7.2,7.2,7.3,7.4,7.4,7.8,7.9,7.9,7.9,8.0,7.5\\\",\\\"1.0,1.4,1.6,1.7,1.8,2.2,2.2,2.4,2.6,2.7,2.3,2.3,2.4\\\",waldfeucht\\n05370036,17898,8889,9009,41849,05370036,9.7,6.9,2.8,2.1,5.4,1347,975,372,1734,1233,501,7.5,\\\"8.5,9.3,9.6,9.9,9.9,10.0,9.9,10.2,10.3,10.5,10.3,10.3,9.7\\\",\\\"7.5,7.8,7.9,8.0,7.9,7.5,7.5,7.7,7.6,7.5,7.5,7.4,6.9\\\",\\\"1.0,1.5,1.7,1.9,2.0,2.5,2.3,2.5,2.7,2.9,2.8,2.9,2.8\\\",\\\"wassenberg, stadt\\\"\\n05370040,27827,13657,14170,41844,05370040,10.1,7.1,3.1,2.6,6.1,2412,1695,717,2816,1962,854,8.7,\\\"7.5,8.8,8.8,9.1,9.3,9.6,10.0,10.3,10.3,10.5,10.5,10.6,10.1\\\",\\\"6.2,7.0,6.8,7.0,7.0,7.1,7.3,7.5,7.3,7.4,7.5,7.6,7.1\\\",\\\"1.3,1.8,2.0,2.2,2.3,2.5,2.7,2.8,2.9,3.0,3.0,3.1,3.1\\\",\\\"wegberg, stadt\\\"\\n05374004,18940,9294,9646,51702,05374004,10.1,7.2,2.9,2.0,4.9,1315,937,378,1911,1365,546,6.9,\\\"7.0,8.1,8.3,8.8,9.0,9.5,9.1,9.2,9.5,10.0,10.0,10.0,10.1\\\",\\\"5.7,6.0,6.1,6.3,6.6,6.6,6.5,6.7,6.7,7.0,7.2,7.2,7.2\\\",\\\"1.4,2.0,2.2,2.5,2.5,2.9,2.6,2.5,2.8,3.0,2.7,2.9,2.9\\\",\\\"bergneustadt, stadt\\\"\\n05374008,19307,9395,9912,51766,05374008,10.6,6.7,3.8,3.6,6.3,1902,1215,687,2043,1300,743,9.9,\\\"7.8,9.3,9.2,9.5,9.7,10.1,10.0,10.2,10.6,10.7,10.7,10.6,10.6\\\",\\\"6.2,7.0,6.6,6.8,6.8,6.8,6.7,6.8,7.0,6.8,7.2,7.0,6.7\\\",\\\"1.6,2.4,2.5,2.7,2.9,3.3,3.2,3.4,3.6,3.9,3.5,3.6,3.8\\\",engelskirchen\\n05374012,50412,24870,25542,51643,05374012,10.9,7.2,3.6,3.9,8.0,5957,4008,1949,5477,3648,1829,11.8,\\\"7.9,8.9,9.0,9.4,9.7,10.1,10.0,10.3,10.3,10.5,10.8,10.9,10.9\\\",\\\"6.2,6.6,6.4,6.7,6.8,6.9,7.0,7.0,6.8,6.8,7.4,7.5,7.2\\\",\\\"1.7,2.4,2.6,2.7,2.9,3.1,3.0,3.3,3.4,3.7,3.4,3.5,3.6\\\",\\\"gummersbach, stadt\\\"\\n05374016,15275,7620,7655,42499,05374016,10.7,7.2,3.5,3.0,5.9,1354,901,453,1629,1099,530,8.9,\\\"8.5,9.7,10.1,10.3,10.6,10.9,10.6,10.6,10.6,11.0,11.1,11.0,10.7\\\",\\\"6.7,7.2,7.4,7.3,7.4,7.7,7.5,7.5,7.2,7.6,7.7,7.6,7.2\\\",\\\"1.8,2.4,2.7,3.0,3.2,3.2,3.1,3.2,3.4,3.4,3.4,3.4,3.5\\\",\\\"hückeswagen, schloss-stadt\\\"\\n05374020,21382,10491,10891,51789,05374020,11.9,7.9,3.9,3.4,6.9,2188,1469,719,2536,1695,841,10.2,\\\"8.3,9.5,10.1,10.4,10.9,11.4,11.3,11.7,11.8,12.3,12.1,12.0,11.9\\\",\\\"6.8,7.3,7.6,7.6,7.8,7.9,7.8,8.1,8.1,8.3,8.4,8.1,7.9\\\",\\\"1.5,2.2,2.5,2.8,3.0,3.5,3.5,3.6,3.7,4.0,3.7,3.9,3.9\\\",lindlar\\n05374024,13560,6750,6810,51709,05374024,10.5,6.8,3.7,2.7,4.8,1017,647,370,1423,924,499,7.5,\\\"7.6,9.2,9.3,9.4,9.9,10.1,9.3,10.0,10.3,10.4,10.6,10.7,10.5\\\",\\\"6.2,6.9,6.8,6.6,7.0,6.8,6.5,6.7,6.7,6.8,7.1,7.0,6.8\\\",\\\"1.4,2.3,2.5,2.7,2.9,3.3,2.8,3.3,3.6,3.6,3.6,3.7,3.7\\\",marienheide\\n05374028,10402,5228,5174,51597,05374028,11.7,8.1,3.6,3.4,6.2,998,649,349,1214,844,370,9.6,\\\"8.5,9.7,9.2,9.7,10.5,10.3,10.5,10.4,11.1,11.5,11.5,11.3,11.7\\\",\\\"7.1,7.5,7.1,7.2,7.9,7.3,7.7,7.8,7.9,7.9,8.2,7.7,8.1\\\",\\\"1.5,2.2,2.1,2.4,2.6,3.0,2.8,2.7,3.1,3.5,3.3,3.6,3.6\\\",morsbach\\n05374032,17002,8310,8692,51588,05374032,9.9,6.5,3.4,2.7,5.1,1335,871,464,1690,1104,586,7.9,\\\"7.8,8.7,8.7,8.9,9.4,9.7,9.7,10.0,10.0,10.0,10.3,10.4,9.9\\\",\\\"6.5,6.6,6.6,6.5,6.7,6.7,6.7,7.0,6.7,6.5,7.0,7.0,6.5\\\",\\\"1.3,2.1,2.1,2.4,2.7,3.0,3.0,3.0,3.3,3.4,3.3,3.4,3.4\\\",nümbrecht\\n05374036,22386,10916,11470,42477,05374036,10.7,7.1,3.6,3.7,6.6,2310,1488,822,2397,1587,810,10.3,\\\"8.7,10.3,10.3,10.6,11.2,11.3,10.7,11.3,11.6,11.2,10.9,10.9,10.7\\\",\\\"6.5,7.3,7.2,7.6,7.7,7.5,7.3,7.5,7.5,7.2,7.3,7.2,7.1\\\",\\\"2.2,3.0,3.1,3.1,3.5,3.8,3.4,3.8,4.1,4.0,3.7,3.7,3.6\\\",\\\"radevormwald, stadt auf der höhe\\\"\\n05374040,18837,9499,9338,51580,05374040,10.5,7.0,3.5,4.7,8.1,2413,1531,882,1971,1319,652,12.8,\\\"7.9,8.9,9.0,9.1,9.3,9.8,9.7,9.7,10.0,10.5,10.7,10.8,10.5\\\",\\\"6.4,6.8,6.7,6.7,6.7,6.9,6.8,6.7,6.8,7.1,7.6,7.4,7.0\\\",\\\"1.5,2.1,2.3,2.4,2.7,3.0,2.9,2.9,3.2,3.4,3.1,3.4,3.5\\\",reichshof\\n05374044,19194,9389,9805,51545,05374044,10.1,6.6,3.5,2.8,6.2,1738,1191,547,1941,1275,666,9.1,\\\"8.4,9.4,8.8,9.1,9.2,9.2,9.2,9.2,9.8,9.9,10.1,10.6,10.1\\\",\\\"6.9,6.9,6.4,6.5,6.4,6.6,6.5,6.6,6.4,6.6,7.0,7.2,6.6\\\",\\\"1.5,2.5,2.4,2.5,2.8,2.6,2.7,2.7,3.4,3.3,3.1,3.4,3.5\\\",\\\"waldbröl, stadt\\\"\\n05374048,25274,12253,13021,51674,05374048,10.5,6.9,3.6,5.1,9.3,3628,2346,1282,2653,1734,919,14.4,\\\"8.1,9.0,9.0,9.2,9.5,10.1,9.7,9.7,10.1,10.2,10.5,10.5,10.5\\\",\\\"6.4,6.9,6.6,6.6,6.8,6.9,6.6,6.6,6.7,6.7,7.0,7.0,6.9\\\",\\\"1.7,2.2,2.3,2.7,2.8,3.2,3.0,3.1,3.4,3.6,3.5,3.5,3.6\\\",\\\"wiehl, stadt\\\"\\n05374052,21481,10655,10826,51688,05374052,12.7,8.3,4.3,3.9,7.7,2490,1646,844,2721,1791,930,11.6,\\\"9.4,10.9,11.1,11.3,11.6,12.1,11.5,11.5,11.9,12.9,12.8,12.7,12.7\\\",\\\"7.4,8.1,8.2,7.9,8.1,8.4,8.0,8.0,8.0,8.5,8.6,8.4,8.3\\\",\\\"2.0,2.9,2.9,3.3,3.5,3.7,3.5,3.5,3.8,4.5,4.2,4.2,4.3\\\",\\\"wipperfürth, hansestadt\\\"\\n05378004,111366,53479,57887,51465,05378004,9.3,6.2,3.0,3.2,6.5,10797,7252,3545,10327,6960,3367,9.7,\\\"6.9,8.2,8.4,8.8,9.1,9.3,9.8,9.7,9.9,9.7,9.6,9.5,9.3\\\",\\\"5.5,6.1,6.1,6.3,6.4,6.5,6.8,6.6,6.7,6.5,6.7,6.5,6.2\\\",\\\"1.4,2.1,2.3,2.5,2.6,2.8,3.0,3.0,3.2,3.2,2.9,3.0,3.0\\\",\\\"bergisch gladbach, stadt\\\"\\n05378008,18256,9037,9219,51399,05378008,10.0,6.8,3.2,2.7,6.0,1594,1099,495,1826,1241,585,8.7,\\\"6.9,8.2,8.1,8.6,9.1,9.2,9.5,9.9,10.1,10.3,10.1,10.1,10.0\\\",\\\"5.5,5.9,5.7,6.1,6.5,6.3,6.7,6.9,6.9,6.9,7.0,7.0,6.8\\\",\\\"1.5,2.3,2.3,2.5,2.6,2.9,2.8,3.0,3.2,3.4,3.0,3.1,3.2\\\",\\\"burscheid, stadt\\\"\\n05378012,19893,9823,10070,51515,05378012,11.1,7.6,3.6,3.9,6.5,2083,1299,784,2213,1505,708,10.5,\\\"9.0,10.3,10.6,11.0,11.0,11.4,11.4,11.2,11.6,11.9,11.7,11.7,11.1\\\",\\\"7.2,7.8,7.9,7.9,7.9,7.9,8.0,7.8,7.9,8.1,8.1,8.0,7.6\\\",\\\"1.8,2.6,2.7,3.1,3.1,3.5,3.4,3.4,3.7,3.8,3.6,3.7,3.6\\\",kürten\\n05378016,27937,13468,14469,42799,05378016,8.5,5.9,2.6,2.5,5.4,2223,1521,702,2378,1662,716,8.0,\\\"6.4,7.3,7.5,8.1,8.3,8.5,8.3,8.5,8.8,8.7,8.6,8.9,8.5\\\",\\\"5.3,5.6,5.6,6.0,6.0,6.0,5.9,6.1,6.2,6.0,6.2,6.3,5.9\\\",\\\"1.1,1.6,1.9,2.1,2.3,2.5,2.4,2.4,2.7,2.7,2.5,2.6,2.6\\\",\\\"leichlingen (rheinland), blütenstadt\\\"\\n05378020,15123,7456,7667,51519,05378020,8.8,5.8,3.0,2.0,3.7,867,561,306,1332,875,457,5.7,\\\"6.2,7.3,7.1,7.4,8.0,8.4,8.5,8.6,8.8,9.4,9.4,9.3,8.8\\\",\\\"5.2,5.6,5.4,5.5,5.8,5.9,5.9,5.9,6.0,6.5,6.5,6.2,5.8\\\",\\\"1.0,1.7,1.7,1.9,2.2,2.5,2.6,2.7,2.8,2.9,2.9,3.1,3.0\\\",odenthal\\n05378024,27264,13439,13825,51491,05378024,10.5,7.0,3.5,3.2,6.3,2574,1711,863,2870,1911,959,9.4,\\\"7.6,9.4,9.5,9.9,10.2,10.6,10.5,10.5,10.7,10.8,10.5,10.7,10.5\\\",\\\"6.0,6.9,6.9,7.1,7.3,7.5,7.2,7.2,7.2,7.2,7.1,7.2,7.0\\\",\\\"1.6,2.5,2.5,2.8,2.9,3.2,3.3,3.3,3.5,3.6,3.4,3.5,3.5\\\",\\\"overath, stadt\\\"\\n05378028,28386,13934,14452,51503,05378028,9.2,6.1,3.1,2.4,5.2,2178,1485,693,2624,1735,889,7.7,\\\"6.4,7.8,7.8,8.1,8.4,8.9,9.0,9.0,9.3,9.3,9.2,9.5,9.2\\\",\\\"5.1,5.7,5.6,5.8,5.9,6.1,6.1,6.0,6.1,6.1,6.3,6.3,6.1\\\",\\\"1.4,2.0,2.2,2.3,2.4,2.8,2.9,3.0,3.2,3.2,2.9,3.2,3.1\\\",\\\"rösrath, stadt\\\"\\n05378032,34504,16802,17702,42929,05378032,10.5,7.0,3.5,3.6,7.0,3666,2422,1244,3619,2403,1216,10.6,\\\"8.1,9.5,9.5,9.8,10.2,10.6,10.3,10.5,10.6,10.5,10.4,10.8,10.5\\\",\\\"6.3,7.1,6.9,7.1,7.3,7.3,7.2,7.2,7.1,7.0,7.0,7.2,7.0\\\",\\\"1.8,2.4,2.7,2.7,3.0,3.2,3.1,3.3,3.5,3.5,3.4,3.6,3.5\\\",\\\"wermelskirchen, stadt\\\"\\n05382004,23435,11515,11920,53347,05382004,9.9,6.3,3.7,2.0,3.6,1296,836,460,2324,1467,857,5.5,\\\"6.8,8.1,8.3,8.6,9.2,9.6,9.7,9.8,10.0,10.0,9.8,9.9,9.9\\\",\\\"5.1,5.6,5.6,5.9,6.0,6.2,6.2,6.4,6.5,6.3,6.3,6.6,6.3\\\",\\\"1.8,2.4,2.7,2.7,3.2,3.3,3.5,3.4,3.5,3.7,3.5,3.4,3.7\\\",alfter\\n05382008,25654,12337,13317,53604,05382008,9.7,6.4,3.3,4.3,8.6,3307,2216,1091,2495,1640,855,12.9,\\\"6.8,8.0,8.3,8.6,8.8,9.6,9.6,9.6,9.8,9.7,9.8,9.8,9.7\\\",\\\"5.2,5.7,5.9,5.9,6.0,6.5,6.3,6.3,6.4,6.4,6.6,6.4,6.4\\\",\\\"1.6,2.3,2.4,2.7,2.8,3.1,3.3,3.3,3.3,3.3,3.2,3.4,3.3\\\",\\\"bad honnef, stadt\\\"\\n05382012,47636,23280,24356,53332,05382012,9.6,6.1,3.4,3.1,5.8,4240,2743,1497,4553,2912,1641,8.9,\\\"6.7,8.1,8.0,8.4,8.6,8.9,9.0,9.3,9.6,10.0,10.0,10.0,9.6\\\",\\\"5.1,5.8,5.6,5.7,5.8,5.9,6.0,6.1,6.1,6.3,6.6,6.5,6.1\\\",\\\"1.6,2.3,2.4,2.7,2.8,3.0,3.1,3.2,3.5,3.7,3.4,3.5,3.4\\\",\\\"bornheim, stadt\\\"\\n05382016,18864,9428,9436,53783,05382016,9.7,6.8,2.9,2.4,5.7,1538,1082,456,1827,1285,542,8.2,\\\"7.5,8.4,8.6,8.6,8.8,9.0,9.2,9.1,9.6,10.3,9.9,10.0,9.7\\\",\\\"6.3,6.5,6.5,6.4,6.5,6.5,6.6,6.4,6.7,7.1,7.2,7.2,6.8\\\",\\\"1.3,1.9,2.2,2.1,2.3,2.6,2.6,2.7,2.9,3.2,2.7,2.9,2.9\\\",eitorf\\n05382020,46902,22868,24034,53773,05382020,10.0,6.5,3.4,3.1,5.9,4184,2745,1439,4673,3072,1601,8.9,\\\"7.2,8.7,8.6,9.0,9.3,9.7,9.7,9.8,9.9,10.2,10.3,10.2,10.0\\\",\\\"5.8,6.6,6.3,6.6,6.6,6.7,6.7,6.6,6.7,6.7,7.0,6.9,6.5\\\",\\\"1.4,2.1,2.3,2.5,2.7,3.0,3.0,3.2,3.3,3.5,3.3,3.3,3.4\\\",\\\"hennef (sieg), stadt\\\"\\n05382024,40702,19858,20844,53639,05382024,9.2,6.1,3.1,2.3,4.9,2943,1990,953,3754,2487,1267,7.2,\\\"6.8,8.3,8.4,8.6,8.9,9.1,9.4,9.4,9.4,9.5,9.4,9.4,9.2\\\",\\\"5.4,6.1,6.1,6.2,6.3,6.3,6.5,6.4,6.2,6.3,6.4,6.4,6.1\\\",\\\"1.4,2.2,2.3,2.4,2.6,2.8,2.9,3.0,3.2,3.3,3.0,3.0,3.1\\\",\\\"königswinter, stadt\\\"\\n05382028,30348,14915,15433,53797,05382028,9.0,6.1,2.9,5.5,14.3,5995,4330,1665,2718,1837,881,19.8,\\\"6.7,7.6,7.7,8.2,8.4,8.5,8.5,8.7,8.6,9.3,9.1,9.2,9.0\\\",\\\"5.5,5.7,5.7,6.0,5.9,6.0,6.0,6.0,5.7,6.2,6.2,6.4,6.1\\\",\\\"1.2,1.9,1.9,2.2,2.5,2.5,2.5,2.7,2.9,3.1,2.9,2.9,2.9\\\",\\\"lohmar, stadt\\\"\\n05382032,24357,11905,12452,53340,05382032,9.2,6.3,2.9,3.6,6.6,2468,1600,868,2229,1526,703,10.1,\\\"7.3,8.6,8.5,9.0,9.4,9.7,9.9,9.9,9.9,10.0,9.7,9.6,9.2\\\",\\\"5.9,6.4,6.4,6.6,6.9,7.0,7.0,6.7,6.8,6.6,6.8,6.6,6.3\\\",\\\"1.4,2.1,2.1,2.4,2.5,2.7,2.8,3.3,3.1,3.4,2.9,3.0,2.9\\\",\\\"meckenheim, stadt\\\"\\n05382036,14468,7078,7390,53804,05382036,10.1,6.8,3.3,2.7,4.8,1086,692,394,1459,977,482,7.5,\\\"7.0,8.3,8.3,8.6,9.0,9.3,9.5,9.6,10.0,10.4,10.5,10.5,10.1\\\",\\\"5.9,6.4,6.2,6.5,6.6,6.6,6.8,6.6,6.8,6.8,7.2,7.2,6.8\\\",\\\"1.2,1.9,2.0,2.1,2.4,2.7,2.8,3.0,3.2,3.6,3.3,3.4,3.3\\\",much\\n05382040,19862,9811,10051,53819,05382040,9.3,6.1,3.2,2.2,5.0,1425,984,441,1848,1217,631,7.2,\\\"6.8,7.9,8.3,8.9,8.9,9.3,9.4,9.3,9.3,10.1,10.1,9.8,9.3\\\",\\\"5.4,5.9,6.0,6.4,6.4,6.5,6.6,6.4,6.3,6.8,6.9,6.7,6.1\\\",\\\"1.4,2.0,2.3,2.5,2.5,2.8,2.9,2.9,3.0,3.3,3.2,3.1,3.2\\\",neunkirchen-seelscheid\\n05382044,37583,18543,19040,53859,05382044,9.2,5.9,3.3,2.0,4.0,2234,1494,740,3447,2201,1246,5.9,\\\"7.0,8.1,8.2,8.6,8.8,9.1,9.2,9.1,9.4,9.5,9.4,9.3,9.2\\\",\\\"5.6,5.9,5.8,6.0,6.0,6.1,5.9,5.9,6.0,6.0,6.1,6.0,5.9\\\",\\\"1.4,2.2,2.4,2.6,2.8,3.0,3.3,3.2,3.3,3.5,3.2,3.2,3.3\\\",\\\"niederkassel, stadt\\\"\\n05382048,27224,13508,13716,53359,05382048,10.0,6.8,3.2,3.3,7.2,2839,1947,892,2728,1848,880,10.4,\\\"7.3,8.4,8.6,8.7,9.2,9.5,9.7,9.8,9.9,10.3,9.9,10.1,10.0\\\",\\\"5.8,6.4,6.4,6.4,6.5,6.7,6.9,6.8,6.7,6.9,6.8,6.9,6.8\\\",\\\"1.5,2.0,2.2,2.3,2.7,2.8,2.8,3.0,3.2,3.4,3.1,3.2,3.2\\\",\\\"rheinbach, stadt\\\"\\n05382052,10461,5126,5335,53809,05382052,9.3,6.5,2.8,1.7,3.7,558,382,176,971,680,291,5.3,\\\"6.3,7.8,7.4,8.0,8.5,8.7,9.0,9.3,8.9,9.4,9.1,9.4,9.3\\\",\\\"5.1,5.9,5.6,6.0,6.2,6.1,6.3,6.8,6.3,6.5,6.7,6.8,6.5\\\",\\\"1.2,1.9,1.8,2.0,2.3,2.5,2.7,2.5,2.6,2.9,2.5,2.6,2.8\\\",ruppichteroth\\n05382056,55709,27246,28463,53757,05382056,8.8,5.8,3.0,2.5,4.7,3966,2593,1373,4891,3205,1686,7.1,\\\"6.6,7.8,8.1,8.5,8.7,9.0,9.3,9.1,9.0,9.3,9.2,9.1,8.8\\\",\\\"5.3,5.7,5.8,6.0,6.0,6.0,6.1,6.0,5.8,6.0,6.2,6.1,5.8\\\",\\\"1.4,2.1,2.4,2.6,2.7,3.0,3.2,3.1,3.2,3.4,3.0,3.0,3.0\\\",\\\"sankt augustin, stadt\\\"\\n05382060,41016,20169,20847,53721,05382060,9.4,6.0,3.4,4.0,7.6,4763,3137,1626,3846,2469,1377,11.6,\\\"7.5,8.6,8.8,9.2,9.5,9.7,9.8,9.7,9.7,9.8,9.8,9.8,9.4\\\",\\\"5.9,6.3,6.3,6.5,6.5,6.5,6.5,6.4,6.2,6.2,6.5,6.4,6.0\\\",\\\"1.6,2.3,2.5,2.8,3.0,3.3,3.3,3.3,3.5,3.6,3.3,3.3,3.4\\\",\\\"siegburg, stadt\\\"\\n05382064,18204,8995,9209,53913,05382064,9.0,5.9,3.1,1.9,3.9,1053,704,349,1631,1072,559,5.8,\\\"6.7,8.0,8.0,8.1,8.5,8.8,9.1,9.1,9.0,9.4,9.5,9.3,9.0\\\",\\\"5.5,6.1,5.8,5.8,6.0,6.1,6.3,6.3,6.0,6.2,6.4,6.2,5.9\\\",\\\"1.2,1.8,2.1,2.2,2.5,2.7,2.8,2.9,3.0,3.2,3.1,3.1,3.1\\\",swisttal\\n05382068,74400,36404,37996,53840,05382068,9.9,6.3,3.6,3.5,6.4,7330,4747,2583,7369,4680,2689,9.9,\\\"7.1,8.5,8.6,8.8,9.1,9.4,9.5,9.7,9.9,10.3,10.2,10.2,9.9\\\",\\\"5.5,6.1,6.1,6.0,6.1,6.2,6.4,6.4,6.3,6.5,6.6,6.5,6.3\\\",\\\"1.6,2.4,2.5,2.8,3.0,3.2,3.1,3.4,3.6,3.8,3.6,3.7,3.6\\\",\\\"troisdorf, stadt\\\"\\n05382072,20457,10090,10367,53343,05382072,8.9,5.6,3.3,2.2,4.4,1340,891,449,1822,1151,671,6.6,\\\"6.0,7.4,7.7,7.8,8.2,8.6,8.6,8.7,8.8,9.1,9.1,9.0,8.9\\\",\\\"4.7,5.4,5.6,5.6,5.6,5.7,5.6,5.6,5.5,5.6,5.9,5.6,5.6\\\",\\\"1.3,2.0,2.1,2.3,2.7,2.9,3.0,3.1,3.4,3.5,3.2,3.4,3.3\\\",wachtberg\\n05382076,18931,9479,9452,51570,05382076,9.2,6.6,2.6,1.8,4.6,1211,863,348,1738,1251,487,6.4,\\\"6.4,7.1,7.2,7.1,7.4,7.8,7.8,7.9,8.1,8.9,9.2,9.2,9.2\\\",\\\"5.4,5.8,5.8,5.5,5.7,5.8,5.7,5.9,5.9,6.4,6.8,6.8,6.6\\\",\\\"1.0,1.4,1.4,1.6,1.8,2.0,2.0,2.0,2.2,2.4,2.3,2.3,2.6\\\",windeck\\n05512000,117143,57004,60139,46236,05512000,9.4,7.2,2.2,2.0,6.6,10060,7727,2333,10999,8402,2597,8.6,\\\"7.3,8.5,8.4,8.9,9.1,9.3,9.5,9.8,9.9,9.8,9.9,9.8,9.4\\\",\\\"6.3,6.9,6.9,7.2,7.2,7.2,7.4,7.5,7.6,7.4,7.7,7.6,7.2\\\",\\\"1.0,1.5,1.6,1.7,1.9,2.1,2.1,2.3,2.3,2.4,2.2,2.2,2.2\\\",\\\"bottrop, stadt\\\"\\n05513000,260368,129267,131101,45879,05513000,8.7,6.7,2.0,2.3,6.9,23828,17963,5865,22552,17336,5216,9.2,\\\"6.8,8.0,7.8,8.1,8.3,8.5,8.9,9.0,9.0,8.7,8.9,8.9,8.7\\\",\\\"5.8,6.5,6.3,6.5,6.5,6.5,6.8,6.9,6.9,6.6,7.0,6.9,6.7\\\",\\\"1.0,1.5,1.5,1.6,1.8,1.9,2.0,2.1,2.1,2.1,2.0,2.0,2.0\\\",\\\"gelsenkirchen, stadt\\\"\\n05515000,310039,148447,161592,48143,05515000,11.1,7.7,3.3,3.7,8.8,38622,27137,11485,34282,24009,10273,12.5,\\\"8.1,9.8,10.1,10.3,10.6,10.9,11.2,11.0,11.2,11.3,11.1,11.3,11.1\\\",\\\"6.1,7.0,7.1,7.3,7.4,7.4,7.5,7.3,7.4,7.4,7.8,8.0,7.7\\\",\\\"2.0,2.8,3.0,3.0,3.2,3.5,3.7,3.7,3.8,3.9,3.3,3.4,3.3\\\",\\\"münster, stadt\\\"\\n05554004,39277,19613,19664,48683,05554004,15.3,10.4,4.9,5.5,12.1,6940,4767,2173,6013,4092,1921,17.7,\\\"10.9,12.2,12.4,12.8,13.5,14.1,14.5,14.7,15.2,15.4,15.7,15.6,15.3\\\",\\\"9.1,9.7,9.6,9.7,10.1,10.2,10.5,10.5,10.5,10.5,10.9,10.8,10.4\\\",\\\"1.8,2.5,2.8,3.1,3.4,3.9,4.0,4.2,4.6,4.9,4.8,4.9,4.9\\\",\\\"ahaus, stadt\\\"\\n05554008,71443,35039,36404,46395,05554008,12.7,9.0,3.7,3.9,9.9,9831,7058,2773,9043,6411,2632,13.8,\\\"9.6,10.9,10.8,11.1,11.5,11.8,12.3,12.4,12.6,13.0,12.9,12.9,12.7\\\",\\\"7.7,8.3,8.2,8.4,8.5,8.7,9.1,9.1,8.9,9.2,9.4,9.3,9.0\\\",\\\"1.9,2.6,2.6,2.7,2.9,3.1,3.2,3.4,3.6,3.8,3.5,3.6,3.7\\\",\\\"bocholt, stadt\\\"\\n05554012,42272,20803,21469,46325,05554012,12.6,8.7,3.9,4.0,10.0,5896,4210,1686,5319,3659,1660,13.9,\\\"9.5,10.7,11.2,11.7,11.9,12.2,12.4,12.4,12.9,12.7,12.7,13.0,12.6\\\",\\\"7.9,8.4,8.6,8.9,8.9,9.0,9.1,9.1,9.0,8.8,9.1,9.1,8.7\\\",\\\"1.7,2.3,2.6,2.8,3.0,3.2,3.3,3.4,3.8,3.9,3.6,3.9,3.9\\\",\\\"borken, stadt\\\"\\n05554016,17118,8644,8474,48712,05554016,12.8,9.0,3.7,3.2,8.2,1962,1408,554,2184,1544,640,11.5,\\\"9.5,10.6,10.5,11.0,11.4,11.7,11.8,12.0,12.5,12.8,13.1,12.9,12.8\\\",\\\"7.8,8.5,8.2,8.7,8.7,8.8,8.8,8.9,9.1,9.0,9.6,9.2,9.0\\\",\\\"1.6,2.2,2.3,2.3,2.8,2.9,3.1,3.1,3.4,3.8,3.5,3.7,3.7\\\",\\\"gescher, glockenstadt\\\"\\n05554020,47010,23468,23542,48599,05554020,12.0,8.7,3.3,2.9,8.4,5339,3972,1367,5623,4084,1539,11.4,\\\"9.7,10.5,10.3,10.9,11.3,11.6,11.8,11.9,12.3,12.7,12.6,12.5,12.0\\\",\\\"8.4,8.8,8.4,8.6,8.9,8.9,9.0,8.9,9.0,9.2,9.4,9.1,8.7\\\",\\\"1.3,1.7,2.0,2.3,2.4,2.7,2.8,3.0,3.3,3.5,3.2,3.3,3.3\\\",\\\"gronau (westf.), stadt\\\"\\n05554024,8505,4315,4190,48619,05554024,14.3,10.1,4.3,3.8,8.7,1057,737,320,1218,856,362,12.4,\\\"9.9,10.6,10.6,11.1,11.5,12.7,13.5,13.8,13.9,15.0,15.4,15.0,14.3\\\",\\\"8.1,8.3,8.2,8.4,8.4,9.2,10.1,9.7,9.7,10.4,10.9,10.7,10.1\\\",\\\"1.8,2.4,2.4,2.7,3.1,3.5,3.4,4.1,4.2,4.5,4.5,4.4,4.3\\\",heek\\n05554028,8152,4127,4025,46359,05554028,12.8,8.9,3.9,3.2,7.9,905,643,262,1041,727,314,11.1,\\\"9.5,11.4,12.0,11.5,11.8,12.6,12.9,13.0,13.0,12.8,13.1,13.0,12.8\\\",\\\"7.8,8.9,9.4,8.9,9.0,9.6,9.7,9.7,9.5,9.4,9.5,9.4,8.9\\\",\\\"1.6,2.5,2.6,2.5,2.8,3.0,3.2,3.3,3.5,3.4,3.5,3.5,3.9\\\",heiden\\n05554032,10736,5387,5349,46419,05554032,13.4,9.5,3.9,2.9,7.5,1119,803,316,1437,1021,416,10.4,\\\"10.1,11.2,11.1,11.7,12.1,12.6,13.3,13.1,13.5,14.1,13.6,13.4,13.4\\\",\\\"8.3,8.8,8.4,8.9,8.9,9.2,9.8,9.6,9.6,10.0,9.8,9.7,9.5\\\",\\\"1.7,2.4,2.7,2.8,3.2,3.3,3.5,3.5,3.9,4.0,3.8,3.7,3.9\\\",\\\"isselburg, stadt\\\"\\n05554036,7254,3794,3460,48739,05554036,13.7,9.5,4.2,5.0,9.4,1046,680,366,997,689,308,14.4,\\\"10.7,11.7,12.5,12.7,13.1,13.9,14.2,14.4,14.9,14.5,14.8,14.1,13.7\\\",\\\"8.7,9.1,9.6,9.7,9.7,9.9,10.2,10.2,10.5,9.9,10.5,10.0,9.5\\\",\\\"2.0,2.6,2.9,3.0,3.4,4.0,4.0,4.2,4.4,4.5,4.2,4.1,4.2\\\",legden\\n05554040,11378,5735,5643,46348,05554040,12.8,9.0,3.8,3.8,8.4,1382,953,429,1454,1024,430,12.1,\\\"8.5,9.8,10.3,11.2,11.9,12.2,12.9,13.0,13.4,13.3,13.1,13.0,12.8\\\",\\\"7.3,7.8,8.1,8.8,9.2,9.4,9.7,9.4,9.7,9.3,9.5,9.2,9.0\\\",\\\"1.2,2.0,2.2,2.4,2.8,2.8,3.3,3.5,3.7,4.0,3.6,3.7,3.8\\\",raesfeld\\n05554044,14532,7398,7134,48734,05554044,12.0,8.3,3.6,3.0,7.0,1452,1011,441,1741,1212,529,10.0,\\\"8.8,10.3,10.4,11.1,11.4,11.6,11.9,12.1,12.5,12.0,12.0,12.0,12.0\\\",\\\"7.3,8.1,8.2,8.6,8.6,8.5,8.8,8.7,9.0,8.6,8.7,8.4,8.3\\\",\\\"1.5,2.2,2.2,2.5,2.8,3.1,3.1,3.4,3.6,3.4,3.3,3.6,3.6\\\",reken\\n05554048,19284,9622,9662,46414,05554048,12.3,8.8,3.5,3.4,7.1,2031,1374,657,2370,1693,677,10.5,\\\"9.2,10.6,11.0,11.5,11.8,11.7,12.3,12.6,12.6,12.7,13.0,12.9,12.3\\\",\\\"7.5,8.3,8.5,8.9,9.0,8.8,9.1,9.3,9.2,9.1,9.5,9.4,8.8\\\",\\\"1.7,2.3,2.5,2.7,2.8,2.9,3.1,3.3,3.4,3.6,3.5,3.5,3.5\\\",\\\"rhede, stadt\\\"\\n05554052,7280,3895,3385,48624,05554052,12.7,8.7,4.0,4.1,8.2,892,597,295,921,633,288,12.3,\\\"8.8,10.4,10.2,9.8,9.8,10.0,10.5,10.8,10.4,12.8,12.6,12.9,12.7\\\",\\\"7.1,8.1,7.9,7.5,7.4,6.9,7.3,7.6,7.2,8.8,8.9,9.0,8.7\\\",\\\"1.7,2.3,2.3,2.2,2.5,3.0,3.2,3.2,3.2,4.0,3.7,3.9,4.0\\\",schöppingen\\n05554056,20411,10267,10144,48703,05554056,15.3,10.0,5.2,5.3,10.2,3157,2072,1085,3119,2048,1071,15.5,\\\"11.6,13.3,13.1,13.8,14.3,14.6,15.1,15.0,15.5,16.0,15.9,16.0,15.3\\\",\\\"9.5,10.3,10.2,10.4,10.6,10.6,10.8,10.5,10.8,10.8,10.6,10.7,10.0\\\",\\\"2.1,3.0,2.9,3.4,3.7,4.1,4.3,4.5,4.7,5.2,5.2,5.3,5.2\\\",\\\"stadtlohn, stadt\\\"\\n05554060,9134,4542,4592,46354,05554060,13.9,9.5,4.4,4.4,9.1,1229,831,398,1271,869,402,13.5,\\\"11.0,12.3,12.6,13.6,13.4,13.7,14.0,13.9,14.4,14.6,14.8,14.6,13.9\\\",\\\"9.2,9.8,9.7,10.2,9.9,9.9,9.8,9.8,9.8,10.0,10.6,10.3,9.5\\\",\\\"1.8,2.5,3.0,3.3,3.5,3.8,4.2,4.1,4.7,4.5,4.1,4.3,4.4\\\",südlohn\\n05554064,13192,6737,6455,46342,05554064,13.1,9.3,3.8,3.3,7.2,1388,948,440,1725,1225,500,10.5,\\\"9.2,10.6,10.8,11.2,11.5,11.9,12.2,12.2,12.9,12.9,13.0,13.4,13.1\\\",\\\"7.7,8.5,8.5,8.4,8.5,8.7,9.0,8.9,9.3,9.3,9.6,9.5,9.3\\\",\\\"1.5,2.1,2.3,2.8,3.0,3.1,3.2,3.3,3.6,3.7,3.4,3.8,3.8\\\",\\\"velen, stadt\\\"\\n05554068,22688,11587,11101,48691,05554068,16.4,10.9,5.5,5.2,9.8,3395,2223,1172,3720,2482,1238,15.0,\\\"11.1,12.7,13.0,13.6,14.5,14.9,15.5,15.5,15.9,16.2,16.6,16.9,16.4\\\",\\\"8.8,9.5,9.6,10.0,10.4,10.6,11.1,11.1,11.0,11.0,11.3,11.4,10.9\\\",\\\"2.3,3.2,3.4,3.6,4.1,4.3,4.4,4.4,4.9,5.2,5.3,5.5,5.5\\\",\\\"vreden, stadt\\\"\\n05558004,15253,7618,7635,59387,05558004,10.5,7.4,3.1,3.1,8.1,1707,1228,479,1600,1128,472,11.2,\\\"7.5,8.8,9.1,9.5,10.0,10.2,10.6,10.7,10.9,11.0,10.9,10.9,10.5\\\",\\\"6.2,6.9,7.0,7.2,7.5,7.4,7.8,7.6,7.7,7.6,7.7,7.7,7.4\\\",\\\"1.3,2.0,2.1,2.4,2.5,2.8,2.9,3.1,3.2,3.4,3.2,3.2,3.1\\\",ascheberg\\n05558008,11593,5812,5781,48727,05558008,11.6,7.8,3.8,3.4,7.5,1267,875,392,1342,904,438,10.9,\\\"8.3,9.5,9.4,9.6,10.0,10.7,11.1,11.1,11.1,11.3,11.6,11.2,11.6\\\",\\\"6.9,7.3,7.3,7.2,7.5,7.9,7.9,7.6,7.7,7.7,8.1,7.6,7.8\\\",\\\"1.3,2.1,2.1,2.4,2.5,2.8,3.2,3.4,3.5,3.6,3.5,3.7,3.8\\\",\\\"billerbeck, stadt\\\"\\n05558012,36116,17738,18378,48653,05558012,11.9,8.0,3.8,4.0,9.0,4696,3268,1428,4286,2904,1382,13.0,\\\"9.3,10.5,10.4,10.8,11.1,11.3,11.6,11.9,12.2,12.3,12.2,12.4,11.9\\\",\\\"7.5,8.1,8.1,8.2,8.2,8.1,8.2,8.4,8.5,8.5,8.6,8.6,8.0\\\",\\\"1.8,2.4,2.3,2.7,3.0,3.2,3.4,3.6,3.7,3.8,3.6,3.8,3.8\\\",\\\"coesfeld, stadt\\\"\\n05558016,46613,22685,23928,48249,05558016,10.7,7.6,3.2,2.7,6.3,4214,2939,1275,5004,3522,1482,9.0,\\\"8.1,9.3,9.5,9.9,10.2,10.7,10.7,10.9,11.1,11.1,11.3,11.1,10.7\\\",\\\"6.7,7.3,7.4,7.5,7.7,7.9,7.9,7.9,7.8,7.8,8.1,8.0,7.6\\\",\\\"1.4,2.0,2.2,2.4,2.5,2.8,2.8,2.9,3.2,3.4,3.2,3.2,3.2\\\",\\\"dülmen, stadt\\\"\\n05558020,11689,5732,5957,48329,05558020,10.4,7.0,3.3,2.5,5.6,953,655,298,1210,820,390,8.2,\\\"6.9,8.0,8.4,9.1,9.2,9.7,10.0,9.9,9.6,9.9,10.1,10.4,10.4\\\",\\\"5.4,6.0,5.9,6.7,6.7,7.1,7.1,7.0,6.8,6.8,7.2,7.1,7.0\\\",\\\"1.5,2.0,2.5,2.4,2.5,2.5,2.8,2.9,2.8,3.1,3.0,3.3,3.3\\\",havixbeck\\n05558024,24263,12054,12209,59348,05558024,10.6,7.4,3.1,3.1,7.9,2681,1919,762,2563,1805,758,11.0,\\\"7.7,8.9,8.8,9.2,9.9,9.9,10.3,10.5,10.5,10.8,11.0,10.8,10.6\\\",\\\"6.5,7.0,6.8,7.1,7.6,7.3,7.6,7.6,7.4,7.6,8.0,7.7,7.4\\\",\\\"1.2,1.9,1.9,2.1,2.4,2.6,2.7,2.9,3.1,3.3,3.0,3.1,3.1\\\",\\\"lüdinghausen, stadt\\\"\\n05558028,9781,4845,4936,59394,05558028,10.5,7.4,3.1,2.8,6.9,943,673,270,1026,724,302,9.6,\\\"7.7,8.7,9.1,9.3,9.3,9.9,9.9,10.1,9.7,11.0,10.4,10.7,10.5\\\",\\\"6.6,6.8,7.0,7.0,6.9,7.3,7.3,7.3,7.0,7.7,7.6,7.6,7.4\\\",\\\"1.1,1.9,2.1,2.3,2.5,2.5,2.6,2.7,2.8,3.2,2.8,3.1,3.1\\\",nordkirchen\\n05558032,19436,9641,9795,48301,05558032,11.0,7.5,3.6,2.9,5.9,1704,1139,565,2143,1452,691,8.8,\\\"8.1,9.3,9.4,9.7,10.3,10.5,10.7,10.8,10.8,11.0,11.1,11.1,11.0\\\",\\\"6.4,6.9,6.9,7.1,7.3,7.3,7.5,7.5,7.4,7.4,7.7,7.7,7.5\\\",\\\"1.7,2.4,2.5,2.5,3.0,3.2,3.2,3.3,3.4,3.6,3.4,3.5,3.6\\\",nottuln\\n05558036,12490,6145,6345,59399,05558036,10.0,7.2,2.8,2.7,6.5,1151,816,335,1250,905,345,9.2,\\\"7.1,8.2,8.2,8.7,9.0,9.3,9.6,9.7,10.0,10.1,10.2,10.5,10.0\\\",\\\"6.1,6.7,6.7,6.9,7.1,7.3,7.4,7.2,7.2,7.1,7.4,7.5,7.2\\\",\\\"1.1,1.5,1.6,1.7,1.9,2.0,2.2,2.6,2.9,2.9,2.8,3.0,2.8\\\",\\\"olfen, stadt\\\"\\n05558040,10712,5507,5205,48720,05558040,12.5,8.1,4.3,3.3,5.9,982,631,351,1337,872,465,9.2,\\\"8.9,10.0,10.4,10.4,10.6,11.5,11.9,12.3,12.6,12.3,13.2,13.4,12.5\\\",\\\"7.3,7.8,8.0,8.0,8.0,8.6,8.6,8.8,9.0,8.7,9.4,9.2,8.1\\\",\\\"1.6,2.2,2.4,2.4,2.6,2.8,3.3,3.5,3.7,3.6,3.8,4.2,4.3\\\",rosendahl\\n05558044,20455,10176,10279,48308,05558044,10.8,7.2,3.6,2.7,5.6,1692,1137,555,2209,1482,727,8.3,\\\"7.7,9.0,9.2,9.6,10.1,10.3,10.3,10.6,10.8,11.1,10.9,10.9,10.8\\\",\\\"6.4,6.8,6.8,7.1,7.1,7.1,7.1,7.3,7.0,7.3,7.5,7.5,7.2\\\",\\\"1.3,2.2,2.3,2.5,2.9,3.2,3.3,3.4,3.8,3.8,3.4,3.4,3.6\\\",senden\\n05562004,74220,36210,38010,44575,05562004,8.6,6.4,2.3,2.1,5.9,5944,4407,1537,6411,4719,1692,8.0,\\\"7.1,8.1,8.1,8.4,8.5,8.7,9.1,9.1,9.1,9.3,9.1,9.1,8.6\\\",\\\"6.1,6.5,6.5,6.6,6.5,6.6,6.9,6.9,6.8,6.8,7.0,6.9,6.4\\\",\\\"1.0,1.6,1.6,1.8,2.0,2.1,2.2,2.2,2.3,2.4,2.1,2.2,2.3\\\",\\\"castrop-rauxel, stadt\\\"\\n05562008,34521,16922,17599,45711,05562008,9.5,7.3,2.2,2.0,7.2,3152,2471,681,3277,2505,772,9.1,\\\"7.1,8.4,8.3,8.8,8.9,9.2,9.3,9.4,9.3,9.6,9.5,9.7,9.5\\\",\\\"6.1,7.0,6.8,7.1,7.0,7.1,7.2,7.2,7.1,7.3,7.4,7.5,7.3\\\",\\\"1.0,1.5,1.5,1.8,2.0,2.1,2.1,2.2,2.2,2.4,2.0,2.1,2.2\\\",\\\"datteln, stadt\\\"\\n05562012,75431,36714,38717,46284,05562012,10.4,7.9,2.5,2.3,7.1,7077,5333,1744,7808,5949,1859,9.4,\\\"8.1,9.1,9.2,9.5,9.9,10.3,10.6,10.7,10.8,10.6,10.6,10.6,10.4\\\",\\\"7.0,7.5,7.5,7.7,7.9,8.1,8.3,8.3,8.2,8.1,8.2,8.2,7.9\\\",\\\"1.0,1.6,1.7,1.8,2.0,2.2,2.3,2.4,2.5,2.6,2.3,2.3,2.5\\\",\\\"dorsten, stadt\\\"\\n05562014,75455,36801,38654,45964,05562014,9.5,7.4,2.2,1.7,6.2,5985,4686,1299,7205,5576,1629,7.9,\\\"7.2,8.5,8.4,8.7,8.8,8.9,9.2,9.4,9.7,9.7,9.8,9.9,9.5\\\",\\\"6.3,7.1,6.9,7.0,7.1,7.1,7.2,7.4,7.4,7.5,7.7,7.8,7.4\\\",\\\"0.9,1.5,1.5,1.7,1.8,1.8,2.0,2.1,2.3,2.2,2.1,2.1,2.2\\\",\\\"gladbeck, stadt\\\"\\n05562016,38020,18535,19485,45721,05562016,9.4,6.9,2.5,2.4,6.8,3506,2579,927,3587,2629,958,9.2,\\\"7.5,8.5,8.6,8.9,9.0,9.0,9.3,9.6,9.4,9.5,9.5,9.6,9.4\\\",\\\"6.4,6.9,6.9,7.0,7.0,6.8,6.9,7.1,6.9,7.1,7.2,7.1,6.9\\\",\\\"1.1,1.6,1.8,1.9,2.0,2.2,2.3,2.5,2.5,2.5,2.3,2.5,2.5\\\",\\\"haltern am see, stadt\\\"\\n05562020,61163,29875,31288,45699,05562020,9.0,7.0,2.0,1.6,5.9,4534,3580,954,5493,4298,1195,7.4,\\\"7.3,8.2,8.4,8.6,8.9,8.9,9.2,9.2,9.4,9.3,9.3,9.3,9.0\\\",\\\"6.3,6.9,6.9,6.9,7.1,7.0,7.0,7.1,7.2,7.1,7.4,7.4,7.0\\\",\\\"1.0,1.4,1.5,1.6,1.8,1.9,2.1,2.1,2.2,2.2,1.9,2.0,2.0\\\",\\\"herten, stadt\\\"\\n05562024,83926,41288,42638,45768,05562024,9.2,7.1,2.1,2.0,6.6,7211,5549,1662,7707,5980,1727,8.6,\\\"7.3,8.3,8.3,8.6,9.0,9.3,9.6,9.6,9.6,9.8,9.6,9.6,9.2\\\",\\\"6.4,6.8,6.8,6.9,7.3,7.3,7.5,7.5,7.4,7.5,7.6,7.6,7.1\\\",\\\"1.0,1.5,1.5,1.6,1.7,2.0,2.1,2.1,2.2,2.3,2.0,2.0,2.1\\\",\\\"marl, stadt\\\"\\n05562028,31387,15553,15834,45739,05562028,8.5,6.7,1.8,1.2,4.2,1685,1321,364,2668,2108,560,5.4,\\\"7.6,8.8,8.8,9.0,9.2,9.6,9.7,9.5,9.4,9.1,8.7,8.9,8.5\\\",\\\"6.5,7.2,7.2,7.2,7.2,7.3,7.5,7.4,7.2,6.9,6.9,7.0,6.7\\\",\\\"1.0,1.6,1.6,1.8,2.0,2.3,2.2,2.1,2.2,2.2,1.8,1.9,1.8\\\",\\\"oer-erkenschwick, stadt\\\"\\n05562032,114330,55697,58633,45657,05562032,9.4,7.1,2.2,2.1,6.7,10045,7650,2395,10707,8143,2564,8.8,\\\"7.2,8.4,8.3,8.5,8.7,8.8,9.0,9.2,9.2,9.4,9.3,9.6,9.4\\\",\\\"6.1,6.8,6.7,6.7,6.8,6.8,7.0,7.0,7.0,7.1,7.2,7.4,7.1\\\",\\\"1.1,1.6,1.6,1.7,1.9,2.0,2.1,2.2,2.3,2.3,2.1,2.2,2.2\\\",\\\"recklinghausen, stadt\\\"\\n05562036,29354,14298,15056,45731,05562036,9.5,7.2,2.3,1.7,6.1,2292,1800,492,2802,2117,685,7.8,\\\"7.8,8.8,8.9,9.0,9.2,9.4,9.6,9.7,9.8,9.8,9.7,9.9,9.5\\\",\\\"6.8,7.3,7.3,7.3,7.2,7.3,7.5,7.4,7.5,7.5,7.6,7.7,7.2\\\",\\\"1.0,1.5,1.6,1.7,1.9,2.1,2.1,2.2,2.3,2.3,2.1,2.2,2.3\\\",\\\"waltrop, stadt\\\"\\n05566004,10315,5201,5114,48341,05566004,10.4,7.0,3.5,3.3,6.1,975,634,341,1075,718,357,9.5,\\\"7.7,9.0,9.3,9.7,10.1,9.9,10.5,10.4,10.2,10.5,10.6,10.5,10.4\\\",\\\"6.2,6.7,6.7,6.8,7.2,6.8,7.0,6.9,6.7,6.9,7.2,6.8,7.0\\\",\\\"1.6,2.2,2.6,2.9,2.9,3.1,3.5,3.5,3.6,3.6,3.4,3.7,3.5\\\",altenberge\\n05566008,36320,18009,18311,48282,05566008,12.1,8.2,3.9,4.0,8.6,4573,3136,1437,4412,2979,1433,12.6,\\\"10.3,11.4,11.1,11.5,11.9,12.4,12.3,12.2,12.6,12.5,12.7,12.7,12.1\\\",\\\"8.4,8.9,8.5,8.7,8.8,8.9,8.9,8.6,8.8,8.5,8.9,8.7,8.2\\\",\\\"1.9,2.5,2.6,2.9,3.0,3.4,3.4,3.6,3.8,4.0,3.8,4.0,3.9\\\",\\\"emsdetten, stadt\\\"\\n05566012,36674,18087,18587,48268,05566012,11.1,7.3,3.8,4.2,8.5,4660,3108,1552,4072,2684,1388,12.7,\\\"8.5,9.6,9.7,9.9,10.3,10.5,10.6,10.9,11.2,11.8,11.7,11.6,11.1\\\",\\\"6.5,7.1,7.1,7.1,7.2,7.2,7.3,7.5,7.5,7.8,8.0,7.8,7.3\\\",\\\"1.9,2.5,2.6,2.8,3.1,3.3,3.3,3.4,3.7,4.0,3.7,3.7,3.8\\\",\\\"greven, stadt\\\"\\n05566016,19995,10048,9947,48477,05566016,12.6,8.8,3.8,3.2,7.8,2191,1554,637,2515,1760,755,11.0,\\\"9.2,10.6,11.0,11.4,12.0,12.3,12.3,12.3,12.6,12.7,12.8,12.7,12.6\\\",\\\"7.6,8.4,8.5,8.6,9.0,9.2,9.1,8.8,8.8,8.9,9.0,9.1,8.8\\\",\\\"1.6,2.2,2.4,2.8,3.1,3.0,3.2,3.6,3.8,3.8,3.7,3.7,3.8\\\",\\\"hörstel, stadt\\\"\\n05566020,7642,3973,3669,48496,05566020,14.0,9.6,4.4,3.6,7.2,828,551,277,1072,732,340,10.8,\\\"10.2,11.5,12.3,12.9,13.1,13.3,13.4,13.7,13.9,14.2,13.7,14.2,14.0\\\",\\\"8.3,9.1,9.7,9.9,10.0,9.9,9.8,9.7,9.6,9.6,9.3,9.6,9.6\\\",\\\"1.9,2.5,2.6,3.0,3.0,3.4,3.6,4.0,4.3,4.6,4.3,4.5,4.4\\\",hopsten\\n05566024,6447,3274,3173,48612,05566024,10.8,7.8,3.0,2.4,6.7,583,431,152,696,501,195,9.0,\\\"8.6,10.3,10.7,11.0,10.9,11.1,11.5,11.5,12.0,11.2,11.6,11.8,10.8\\\",\\\"7.2,8.4,8.5,8.6,8.6,8.7,8.7,8.4,8.7,8.0,8.5,8.5,7.8\\\",\\\"1.4,2.0,2.2,2.3,2.3,2.5,2.8,3.1,3.3,3.2,3.1,3.3,3.0\\\",\\\"horstmar, stadt der burgmannshöfe\\\"\\n05566028,50935,25176,25759,49477,05566028,12.0,8.4,3.6,3.6,8.6,6210,4396,1814,6097,4281,1816,12.2,\\\"9.1,10.5,10.6,10.9,11.3,11.6,11.8,11.7,11.8,12.2,12.1,12.1,12.0\\\",\\\"7.6,8.3,8.3,8.3,8.4,8.4,8.4,8.3,8.3,8.5,8.6,8.5,8.4\\\",\\\"1.5,2.2,2.3,2.6,2.9,3.2,3.3,3.4,3.5,3.8,3.4,3.6,3.6\\\",\\\"ibbenbüren, stadt\\\"\\n05566032,6694,3321,3373,49549,05566032,11.3,7.1,4.3,3.8,7.5,758,504,254,757,472,285,11.3,\\\"7.8,9.3,9.7,9.8,10.3,10.7,11.7,11.5,11.8,12.1,11.6,11.6,11.3\\\",\\\"6.4,6.9,7.2,7.0,7.1,7.4,8.1,7.8,7.7,8.0,7.7,7.4,7.1\\\",\\\"1.5,2.4,2.5,2.8,3.2,3.4,3.6,3.7,4.1,4.1,4.0,4.3,4.3\\\",ladbergen\\n05566036,6721,3370,3351,48366,05566036,10.6,7.4,3.2,2.6,6.3,595,423,172,713,499,214,8.9,\\\"9.5,10.7,10.7,10.7,10.8,11.3,12.0,11.1,11.6,11.1,10.9,10.5,10.6\\\",\\\"7.8,8.3,8.3,8.3,8.4,8.3,8.8,8.2,8.0,7.7,7.7,7.4,7.4\\\",\\\"1.7,2.4,2.4,2.4,2.4,3.0,3.2,2.9,3.6,3.4,3.2,3.1,3.2\\\",laer\\n05566040,22461,11129,11332,49525,05566040,10.6,7.1,3.5,2.9,6.0,2014,1352,662,2373,1590,783,9.0,\\\"7.8,9.2,9.1,9.7,10.4,10.2,10.2,10.4,10.7,11.0,10.7,10.8,10.6\\\",\\\"6.1,6.8,6.8,6.9,7.4,7.0,7.0,7.1,7.2,7.3,7.4,7.3,7.1\\\",\\\"1.7,2.4,2.4,2.8,3.0,3.2,3.2,3.3,3.6,3.7,3.3,3.5,3.5\\\",\\\"lengerich, stadt\\\"\\n05566044,8559,4316,4243,49536,05566044,10.8,7.2,3.6,2.3,5.0,621,424,197,921,616,305,7.3,\\\"7.9,8.9,8.9,9.4,9.8,9.8,10.0,10.1,10.6,10.8,10.5,11.0,10.8\\\",\\\"6.6,6.9,6.8,7.0,7.2,7.1,7.0,7.0,7.0,7.2,7.2,7.4,7.2\\\",\\\"1.3,2.0,2.1,2.4,2.6,2.8,3.0,3.0,3.6,3.6,3.3,3.6,3.6\\\",lienen\\n05566048,14175,7094,7081,49504,05566048,12.5,8.0,4.5,2.0,3.2,738,456,282,1771,1128,643,5.2,\\\"8.3,9.5,9.6,10.3,10.8,11.3,11.4,11.5,11.8,12.2,12.3,12.2,12.5\\\",\\\"6.4,7.0,7.0,7.4,7.6,7.6,7.5,7.3,7.5,7.7,7.7,7.7,8.0\\\",\\\"1.9,2.5,2.6,2.9,3.2,3.7,3.9,4.2,4.4,4.5,4.6,4.5,4.5\\\",lotte\\n05566052,6461,3262,3199,48629,05566052,11.6,8.3,3.3,2.3,5.3,488,341,147,748,537,211,7.6,\\\"9.7,11.1,10.8,11.2,11.7,11.8,12.7,12.8,12.1,12.4,12.4,11.9,11.6\\\",\\\"8.4,9.2,8.7,8.8,9.4,9.3,10.0,9.7,8.8,9.3,9.3,8.8,8.3\\\",\\\"1.4,1.9,2.1,2.4,2.3,2.4,2.7,3.1,3.3,3.1,3.1,3.1,3.3\\\",metelen\\n05566056,11815,5875,5940,49497,05566056,12.8,9.1,3.7,2.5,6.9,1118,821,297,1510,1074,436,9.5,\\\"9.2,10.9,11.1,10.9,11.3,11.5,11.9,12.1,12.4,12.8,12.9,12.9,12.8\\\",\\\"7.8,8.6,8.8,8.6,8.6,8.8,8.9,9.0,9.1,9.4,9.8,9.4,9.1\\\",\\\"1.4,2.3,2.3,2.4,2.7,2.7,2.9,3.1,3.3,3.4,3.2,3.5,3.7\\\",mettingen\\n05566060,13743,6908,6835,48485,05566060,13.1,9.4,3.7,3.5,8.8,1688,1209,479,1806,1297,509,12.3,\\\"9.4,10.9,11.1,11.7,12.5,12.7,13.1,13.3,13.6,13.6,13.7,13.6,13.1\\\",\\\"7.8,8.6,8.6,8.8,9.2,9.4,9.6,9.8,10.0,9.8,10.4,9.9,9.4\\\",\\\"1.7,2.3,2.6,2.9,3.3,3.3,3.4,3.5,3.7,3.8,3.3,3.7,3.7\\\",neuenkirchen\\n05566064,9388,4650,4738,48356,05566064,12.1,8.3,3.8,3.7,7.3,1039,689,350,1137,777,360,11.1,\\\"8.9,10.1,10.4,10.3,10.4,11.2,11.7,11.7,12.1,12.1,12.2,12.5,12.1\\\",\\\"7.5,7.9,8.1,7.9,8.0,8.1,8.4,8.4,8.4,8.4,8.7,8.5,8.3\\\",\\\"1.5,2.2,2.4,2.3,2.5,3.1,3.3,3.3,3.8,3.6,3.5,4.0,3.8\\\",nordwalde\\n05566068,19599,9922,9677,48607,05566068,12.9,8.9,4.0,3.4,8.2,2272,1607,665,2530,1751,779,11.6,\\\"8.9,10.3,10.7,11.2,11.6,12.0,11.8,12.1,12.6,13.0,13.5,13.6,12.9\\\",\\\"7.3,8.0,8.2,8.4,8.6,8.7,8.5,8.6,8.7,8.9,9.7,9.6,8.9\\\",\\\"1.6,2.3,2.5,2.7,3.0,3.3,3.3,3.5,3.9,4.1,3.8,4.0,4.0\\\",\\\"ochtrup, stadt\\\"\\n05566072,11363,5661,5702,49509,05566072,14.9,10.7,4.2,4.2,10.7,1694,1213,481,1693,1213,480,14.9,\\\"9.8,11.5,11.8,11.9,12.3,12.7,13.3,13.6,13.8,14.4,14.4,14.8,14.9\\\",\\\"8.1,9.1,9.5,9.2,9.3,9.6,9.8,10.1,10.1,10.4,10.6,10.6,10.7\\\",\\\"1.6,2.5,2.4,2.8,2.9,3.0,3.5,3.5,3.7,4.0,3.8,4.1,4.2\\\",recke\\n05566076,74852,36911,37941,48431,05566076,11.8,8.3,3.5,3.6,8.6,9137,6447,2690,8829,6184,2645,12.2,\\\"9.4,10.7,10.6,11.0,11.6,11.8,11.6,11.6,11.8,12.2,12.1,12.0,11.8\\\",\\\"7.8,8.5,8.4,8.5,8.8,8.8,8.6,8.5,8.5,8.5,8.8,8.5,8.3\\\",\\\"1.6,2.2,2.3,2.5,2.8,3.0,3.0,3.1,3.3,3.6,3.3,3.5,3.5\\\",\\\"rheine, stadt\\\"\\n05566080,7191,3639,3552,48369,05566080,12.1,8.0,4.1,4.9,7.1,859,509,350,871,573,298,11.9,\\\"9.0,9.9,10.1,10.2,10.5,11.3,11.6,11.0,12.0,12.0,12.8,12.9,12.1\\\",\\\"7.1,7.5,7.2,7.2,7.5,8.1,7.8,7.5,8.1,8.2,8.9,8.7,8.0\\\",\\\"1.9,2.4,2.9,2.9,3.1,3.2,3.7,3.5,3.9,3.8,3.9,4.2,4.1\\\",\\\"saerbeck, nrw-klimakommune\\\"\\n05566084,33682,16719,16963,48565,05566084,11.8,8.4,3.4,3.1,8.4,3854,2817,1037,3980,2836,1144,11.4,\\\"9.8,10.7,10.6,10.9,11.1,11.7,11.8,12.0,12.1,12.3,12.5,12.6,11.8\\\",\\\"8.1,8.3,8.4,8.3,8.4,8.7,8.8,8.7,8.7,8.7,9.2,9.2,8.4\\\",\\\"1.7,2.3,2.2,2.6,2.7,2.9,3.0,3.3,3.4,3.5,3.4,3.4,3.4\\\",\\\"steinfurt, stadt\\\"\\n05566088,9062,4573,4489,49545,05566088,10.4,7.1,3.2,3.6,7.0,959,636,323,938,647,291,10.6,\\\"7.9,9.2,9.5,10.2,10.3,10.4,9.8,10.1,10.4,10.4,10.4,10.6,10.4\\\",\\\"6.7,7.0,7.2,7.7,7.6,7.5,7.2,7.1,7.3,7.3,7.6,7.6,7.1\\\",\\\"1.2,2.2,2.2,2.5,2.7,2.9,2.7,3.0,3.1,3.1,2.9,3.0,3.2\\\",\\\"tecklenburg, stadt\\\"\\n05566092,11178,5582,5596,49492,05566092,11.5,7.8,3.8,4.8,8.9,1529,998,531,1287,867,420,13.7,\\\"8.5,9.8,10.1,10.1,10.3,10.6,10.9,11.4,11.4,11.7,11.6,11.5,11.5\\\",\\\"6.9,7.5,7.9,7.6,7.6,7.7,7.8,7.9,7.8,7.9,8.1,8.0,7.8\\\",\\\"1.6,2.3,2.1,2.5,2.8,2.9,3.1,3.5,3.6,3.9,3.5,3.5,3.8\\\",westerkappeln\\n05566096,8102,4082,4020,48493,05566096,13.0,9.3,3.7,4.1,8.7,1034,701,333,1057,756,301,12.8,\\\"8.7,10.5,10.8,10.9,12.2,12.4,12.9,12.4,12.5,12.6,13.0,13.0,13.0\\\",\\\"7.2,8.1,8.3,8.4,9.3,9.3,9.5,9.0,8.8,8.9,9.4,9.3,9.3\\\",\\\"1.5,2.4,2.5,2.5,2.9,3.1,3.4,3.4,3.7,3.7,3.6,3.7,3.7\\\",wettringen\\n05570004,52287,25551,26736,59227,05570004,11.0,8.2,2.8,2.5,7.5,5213,3898,1315,5748,4282,1466,10.0,\\\"8.1,9.1,9.4,9.5,10.0,10.3,10.6,10.9,11.1,11.2,11.3,11.2,11.0\\\",\\\"6.8,7.3,7.4,7.4,7.6,7.7,7.9,8.0,7.9,8.1,8.6,8.5,8.2\\\",\\\"1.3,1.8,1.9,2.1,2.3,2.6,2.7,2.9,3.1,3.1,2.7,2.7,2.8\\\",\\\"ahlen, stadt\\\"\\n05570008,36560,18089,18471,59269,05570008,10.9,7.6,3.4,3.6,7.2,3949,2642,1307,3997,2762,1235,10.8,\\\"8.4,9.8,9.9,10.4,10.7,11.0,11.0,11.1,11.3,11.5,11.4,11.3,10.9\\\",\\\"6.9,7.4,7.4,7.7,7.7,7.7,7.8,7.8,7.7,7.8,8.1,7.9,7.6\\\",\\\"1.5,2.3,2.5,2.8,3.0,3.3,3.2,3.3,3.6,3.7,3.3,3.4,3.4\\\",\\\"beckum, stadt\\\"\\n05570012,6380,3217,3163,48361,05570012,13.2,8.9,4.4,3.8,6.3,643,403,240,844,566,278,10.1,\\\"9.5,11.3,11.5,11.0,12.2,13.3,13.3,14.1,13.8,13.6,14.1,14.0,13.2\\\",\\\"7.6,8.7,8.3,8.0,8.8,9.1,9.3,9.8,9.8,9.0,9.6,9.3,8.9\\\",\\\"1.9,2.5,3.2,3.0,3.4,4.2,4.0,4.4,3.9,4.6,4.5,4.7,4.4\\\",beelen\\n05570016,15542,7757,7785,48317,05570016,9.7,6.9,2.9,2.3,5.5,1204,852,352,1513,1067,446,7.7,\\\"6.9,8.3,8.5,9.0,9.3,9.3,9.6,9.4,9.8,10.1,10.1,10.0,9.7\\\",\\\"5.7,6.5,6.6,6.8,6.9,6.8,7.0,6.8,6.9,7.0,7.3,7.1,6.9\\\",\\\"1.1,1.8,1.9,2.2,2.4,2.5,2.6,2.7,2.9,3.1,2.8,3.0,2.9\\\",\\\"drensteinfurt, stadt\\\"\\n05570020,20037,10075,9962,59320,05570020,10.8,7.3,3.4,2.5,5.6,1615,1123,492,2156,1468,688,8.1,\\\"7.9,9.0,9.1,9.9,10.3,10.7,11.0,11.1,11.7,11.5,11.3,11.6,10.8\\\",\\\"6.4,7.0,7.0,7.3,7.4,7.6,7.8,7.6,8.2,7.9,7.9,8.1,7.3\\\",\\\"1.4,2.1,2.2,2.6,2.9,3.2,3.3,3.4,3.5,3.6,3.5,3.5,3.4\\\",\\\"ennigerloh, stadt\\\"\\n05570024,9583,4766,4817,48351,05570024,10.4,6.6,3.8,4.6,6.5,1069,626,443,999,633,366,11.2,\\\"7.7,8.6,9.2,9.6,10.3,10.0,10.4,10.6,10.3,10.6,10.6,10.6,10.4\\\",\\\"6.0,6.4,6.8,7.0,7.5,7.1,7.2,7.1,6.7,6.8,7.0,7.0,6.6\\\",\\\"1.7,2.2,2.4,2.6,2.8,2.8,3.2,3.5,3.7,3.8,3.6,3.7,3.8\\\",everswinkel\\n05570028,29299,14660,14639,59302,05570028,11.2,7.6,3.6,3.0,7.0,2936,2060,876,3296,2235,1061,10.0,\\\"8.9,10.2,10.4,10.8,10.5,10.7,10.9,11.1,11.4,11.7,11.7,11.7,11.2\\\",\\\"7.2,7.8,7.8,8.0,7.6,7.4,7.6,7.7,7.9,7.9,8.1,8.2,7.6\\\",\\\"1.7,2.4,2.6,2.9,2.9,3.2,3.3,3.4,3.5,3.8,3.6,3.5,3.6\\\",\\\"oelde, stadt\\\"\\n05570032,10873,5438,5435,48346,05570032,12.1,7.8,4.3,3.7,6.3,1088,689,399,1314,843,471,10.0,\\\"8.5,9.8,9.7,10.7,10.6,11.1,11.7,11.7,12.0,12.3,12.1,12.0,12.1\\\",\\\"6.9,7.4,7.2,7.8,7.6,7.8,8.0,7.9,8.0,8.2,8.1,8.0,7.8\\\",\\\"1.6,2.5,2.5,2.9,3.0,3.3,3.6,3.8,4.0,4.1,4.1,3.9,4.3\\\",ostbevern\\n05570036,14403,7263,7140,48336,05570036,12.7,7.8,4.9,3.4,5.4,1267,781,486,1835,1123,712,8.8,\\\"9.2,10.4,10.5,11.4,12.0,12.2,12.6,12.2,12.7,12.9,13.2,13.2,12.7\\\",\\\"7.2,7.7,7.7,8.1,8.1,8.1,8.3,8.2,8.3,8.1,8.6,8.3,7.8\\\",\\\"2.0,2.7,2.8,3.3,3.9,4.2,4.3,4.0,4.4,4.7,4.6,4.9,4.9\\\",\\\"sassenberg, stadt\\\"\\n05570040,13218,6583,6635,48324,05570040,11.9,8.1,3.8,2.9,6.8,1285,897,388,1577,1077,500,9.7,\\\"7.9,9.0,9.1,9.5,9.7,10.0,10.5,10.7,11.3,11.4,11.5,11.6,11.9\\\",\\\"6.3,6.8,7.0,7.1,7.0,7.1,7.5,7.4,7.4,7.5,7.8,7.9,8.1\\\",\\\"1.6,2.1,2.1,2.4,2.8,2.9,3.0,3.3,3.9,4.0,3.6,3.7,3.8\\\",\\\"sendenhorst, stadt\\\"\\n05570044,19557,9461,10096,48291,05570044,10.6,7.0,3.6,3.5,6.7,1982,1307,675,2077,1371,706,10.1,\\\"8.2,9.4,9.5,9.7,9.8,10.4,10.4,10.4,10.8,11.2,10.7,10.5,10.6\\\",\\\"6.6,7.1,7.1,7.0,7.0,7.2,7.1,7.0,7.2,7.4,7.4,7.0,7.0\\\",\\\"1.6,2.4,2.4,2.7,2.8,3.2,3.3,3.3,3.5,3.9,3.4,3.5,3.6\\\",\\\"telgte, stadt\\\"\\n05570048,12443,6318,6125,59329,05570048,12.0,8.2,3.8,3.6,6.6,1270,823,447,1494,1022,472,10.2,\\\"8.7,10.3,10.5,11.1,11.5,12.1,12.2,12.1,12.0,12.6,12.4,12.3,12.0\\\",\\\"7.2,8.0,8.1,8.2,8.4,8.6,8.7,8.4,8.2,8.7,8.8,8.6,8.2\\\",\\\"1.6,2.3,2.5,2.9,3.1,3.5,3.6,3.7,3.8,3.9,3.6,3.7,3.8\\\",wadersloh\\n05570052,37249,18087,19162,48231,05570052,12.0,7.9,4.1,3.9,8.8,4748,3286,1462,4461,2936,1525,12.7,\\\"8.5,9.5,9.6,10.0,10.7,10.9,11.4,11.4,11.7,12.0,12.1,12.2,12.0\\\",\\\"6.8,7.1,7.1,7.3,7.6,7.7,7.9,7.8,7.8,7.9,8.2,8.2,7.9\\\",\\\"1.7,2.4,2.4,2.7,3.1,3.2,3.5,3.5,3.8,4.1,3.9,4.0,4.1\\\",\\\"warendorf, stadt\\\"\\n05711000,333090,161148,171942,33602,05711000,9.5,6.4,3.1,3.6,7.2,36045,23988,12057,31661,21417,10244,10.8,\\\"7.0,8.4,8.5,8.7,9.0,9.1,9.2,9.3,9.6,9.4,9.3,9.6,9.5\\\",\\\"5.4,6.0,6.0,6.1,6.1,6.0,6.0,6.1,6.2,6.0,6.4,6.6,6.4\\\",\\\"1.7,2.4,2.5,2.6,2.9,3.1,3.1,3.2,3.3,3.4,2.9,3.0,3.1\\\",\\\"bielefeld, stadt\\\"\\n05754004,8801,4357,4444,33829,05754004,10.3,6.5,3.7,3.3,5.0,733,441,292,904,574,330,8.3,\\\"7.7,8.8,8.6,9.2,9.6,10.2,10.6,10.2,10.4,10.5,10.1,10.1,10.3\\\",\\\"6.1,6.5,6.3,6.6,6.6,7.0,7.0,6.7,6.7,6.8,6.8,6.8,6.5\\\",\\\"1.7,2.3,2.2,2.6,3.1,3.2,3.6,3.5,3.7,3.7,3.3,3.3,3.7\\\",\\\"borgholzhausen, stadt\\\"\\n05754008,97586,48366,49220,33330,05754008,10.2,6.6,3.6,3.5,7.1,10352,6956,3396,9990,6456,3534,10.6,\\\"7.6,8.8,8.8,9.1,9.4,9.7,9.7,9.9,10.0,10.2,10.3,10.5,10.2\\\",\\\"5.9,6.4,6.3,6.4,6.3,6.4,6.4,6.5,6.4,6.5,6.9,7.0,6.6\\\",\\\"1.7,2.4,2.5,2.7,3.0,3.3,3.4,3.4,3.6,3.7,3.5,3.6,3.6\\\",\\\"gütersloh, stadt\\\"\\n05754012,21709,10770,10939,33790,05754012,9.9,6.2,3.7,3.7,8.6,2672,1873,799,2145,1342,803,12.3,\\\"7.3,8.6,8.7,9.1,9.4,9.6,9.3,9.7,9.4,9.8,10.0,10.4,9.9\\\",\\\"5.6,6.2,6.2,6.3,6.3,6.1,6.1,6.3,6.1,6.2,6.5,6.7,6.2\\\",\\\"1.7,2.4,2.6,2.8,3.1,3.5,3.2,3.5,3.4,3.6,3.6,3.7,3.7\\\",\\\"halle (westf.), stadt\\\"\\n05754016,24769,12571,12198,33428,05754016,11.5,7.5,4.0,4.4,7.9,3045,1961,1084,2847,1867,980,12.3,\\\"8.3,9.6,10.1,10.4,10.8,11.0,11.4,11.4,11.6,11.9,12.1,11.9,11.5\\\",\\\"6.7,7.2,7.4,7.4,7.5,7.5,7.9,7.8,7.8,7.7,8.1,8.0,7.5\\\",\\\"1.6,2.4,2.7,3.0,3.3,3.5,3.5,3.6,3.8,4.2,4.0,3.9,4.0\\\",\\\"harsewinkel, die mähdrescherstadt\\\"\\n05754020,15965,7982,7983,33442,05754020,12.3,8.1,4.1,3.6,6.9,1680,1108,572,1962,1301,661,10.5,\\\"9.3,10.9,11.0,11.4,11.8,12.1,12.0,12.4,12.4,12.2,12.3,12.3,12.3\\\",\\\"7.4,8.0,7.9,8.1,8.2,8.4,8.2,8.4,8.3,8.2,8.5,8.3,8.1\\\",\\\"1.9,2.9,3.2,3.3,3.6,3.7,3.8,4.0,4.0,4.0,3.8,4.0,4.1\\\",herzebrock-clarholz\\n05754024,8375,4236,4139,33449,05754024,11.8,7.2,4.6,3.3,5.4,726,451,275,988,605,383,8.7,\\\"9.5,10.6,11.0,12.1,12.1,12.4,12.5,12.2,12.6,12.4,12.5,12.4,11.8\\\",\\\"7.7,8.1,8.4,9.0,8.7,8.7,8.8,8.3,8.3,8.0,8.2,7.8,7.2\\\",\\\"1.8,2.5,2.6,3.1,3.4,3.7,3.7,3.9,4.2,4.5,4.3,4.5,4.6\\\",langenberg\\n05754028,48000,23902,24098,33378,05754028,11.3,7.2,4.1,4.3,7.3,5571,3522,2049,5407,3457,1950,11.6,\\\"8.2,9.5,9.9,10.3,10.3,10.5,10.7,10.7,10.9,11.3,11.4,11.5,11.3\\\",\\\"6.4,6.9,7.1,7.2,7.2,7.2,7.3,7.2,7.3,7.4,7.6,7.6,7.2\\\",\\\"1.8,2.6,2.8,3.1,3.1,3.3,3.4,3.5,3.6,3.9,3.8,3.9,4.1\\\",\\\"rheda-wiedenbrück, stadt\\\"\\n05754032,29436,14901,14535,33397,05754032,13.2,8.5,4.7,4.9,8.5,3939,2494,1445,3894,2512,1382,13.4,\\\"9.8,11.1,11.2,11.8,12.1,12.9,12.8,12.9,13.3,13.5,13.7,13.4,13.2\\\",\\\"7.9,8.3,8.2,8.5,8.5,8.8,8.8,8.7,8.8,8.8,9.1,8.8,8.5\\\",\\\"1.9,2.8,3.0,3.3,3.6,4.1,4.0,4.3,4.5,4.7,4.6,4.6,4.7\\\",\\\"rietberg, stadt\\\"\\n05754036,27092,13435,13657,33758,05754036,11.1,7.3,3.8,3.4,5.9,2514,1598,916,3005,1989,1016,9.3,\\\"8.5,10.0,10.3,10.7,10.9,10.9,11.0,11.1,11.5,11.4,11.1,11.2,11.1\\\",\\\"6.7,7.3,7.3,7.5,7.6,7.4,7.5,7.4,7.7,7.5,7.6,7.5,7.3\\\",\\\"1.8,2.6,2.9,3.2,3.3,3.5,3.5,3.7,3.8,3.9,3.5,3.7,3.8\\\",\\\"schloß holte-stukenbrock, stadt\\\"\\n05754040,20749,10242,10507,33803,05754040,10.1,6.6,3.5,5.3,9.8,3121,2029,1092,2097,1370,727,15.0,\\\"7.9,9.1,9.2,9.7,9.9,10.1,10.2,10.3,10.3,10.3,10.3,10.3,10.1\\\",\\\"6.3,6.7,6.7,6.8,6.8,6.7,6.8,6.8,6.7,6.6,7.1,6.9,6.6\\\",\\\"1.7,2.4,2.5,2.9,3.1,3.4,3.4,3.6,3.7,3.7,3.2,3.4,3.5\\\",steinhagen\\n05754044,25512,13060,12452,33415,05754044,11.3,7.4,3.9,4.6,7.7,3146,1967,1179,2893,1891,1002,12.3,\\\"8.4,9.2,9.9,10.3,10.3,10.6,10.5,10.7,10.7,11.1,11.2,11.4,11.3\\\",\\\"6.7,6.9,7.1,7.2,7.4,7.1,7.1,7.1,6.9,7.2,7.5,7.6,7.4\\\",\\\"1.7,2.3,2.8,3.0,3.0,3.5,3.4,3.6,3.8,3.9,3.7,3.8,3.9\\\",\\\"verl, stadt\\\"\\n05754048,21230,10686,10544,33775,05754048,12.1,7.2,4.9,4.8,6.3,2364,1335,1029,2572,1536,1036,11.1,\\\"8.8,10.6,10.7,11.2,11.9,12.2,12.1,12.2,12.5,12.4,12.2,12.0,12.1\\\",\\\"6.6,7.5,7.5,7.5,7.7,7.7,7.6,7.6,7.7,7.5,7.6,7.3,7.2\\\",\\\"2.3,3.1,3.2,3.7,4.2,4.5,4.4,4.6,4.8,4.9,4.6,4.7,4.9\\\",\\\"versmold, stadt\\\"\\n05754052,11418,5714,5704,33824,05754052,9.5,6.3,3.2,2.8,5.1,896,579,317,1090,725,365,7.8,\\\"7.2,8.3,8.2,8.8,9.1,8.9,9.3,9.3,9.5,9.4,9.6,9.6,9.5\\\",\\\"5.8,6.2,6.0,6.4,6.2,5.9,6.3,6.1,6.3,6.0,6.5,6.5,6.3\\\",\\\"1.4,2.0,2.2,2.4,2.9,3.0,3.0,3.2,3.2,3.4,3.1,3.1,3.2\\\",\\\"werther (westf.), stadt\\\"\\n05758004,45615,22277,23338,32257,05758004,9.6,6.1,3.5,2.9,6.0,4074,2750,1324,4379,2801,1578,8.9,\\\"7.8,9.1,9.6,9.7,10.2,10.4,10.2,10.3,10.4,10.2,9.9,10.0,9.6\\\",\\\"6.0,6.5,6.8,6.8,6.9,7.0,6.8,6.8,6.6,6.4,6.5,6.5,6.1\\\",\\\"1.8,2.7,2.8,2.9,3.3,3.4,3.4,3.5,3.8,3.8,3.4,3.4,3.5\\\",\\\"bünde, stadt\\\"\\n05758008,20658,10193,10465,32130,05758008,9.2,5.8,3.4,3.2,4.7,1633,976,657,1898,1195,703,7.9,\\\"6.6,7.9,8.2,8.6,8.9,9.3,9.2,9.7,9.5,9.4,9.4,9.3,9.2\\\",\\\"5.2,5.6,5.8,6.1,6.2,6.3,6.2,6.4,6.2,6.2,6.3,6.2,5.8\\\",\\\"1.4,2.3,2.4,2.5,2.7,3.0,3.0,3.3,3.3,3.3,3.0,3.2,3.4\\\",\\\"enger, widukindstadt\\\"\\n05758012,66521,32485,34036,32052,05758012,9.2,6.0,3.1,3.7,7.0,7099,4636,2463,6106,4022,2084,10.7,\\\"6.9,8.4,8.7,8.9,9.1,9.3,9.3,9.6,9.9,9.7,9.5,9.4,9.2\\\",\\\"5.5,6.2,6.2,6.2,6.2,6.3,6.2,6.2,6.3,6.1,6.3,6.2,6.0\\\",\\\"1.5,2.3,2.5,2.7,2.9,3.1,3.1,3.4,3.6,3.6,3.1,3.2,3.1\\\",\\\"herford, hansestadt\\\"\\n05758016,19758,9805,9953,32120,05758016,8.5,5.3,3.2,2.5,4.5,1380,894,486,1679,1044,635,7.0,\\\"6.4,7.6,8.1,8.4,8.6,8.8,8.6,8.9,9.0,9.0,8.7,8.8,8.5\\\",\\\"5.1,5.7,5.9,6.1,6.0,6.1,5.8,6.0,5.9,5.9,5.8,5.7,5.3\\\",\\\"1.3,1.9,2.1,2.4,2.6,2.7,2.8,2.9,3.1,3.2,2.9,3.1,3.2\\\",hiddenhausen\\n05758020,16085,7896,8189,32278,05758020,8.9,6.0,2.9,3.2,5.9,1460,952,508,1436,962,474,9.1,\\\"7.1,8.2,8.7,9.0,9.5,9.9,9.7,9.9,9.9,9.6,9.8,9.6,8.9\\\",\\\"5.6,6.1,6.2,6.4,6.7,6.8,6.5,6.6,6.5,6.4,6.9,6.5,6.0\\\",\\\"1.6,2.2,2.5,2.6,2.8,3.1,3.2,3.3,3.4,3.1,2.9,3.1,2.9\\\",kirchlengern\\n05758024,40086,19759,20327,32584,05758024,9.2,6.1,3.1,2.2,4.8,2820,1929,891,3673,2435,1238,7.0,\\\"7.7,8.7,8.8,8.9,9.3,9.6,9.7,9.5,9.8,9.9,9.5,9.4,9.2\\\",\\\"6.0,6.3,6.3,6.2,6.3,6.4,6.5,6.4,6.2,6.3,6.4,6.3,6.1\\\",\\\"1.6,2.4,2.6,2.7,3.0,3.2,3.2,3.2,3.5,3.6,3.1,3.1,3.1\\\",\\\"löhne, stadt\\\"\\n05758028,9717,4841,4876,32289,05758028,9.9,6.2,3.7,2.9,5.0,774,489,285,962,606,356,8.0,\\\"6.7,8.3,8.3,8.5,9.2,8.9,9.3,9.5,9.5,10.0,10.0,10.2,9.9\\\",\\\"5.2,6.2,6.1,6.1,6.6,6.4,6.6,6.6,6.4,6.6,6.6,6.8,6.2\\\",\\\"1.4,2.1,2.1,2.4,2.7,2.5,2.7,2.9,3.1,3.4,3.4,3.4,3.7\\\",rödinghausen\\n05758032,14768,7232,7536,32139,05758032,8.8,5.8,3.0,2.4,4.6,1040,679,361,1298,861,437,7.0,\\\"6.8,7.7,8.0,8.4,8.7,8.9,8.8,9.2,9.0,9.0,9.0,9.0,8.8\\\",\\\"5.4,5.8,5.9,6.1,6.2,6.0,6.0,6.2,6.0,5.9,6.2,6.1,5.8\\\",\\\"1.3,1.9,2.1,2.3,2.4,2.9,2.8,3.0,3.0,3.1,2.7,2.9,3.0\\\",\\\"spenge, stadt\\\"\\n05758036,18914,9447,9467,32602,05758036,9.2,6.1,3.1,2.5,5.1,1435,970,465,1739,1161,578,7.6,\\\"7.4,8.3,8.6,9.2,9.0,9.4,9.4,9.6,9.9,9.5,9.4,9.3,9.2\\\",\\\"5.8,6.1,6.2,6.5,6.2,6.3,6.3,6.4,6.4,6.1,6.3,6.2,6.1\\\",\\\"1.6,2.1,2.4,2.7,2.7,3.1,3.0,3.2,3.5,3.4,3.1,3.2,3.1\\\",\\\"vlotho, stadt\\\"\\n05762004,18699,9140,9559,33014,05762004,10.5,7.2,3.2,3.1,7.8,2048,1465,583,1956,1352,604,11.0,\\\"7.7,8.9,9.1,9.2,9.5,9.8,10.1,10.1,10.7,10.7,10.7,10.9,10.5\\\",\\\"6.5,7.1,7.2,7.1,7.2,7.0,7.4,7.2,7.3,7.3,7.7,7.8,7.2\\\",\\\"1.2,1.8,1.9,2.1,2.3,2.8,2.7,2.9,3.4,3.4,3.0,3.1,3.2\\\",\\\"bad driburg, stadt\\\"\\n05762008,13442,6641,6801,37688,05762008,10.1,7.5,2.6,1.8,5.5,986,739,247,1360,1004,356,7.3,\\\"8.2,9.2,9.1,9.6,9.7,9.8,9.8,9.7,10.0,10.4,10.3,10.3,10.1\\\",\\\"6.8,7.4,7.4,7.7,7.6,7.5,7.6,7.5,7.5,7.7,7.9,7.7,7.5\\\",\\\"1.4,1.7,1.7,1.9,2.1,2.4,2.2,2.2,2.5,2.7,2.4,2.6,2.6\\\",\\\"beverungen, stadt\\\"\\n05762012,9497,4944,4553,34434,05762012,8.6,6.0,2.5,2.0,4.3,600,412,188,816,574,242,6.3,\\\"7.7,8.6,8.7,9.0,9.0,9.2,9.1,9.3,9.1,9.0,9.1,8.9,8.6\\\",\\\"6.7,7.1,7.2,7.1,7.0,7.1,7.0,7.0,6.7,6.4,6.6,6.5,6.0\\\",\\\"1.0,1.4,1.5,1.9,2.0,2.1,2.2,2.3,2.4,2.6,2.5,2.4,2.5\\\",\\\"borgentreich, orgelstadt\\\"\\n05762016,16586,8368,8218,33034,05762016,9.3,6.6,2.7,2.5,6.0,1416,997,419,1539,1097,442,8.5,\\\"6.9,8.1,8.4,8.4,8.9,9.1,9.3,9.5,9.6,9.5,10.0,9.7,9.3\\\",\\\"5.9,6.5,6.7,6.7,7.0,7.0,7.0,7.0,6.8,6.6,7.4,7.1,6.6\\\",\\\"1.0,1.6,1.6,1.7,1.9,2.1,2.3,2.5,2.7,2.9,2.6,2.6,2.7\\\",\\\"brakel, stadt\\\"\\n05762020,29589,14691,14898,37671,05762020,9.1,6.8,2.3,2.2,6.7,2612,1975,637,2704,2021,683,8.8,\\\"6.9,7.7,7.9,8.1,8.5,8.7,8.9,8.8,8.9,9.3,9.2,9.5,9.1\\\",\\\"5.8,6.2,6.3,6.4,6.7,6.7,6.7,6.7,6.7,6.8,7.0,7.2,6.8\\\",\\\"1.1,1.5,1.6,1.7,1.8,2.0,2.2,2.1,2.2,2.5,2.2,2.4,2.3\\\",\\\"höxter, stadt\\\"\\n05762024,5125,2592,2533,37696,05762024,9.3,6.7,2.6,2.1,5.7,402,294,108,477,344,133,7.8,\\\"6.2,7.2,7.5,8.5,7.9,8.3,9.2,9.6,10.4,9.6,9.6,9.9,9.3\\\",\\\"5.3,5.9,6.0,6.5,6.0,6.5,6.9,7.5,7.9,7.2,7.1,7.3,6.7\\\",\\\"0.9,1.3,1.5,1.9,2.0,1.8,2.3,2.1,2.4,2.4,2.5,2.6,2.6\\\",\\\"marienmünster, stadt\\\"\\n05762028,6254,3231,3023,33039,05762028,9.9,7.2,2.7,2.4,5.0,462,315,147,621,450,171,7.4,\\\"7.7,8.6,8.9,9.6,10.0,10.4,10.2,10.5,10.8,11.1,10.3,10.5,9.9\\\",\\\"6.3,6.7,7.0,7.5,7.5,8.1,7.7,7.9,7.8,8.1,7.7,7.7,7.2\\\",\\\"1.4,1.9,1.9,2.1,2.5,2.2,2.5,2.6,3.0,3.0,2.7,2.8,2.7\\\",\\\"nieheim, stadt\\\"\\n05762032,12922,6446,6476,32839,05762032,10.1,7.1,3.0,3.3,8.0,1458,1029,429,1301,919,382,11.3,\\\"8.8,9.7,9.8,10.0,10.0,10.5,10.6,11.1,11.3,11.3,11.1,11.3,10.1\\\",\\\"7.4,7.9,8.0,8.0,7.9,8.1,8.0,8.2,8.3,8.3,8.4,8.5,7.1\\\",\\\"1.4,1.9,1.8,2.0,2.1,2.4,2.7,2.9,3.0,3.0,2.7,2.8,3.0\\\",\\\"steinheim, stadt\\\"\\n05762036,23629,11761,11868,34414,05762036,9.1,6.5,2.6,2.8,7.4,2417,1760,657,2149,1545,604,10.2,\\\"7.2,8.2,8.2,8.7,8.9,9.3,9.7,9.9,9.6,9.9,9.6,9.6,9.1\\\",\\\"6.1,6.6,6.7,6.9,7.0,7.2,7.4,7.4,6.9,7.1,7.1,6.9,6.5\\\",\\\"1.1,1.6,1.4,1.8,1.9,2.1,2.3,2.5,2.7,2.8,2.5,2.7,2.6\\\",\\\"warburg, hansestadt\\\"\\n05762040,8267,4192,4075,34439,05762040,8.7,6.5,2.2,1.6,3.7,439,310,129,720,537,183,5.3,\\\"7.2,7.8,8.0,8.0,8.3,8.3,8.6,8.5,8.6,9.1,8.8,8.8,8.7\\\",\\\"6.2,6.4,6.7,6.6,6.8,6.6,7.0,6.6,6.5,6.9,7.1,6.7,6.5\\\",\\\"1.0,1.4,1.4,1.5,1.6,1.7,1.6,1.9,2.1,2.3,1.7,2.1,2.2\\\",\\\"willebadessen, stadt\\\"\\n05766004,9828,5074,4754,32832,05766004,9.0,6.0,3.0,1.4,3.5,482,341,141,883,586,297,4.9,\\\"6.7,8.3,8.1,8.7,9.5,9.6,9.4,9.6,10.0,9.9,9.2,9.6,9.0\\\",\\\"5.5,6.2,6.1,6.5,6.9,6.9,6.8,7.0,6.9,6.8,6.6,6.6,6.0\\\",\\\"1.2,2.1,2.1,2.2,2.6,2.7,2.6,2.6,3.1,3.0,2.6,3.0,3.0\\\",augustdorf\\n05766008,53341,25619,27722,32105,05766008,9.7,6.7,3.0,3.1,7.0,5371,3742,1629,5152,3558,1594,10.1,\\\"7.2,8.6,8.5,8.8,8.9,9.2,9.3,9.5,9.6,9.7,9.7,9.9,9.7\\\",\\\"5.8,6.4,6.3,6.4,6.4,6.5,6.6,6.5,6.5,6.6,6.8,6.8,6.7\\\",\\\"1.5,2.2,2.2,2.4,2.5,2.7,2.8,3.0,3.1,3.1,2.9,3.1,3.0\\\",\\\"bad salzuflen, stadt\\\"\\n05766012,8846,4418,4428,32683,05766012,8.4,6.2,2.2,2.0,5.3,646,470,176,746,548,198,7.3,\\\"6.7,7.6,7.8,8.6,8.3,8.7,8.9,8.9,9.2,9.1,8.9,8.6,8.4\\\",\\\"5.5,6.3,6.3,6.9,6.5,6.9,6.8,6.6,6.7,6.6,6.7,6.5,6.2\\\",\\\"1.2,1.4,1.5,1.7,1.8,1.8,2.1,2.3,2.5,2.4,2.2,2.1,2.2\\\",\\\"barntrup, stadt\\\"\\n05766016,15370,7671,7699,32825,05766016,8.0,5.6,2.4,2.2,5.5,1198,853,345,1225,862,363,7.8,\\\"6.2,7.1,7.1,7.0,7.3,7.6,7.8,7.9,8.2,8.2,8.1,7.9,8.0\\\",\\\"5.0,5.5,5.2,5.2,5.2,5.3,5.5,5.4,5.5,5.5,5.7,5.6,5.6\\\",\\\"1.2,1.6,1.8,1.8,2.2,2.2,2.2,2.5,2.7,2.7,2.4,2.3,2.4\\\",\\\"blomberg, stadt\\\"\\n05766020,74817,36141,38676,32756,05766020,9.0,6.4,2.6,2.7,6.6,6968,4915,2053,6715,4754,1961,9.3,\\\"6.9,7.9,8.0,8.3,8.5,8.8,8.9,8.9,9.3,9.2,8.9,9.1,9.0\\\",\\\"5.5,6.0,5.9,6.1,6.2,6.2,6.2,6.2,6.4,6.4,6.4,6.5,6.4\\\",\\\"1.3,1.9,2.1,2.2,2.4,2.6,2.6,2.7,2.9,2.9,2.5,2.6,2.6\\\",\\\"detmold, stadt\\\"\\n05766024,7970,4048,3922,32694,05766024,8.2,5.6,2.6,1.8,4.7,516,375,141,654,447,207,6.5,\\\"6.7,8.2,8.4,8.7,8.7,8.7,8.5,8.8,9.4,9.0,8.4,8.8,8.2\\\",\\\"5.7,6.4,6.4,6.5,6.3,6.5,6.3,6.5,6.7,6.1,6.1,6.0,5.6\\\",\\\"1.0,1.8,1.9,2.2,2.4,2.2,2.2,2.4,2.6,3.0,2.3,2.8,2.6\\\",dörentrup\\n05766028,11522,5795,5727,32699,05766028,9.5,6.8,2.7,1.9,4.8,772,557,215,1098,789,309,6.7,\\\"7.3,8.3,8.3,8.4,8.9,9.2,9.2,9.3,9.7,9.9,10.0,10.2,9.5\\\",\\\"6.1,6.6,6.6,6.6,6.7,6.7,6.8,6.8,6.8,7.0,7.3,7.3,6.8\\\",\\\"1.2,1.7,1.7,1.9,2.2,2.5,2.4,2.6,2.9,3.0,2.7,2.9,2.7\\\",extertal\\n05766032,17126,8324,8802,32805,05766032,9.5,6.8,2.7,2.2,5.9,1380,1011,369,1621,1164,457,8.1,\\\"6.5,7.5,7.8,8.2,8.3,8.3,8.5,8.7,8.9,9.3,8.9,9.2,9.5\\\",\\\"5.3,5.8,5.8,6.2,6.2,6.2,6.3,6.3,6.3,6.5,6.6,6.8,6.8\\\",\\\"1.2,1.7,2.0,2.0,2.1,2.1,2.2,2.4,2.6,2.7,2.3,2.5,2.7\\\",\\\"horn-bad meinberg, stadt\\\"\\n05766036,13914,6902,7012,32689,05766036,9.1,6.5,2.6,1.8,4.3,856,601,255,1268,905,363,6.2,\\\"6.7,7.7,7.9,8.3,8.2,8.8,8.6,9.0,9.4,9.4,9.4,9.2,9.1\\\",\\\"5.5,6.0,6.0,6.3,6.1,6.4,6.2,6.5,6.6,6.6,6.8,6.6,6.5\\\",\\\"1.2,1.8,1.9,2.1,2.1,2.4,2.4,2.5,2.8,2.9,2.6,2.7,2.6\\\",kalletal\\n05766040,35120,17336,17784,32791,05766040,9.8,6.9,2.9,2.0,5.1,2493,1800,693,3442,2423,1019,7.1,\\\"7.5,8.6,9.0,9.3,9.2,9.7,9.4,9.6,9.6,9.5,9.4,9.9,9.8\\\",\\\"6.0,6.5,6.8,7.0,6.6,6.8,6.7,6.8,6.7,6.5,6.7,7.1,6.9\\\",\\\"1.5,2.1,2.2,2.3,2.6,2.9,2.7,2.9,2.9,3.0,2.8,2.9,2.9\\\",\\\"lage, stadt\\\"\\n05766044,41276,20457,20819,32657,05766044,9.3,6.6,2.7,2.8,6.6,3882,2744,1138,3821,2709,1112,9.4,\\\"7.0,8.0,8.2,8.6,8.7,8.8,9.1,9.2,9.5,9.6,9.4,9.6,9.3\\\",\\\"5.6,6.1,6.3,6.3,6.3,6.2,6.5,6.4,6.5,6.5,6.7,6.9,6.6\\\",\\\"1.4,1.9,2.0,2.3,2.4,2.6,2.6,2.8,3.0,3.1,2.6,2.7,2.7\\\",\\\"lemgo, stadt\\\"\\n05766048,16401,8148,8253,33818,05766048,9.4,6.5,3.0,2.5,5.3,1286,868,418,1549,1059,490,7.8,\\\"7.0,8.3,8.3,9.0,9.3,9.5,9.5,9.7,10.0,10.1,9.8,9.7,9.4\\\",\\\"5.7,6.4,6.3,6.6,6.7,6.8,6.7,6.8,6.9,6.9,7.0,6.9,6.5\\\",\\\"1.2,1.9,2.0,2.4,2.6,2.7,2.8,2.9,3.1,3.2,2.9,2.8,3.0\\\",leopoldshöhe\\n05766052,9751,4851,4900,32676,05766052,9.5,6.7,2.7,2.2,5.0,708,492,216,922,656,266,7.3,\\\"7.2,8.2,8.4,8.8,8.5,8.9,9.3,9.1,9.3,9.5,9.6,9.7,9.5\\\",\\\"5.9,6.5,6.5,6.8,6.5,6.7,6.8,6.6,6.4,6.5,7.0,6.9,6.7\\\",\\\"1.2,1.7,1.9,2.0,2.0,2.2,2.5,2.5,2.8,3.0,2.6,2.8,2.7\\\",\\\"lügde, stadt der osterräder\\\"\\n05766056,17616,8722,8894,33813,05766056,8.8,5.9,3.0,2.1,4.5,1161,795,366,1559,1034,525,6.6,\\\"6.9,8.2,8.3,8.6,8.6,8.8,9.0,9.0,9.4,9.5,9.5,9.5,8.8\\\",\\\"5.5,6.0,5.9,6.1,6.1,6.1,6.2,6.1,6.3,6.2,6.6,6.3,5.9\\\",\\\"1.5,2.2,2.4,2.5,2.6,2.8,2.8,2.9,3.1,3.3,2.8,3.1,3.0\\\",\\\"oerlinghausen, stadt\\\"\\n05766060,8708,4341,4367,32816,05766060,8.1,5.9,2.2,1.4,3.7,445,323,122,706,517,189,5.1,\\\"6.4,7.7,7.7,8.3,8.2,8.6,9.1,9.0,9.1,8.8,8.6,8.4,8.1\\\",\\\"5.4,6.2,6.2,6.5,6.3,6.4,6.8,6.6,6.5,6.2,6.4,6.3,5.9\\\",\\\"0.9,1.6,1.5,1.7,1.8,2.2,2.3,2.4,2.6,2.6,2.2,2.1,2.2\\\",\\\"schieder-schwalenberg, stadt\\\"\\n05766064,9144,4643,4501,33189,05766064,9.5,6.7,2.8,1.7,3.6,485,332,153,871,615,256,5.3,\\\"6.7,7.8,7.5,8.6,9.0,8.7,9.2,9.5,9.7,10.1,9.8,10.1,9.5\\\",\\\"5.3,5.9,5.9,6.3,6.4,6.3,6.5,6.8,6.7,6.9,7.4,7.3,6.7\\\",\\\"1.4,1.9,1.7,2.3,2.6,2.4,2.7,2.7,3.1,3.2,2.4,2.8,2.8\\\",schlangen\\n05770004,48990,23905,25085,32545,05770004,8.7,5.9,2.8,3.8,7.3,5434,3588,1846,4247,2880,1367,11.1,\\\"6.8,8.0,8.2,8.8,8.9,9.5,9.3,9.3,9.5,9.1,8.8,9.0,8.7\\\",\\\"5.4,6.0,6.0,6.4,6.3,6.6,6.5,6.3,6.4,6.0,6.0,6.1,5.9\\\",\\\"1.4,2.1,2.2,2.4,2.6,2.8,2.8,2.9,3.1,3.1,2.7,2.9,2.8\\\",\\\"bad oeynhausen, stadt\\\"\\n05770008,24921,12213,12708,32339,05770008,9.1,6.0,3.2,3.8,7.7,2867,1910,957,2278,1486,792,11.5,\\\"7.0,8.2,8.0,8.3,8.6,9.1,9.0,9.4,9.3,9.6,9.2,9.6,9.1\\\",\\\"5.6,6.0,5.9,5.9,6.0,6.2,6.3,6.2,5.9,5.9,6.1,6.5,6.0\\\",\\\"1.4,2.2,2.1,2.4,2.6,3.0,2.7,3.3,3.3,3.6,3.1,3.2,3.2\\\",\\\"espelkamp, stadt\\\"\\n05770012,15916,7890,8026,32479,05770012,9.1,6.2,2.9,2.0,4.5,1032,712,320,1442,985,457,6.5,\\\"6.5,7.8,8.0,8.1,8.0,8.2,8.1,8.6,8.7,8.8,9.0,9.0,9.1\\\",\\\"5.5,6.2,6.1,5.9,5.7,5.6,5.7,5.8,5.9,5.9,6.1,6.0,6.2\\\",\\\"1.0,1.6,1.9,2.2,2.3,2.5,2.5,2.7,2.9,3.0,2.9,2.9,2.9\\\",hille\\n05770016,13271,6651,6620,32609,05770016,10.0,6.4,3.6,2.8,5.6,1116,741,375,1321,847,474,8.4,\\\"7.4,8.9,8.9,9.4,9.5,10.2,9.9,9.9,9.9,10.2,10.1,10.0,10.0\\\",\\\"6.0,6.7,6.4,6.7,6.6,6.9,6.6,6.4,6.4,6.6,6.4,6.5,6.4\\\",\\\"1.5,2.2,2.5,2.7,2.9,3.3,3.3,3.5,3.6,3.7,3.7,3.5,3.6\\\",hüllhorst\\n05770020,25462,12270,13192,32312,05770020,9.4,6.0,3.4,3.7,7.4,2821,1877,944,2384,1525,859,11.1,\\\"7.1,8.4,8.5,9.1,9.1,9.2,9.4,9.5,9.5,9.8,9.5,9.7,9.4\\\",\\\"5.6,6.2,6.1,6.3,6.3,6.3,6.4,6.5,6.4,6.4,6.4,6.4,6.0\\\",\\\"1.5,2.1,2.4,2.7,2.8,2.9,3.0,3.0,3.1,3.4,3.0,3.3,3.4\\\",\\\"lübbecke, stadt\\\"\\n05770024,81598,40066,41532,32423,05770024,8.5,5.9,2.5,2.6,6.1,7125,5003,2122,6902,4839,2063,8.7,\\\"6.5,7.6,7.6,7.9,8.1,8.3,8.3,8.4,8.5,8.6,8.6,8.6,8.5\\\",\\\"5.3,5.8,5.8,5.9,5.9,5.9,5.9,5.7,5.8,5.8,6.2,6.1,5.9\\\",\\\"1.2,1.8,1.8,2.0,2.3,2.4,2.4,2.7,2.7,2.8,2.4,2.4,2.5\\\",\\\"minden, stadt\\\"\\n05770028,25663,12945,12718,32469,05770028,8.9,6.3,2.6,2.0,4.5,1688,1165,523,2281,1619,662,6.6,\\\"6.9,7.9,7.9,8.3,8.6,8.9,8.9,9.0,9.2,9.2,9.1,9.0,8.9\\\",\\\"5.6,6.1,6.1,6.3,6.4,6.6,6.6,6.5,6.4,6.4,6.6,6.5,6.3\\\",\\\"1.3,1.8,1.8,2.0,2.2,2.3,2.4,2.5,2.8,2.9,2.4,2.5,2.6\\\",\\\"petershagen, stadt\\\"\\n05770032,35430,17486,17944,32457,05770032,8.5,5.7,2.8,2.1,4.7,2423,1664,759,3009,2019,990,6.8,\\\"6.9,7.9,8.1,8.5,8.8,9.0,9.2,9.2,9.1,9.0,8.7,8.8,8.5\\\",\\\"5.6,6.1,6.2,6.4,6.4,6.4,6.5,6.5,6.2,6.0,6.2,6.0,5.7\\\",\\\"1.2,1.8,1.9,2.1,2.4,2.6,2.7,2.7,2.9,3.0,2.6,2.7,2.8\\\",\\\"porta westfalica, stadt\\\"\\n05770036,12647,6258,6389,32361,05770036,10.1,6.7,3.4,2.8,5.9,1107,752,355,1279,851,428,8.8,\\\"6.8,8.2,8.2,8.6,9.0,9.4,9.6,9.9,10.4,10.1,10.2,10.8,10.1\\\",\\\"5.4,6.1,6.0,6.2,6.4,6.5,6.6,6.7,6.9,6.5,7.0,7.3,6.7\\\",\\\"1.4,2.1,2.2,2.5,2.6,2.9,3.0,3.1,3.5,3.6,3.2,3.5,3.4\\\",\\\"preußisch oldendorf, stadt\\\"\\n05770040,15581,7844,7737,32369,05770040,9.9,6.3,3.6,3.1,5.1,1283,793,490,1541,974,567,8.2,\\\"6.7,7.8,8.1,8.4,8.9,9.0,9.1,9.2,9.8,9.8,9.9,9.7,9.9\\\",\\\"5.4,5.9,5.9,6.1,6.4,6.1,6.3,5.9,6.1,6.0,6.4,6.3,6.3\\\",\\\"1.2,1.9,2.2,2.3,2.5,2.9,2.9,3.3,3.7,3.7,3.4,3.4,3.6\\\",\\\"rahden, stadt\\\"\\n05770044,13571,6960,6611,32351,05770044,10.7,7.0,3.7,3.2,5.6,1192,755,437,1451,950,501,8.8,\\\"7.3,8.1,8.4,9.0,9.1,10.0,9.9,10.3,10.9,10.7,11.0,11.1,10.7\\\",\\\"5.9,6.2,6.1,6.4,6.4,6.7,6.8,6.8,7.1,6.8,7.1,7.1,7.0\\\",\\\"1.4,1.9,2.3,2.5,2.6,3.2,3.1,3.5,3.8,3.8,3.9,4.0,3.7\\\",stemwede\\n05774004,9294,4707,4587,33184,05774004,9.6,6.8,2.9,1.8,4.2,551,387,164,896,628,268,5.9,\\\"7.3,8.5,7.9,8.6,8.9,9.6,9.7,9.9,10.0,10.0,9.4,9.3,9.6\\\",\\\"6.0,6.7,6.2,6.5,6.6,6.9,6.9,6.9,6.8,6.8,6.8,6.7,6.8\\\",\\\"1.3,1.8,1.7,2.1,2.3,2.7,2.8,2.9,3.2,3.2,2.6,2.7,2.9\\\",altenbeken\\n05774008,15572,7576,7996,33175,05774008,10.3,6.8,3.5,3.2,6.3,1481,976,505,1605,1054,551,9.5,\\\"7.3,8.9,8.7,9.0,9.3,9.6,9.8,10.1,10.3,10.6,10.3,10.3,10.3\\\",\\\"5.8,6.7,6.5,6.5,6.5,6.8,6.9,6.8,6.9,7.0,7.1,6.9,6.8\\\",\\\"1.5,2.2,2.3,2.6,2.8,2.8,2.9,3.2,3.4,3.6,3.3,3.4,3.5\\\",\\\"bad lippspringe, stadt\\\"\\n05774012,13447,6695,6752,33178,05774012,9.2,6.3,2.9,2.5,5.4,1058,720,338,1242,849,393,7.9,\\\"7.5,8.3,8.4,8.4,8.7,9.0,9.2,9.2,9.6,9.7,9.5,9.7,9.2\\\",\\\"6.1,6.4,6.0,6.1,6.1,6.2,6.5,6.5,6.6,6.4,6.7,6.8,6.3\\\",\\\"1.5,1.9,2.4,2.3,2.6,2.8,2.7,2.7,3.0,3.2,2.8,2.9,2.9\\\",borchen\\n05774016,21772,11305,10467,33142,05774016,11.3,7.6,3.7,3.5,6.8,2251,1483,768,2459,1644,815,10.3,\\\"8.5,9.9,10.3,10.7,10.9,11.2,11.4,11.4,11.8,11.7,11.3,11.7,11.3\\\",\\\"7.0,7.7,8.0,8.0,8.0,8.1,8.0,7.9,8.0,8.0,8.0,8.0,7.6\\\",\\\"1.5,2.2,2.3,2.7,2.9,3.1,3.3,3.5,3.8,3.7,3.3,3.7,3.7\\\",\\\"büren, stadt\\\"\\n05774020,31964,16316,15648,33129,05774020,12.6,8.6,3.9,3.4,8.0,3626,2542,1084,4019,2762,1257,11.3,\\\"9.5,10.8,11.1,11.8,12.3,12.8,12.7,13.1,13.3,13.1,13.3,13.0,12.6\\\",\\\"7.8,8.2,8.4,8.8,9.0,9.1,9.1,9.2,9.1,8.9,9.4,9.1,8.6\\\",\\\"1.8,2.5,2.7,2.9,3.4,3.6,3.6,3.8,4.2,4.1,3.9,3.9,3.9\\\",\\\"delbrück, stadt\\\"\\n05774024,16080,8166,7914,33161,05774024,12.2,8.0,4.2,4.1,8.0,1948,1292,656,1961,1292,669,12.1,\\\"9.4,10.7,11.0,11.2,11.9,12.0,11.9,11.9,11.8,11.9,12.1,12.3,12.2\\\",\\\"7.5,7.9,8.1,8.1,8.5,8.4,8.4,8.2,7.9,7.9,8.3,8.3,8.0\\\",\\\"2.0,2.8,2.8,3.1,3.4,3.6,3.5,3.7,3.8,4.1,3.9,4.0,4.2\\\",\\\"hövelhof, sennegemeinde\\\"\\n05774028,10589,5449,5140,33165,05774028,10.0,6.9,3.1,2.4,4.6,739,489,250,1062,735,327,7.0,\\\"6.7,8.1,8.5,8.8,8.9,9.4,9.2,9.3,9.4,10.0,9.7,9.9,10.0\\\",\\\"5.7,6.4,6.7,6.9,6.8,6.8,6.8,6.8,6.7,6.9,7.1,7.2,6.9\\\",\\\"1.1,1.6,1.8,1.9,2.1,2.5,2.4,2.4,2.7,3.1,2.6,2.8,3.1\\\",\\\"lichtenau, stadt\\\"\\n05774032,148126,73680,74446,33098,05774032,10.5,7.4,3.0,3.5,8.8,18267,13077,5190,15528,11030,4498,12.3,\\\"7.7,9.0,9.2,9.6,9.7,10.1,10.3,10.5,10.8,11.1,10.8,10.8,10.5\\\",\\\"6.1,6.7,6.9,7.1,7.0,7.0,7.1,7.1,7.3,7.5,7.9,7.8,7.4\\\",\\\"1.7,2.3,2.3,2.5,2.7,3.1,3.2,3.3,3.5,3.6,2.9,3.0,3.0\\\",\\\"paderborn, stadt\\\"\\n05774036,25186,12493,12693,33154,05774036,10.2,7.2,3.0,2.7,6.8,2394,1718,676,2568,1820,748,9.5,\\\"8.2,9.1,9.5,9.6,9.9,10.1,10.4,10.5,10.8,10.8,10.8,10.8,10.2\\\",\\\"6.6,6.8,7.2,7.1,7.2,7.3,7.5,7.3,7.4,7.4,7.8,7.6,7.2\\\",\\\"1.6,2.2,2.2,2.5,2.7,2.8,2.9,3.2,3.4,3.5,3.0,3.1,3.0\\\",\\\"salzkotten, stadt\\\"\\n05774040,12302,6162,6140,33181,05774040,11.7,8.2,3.5,3.3,7.3,1303,899,404,1437,1009,428,10.6,\\\"8.9,9.6,10.1,10.8,11.0,11.3,10.8,11.7,11.9,12.0,12.0,11.9,11.7\\\",\\\"7.4,7.5,7.9,8.4,8.3,8.4,7.8,8.4,8.5,8.3,8.7,8.4,8.2\\\",\\\"1.5,2.1,2.2,2.3,2.6,2.9,3.0,3.3,3.4,3.7,3.3,3.5,3.5\\\",\\\"bad wünnenberg, stadt\\\"\\n05911000,364742,177427,187315,44787,05911000,8.8,6.6,2.2,2.4,6.9,33870,25088,8782,32256,24052,8204,9.3,\\\"6.5,7.7,7.7,8.2,8.4,8.6,8.8,8.9,9.0,9.2,9.1,9.2,8.8\\\",\\\"5.3,6.0,6.0,6.2,6.4,6.4,6.5,6.5,6.6,6.6,6.9,6.9,6.6\\\",\\\"1.1,1.7,1.8,1.9,2.0,2.2,2.3,2.4,2.5,2.6,2.1,2.2,2.2\\\",\\\"bochum, stadt\\\"\\n05913000,586181,287846,298335,44135,05913000,8.5,6.4,2.2,2.5,6.6,53554,38838,14716,49951,37260,12691,9.1,\\\"6.4,7.7,7.7,8.1,8.2,8.4,8.5,8.5,8.7,8.9,8.7,8.7,8.5\\\",\\\"5.4,6.0,6.0,6.2,6.2,6.2,6.3,6.2,6.3,6.3,6.6,6.6,6.4\\\",\\\"1.0,1.6,1.7,1.8,2.0,2.2,2.3,2.3,2.4,2.5,2.1,2.1,2.2\\\",\\\"dortmund, stadt\\\"\\n05914000,189044,92207,96837,58095,05914000,9.6,6.9,2.7,2.8,6.8,18203,12840,5363,18085,12968,5117,9.6,\\\"7.2,8.5,8.5,8.8,9.1,9.3,9.3,9.6,9.7,9.7,9.7,9.7,9.6\\\",\\\"5.9,6.5,6.4,6.6,6.6,6.7,6.6,6.8,6.7,6.7,7.0,7.0,6.9\\\",\\\"1.3,1.9,2.1,2.2,2.4,2.6,2.7,2.8,2.9,3.0,2.7,2.7,2.7\\\",\\\"hagen, stadt der fernuniversität\\\"\\n05915000,179397,88166,91231,59065,05915000,9.5,7.1,2.4,2.4,6.8,16532,12237,4295,16974,12657,4317,9.2,\\\"7.2,8.3,8.4,8.7,8.8,9.2,9.4,9.5,9.6,9.9,9.9,9.9,9.5\\\",\\\"6.1,6.7,6.7,6.9,6.8,6.9,7.0,7.0,7.1,7.2,7.5,7.5,7.1\\\",\\\"1.1,1.6,1.7,1.8,2.0,2.3,2.3,2.5,2.5,2.7,2.4,2.4,2.4\\\",\\\"hamm, stadt\\\"\\n05916000,155851,75940,79911,44623,05916000,8.2,6.2,2.0,1.5,5.0,10244,7831,2413,12785,9709,3076,6.6,\\\"6.6,7.6,7.4,7.6,7.9,8.1,8.3,8.5,8.3,8.7,8.4,8.4,8.2\\\",\\\"5.6,6.1,5.9,6.0,6.1,6.2,6.2,6.4,6.2,6.5,6.6,6.5,6.2\\\",\\\"1.0,1.4,1.5,1.6,1.7,1.9,2.0,2.1,2.1,2.2,1.8,1.9,2.0\\\",\\\"herne, stadt\\\"\\n05954004,9004,4442,4562,58339,05954004,8.2,5.7,2.5,2.0,4.3,572,388,184,738,512,226,6.4,\\\"6.2,7.3,7.4,8.0,8.1,8.4,8.3,8.7,8.7,8.8,8.6,8.9,8.2\\\",\\\"5.0,5.4,5.4,5.8,5.8,5.9,5.8,6.2,6.0,5.9,6.1,6.3,5.7\\\",\\\"1.2,1.9,2.0,2.2,2.3,2.5,2.5,2.5,2.8,3.0,2.5,2.6,2.5\\\",\\\"breckerfeld, hansestadt\\\"\\n05954008,29926,14635,15291,58256,05954008,9.3,6.2,3.1,2.9,5.5,2532,1660,872,2798,1869,929,8.5,\\\"7.2,8.4,8.4,8.8,9.4,9.7,9.7,9.8,10.0,9.8,9.7,9.7,9.3\\\",\\\"5.9,6.3,6.3,6.3,6.7,6.7,6.8,6.7,6.8,6.5,6.8,6.7,6.2\\\",\\\"1.4,2.1,2.2,2.5,2.7,2.9,2.9,3.1,3.2,3.3,3.0,3.1,3.1\\\",\\\"ennepetal, stadt der kluterthöhle\\\"\\n05954012,31315,15290,16025,58285,05954012,9.9,6.9,3.1,2.6,6.1,2701,1900,801,3103,2147,956,8.6,\\\"7.3,8.6,8.9,9.3,9.7,10.0,9.9,10.0,10.1,10.2,10.3,10.3,9.9\\\",\\\"6.0,6.6,6.8,6.9,6.9,7.1,7.1,7.0,7.0,6.9,7.2,7.2,6.9\\\",\\\"1.3,2.0,2.2,2.4,2.7,2.9,2.9,3.0,3.1,3.3,3.1,3.1,3.1\\\",\\\"gevelsberg, stadt\\\"\\n05954016,54834,26608,28226,45525,05954016,9.4,6.7,2.7,2.4,5.6,4414,3074,1340,5130,3661,1469,8.0,\\\"7.2,8.5,8.7,8.9,9.3,9.5,9.6,9.7,9.9,10.0,9.8,9.7,9.4\\\",\\\"6.1,6.6,6.6,6.7,6.8,6.8,6.8,6.9,7.0,7.0,7.2,7.0,6.7\\\",\\\"1.1,1.9,2.1,2.2,2.5,2.7,2.8,2.8,2.9,3.0,2.6,2.7,2.7\\\",\\\"hattingen, stadt\\\"\\n05954020,22818,10869,11949,58313,05954020,8.8,6.1,2.7,2.6,6.8,2150,1546,604,2007,1390,617,9.4,\\\"6.6,7.3,7.6,8.2,8.2,8.6,8.5,8.7,8.9,9.4,9.3,9.3,8.8\\\",\\\"5.4,5.6,5.7,6.0,6.1,6.1,6.2,6.3,6.4,6.5,6.6,6.6,6.1\\\",\\\"1.2,1.7,1.9,2.2,2.2,2.4,2.3,2.4,2.5,2.9,2.7,2.7,2.7\\\",\\\"herdecke, stadt\\\"\\n05954024,28330,13598,14732,58332,05954024,8.9,6.2,2.7,2.8,5.3,2273,1490,783,2517,1748,769,8.0,\\\"6.9,8.2,8.2,8.6,9.1,9.3,9.0,9.1,9.1,9.3,9.2,8.9,8.9\\\",\\\"5.4,6.0,6.0,6.2,6.4,6.4,6.3,6.3,6.1,6.4,6.5,6.3,6.2\\\",\\\"1.4,2.2,2.2,2.4,2.7,2.9,2.7,2.8,3.0,2.9,2.7,2.7,2.7\\\",\\\"schwelm, stadt\\\"\\n05954028,25205,12161,13044,45549,05954028,9.0,6.2,2.8,2.3,5.8,2039,1457,582,2261,1553,708,8.1,\\\"6.5,7.9,8.3,8.4,8.9,9.2,9.4,9.6,9.6,9.7,9.3,9.2,9.0\\\",\\\"5.2,6.0,6.2,6.2,6.4,6.5,6.5,6.7,6.6,6.5,6.4,6.3,6.2\\\",\\\"1.3,1.9,2.1,2.3,2.5,2.7,2.8,2.9,3.0,3.2,2.9,2.9,2.8\\\",\\\"sprockhövel, stadt\\\"\\n05954032,27822,13712,14110,58300,05954032,8.2,5.7,2.4,2.0,4.8,1889,1325,564,2274,1597,677,6.8,\\\"5.9,7.2,7.6,7.9,8.1,8.4,8.4,8.7,8.7,8.9,8.7,8.7,8.2\\\",\\\"4.8,5.4,5.7,5.7,5.8,5.8,5.9,6.2,6.1,6.1,6.3,6.3,5.7\\\",\\\"1.1,1.8,2.0,2.2,2.3,2.5,2.4,2.5,2.7,2.8,2.4,2.5,2.4\\\",\\\"wetter (ruhr), stadt\\\"\\n05954036,96700,46997,49703,58452,05954036,9.0,6.6,2.4,2.4,6.2,8317,6009,2308,8751,6383,2368,8.6,\\\"7.0,8.3,8.3,8.8,9.2,9.2,9.4,9.3,9.2,9.4,9.3,9.4,9.0\\\",\\\"5.8,6.4,6.4,6.7,6.9,6.8,6.9,6.7,6.6,6.7,6.9,7.0,6.6\\\",\\\"1.2,1.9,1.9,2.1,2.2,2.4,2.4,2.5,2.7,2.7,2.4,2.4,2.4\\\",\\\"witten, stadt\\\"\\n05958004,73784,36277,37507,59759,05958004,11.4,7.8,3.7,4.3,10.0,10518,7352,3166,8435,5727,2708,14.3,\\\"9.3,10.7,10.5,10.8,11.6,12.0,12.0,12.0,12.2,12.0,11.9,11.9,11.4\\\",\\\"7.7,8.3,8.0,8.1,8.5,8.5,8.5,8.5,8.4,8.3,8.3,8.2,7.8\\\",\\\"1.6,2.4,2.5,2.7,3.1,3.5,3.5,3.5,3.8,3.7,3.6,3.7,3.7\\\",\\\"arnsberg, stadt\\\"\\n05958008,11170,5646,5524,59909,05958008,13.0,8.6,4.5,3.6,8.9,1395,990,405,1457,957,500,12.5,\\\"9.5,11.0,10.8,11.3,11.9,12.9,12.8,13.1,13.3,12.9,13.1,13.4,13.0\\\",\\\"7.5,8.1,7.8,7.9,8.0,8.8,8.7,8.7,8.9,8.7,8.9,9.1,8.6\\\",\\\"2.0,2.8,3.0,3.4,3.8,4.1,4.1,4.3,4.4,4.1,4.2,4.3,4.5\\\",bestwig\\n05958012,26232,13070,13162,59929,05958012,12.2,8.2,4.1,3.8,7.7,3017,2009,1008,3209,2144,1065,11.5,\\\"9.1,10.2,10.4,11.0,11.3,11.9,12.1,12.3,12.4,12.4,12.6,12.8,12.2\\\",\\\"7.6,7.9,7.9,8.4,8.4,8.5,8.6,8.6,8.4,8.3,8.7,8.7,8.2\\\",\\\"1.5,2.3,2.5,2.7,2.9,3.4,3.5,3.7,3.9,4.1,4.0,4.1,4.1\\\",\\\"brilon, stadt\\\"\\n05958016,8942,4554,4388,59889,05958016,12.5,8.9,3.5,3.2,8.3,1032,743,289,1115,800,315,11.5,\\\"8.4,9.7,10.1,10.4,11.3,11.9,11.4,11.7,11.9,12.4,12.6,12.8,12.5\\\",\\\"7.0,7.7,7.9,8.2,8.6,8.7,8.4,8.4,8.4,8.5,8.9,9.3,8.9\\\",\\\"1.4,2.0,2.2,2.2,2.7,3.2,3.0,3.3,3.6,3.9,3.7,3.5,3.5\\\",eslohe (sauerland)\\n05958020,4541,2309,2232,59969,05958020,11.8,8.7,3.1,2.5,5.9,382,269,113,536,396,140,8.4,\\\"9.1,10.2,10.6,10.9,11.5,11.4,12.2,12.4,12.4,12.1,12.4,12.3,11.8\\\",\\\"7.8,8.4,8.8,8.8,8.8,8.7,9.2,9.0,9.0,8.4,9.0,9.0,8.7\\\",\\\"1.3,1.8,1.8,2.1,2.7,2.8,3.0,3.4,3.4,3.7,3.4,3.3,3.1\\\",\\\"hallenberg, stadt\\\"\\n05958024,19968,10182,9786,34431,05958024,9.6,6.7,2.9,2.2,5.8,1608,1162,446,1921,1334,587,8.1,\\\"7.1,8.3,8.2,8.5,8.7,9.5,9.4,9.6,9.6,9.9,9.8,9.7,9.6\\\",\\\"6.2,6.7,6.5,6.6,6.5,6.9,6.8,7.0,6.8,6.9,7.1,7.0,6.7\\\",\\\"0.9,1.6,1.7,1.8,2.2,2.7,2.5,2.6,2.7,3.0,2.7,2.7,2.9\\\",\\\"marsberg, stadt\\\"\\n05958028,7938,4008,3930,59964,05958028,13.5,9.3,4.2,4.5,8.3,1020,661,359,1071,735,336,12.8,\\\"8.9,10.6,10.6,10.8,11.8,12.7,12.7,13.2,13.8,13.9,14.1,13.8,13.5\\\",\\\"7.5,8.5,8.3,8.5,9.0,9.3,9.4,9.4,9.3,9.2,9.9,9.6,9.3\\\",\\\"1.4,2.1,2.3,2.3,2.8,3.5,3.3,3.7,4.5,4.7,4.1,4.2,4.2\\\",\\\"medebach, hansestadt\\\"\\n05958032,30119,14916,15203,59872,05958032,11.5,8.1,3.4,3.6,8.2,3559,2480,1079,3478,2444,1034,11.8,\\\"8.3,9.5,9.9,10.0,10.6,10.8,10.7,11.2,11.3,11.6,11.7,11.7,11.5\\\",\\\"6.9,7.5,7.6,7.6,7.9,7.9,7.9,8.2,8.1,8.1,8.4,8.3,8.1\\\",\\\"1.5,2.0,2.3,2.4,2.7,2.9,2.8,3.0,3.2,3.5,3.3,3.4,3.4\\\",\\\"meschede, kreis- und  hochschulstadt\\\"\\n05958036,14874,7389,7485,59939,05958036,12.2,7.9,4.3,3.7,8.4,1806,1250,556,1820,1176,644,12.1,\\\"8.8,10.2,10.6,11.1,11.7,12.3,13.0,12.6,12.8,12.6,12.7,12.8,12.2\\\",\\\"7.3,7.9,8.1,8.1,8.3,8.8,8.9,8.4,8.5,8.0,8.8,8.2,7.9\\\",\\\"1.5,2.3,2.5,3.0,3.4,3.5,4.0,4.3,4.3,4.6,3.9,4.5,4.3\\\",\\\"olsberg, stadt\\\"\\n05958040,25230,12826,12404,57392,05958040,13.4,8.9,4.5,4.2,8.2,3130,2066,1064,3382,2241,1141,12.4,\\\"9.3,11.0,11.4,11.5,12.0,12.5,12.9,13.1,13.2,13.1,13.6,13.6,13.4\\\",\\\"7.7,8.6,8.5,8.6,8.7,9.0,9.1,8.9,8.9,8.7,9.4,9.2,8.9\\\",\\\"1.6,2.5,2.9,2.9,3.3,3.6,3.8,4.1,4.3,4.4,4.2,4.4,4.5\\\",\\\"schmallenberg, stadt\\\"\\n05958044,28166,14153,14013,59846,05958044,13.1,8.8,4.3,3.9,7.7,3269,2171,1098,3693,2488,1205,11.6,\\\"10.3,11.8,12.1,12.5,13.1,13.1,12.9,13.6,13.7,13.6,13.4,13.5,13.1\\\",\\\"8.7,9.3,9.3,9.2,9.6,9.4,9.1,9.6,9.3,9.2,9.3,9.3,8.8\\\",\\\"1.6,2.5,2.8,3.2,3.6,3.8,3.8,4.0,4.4,4.4,4.1,4.2,4.3\\\",\\\"sundern (sauerland), stadt\\\"\\n05958048,12798,6434,6364,59955,05958048,15.5,9.8,5.7,6.2,10.6,2144,1356,788,1985,1256,729,16.8,\\\"9.8,11.5,11.3,12.2,12.7,13.6,14.1,14.6,14.8,15.4,15.7,15.4,15.5\\\",\\\"8.1,8.9,8.4,8.7,9.1,9.4,9.8,10.0,9.8,9.8,10.3,10.1,9.8\\\",\\\"1.7,2.6,2.9,3.5,3.6,4.1,4.3,4.6,5.0,5.6,5.4,5.3,5.7\\\",\\\"winterberg, stadt\\\"\\n05962004,17375,8592,8783,58762,05962004,9.2,6.4,2.8,1.9,4.6,1143,807,336,1604,1109,495,6.6,\\\"7.0,8.0,8.2,8.7,8.9,9.2,9.0,9.2,9.3,9.3,9.2,9.3,9.2\\\",\\\"5.8,6.1,6.3,6.5,6.4,6.6,6.5,6.5,6.3,6.3,6.4,6.3,6.4\\\",\\\"1.2,1.9,1.9,2.2,2.5,2.6,2.4,2.7,3.0,3.0,2.7,2.9,2.8\\\",\\\"altena, stadt\\\"\\n05962008,11602,5745,5857,58802,05962008,12.4,9.0,3.5,2.8,7.6,1205,877,328,1444,1043,401,10.4,\\\"10.1,11.9,12.1,12.9,12.9,13.1,13.0,13.0,13.2,12.9,12.7,13.3,12.4\\\",\\\"8.6,9.1,9.3,9.6,9.5,9.6,9.8,9.4,9.5,9.2,9.4,9.5,9.0\\\",\\\"1.5,2.8,2.8,3.3,3.4,3.5,3.2,3.5,3.7,3.8,3.3,3.8,3.5\\\",\\\"balve, stadt\\\"\\n05962012,16117,7886,8231,58553,05962012,9.4,6.0,3.4,3.2,6.6,1570,1060,510,1514,970,544,9.7,\\\"7.8,9.1,9.6,9.6,10.0,10.3,9.6,9.8,10.1,10.1,9.8,9.5,9.4\\\",\\\"6.1,6.7,6.9,6.7,6.8,6.7,6.7,6.8,6.7,6.8,6.6,6.2,6.0\\\",\\\"1.6,2.5,2.7,3.0,3.2,3.6,3.0,3.0,3.4,3.3,3.3,3.3,3.4\\\",\\\"halver, stadt\\\"\\n05962016,33535,16498,17037,58675,05962016,10.9,7.7,3.2,3.0,6.8,3261,2266,995,3660,2584,1076,9.7,\\\"7.9,9.2,9.2,9.8,10.2,10.6,10.3,10.7,10.5,10.7,10.8,11.3,10.9\\\",\\\"6.5,7.1,7.0,7.3,7.4,7.5,7.5,7.6,7.4,7.4,7.8,8.0,7.7\\\",\\\"1.4,2.1,2.2,2.5,2.8,3.1,2.8,3.1,3.1,3.3,3.1,3.3,3.2\\\",\\\"hemer, stadt\\\"\\n05962020,7217,3577,3640,58849,05962020,9.1,5.6,3.5,2.4,4.5,503,328,175,658,405,253,7.0,\\\"7.4,8.9,9.2,9.2,9.6,10.1,9.3,9.6,10.2,9.5,9.7,9.5,9.1\\\",\\\"5.6,6.1,6.1,6.0,6.2,6.5,6.2,5.9,6.6,6.3,6.5,6.3,5.6\\\",\\\"1.7,2.8,3.1,3.3,3.4,3.6,3.1,3.7,3.5,3.2,3.2,3.2,3.5\\\",herscheid\\n05962024,93537,45770,47767,58636,05962024,10.0,7.1,2.9,3.2,7.6,10098,7134,2964,9372,6617,2755,10.8,\\\"8.1,9.4,9.5,10.1,10.1,10.5,10.1,10.3,10.4,10.3,10.3,10.4,10.0\\\",\\\"6.7,7.3,7.2,7.5,7.4,7.6,7.4,7.3,7.3,7.2,7.4,7.4,7.1\\\",\\\"1.4,2.1,2.3,2.6,2.7,2.9,2.7,3.0,3.1,3.2,2.9,3.0,2.9\\\",\\\"iserlohn, stadt\\\"\\n05962028,16300,8060,8240,58566,05962028,10.6,7.3,3.2,2.2,5.5,1256,901,355,1722,1193,529,7.7,\\\"7.7,8.6,8.9,9.2,9.7,9.6,9.0,9.8,10.2,10.4,10.5,10.8,10.6\\\",\\\"6.2,6.4,6.7,6.6,6.9,6.7,6.5,7.0,7.2,7.2,7.5,7.7,7.3\\\",\\\"1.5,2.2,2.3,2.6,2.8,2.9,2.6,2.8,3.1,3.2,3.0,3.1,3.2\\\",\\\"kierspe, stadt\\\"\\n05962032,73354,35955,37399,58507,05962032,9.0,5.6,3.4,3.6,7.0,7831,5171,2660,6583,4113,2470,10.7,\\\"7.3,8.5,8.5,8.7,9.1,9.2,9.0,9.2,9.4,9.6,9.3,9.2,9.0\\\",\\\"5.6,5.9,5.9,5.9,6.0,5.9,6.0,6.0,5.8,5.8,6.0,5.9,5.6\\\",\\\"1.7,2.5,2.6,2.8,3.1,3.2,3.1,3.3,3.6,3.8,3.3,3.4,3.4\\\",\\\"lüdenscheid, stadt\\\"\\n05962036,20670,10359,10311,58540,05962036,10.1,7.1,3.0,3.3,6.3,1998,1312,686,2078,1460,618,9.7,\\\"8.7,10.0,9.8,10.1,10.4,10.8,10.2,10.6,10.6,10.4,10.1,10.4,10.1\\\",\\\"7.0,7.6,7.4,7.6,7.7,7.9,7.5,7.7,7.3,7.0,7.2,7.2,7.1\\\",\\\"1.7,2.4,2.4,2.5,2.7,3.0,2.7,2.9,3.2,3.4,2.9,3.2,3.0\\\",\\\"meinerzhagen, stadt\\\"\\n05962040,53485,26238,27247,58706,05962040,10.4,7.4,3.0,2.5,6.6,4887,3553,1334,5580,3977,1603,9.1,\\\"9.0,10.1,10.3,10.8,10.9,11.2,11.2,11.6,11.5,11.4,11.2,11.1,10.4\\\",\\\"7.7,8.1,8.1,8.3,8.2,8.2,8.2,8.4,8.1,8.0,8.2,8.1,7.4\\\",\\\"1.3,2.0,2.2,2.5,2.7,3.0,3.0,3.2,3.3,3.5,3.0,3.0,3.0\\\",\\\"menden (sauerland), stadt\\\"\\n05962044,6644,3332,3312,58769,05962044,8.8,6.4,2.5,1.2,3.3,300,220,80,586,422,164,4.5,\\\"6.6,8.1,8.2,8.8,9.4,10.0,9.1,9.1,9.5,9.2,9.1,9.0,8.8\\\",\\\"5.6,6.4,6.5,6.8,6.8,7.4,6.7,6.5,6.9,6.4,6.8,6.6,6.4\\\",\\\"0.9,1.7,1.7,2.0,2.6,2.6,2.3,2.6,2.6,2.8,2.3,2.5,2.5\\\",nachrodt-wiblingwerde\\n05962048,12024,5991,6033,58809,05962048,10.3,7.0,3.3,2.7,6.5,1111,787,324,1235,840,395,9.2,\\\"8.3,9.8,9.7,10.4,10.6,11.0,10.7,11.2,10.9,11.0,10.8,10.6,10.3\\\",\\\"6.8,7.6,7.5,7.8,7.7,7.9,7.9,7.9,7.6,7.7,7.8,7.3,7.0\\\",\\\"1.5,2.3,2.2,2.6,2.9,3.0,2.8,3.3,3.4,3.3,3.1,3.3,3.3\\\",\\\"neuenrade, stadt\\\"\\n05962052,25781,12851,12930,58840,05962052,10.1,6.9,3.2,3.1,6.3,2432,1621,811,2603,1785,818,9.4,\\\"8.8,10.1,10.1,10.8,10.8,11.1,10.0,10.8,10.9,10.8,10.6,10.6,10.1\\\",\\\"7.0,7.4,7.4,7.7,7.4,7.7,7.2,7.4,7.4,7.2,7.6,7.4,6.9\\\",\\\"1.9,2.6,2.6,3.0,3.4,3.4,2.9,3.4,3.6,3.6,3.1,3.2,3.2\\\",\\\"plettenberg, stadt\\\"\\n05962056,10528,5194,5334,58579,05962056,9.6,6.1,3.5,2.9,5.0,832,527,305,1011,638,373,7.9,\\\"8.2,9.2,9.5,9.3,9.8,9.5,9.2,10.0,10.1,9.8,9.8,10.0,9.6\\\",\\\"6.6,6.8,6.7,6.4,6.7,6.2,6.1,6.6,6.4,6.0,6.4,6.2,6.1\\\",\\\"1.6,2.4,2.8,2.9,3.1,3.2,3.2,3.4,3.7,3.8,3.3,3.8,3.5\\\",schalksmühle\\n05962060,18002,8939,9063,58791,05962060,9.2,6.6,2.6,2.1,5.3,1333,955,378,1656,1191,465,7.4,\\\"7.4,8.3,8.7,9.3,9.3,9.8,9.1,9.4,9.4,9.4,9.5,9.4,9.2\\\",\\\"5.8,6.1,6.3,6.7,6.4,6.8,6.6,6.6,6.4,6.5,6.8,6.8,6.6\\\",\\\"1.5,2.2,2.3,2.6,2.8,3.0,2.5,2.8,3.0,2.9,2.7,2.6,2.6\\\",\\\"werdohl, stadt\\\"\\n05966004,24676,12499,12177,57439,05966004,11.0,7.5,3.6,3.4,7.1,2585,1746,839,2722,1843,879,10.5,\\\"9.2,10.6,10.6,10.7,11.1,11.4,11.0,11.3,11.4,11.3,11.6,11.5,11.0\\\",\\\"7.5,7.9,7.8,7.9,7.9,8.0,7.7,7.9,7.8,7.7,8.2,8.0,7.5\\\",\\\"1.8,2.7,2.8,2.9,3.1,3.4,3.3,3.4,3.7,3.6,3.4,3.5,3.6\\\",\\\"attendorn, hansestadt\\\"\\n05966008,11874,6003,5871,57489,05966008,12.0,8.1,3.9,3.1,5.8,1058,685,373,1429,960,469,8.9,\\\"9.2,10.6,10.6,10.9,11.3,11.8,11.4,12.1,11.8,12.3,13.0,12.8,12.0\\\",\\\"7.3,7.7,7.7,7.6,7.9,8.1,7.9,8.4,7.9,8.4,8.8,8.6,8.1\\\",\\\"1.9,2.9,2.9,3.3,3.4,3.7,3.5,3.7,4.0,3.9,4.2,4.1,3.9\\\",\\\"drolshagen, stadt\\\"\\n05966012,17258,8849,8409,57413,05966012,12.7,8.6,4.1,2.8,6.3,1573,1082,491,2193,1480,713,9.1,\\\"9.7,11.6,11.6,12.0,12.5,12.8,12.0,12.9,13.1,13.2,13.6,13.2,12.7\\\",\\\"8.0,8.8,8.9,8.9,9.2,9.3,8.7,9.1,9.0,9.1,9.6,9.1,8.6\\\",\\\"1.7,2.9,2.7,3.1,3.4,3.5,3.3,3.8,4.0,4.1,4.1,4.2,4.1\\\",finnentrop\\n05966016,11854,6016,5838,57399,05966016,12.8,8.5,4.3,3.9,7.4,1342,876,466,1522,1007,515,11.3,\\\"8.2,10.0,10.0,10.8,10.8,11.4,11.9,12.4,12.5,12.6,12.5,12.8,12.8\\\",\\\"6.9,7.7,7.7,8.0,7.8,8.1,8.3,8.7,8.4,8.5,8.6,8.6,8.5\\\",\\\"1.3,2.3,2.4,2.8,3.0,3.4,3.6,3.7,4.1,4.1,3.9,4.2,4.3\\\",kirchhundem\\n05966020,26073,13154,12919,57368,05966020,13.0,9.0,4.0,4.2,9.3,3535,2431,1104,3390,2338,1052,13.6,\\\"9.4,11.0,11.1,11.6,12.2,12.4,12.2,12.4,12.5,12.9,13.4,13.3,13.0\\\",\\\"8.0,8.7,8.7,8.9,9.0,9.0,8.9,9.0,8.8,8.9,9.4,9.2,9.0\\\",\\\"1.4,2.3,2.4,2.7,3.2,3.4,3.3,3.4,3.7,4.1,4.0,4.1,4.0\\\",\\\"lennestadt, stadt\\\"\\n05966024,24757,12107,12650,57462,05966024,11.8,7.6,4.2,4.7,9.8,3609,2436,1173,2913,1875,1038,14.6,\\\"8.6,10.1,10.3,10.7,10.8,11.3,11.2,11.5,11.5,11.8,12.1,12.0,11.8\\\",\\\"6.9,7.5,7.5,7.6,7.5,7.7,7.8,7.7,7.5,7.7,8.2,8.0,7.6\\\",\\\"1.8,2.7,2.8,3.1,3.3,3.6,3.4,3.8,4.0,4.1,3.9,4.0,4.2\\\",\\\"olpe, stadt\\\"\\n05966028,19873,9996,9877,57482,05966028,12.5,8.4,4.1,3.4,6.8,2033,1360,673,2494,1677,817,10.2,\\\"10.1,11.4,11.8,12.1,12.3,12.6,12.6,12.7,12.7,12.8,12.7,12.7,12.5\\\",\\\"8.2,8.5,8.8,8.9,8.7,8.7,8.7,8.9,8.6,8.8,8.9,8.7,8.4\\\",\\\"1.9,2.9,3.0,3.1,3.6,3.9,3.9,3.8,4.1,4.1,3.8,4.0,4.1\\\",wenden\\n05970004,19774,10017,9757,57319,05970004,10.6,6.9,3.7,3.5,6.7,2003,1315,688,2099,1362,737,10.1,\\\"8.5,9.7,9.9,10.6,10.8,11.4,11.2,11.2,11.8,11.6,11.7,11.0,10.6\\\",\\\"6.7,7.1,7.1,7.5,7.5,7.7,7.5,7.3,7.5,7.2,7.6,7.1,6.9\\\",\\\"1.9,2.6,2.9,3.1,3.3,3.7,3.7,3.9,4.3,4.5,4.0,3.9,3.7\\\",\\\"bad berleburg, stadt\\\"\\n05970008,14969,7758,7211,57299,05970008,11.8,7.8,4.0,3.5,6.7,1536,1008,528,1771,1173,598,10.3,\\\"9.8,10.8,10.6,11.2,11.8,12.2,11.5,11.7,12.3,12.1,11.9,12.1,11.8\\\",\\\"8.1,8.4,8.1,8.4,8.5,8.6,8.1,8.1,8.3,8.0,8.2,8.1,7.8\\\",\\\"1.7,2.4,2.5,2.7,3.2,3.5,3.3,3.6,4.0,4.0,3.7,3.9,4.0\\\",burbach\\n05970012,7206,3671,3535,57339,05970012,11.7,8.0,3.7,3.0,6.6,687,474,213,843,575,268,9.5,\\\"9.5,11.0,11.2,11.8,12.2,12.6,12.5,12.6,12.8,12.5,12.0,12.3,11.7\\\",\\\"7.9,8.7,8.6,8.8,9.2,9.3,8.9,8.9,8.8,8.6,8.4,8.7,8.0\\\",\\\"1.6,2.3,2.6,3.1,3.0,3.4,3.7,3.7,4.0,3.9,3.7,3.7,3.7\\\",erndtebrück\\n05970016,17929,8935,8994,57258,05970016,11.1,7.8,3.3,2.8,6.3,1640,1134,506,1993,1398,595,9.1,\\\"8.6,9.7,9.7,10.5,11.0,11.2,11.2,11.0,11.3,11.5,11.6,11.3,11.1\\\",\\\"7.3,7.5,7.4,7.9,8.0,7.9,7.9,7.8,7.8,7.8,8.2,7.9,7.8\\\",\\\"1.3,2.1,2.3,2.6,3.0,3.3,3.3,3.2,3.4,3.7,3.4,3.4,3.3\\\",\\\"freudenberg, stadt\\\"\\n05970020,15169,7537,7632,57271,05970020,10.3,7.3,2.9,2.2,4.7,1037,708,329,1556,1112,444,6.8,\\\"8.1,9.0,8.9,9.5,9.7,10.3,10.2,10.2,10.7,11.2,10.9,10.9,10.3\\\",\\\"6.7,7.0,6.7,7.0,7.1,7.4,7.2,7.3,7.4,7.8,7.9,7.8,7.3\\\",\\\"1.4,2.0,2.2,2.5,2.6,2.9,2.9,2.9,3.2,3.4,2.9,3.1,2.9\\\",\\\"hilchenbach, stadt\\\"\\n05970024,31500,15642,15858,57223,05970024,10.4,7.5,2.9,2.5,6.3,2771,1994,777,3263,2348,915,8.8,\\\"7.8,8.9,9.0,9.3,9.8,10.1,10.1,10.1,10.4,10.4,10.7,10.5,10.4\\\",\\\"6.5,6.8,6.8,6.9,7.0,7.1,7.2,7.2,7.1,7.1,7.7,7.6,7.5\\\",\\\"1.3,2.0,2.2,2.4,2.8,2.9,2.9,2.9,3.2,3.4,3.1,2.9,2.9\\\",\\\"kreuztal, stadt\\\"\\n05970028,14276,7261,7015,57334,05970028,10.7,7.6,3.1,2.2,5.7,1127,808,319,1523,1080,443,7.9,\\\"8.1,9.2,9.4,9.9,10.6,10.9,11.1,11.1,11.1,11.4,11.5,11.6,10.7\\\",\\\"6.9,7.5,7.2,7.7,8.3,8.3,8.5,8.4,8.2,8.1,8.3,8.2,7.6\\\",\\\"1.2,1.7,2.1,2.2,2.3,2.6,2.6,2.8,2.9,3.3,3.2,3.3,3.1\\\",\\\"bad laasphe, stadt\\\"\\n05970032,23393,11720,11673,57250,05970032,11.6,8.0,3.6,2.5,6.7,2146,1565,581,2707,1875,832,9.2,\\\"8.2,10.0,10.3,10.7,11.2,11.7,11.8,11.7,11.8,12.3,12.1,12.0,11.6\\\",\\\"6.9,7.7,7.8,8.0,8.2,8.3,8.5,8.3,8.3,8.4,8.6,8.5,8.0\\\",\\\"1.4,2.3,2.5,2.7,3.0,3.4,3.3,3.5,3.6,3.9,3.5,3.5,3.6\\\",\\\"netphen, stadt\\\"\\n05970036,13717,6954,6763,57290,05970036,11.7,8.2,3.5,2.7,6.7,1291,921,370,1609,1130,479,9.4,\\\"9.6,11.1,10.7,11.4,11.7,11.6,11.3,11.7,12.3,11.9,12.5,12.3,11.7\\\",\\\"8.0,8.4,8.1,8.5,8.6,8.4,8.3,8.5,8.8,8.3,8.9,8.7,8.2\\\",\\\"1.7,2.7,2.6,2.9,3.1,3.2,3.0,3.1,3.5,3.6,3.6,3.6,3.5\\\",neunkirchen\\n05970040,102355,49925,52430,57072,05970040,11.8,8.5,3.3,4.5,10.8,15626,11006,4620,12104,8705,3399,15.3,\\\"8.3,9.5,9.7,10.3,10.6,10.9,11.1,11.0,11.4,11.8,11.8,11.9,11.8\\\",\\\"6.7,7.3,7.3,7.6,7.6,7.6,7.8,7.7,7.7,8.0,8.6,8.6,8.5\\\",\\\"1.5,2.2,2.4,2.7,2.9,3.2,3.4,3.4,3.6,3.8,3.2,3.3,3.3\\\",\\\"siegen, universitätsstadt\\\"\\n05970044,20512,10206,10306,57234,05970044,12.3,8.5,3.8,3.4,6.9,2117,1423,694,2522,1750,772,10.3,\\\"8.6,9.9,10.2,11.1,11.5,12.0,12.0,12.0,12.5,12.5,12.4,12.7,12.3\\\",\\\"7.1,7.7,7.6,8.2,8.3,8.5,8.5,8.5,8.7,8.6,8.9,8.9,8.5\\\",\\\"1.5,2.2,2.6,2.9,3.2,3.5,3.5,3.6,3.8,3.9,3.5,3.8,3.8\\\",wilnsdorf\\n05974004,10557,5361,5196,59609,05974004,12.9,8.6,4.2,3.9,8.8,1346,930,416,1357,911,446,12.7,\\\"9.5,10.8,10.8,11.4,11.8,12.2,12.2,12.3,12.7,13.1,12.6,13.3,12.9\\\",\\\"7.8,8.5,8.3,8.6,8.9,8.5,8.5,8.8,8.9,8.9,8.8,9.2,8.6\\\",\\\"1.7,2.3,2.4,2.8,2.9,3.7,3.7,3.5,3.8,4.2,3.8,4.1,4.2\\\",anröchte\\n05974008,11931,5735,6196,59505,05974008,9.6,6.9,2.7,2.8,6.6,1118,784,334,1147,819,328,9.4,\\\"7.3,8.9,9.1,9.3,9.8,9.8,9.9,10.1,10.2,10.4,10.4,10.2,9.6\\\",\\\"6.0,7.0,7.2,7.1,7.2,7.1,7.2,7.5,7.4,7.4,7.6,7.1,6.9\\\",\\\"1.3,1.8,1.9,2.2,2.6,2.6,2.7,2.7,2.9,3.1,2.8,3.0,2.7\\\",bad sassendorf\\n05974012,12442,6269,6173,59469,05974012,12.0,8.0,4.0,3.1,5.6,1081,692,389,1494,993,501,8.7,\\\"9.5,10.6,10.5,11.6,12.0,12.5,12.4,12.6,12.4,13.0,13.1,12.7,12.0\\\",\\\"7.7,7.9,7.9,8.4,8.7,8.9,8.9,8.7,8.4,8.8,9.0,8.6,8.0\\\",\\\"1.8,2.7,2.6,3.1,3.3,3.5,3.5,3.9,4.0,4.2,4.0,4.0,4.0\\\",ense\\n05974016,16128,7968,8160,59597,05974016,11.0,7.4,3.5,2.4,6.1,1373,988,385,1771,1200,571,8.5,\\\"8.9,10.4,10.4,10.7,11.2,11.1,11.1,10.6,11.1,11.3,11.1,11.5,11.0\\\",\\\"7.4,8.2,8.1,8.2,8.3,8.0,8.1,7.7,7.8,7.7,7.9,8.0,7.4\\\",\\\"1.4,2.2,2.4,2.5,2.9,3.1,3.0,2.9,3.3,3.6,3.2,3.5,3.5\\\",\\\"erwitte, stadt\\\"\\n05974020,21070,10487,10583,59590,05974020,11.4,8.0,3.4,2.9,7.0,2096,1475,621,2405,1679,726,9.9,\\\"8.7,10.1,9.9,10.7,11.1,11.5,11.5,11.8,12.4,12.3,12.0,12.2,11.4\\\",\\\"7.2,7.9,7.7,8.1,8.3,8.4,8.5,8.5,8.6,8.4,8.6,8.8,8.0\\\",\\\"1.5,2.2,2.1,2.6,2.8,3.1,3.0,3.3,3.8,3.9,3.3,3.5,3.4\\\",\\\"geseke, stadt\\\"\\n05974024,12027,6044,5983,59510,05974024,11.2,7.7,3.5,2.8,6.2,1085,751,334,1349,931,418,9.0,\\\"7.6,8.7,8.9,9.7,10.0,9.9,10.2,10.3,10.9,11.1,11.6,11.7,11.2\\\",\\\"6.4,7.1,7.2,7.7,7.7,7.4,7.5,7.7,8.0,7.7,8.2,8.3,7.7\\\",\\\"1.2,1.6,1.7,2.0,2.3,2.5,2.7,2.6,2.9,3.4,3.3,3.4,3.5\\\",lippetal\\n05974028,67233,33073,34160,59555,05974028,10.8,7.4,3.5,3.5,7.6,7481,5140,2341,7278,4954,2324,11.1,\\\"9.0,10.0,9.8,10.4,10.4,10.7,10.8,10.9,11.1,11.1,11.2,11.3,10.8\\\",\\\"7.2,7.5,7.3,7.6,7.5,7.6,7.8,7.7,7.6,7.6,7.9,7.9,7.4\\\",\\\"1.8,2.4,2.5,2.7,2.8,3.1,3.1,3.3,3.5,3.5,3.4,3.4,3.5\\\",\\\"lippstadt, stadt\\\"\\n05974032,11608,5987,5621,59519,05974032,10.1,7.3,2.9,4.0,10.4,1673,1210,463,1178,844,334,14.4,\\\"7.7,8.9,9.6,10.1,10.5,10.8,11.2,11.0,11.5,11.4,11.2,11.1,10.1\\\",\\\"6.5,7.0,7.3,7.6,7.7,7.9,8.3,7.8,8.1,7.9,8.0,8.0,7.3\\\",\\\"1.2,1.9,2.3,2.5,2.8,3.0,3.0,3.2,3.4,3.5,3.2,3.0,2.9\\\",möhnesee\\n05974036,11095,5790,5305,59602,05974036,10.9,7.5,3.4,2.5,5.0,833,558,275,1211,830,381,7.5,\\\"8.1,9.5,9.5,9.9,10.3,10.6,11.0,11.3,12.0,11.7,11.8,11.4,10.9\\\",\\\"6.8,7.5,7.4,7.6,7.5,7.5,7.9,7.9,8.2,8.2,8.4,8.0,7.5\\\",\\\"1.4,2.0,2.1,2.4,2.8,3.1,3.1,3.3,3.8,3.5,3.4,3.3,3.4\\\",\\\"rüthen, stadt\\\"\\n05974040,47974,23245,24729,59494,05974040,10.8,7.7,3.1,3.3,8.5,5632,4072,1560,5184,3684,1500,11.7,\\\"8.4,9.7,9.8,10.4,10.5,10.6,10.8,11.0,11.1,11.5,11.2,11.5,10.8\\\",\\\"6.8,7.4,7.6,7.8,7.8,7.5,7.7,7.8,7.6,7.8,8.0,8.3,7.7\\\",\\\"1.6,2.3,2.3,2.5,2.7,3.1,3.1,3.3,3.5,3.7,3.2,3.3,3.1\\\",\\\"soest, stadt\\\"\\n05974044,25407,12721,12686,59581,05974044,9.9,7.0,2.9,2.6,5.9,2150,1495,655,2518,1781,737,8.5,\\\"7.4,8.6,8.4,9.0,9.4,9.3,9.4,9.7,9.9,10.3,10.2,10.2,9.9\\\",\\\"6.0,6.5,6.6,6.9,6.9,6.7,6.9,7.0,6.9,7.2,7.4,7.4,7.0\\\",\\\"1.3,2.0,1.8,2.1,2.5,2.6,2.6,2.7,3.0,3.1,2.8,2.8,2.9\\\",\\\"warstein, stadt\\\"\\n05974048,12140,6071,6069,59514,05974048,9.6,6.6,3.0,1.7,3.5,638,428,210,1164,804,360,5.3,\\\"7.2,8.2,8.7,8.8,9.2,9.5,9.8,9.9,9.9,9.9,9.7,10.4,9.6\\\",\\\"6.1,6.4,6.8,6.9,7.0,7.1,7.3,7.4,7.0,7.1,7.1,7.4,6.6\\\",\\\"1.1,1.8,1.9,1.9,2.2,2.4,2.5,2.6,2.9,2.8,2.7,3.0,3.0\\\",welver\\n05974052,30638,15681,14957,59457,05974052,11.1,7.9,3.2,2.8,7.0,2977,2134,843,3397,2417,980,9.7,\\\"8.2,9.4,9.3,10.2,10.6,10.7,11.0,11.3,11.0,11.6,11.5,11.7,11.1\\\",\\\"6.9,7.3,7.1,7.8,7.8,7.8,8.0,8.1,7.9,8.1,8.2,8.5,7.9\\\",\\\"1.4,2.1,2.2,2.4,2.8,2.9,3.1,3.2,3.1,3.5,3.3,3.2,3.2\\\",\\\"werl, stadt\\\"\\n05974056,12745,6629,6116,58739,05974056,10.9,7.4,3.5,3.2,6.3,1205,801,404,1386,937,449,9.5,\\\"8.5,10.3,9.8,10.8,11.3,11.5,11.7,12.0,12.4,12.6,12.6,11.8,10.9\\\",\\\"7.2,7.7,7.5,8.2,8.3,8.4,8.4,8.6,8.6,8.8,9.0,8.2,7.4\\\",\\\"1.3,2.6,2.3,2.6,3.0,3.1,3.3,3.4,3.8,3.9,3.7,3.6,3.5\\\",wickede (ruhr)\\n05978004,47803,23562,24241,59192,05978004,10.3,8.1,2.2,1.5,5.3,3283,2547,736,4924,3850,1074,6.9,\\\"7.4,8.5,8.4,8.9,9.2,9.4,9.4,9.8,10.0,10.2,10.2,10.3,10.3\\\",\\\"6.4,7.1,6.8,7.1,7.2,7.2,7.2,7.5,7.7,7.8,8.1,8.2,8.1\\\",\\\"1.0,1.5,1.6,1.8,2.0,2.2,2.2,2.2,2.3,2.4,2.1,2.1,2.2\\\",\\\"bergkamen, stadt\\\"\\n05978008,18059,8790,9269,59199,05978008,9.0,6.8,2.1,2.1,4.8,1245,858,387,1621,1234,387,6.9,\\\"6.6,7.5,7.7,8.0,8.3,8.7,8.8,9.3,9.3,9.3,9.1,9.5,9.0\\\",\\\"5.7,6.2,6.3,6.3,6.4,6.7,6.8,7.1,7.1,7.0,7.1,7.3,6.8\\\",\\\"0.9,1.3,1.4,1.7,1.9,2.0,2.0,2.1,2.2,2.3,2.0,2.2,2.1\\\",bönen\\n05978012,20961,10293,10668,58730,05978012,9.7,7.0,2.7,2.2,5.5,1607,1147,460,2037,1471,566,7.7,\\\"7.2,8.3,8.3,8.5,9.0,9.1,9.1,9.1,9.4,9.9,9.8,10.0,9.7\\\",\\\"6.0,6.5,6.4,6.5,6.8,6.8,6.8,6.7,6.7,7.0,7.2,7.3,7.0\\\",\\\"1.1,1.8,1.8,2.0,2.2,2.2,2.3,2.4,2.6,2.8,2.6,2.7,2.7\\\",\\\"fröndenberg/ruhr, stadt\\\"\\n05978016,17085,8310,8775,59439,05978016,9.2,6.6,2.5,2.5,10.0,2144,1710,434,1564,1130,434,12.5,\\\"7.1,8.3,8.3,8.8,9.1,9.6,9.7,9.6,9.6,9.8,9.9,9.9,9.2\\\",\\\"6.0,6.6,6.6,6.5,6.7,7.0,7.1,7.0,6.9,7.0,7.2,7.1,6.6\\\",\\\"1.0,1.7,1.7,2.3,2.4,2.6,2.6,2.6,2.7,2.8,2.7,2.7,2.5\\\",holzwickede\\n05978020,43868,21485,22383,59174,05978020,8.9,6.7,2.2,2.2,6.7,3888,2920,968,3926,2945,981,8.9,\\\"6.7,7.7,7.7,8.2,8.5,8.8,9.0,9.3,9.5,9.4,9.3,9.4,8.9\\\",\\\"5.7,6.2,6.2,6.5,6.6,6.8,6.8,7.0,7.2,7.0,7.3,7.2,6.7\\\",\\\"1.0,1.6,1.5,1.7,1.9,2.0,2.2,2.3,2.3,2.5,2.0,2.2,2.2\\\",\\\"kamen, stadt\\\"\\n05978024,85867,41810,44057,44532,05978024,9.2,7.0,2.2,2.1,6.5,7386,5590,1796,7900,6024,1876,8.6,\\\"7.1,8.2,8.2,8.4,8.6,8.7,9.0,9.1,9.2,9.3,9.3,9.4,9.2\\\",\\\"6.2,6.8,6.7,6.8,6.8,6.8,7.0,7.1,7.1,7.1,7.3,7.3,7.0\\\",\\\"0.9,1.4,1.5,1.7,1.8,1.9,2.0,2.0,2.1,2.2,1.9,2.0,2.2\\\",\\\"lünen, stadt\\\"\\n05978028,46723,22767,23956,58239,05978028,8.9,6.4,2.5,2.2,5.8,3726,2715,1011,4145,2983,1162,8.0,\\\"7.0,8.0,8.3,8.7,8.9,9.0,9.1,9.3,9.2,9.8,9.5,9.4,8.9\\\",\\\"5.9,6.3,6.5,6.7,6.7,6.6,6.5,6.7,6.7,7.0,7.1,6.9,6.4\\\",\\\"1.1,1.7,1.8,2.0,2.2,2.4,2.5,2.6,2.6,2.8,2.4,2.4,2.5\\\",\\\"schwerte, hansestadt an der ruhr\\\"\\n05978032,26603,13272,13331,59379,05978032,9.8,7.3,2.5,2.2,6.5,2325,1733,592,2607,1930,677,8.7,\\\"7.7,8.6,8.7,9.0,9.3,9.6,9.9,10.1,10.2,10.4,10.6,10.4,9.8\\\",\\\"6.5,7.0,7.0,7.0,7.3,7.4,7.7,7.6,7.4,7.6,8.0,7.7,7.3\\\",\\\"1.1,1.6,1.7,1.9,2.0,2.1,2.2,2.5,2.8,2.9,2.7,2.7,2.5\\\",\\\"selm, stadt\\\"\\n05978036,59111,28581,30530,59423,05978036,9.6,6.9,2.7,2.8,7.5,6138,4462,1676,5651,4059,1592,10.4,\\\"6.6,7.7,7.9,8.2,8.3,8.7,9.0,9.1,9.2,10.1,10.0,9.9,9.6\\\",\\\"5.5,6.0,6.1,6.3,6.3,6.5,6.6,6.6,6.6,7.2,7.3,7.2,6.9\\\",\\\"1.1,1.7,1.7,2.0,2.0,2.2,2.4,2.5,2.6,2.9,2.7,2.7,2.7\\\",\\\"unna, stadt\\\"\\n05978040,29955,14568,15387,59368,05978040,9.4,6.9,2.5,2.5,6.9,2823,2081,742,2826,2076,750,9.4,\\\"7.5,8.6,8.7,9.1,9.2,9.5,9.5,9.8,9.9,10.2,9.9,9.8,9.4\\\",\\\"6.3,6.9,6.9,7.1,7.2,7.2,7.1,7.4,7.4,7.4,7.4,7.3,6.9\\\",\\\"1.1,1.7,1.8,2.0,2.0,2.3,2.4,2.4,2.5,2.8,2.6,2.5,2.5\\\",\\\"werne, stadt\\\"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/data/munis_nrw.csv\n// module id = 39\n// module chunks = 0","// https://github.com/topojson/topojson Version 3.0.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar bbox = function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nvar feature = function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n      : feature$1(topology, o);\n};\n\nfunction feature$1(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nvar mesh = function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n};\n\nfunction meshArcs(topology, object$$1, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object$$1, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object$$1);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nvar bisect = function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n};\n\nvar neighbors = function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n};\n\nvar untransform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar quantize = function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n};\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nvar bounds = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16);\nvar floats = new Float64Array(buffer);\nvar uints = new Uint32Array(buffer);\n\nvar hashPoint = function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nvar join = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nvar cut = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\n\nfunction reverse$1(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n// Given a cut topology, combines duplicate arcs.\nvar dedup = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nvar delta = function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n};\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nvar extract = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nvar geometry = function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n};\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nvar topology = function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry$$1) {\n    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\nvar prune = function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      newArcs = [],\n      newArcIndex = -1,\n      newIndexByOldIndex = new Array(oldArcs.length),\n      key;\n\n  function pruneGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(pruneGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: pruneArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(pruneArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(pruneArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(pruneMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function pruneArc(oldIndex) {\n    var oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true), newIndex;\n\n    // If this is the first instance of this arc, record it under its new index.\n    if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n      newIndexByOldIndex[oldIndex] = newIndex = ++newArcIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n\n    return oldReverse ? ~newIndex : newIndex;\n  }\n\n  function pruneArcs(arcs) {\n    return arcs.map(pruneArc);\n  }\n\n  function pruneMultiArcs(arcs) {\n    return arcs.map(pruneArcs);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = pruneGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n};\n\nvar filter = function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n};\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\nvar filterAttached = function(topology) {\n  var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ringIndex = 0,\n      name;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var uniqueRing = uniqueRingByArc[arc];\n        if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n        else uniqueRingByArc[arc] = ringIndex;\n      }\n    }\n  }\n\n  for (name in topology.objects) {\n    testGeometry(topology.objects[name]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (arc = ring[j], uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\nfunction planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nfunction planarRingArea$1(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\nvar filterWeight = function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea$1;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n};\n\nvar filterAttachedWeight = function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n};\n\nfunction compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nvar newHeap = function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n};\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nvar presimplify = function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar quantile = function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile$1(array.sort(descending), p);\n};\n\nfunction quantile$1(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\nvar simplify = function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar quarterPi = pi / 4;\nvar radians = pi / 180;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nfunction sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nfunction sphericalTriangleArea(t) {\n  var sum = halfArea(t, false);\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexports.bbox = bbox;\nexports.feature = feature;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.neighbors = neighbors;\nexports.quantize = quantize;\nexports.transform = transform;\nexports.untransform = untransform;\nexports.topology = topology;\nexports.filter = filter;\nexports.filterAttached = filterAttached;\nexports.filterAttachedWeight = filterAttachedWeight;\nexports.filterWeight = filterWeight;\nexports.planarRingArea = planarRingArea$1;\nexports.planarTriangleArea = planarTriangleArea;\nexports.presimplify = presimplify;\nexports.quantile = quantile;\nexports.simplify = simplify;\nexports.sphericalRingArea = sphericalRingArea;\nexports.sphericalTriangleArea = sphericalTriangleArea;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/dist/topojson.js\n// module id = 40\n// module chunks = 0"],"sourceRoot":""}